,RefId,SqlTaskData,ExecutableType,ObjectName,componentClassID,contactInfo,description,name,File_path
0,Package\Back-up Transaction Log after CMS Load\Execute spBackupTranLog,EXEC spBackupTranLog 'BING_EDW',1,1,0,0,0,0,1
1,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimAdjustmentReason load\SQL - spCMS_StagingToEDW_DimAdjustmentReason,EXEC dbo.spCMS_StagingToEDW_DimAdjustmentReason;,1,1,0,0,0,0,1
2,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimScheduleType load\SQL - spCMS_StagingToEDW_DimScheduleType,EXEC dbo.spCMS_StagingToEDW_DimScheduleType,1,1,0,0,0,0,1
3,Package\CMS and CSS Center Management Dimensions\Execute CSS_Staging To EDW DimTransactionCode load\SQL - spCSS_StagingToEDW_DimTransactionCode,EXEC dbo.spCSS_StagingToEDW_DimTransactionCode;,1,1,0,0,0,0,1
4,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CMS_Staging To EDW DimARAgency load\SQL - spCMS_StagingToEDW_DimARAgencyType,EXEC dbo.spCMS_StagingToEDW_DimARAgencyType;,1,1,0,0,0,0,1
5,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CSS_Staging To EDW DimARAgency load\SQL - spCSS_StagingToEDW_DimARAgencyType,EXEC dbo.spCSS_StagingToEDW_DimARAgencyType;,1,1,0,0,0,0,1
6,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CMS_Staging To EDW DimClassroom load\SQL - spCMS_StagingToEDW_DimClassroom,EXEC dbo.spCMS_StagingToEDW_DimClassroom;,1,1,0,0,0,0,1
7,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CSS_Staging To EDW DimClassroom load\SQL - spCSS_StagingToEDW_DimClassroom,EXEC dbo.spCSS_StagingToEDW_DimClassroom;,1,1,0,0,0,0,1
8,Package\CMS and CSS Center Management Dimensions\Execute EDW DimCreditMemoType load\SQL - spCMS_StagingToEDW_DimCreditMemoType,EXEC dbo.spCMS_StagingToEDW_DimCreditMemoType;,1,1,0,0,0,0,1
9,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CMS_Staging To EDW DimDiscountType load\SQL - spCMS_StagingToEDW_DimDiscountType,EXEC dbo.spCMS_StagingToEDW_DimDiscountType,1,1,0,0,0,0,1
10,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CSS_Staging To EDW DimDiscountType\SQL - spCSS_StagingToEDW_DimDiscountType,EXEC dbo.spCSS_StagingToEDW_DimDiscountType;,1,1,0,0,0,0,1
11,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CMS_Staging To EDW DimFeeType load\SQL - spCMS_StagingToEDW_DimFeeType,EXEC dbo.spCMS_StagingToEDW_DimFeeType,1,1,0,0,0,0,1
12,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CSS_Staging To EDW DimFeeType load\SQL - spCSS_StagingToEDW_DimFeeType,EXEC dbo.spCSS_StagingToEDW_DimFeeType;,1,1,0,0,0,0,1
13,Package\CMS and CSS Center Management Dimensions\Execute EDW DimInvoiceType load\SQL - spCMS_StagingToEDW_DimInvoiceType,EXEC dbo.spCMS_StagingToEDW_DimInvoiceType,1,1,0,0,0,0,1
14,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CMS_Staging To EDW DimPaymentType load\SQL - spCMS_StagingToEDW_DimPaymentType,EXEC dbo.spCMS_StagingToEDW_DimPaymentType,1,1,0,0,0,0,1
15,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CSS_Staging To EDW DimPaymentType load\SQL - spCSS_StagingToEDW_DimPaymentType,EXEC DBO.spCSS_StagingToEDW_DimPaymentType;,1,1,0,0,0,0,1
16,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CMS_Staging To EDW DimProgram load\SQL - spCMS_StagingToEDW_DimProgram,EXEC dbo.spCMS_StagingToEDW_DimProgram,1,1,0,0,0,0,1
17,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CSS_Staging To EDW DimProgram load\SQL - spCSS_StagingToEDW_DimProgram,EXEC dbo.spCSS_StagingToEDW_DimProgram,1,1,0,0,0,0,1
18,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CMS_Staging To EDW DimSession load\SQL - spCMS_StagingToEDW_DimSession,EXEC dbo.spCMS_StagingToEDW_DimSession,1,1,0,0,0,0,1
19,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CSS_Staging To EDW DimSession load\SQL - spCSS_StagingToEDW_DimSession,EXEC dbo.spCSS_StagingToEDW_DimSession,1,1,0,0,0,0,1
20,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CMS_Staging To EDW DimSponsor load\SQL - spCMS_StagingToEDW_DimSponsor,EXEC dbo.spCMS_StagingToEDW_DimSponsor;,1,1,0,0,0,0,1
21,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CSS_Staging To EDW DimSponsor load\SQL - spCSS_StagingToEDW_DimSponsor,EXEC dbo.spCSS_StagingToEDW_DimSponsor;,1,1,0,0,0,0,1
22,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CMS_Staging To EDW DimStudent load\SQL - spCMS_StagingToEDW_DimStudent,EXEC dbo.spCMS_StagingToEDW_DimStudent;,1,1,0,0,0,0,1
23,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CSS_Staging To EDW DimStudent load\SQL - spCSS_StagingToEDW_DimStudent,EXEC dbo.spCSS_StagingToEDW_DimStudent,1,1,0,0,0,0,1
24,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CMS_Staging To EDW DimTier load\SQL - spCMS_StagingToEDW_DimTier,"IF EXISTS -- This Package is getting merged before the proc is present, so put in safety net for now...
(
    SELECT *
    FROM sys.objects
    WHERE type = 'P'
          AND name = 'spCMS_StagingToEDW_DimTier'
)
    EXEC dbo.spCMS_StagingToEDW_DimTier;
GO",1,1,0,0,0,0,1
25,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CSS_Staging To EDW DimTier load\SQL - spCSS_StagingToEDW_DimTier,EXEC dbo.spCSS_StagingToEDW_DimTier,1,1,0,0,0,0,1
26,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CMS_Staging To EDW DimTuitionAssistanceProvider load\SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,EXEC dbo.spCMS_StagingToEDW_DimTuitionAssistanceProvider;,1,1,0,0,0,0,1
27,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CSS_Staging To EDW DimAssistance load\SQL - spCSS_StagingToEDW_DimTuitionAssistanceProvider,EXEC dbo.spCSS_StagingToEDW_DimTuitionAssistanceProvider;,1,1,0,0,0,0,1
28,Package\Create View\SQL - Create View vFactFTESnapshot,"CREATE VIEW [dbo].[vFactFTESnapshot]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.FTE) AS FTE
     FROM dbo.FactFTESnapshot AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",2,2,0,0,0,0,2
29,Package\Create View\SQL - Create View vFactGLBalancePlanAllocation,"CREATE VIEW  [dbo].[vFactGLBalancePlanAllocation]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
			dm.GLMetricTypeCode,
			dm.GLMetricTypeKey,
            f.AccountSubaccountKey,
			COUNT_BIG(*) AS [Count],
			SUM(f.GLBalancePlanAllocationAmount) AS GLBalancePlanAllocationAmount
	FROM [dbo].[FactGLBalancePlanAllocation] AS f
	     JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
		 JOIN dbo.DimGLMetricType AS dm ON dm.GLMetricTypeKey=f.GLMetricTypeKey
		 JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
			  dm.GLMetricTypeCode,
			  dm.GLMetricTypeKey,
              f.AccountSubaccountKey;",1,1,0,0,0,0,1
30,Package\Create View\SQL - Create View vFactGLBalancePlanAllocation,"CREATE VIEW  [dbo].[vFactGLBalancePlanAllocation]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
   dm.GLMetricTypeCode,
   dm.GLMetricTypeKey,
            f.AccountSubaccountKey,
   COUNT_BIG(*) AS [Count],
   SUM(f.GLBalancePlanAllocationAmount) AS GLBalancePlanAllocationAmount
 FROM [dbo].[FactGLBalancePlanAllocation] AS f
      JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
   JOIN dbo.DimGLMetricType AS dm ON dm.GLMetricTypeKey=f.GLMetricTypeKey
   JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
     dm.GLMetricTypeCode,
     dm.GLMetricTypeKey,
              f.AccountSubaccountKey;",1,1,0,0,0,0,1
31,Package\Create View\SQL - Create View vFactLaborHour,"CREATE VIEW [dbo].[vFactLaborHour]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber,
			f.DataScenarioKey,
            ds.DataScenarioName, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.[Hours]) AS [Hours],
            f.IsTSEF
     FROM [dbo].[FactLaborHour] AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimDataScenario AS ds ON ds.DataScenarioKey = f.DataScenarioKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
			  f.DataScenarioKey,
              ds.DataScenarioName, 
              f.AccountSubaccountKey,
 f.IsTSEF;",1,1,0,0,0,0,1
32,Package\Create View\SQL - Create View vFactLaborHour,"CREATE VIEW [dbo].[vFactLaborHour]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber,
   f.DataScenarioKey,
            ds.DataScenarioName, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.[Hours]) AS [Hours],
            f.IsTSEF
     FROM [dbo].[FactLaborHour] AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimDataScenario AS ds ON ds.DataScenarioKey = f.DataScenarioKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
     f.DataScenarioKey,
              ds.DataScenarioName, 
              f.AccountSubaccountKey,
 f.IsTSEF;",1,1,0,0,0,0,1
33,Package\Create View\SQL - Create View vFactLaborSalary,"CREATE VIEW  [dbo].[vFactLaborSalary]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey,
			COUNT_BIG(*) AS [Count],
			SUM(f.NetAmount) AS [NetAmount]
	FROM [dbo].[FactLaborSalary] AS f
	     JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
		 JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",1,1,0,0,0,0,1
34,Package\Create View\SQL - Create View vFactLaborSalary,"CREATE VIEW  [dbo].[vFactLaborSalary]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey,
   COUNT_BIG(*) AS [Count],
   SUM(f.NetAmount) AS [NetAmount]
 FROM [dbo].[FactLaborSalary] AS f
      JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
   JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",1,1,0,0,0,0,1
35,Package\Create View\SQL - Create View vFactNetRevenue,"CREATE VIEW [dbo].[vFactNetRevenue] 
WITH SCHEMABINDING
	AS 
SELECT d.FiscalWeekNumber
      ,d.FiscalWeekEndDate 
      ,mcc.CostCenterKey 
      ,mcc.CostCenterNumber 
      ,f.AccountSubaccountKey 
      ,COUNT_BIG(*) AS [Count] 
	  ,SUM(f.NetRevenueAmount) AS NetRevenueAmount
	FROM dbo.FactNetRevenue AS f
		  JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",1,1,0,0,0,0,1
36,Package\Create View\SQL - Create View vFactNetRevenue,"CREATE VIEW [dbo].[vFactNetRevenue] 
WITH SCHEMABINDING
 AS 
SELECT d.FiscalWeekNumber
      ,d.FiscalWeekEndDate 
      ,mcc.CostCenterKey 
      ,mcc.CostCenterNumber 
      ,f.AccountSubaccountKey 
      ,COUNT_BIG(*) AS [Count] 
   ,SUM(f.NetRevenueAmount) AS NetRevenueAmount
 FROM dbo.FactNetRevenue AS f
    JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",1,1,0,0,0,0,1
37,Package\DimMeasureLanding,"Execute spBeginAuditLog ? OUTPUT, ?;",1,1,0,0,0,0,1
38,Package\Drop Index and Populate NetRevenueConsolidated Table\SQL - Drop Index on FactNetRevenueConsolidated,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM [sys].[sysobjects] [O]
         INNER JOIN [sys].[sysindexes] [I] ON [O].[id] = [I].[id]
    WHERE [I].[name] = 'CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    DROP INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey] ON [dbo].[FactNetRevenueConsolidated];",1,1,0,0,0,0,1
39,Package\Drop Index and Populate NetRevenueConsolidated Table\SQL - Populate Revenue & Create Index,"TRUNCATE TABLE [dbo].[FactNetRevenueConsolidated];

INSERT INTO [dbo].[FactNetRevenueConsolidated] (
 [FiscalWeekNumber], [FiscalWeekEndDate], [CostCenterKey], [CostCenterNumber], [AccountSubaccountKey], [Count], [NetRevenueAmount]
)
SELECT
 [D].[FiscalWeekNumber],
 [D].[FiscalWeekEndDate],
 [MCC].[CostCenterKey],
 [MCC].[CostCenterNumber],
 [F].[AccountSubaccountKey],
 COUNT_BIG(*) AS [Count],
 SUM([F].[NetRevenueAmount]) AS [NetRevenueAmount]
FROM [dbo].[FactNetRevenue] [F]
INNER JOIN [dbo].[DimDate] [D] ON [F].[DateKey] = [D].[DateKey]
INNER JOIN [dbo].[DimCostCenter] [C] ON [F].[CostCenterKey] = [C].[CostCenterKey]
INNER JOIN [dbo].[DimMartCostCenter] [MCC] ON [C].[CostCenterNumber] = [MCC].[CostCenterNumber]
 AND [D].[FullDate] BETWEEN [MCC].[EDWEffectiveFrom] AND [MCC].[EDWEffectiveTo]
GROUP BY
 [D].[FiscalWeekNumber], [D].[FiscalWeekEndDate],
 [MCC].[CostCenterKey], [MCC].[CostCenterNumber],
 [F].[AccountSubaccountKey];

CREATE UNIQUE CLUSTERED INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[FactNetRevenueConsolidated]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",1,1,0,0,0,0,1
40,Package\EST - Load DimTimeCalculation,"DECLARE @DelCount INT, @InsCount INT, @AudID INT

SET @AudID = ?
SET @DelCount = (SELECT COUNT(1) FROM dbo.DimTimeCalculation)

TRUNCATE TABLE dbo.DimTimeCalculation

SET IDENTITY_INSERT dbo.DimTimeCalculation ON;


;WITH DimTimeCalc
AS (
	    SELECT -2 AS TCKey,	'Not Applicable Time Calculation' AS CalcName
		UNION ALL
		SELECT -1 AS TCKey,	'Unknown Time Calculation' AS CalcName
		UNION ALL
		SELECT 1 AS TCKey, 'Selection' AS CalcName
		UNION ALL
		SELECT 2 AS TCKey, 'PTD' AS CalcName
		UNION ALL
		SELECT 3 AS TCKey, 'QTD' AS CalcName
		UNION ALL
		SELECT 5 AS TCKey, 'YTD' AS CalcName
)
--SELECT * FROM DimTimeCalc+

INSERT INTO [dbo].[DimTimeCalculation]
(	  [TimeCalculationKey]
	 ,[TimeCalculationName]
     ,[EDWEffectiveFrom]
     ,[EDWEffectiveTo]
     ,[EDWRowStatus]
     ,[ETLJobID]			)
SELECT TCKey AS TimeCalculationKey,
       CalcName AS TimeCalculationName,
       CAST('1900-01-01 00:00:00.000' AS DATE) AS EffectiveFrom,
	   CAST('9999-12-31 23:59:59.999' AS DATE) AS EffectiveTo,
	   'A' AS RowStatus,
       @AudID As ETLJobID
FROM DimTimeCalc
ORDER BY TCKey;


--Get Insert Count
SET @InsCount = (SELECT COUNT(1) FROM dbo.DimTimeCalculation)


SET IDENTITY_INSERT dbo.DimTimeCalculation OFF;

SELECT @InsCount AS InsCount, @DelCount AS DelCount;",1,1,0,0,0,0,1
41,Package\Excecute CMS_Staging to EDW DimARAgencyType load\Execute spCMS_StagingToEDW_DimARAgencyType,EXEC dbo.spCMS_StagingToEDW_DimARAgencyType,1,1,0,0,0,0,1
42,Package\Excecute CMS_staging to EDW DimDiscountType\Execute spCMS_StagingToEDW_DimDiscountType,EXEC dbo.spCMS_StagingToEDW_DimDiscountType,1,1,0,0,0,0,1
43,Package\Excecute CMS_staging to EDW DimInvoiceType\Execute spCMS_StagingToEDW_DimInvoiceType,EXEC dbo.spCMS_StagingToEDW_DimInvoiceType,1,1,0,0,0,0,1
44,Package\Excecute CMS_staging to EDW DimProgram\Execute spCMS_StagingToEDW_DimProgram,EXEC dbo.spCMS_StagingToEDW_DimProgram,1,1,0,0,0,0,1
45,Package\Excecute CMS_staging to EDW DimSession\Execute spCMS_StagingToEDW_DimSession,EXEC dbo.spCMS_StagingToEDW_DimSession,1,1,0,0,0,0,1
46,Package\Excecute CSS_Staging to EDW DimARAgencyType load\Execute spCSS_StagingToEDW_DimARAgencyType,EXEC dbo.spCSS_StagingToEDW_DimARAgencyType,1,1,0,0,0,0,1
47,Package\Excecute CSS_staging to EDW DimSession\Execute spCSS_StagingToEDW_DimSession,EXEC dbo.spCSS_StagingToEDW_DimSession,1,1,0,0,0,0,1
48,Package\Excecute GL_Staging to EDW DimAccountSubAccount load\Execute spGL_StagingToEDW_DimAccountSubAccount,EXEC dbo.spGL_StagingToEDW_DimAccountSubAccount,1,1,0,0,0,0,1
49,Package\Excecute GL_Staging to EDW DimCompany load\Execute spGL_StagingToEDW_DimCompany,EXEC spGL_StagingToEDW_DimCompany,1,1,0,0,0,0,1
50,Package\Excecute GL_Staging to EDW DimCostCenter load\Execute spGL_StagingToEDW_DimCostCenter,EXEC dbo.spGL_StagingToEDW_DimCostCenter,1,1,0,0,0,0,1
51,Package\Excecute GL_staging to EDW DimCostCenterType load\Execute spGL_StagingToEDW_DimCostCenterType,EXEC dbo.spGL_StagingToEDW_DimCostCenterType,1,1,0,0,0,0,1
52,Package\Excecute GL_staging to EDW DimDate load\Execute spGL_StagingToEDW_DimDate,EXEC dbo.spGL_StagingToEDW_DimDate,1,1,0,0,0,0,1
53,Package\Excecute HR_Staging to EDW DimLocation load\Execute spHR_StagingToEDW_DimLocation,EXEC spHR_StagingToEDW_DimLocation,1,1,0,0,0,0,1
54,Package\Excecute HR_Staging to EDW DimOrganization load\Execute spHR_StagingToEDW_DimOrganization,EXEC spHR_StagingToEDW_DimOrganization,1,1,0,0,0,0,1
55,Package\Excecute HR_Staging to EDW DimPeopleGroup load\Execute spHR_StagingToEDW_DimPeopleGroup,EXEC spHR_StagingToEDW_DimPeopleGroup,1,1,0,0,0,0,1
56,Package\Excecute HR_staging to EDW FactEmployeeAssessment\Execute spHR_StagingToEDW_FactEmployeeAssessment,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssessment,1,1,0,0,0,0,1
57,Package\Excecute HR_staging to EDW FactEmployeeAssignment\Execute spHR_StagingToEDW_FactEmployeeAssignment,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssignment,1,1,0,0,0,0,1
58,Package\Excecute HR_staging to EDW FactEmployeeCompliance\Execute spHR_StagingToEDW_FactEmployeeCompliance,EXEC dbo.spHR_StagingToEDW_FactEmployeeCompliance,1,1,0,0,0,0,1
59,Package\Excecute HR_staging to EDW FactEmployeeLeave\Execute spHR_StagingToEDW_FactEmployeeLeave,EXEC dbo.spHR_StagingToEDW_FactEmployeeLeave,1,1,0,0,0,0,1
60,Package\Excecute HR_staging to EDW FactEmployeePayRate\Execute spHR_StagingToEDW_FactEmployeePayRate,EXEC dbo.spHR_StagingToEDW_FactEmployeePayRate,1,1,0,0,0,0,1
61,Package\Excecute HR_staging to EDW FactEmployeePerformance\Execute spHR_StagingToEDW_FactEmployeePerformance,EXEC dbo.spHR_StagingToEDW_FactEmployeePerformance,1,1,0,0,0,0,1
62,Package\Excecute HR_staging to EDW FactPersonSpecialInfo\Execute spHR_StagingToEDW_FactPersonSpecialInfo,EXEC dbo.spHR_StagingToEDW_FactPersonSpecialInfo,1,1,0,0,0,0,1
63,Package\Excecute SalesForce_staging to EDW FactLeadEvent\Execute spSalesForce_StagingToEDW_FactLeadEvent,EXEC dbo.spSalesForce_StagingToEDW_FactLeadEvent,1,1,0,0,0,0,1
64,Package\Exec DimLead EDW Load\SQL - spSalesForce_StagingToEDW_DimLead,EXEC dbo.spSalesforce_StagingToEDW_DimLead,1,1,0,0,0,0,1
65,Package\Exec DimLeadType EDW Load\SQL - spSalesForce_StagingToEDW_DimLeadType,EXEC dbo.spSalesForce_StagingToEDW_DimLeadType,1,1,0,0,0,0,1
66,Package\Exec DimWebCampaign Load\SQL - spSalesForce_StagingToEDW_DimWebCampaign,EXEC dbo.spSalesForce_StagingToEDW_DimWebCampaign,1,1,0,0,0,0,1
67,Package\Execute CMS_Staging To EDW FactARBalance load\Execute spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,EXEC spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,1,1,0,0,0,0,1
68,Package\Execute CMS_Staging To EDW FactAdjustment load\SQL - spCMS_StagingToEDW_FactAdjustment,EXEC dbo.spCMS_StagingToEDW_FactAdjustment;,1,1,0,0,0,0,1
69,Package\Execute CMS_Staging To EDW FactBilling load\SQL -spCMS_BatchLoad_StagingToEDW_FactBilling,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactBilling;,1,1,0,0,0,0,1
70,Package\Execute CMS_Staging To EDW FactFTESnapshot load\Execute spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,EXEC spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,2,2,0,0,0,0,2
71,Package\Execute CMS_Staging To EDW FactFTESnapshot load\Update Stats CMS_Staging,"EXEC [dbo].[spUpdateStatistics];
EXEC [dbo].[spRecompile];",1,1,0,0,0,0,1
72,Package\Execute CMS_Staging To EDW FactLifecycleStatusSnapshot load\Execute spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,EXEC spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,1,1,0,0,0,0,1
73,Package\Execute CMS_Staging To EDW FactNetRevenue load\SQL - spCMS_BatchLoad_StagingToEDW_FactNetRevenue,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactNetRevenue;,1,1,0,0,0,0,1
74,Package\Execute CMS_Staging To EDW FactNetRevenue load\Update Stats for CMS_Staging,"EXEC [dbo].[spUpdateStatistics];
EXEC [dbo].[spRecompile];",1,1,0,0,0,0,1
75,Package\Execute CMS_Staging To EDW FactPayment load\SQL - spCMS_BatchLoad_StagingToEDW_FactPayment,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactPayment,1,1,0,0,0,0,1
76,Package\Execute CMS_Staging To EDW FactPaymentApplied\SQL - spCMS_StagingToEDW_FactPaymentApplied,EXEC dbo.spCMS_StagingToEDW_FactPaymentApplied,1,1,0,0,0,0,1
77,Package\Execute CMS_Staging To EDW FactSessionEnrollment load\SQL - spCMS_StagingToEDW_FactSessionEnrollment,EXEC dbo.spCMS_StagingToEDW_FactSessionEnrollment;,1,1,0,0,0,0,1
78,Package\Execute CMS_Staging To EDW FactTierAssignment\SQL -spCMS_StagingToEDW_FactTierAssignment,EXEC dbo.spCMS_StagingToEDW_FactTierAssignment;,1,1,0,0,0,0,1
79,Package\Execute CMS_Staging to EDW DimAdjustmentReason load\Execute spCMS_StagingToEDW_DimAdjustmentReason,EXEC dbo.spCMS_StagingToEDW_DimAdjustmentReason,1,1,0,0,0,0,1
80,Package\Execute CMS_Staging to EDW DimClassroom load\Execute spCMS_StagingToEDW_DimClassroom,EXEC dbo.spCMS_StagingToEDW_DimClassroom,1,1,0,0,0,0,1
81,Package\Execute CMS_Staging to EDW DimFeeType load\Execute spCMS_StagingToEDW_DimFeeType,EXEC dbo.spCMS_StagingToEDW_DimFeeType,1,1,0,0,0,0,1
82,Package\Execute CMS_Staging to EDW FactNetRevenue load\Execute spCMS_BatchLoad_StagingToEDW_FactNetRevenue,EXEC spCMS_BatchLoad_StagingToEDW_FactNetRevenue,1,1,0,0,0,0,1
83,Package\Execute CSS DimStudent EDW load\SQL - spCSS_StagingToEDW_DimStudent,EXEC dbo.spCSS_StagingToEDW_DimStudent,1,1,0,0,0,0,1
84,Package\Execute CSS_Staging To EDW DimDiscountType\SQL - spCSS_StagingTransform_DimDiscountType,EXEC dbo.spCSS_StagingTransform_DimDiscountType;,1,1,0,0,0,0,1
85,Package\Execute CSS_Staging To EDW DimPaymentType load\SQL - spCSS_StagingToEDW_DimPaymentType,EXEC DBO.spCSS_StagingToEDW_DimPaymentType;,1,1,0,0,0,0,1
86,Package\Execute CSS_Staging To EDW DimProgram\SQL - spCSS_StagingTransform_DimProgram,EXEC dbo.spCSS_StagingTransform_DimProgram;,1,1,0,0,0,0,1
87,Package\Execute CSS_Staging To EDW DimTransactionCode load\SQL - spCSS_StagingToEDW_DimTransactionCode,EXEC dbo.spCSS_StagingToEDW_DimTransactionCode;,1,1,0,0,0,0,1
88,Package\Execute CSS_Staging To EDW FactARBalance load\Execute spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,Exec [dbo].[spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot],1,1,0,0,0,0,1
89,Package\Execute CSS_Staging To EDW FactFTESnapshot load\Execute spCSS_BatchLoad_StagingToEDW_FactFTESnapshot,Exec [dbo].[spCSS_BatchLoad_StagingToEDW_FactFTESnapshot],2,2,0,0,0,0,2
90,Package\Execute CSS_Staging To EDW FactLaborHourTarget\Execute spCSS_BatchLoad_StagingToEDW_FactLaborHourTarget,EXEC spCSS_BatchLoad_StagingToEDW_FactLaborHourTarget,1,1,0,0,0,0,1
91,Package\Execute CSS_Staging To EDW FactLifeCycleStatusSnapshot\Execute spCSS_BatchLoad_StagingToEDW_FactLifeCycleStatusSnapshot,EXEC spCSS_BatchLoad_StagingToEDW_FactLifeCycleStatusSnapshot,1,1,0,0,0,0,1
92,Package\Execute CSS_Staging to EDW DimClassroom load 1\Execute spCSS_StagingToEDW_DimClassroom,EXEC dbo.spCSS_StagingToEDW_DimClassroom,1,1,0,0,0,0,1
93,Package\Execute CSS_Staging to EDW FactNetRevenue load\Execute spCSS_BatchLoad_StagingToEDW_FactNetRevenue,EXEC spCSS_BatchLoad_StagingToEDW_FactNetRevenue,1,1,0,0,0,0,1
94,Package\Execute Cambridge_Staging To EDW FactFTESnapshot load\Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,Exec [dbo].[spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot],1,1,0,0,0,0,1
95,Package\Execute Cambridge_Staging To EDW FactFTESnapshot\Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,Exec [dbo].[spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot],1,1,0,0,0,0,1
96,Package\Execute Cambridge_Staging To EDW FactLaborHourTargetPRO load\Execute spCambridge_BatchLoad_StagingToEDW_FactLaborHourTarget,"EXEC 
spCambridge_BatchLoad_StagingToEDW_FactLaborHourTarget",1,1,0,0,0,0,1
97,Package\Execute Cambridge_Staging To EDW FactNetRevenue load\SQL - EXEC spPRO_BatchLoad_StagingToEDW_FactNetRevenue,EXEC dbo.spPRO_BatchLoad_StagingToEDW_FactNetRevenue;,1,1,0,0,0,0,1
98,Package\Execute DimLeadEventType load\SQL - spBING_EDW_Generate_DimLeadEventType,EXEC dbo.spBING_EDW_Generate_DimLeadEventType,1,1,0,0,0,0,1
99,Package\Execute DimTier CCS load to EDW\SQL - spCSS_StagingToEDW_DimTier,EXEC dbo.spCSS_StagingToEDW_DimTier,1,1,0,0,0,0,1
100,Package\Execute EDW FactARBalanceSnapshot load\Execute CMS_StagingToEDW FactARBalanceSnapshot load\SQL - spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot;,1,1,0,0,0,0,1
101,Package\Execute EDW FactARBalanceSnapshot load\Execute CSS_StagingToEDW FactARBalanceSnapshot load\SQL - spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,EXEC dbo.spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot;,1,1,0,0,0,0,1
102,Package\Execute Fact Lifecycle Status Snapshot Load\SQL - spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,EXEC [dbo].[spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot];,1,1,0,0,0,0,1
103,Package\Execute GL_Staging To EDW FactCenterStatSnapshot load\SQL - spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,EXEC dbo.spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot;,1,1,0,0,0,0,1
104,Package\Execute GL_Staging To EDW FactGLBalance load\SQL - spGL_BatchLoad_StagingToEDW_FactGLBalance,EXEC dbo.spGL_BatchLoad_StagingToEDW_FactGLBalance,1,1,0,0,0,0,1
105,Package\Execute GL_Staging To EDW FactGLBalance load\Update Stats for GL Balance tables,"EXEC [dbo].[spUpdateStatistics];
EXEC [dbo].[spRecompile];",1,1,0,0,0,0,1
106,Package\Execute GL_Staging to EDW FactCenterStatSanpshot load\Execute spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,EXEC spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,1,1,0,0,0,0,1
107,Package\Execute GL_Staging to EDW FactGLBalance load\Execute spGL_BatchLoad_StagingToEDW_FactGLBalance,EXEC spGL_BatchLoad_StagingToEDW_FactGLBalance,1,1,0,0,0,0,1
108,Package\Execute HOR_Staging to EDW FactNetRevenue load\Execute spHOR_BatchLoad_StagingToEDW_FactNetRevenue,EXEC spHOR_BatchLoad_StagingToEDW_FactNetRevenue,1,1,0,0,0,0,1
109,Package\Execute HOR_Staging to EDW FactNetRevenue load\Execute spMISC_StagingToEDW_FactNetRevenueACQ,"EXEC spMISC_StagingToEDW_FactNetRevenueACQ
   NULL
  ,?
  ,NULL",1,1,0,0,0,0,1
110,Package\Execute HR_Staging To EDW FactEmployeeAssessment load\SQL - spHR_StagingToEDW_FactEmployeeAssessment,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssessment;,1,1,0,0,0,0,1
111,Package\Execute HR_Staging To EDW FactEmployeeAssignment load\SQL - spHR_StagingToEDW_FactEmployeeAssignment,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssignment;,1,1,0,0,0,0,1
112,Package\Execute HR_Staging To EDW FactEmployeeCompliance load\SQL - spHR_StagingToEDW_FactEmployeeCompliance,EXEC dbo.spHR_StagingToEDW_FactEmployeeCompliance;,1,1,0,0,0,0,1
113,Package\Execute HR_Staging To EDW FactEmployeeLeave load\SQL - spHR_StagingToEDW_FactEmployeeLeave,EXEC dbo.spHR_StagingToEDW_FactEmployeeLeave;,1,1,0,0,0,0,1
114,Package\Execute HR_Staging To EDW FactEmployeePayRate Load\SQL - spHR_StagingToEDW_FactEmployeePayRate,EXEC dbo.spHR_StagingToEDW_FactEmployeePayRate;,1,1,0,0,0,0,1
115,Package\Execute HR_Staging To EDW FactEmployeePerformance load\SQL - spHR_StagingToEDW_FactEmployeePerformance,EXEC dbo.spHR_StagingToEDW_FactEmployeePerformance;,1,1,0,0,0,0,1
116,Package\Execute HR_Staging To EDW FactEmployeeQualification\SQL - spHR_StagingToEDW_FactEmployeeQualification,EXEC dbo.spHR_StagingToEDW_FactEmployeeQualification;,1,1,0,0,0,0,1
117,Package\Execute HR_Staging To EDW FactEmployeeSpecialInfo load\SQL - spHR_StagingToEDW_FactPersonSpecialInfo,EXEC dbo.spHR_StagingToEDW_FactPersonSpecialInfo;,1,1,0,0,0,0,1
118,Package\Execute HR_Staging to EDW DimAssessmentType load\Execute spHR_StagingToEDW_DimAssessmentType,EXEC dbo.spHR_StagingToEDW_DimAssessmentType,1,1,0,0,0,0,1
119,Package\Execute HR_Staging to EDW DimAssignmentType load\Execute spHR_StagingToEDW_DimAssignmentType,EXEC dbo.spHR_StagingToEDW_DimAssignmentType,1,1,0,0,0,0,1
120,Package\Execute HR_Staging to EDW DimComplianceItem load\Execute spHR_StagingToEDW_DimComplianceItem,EXEC [dbo].[spHR_StagingToEDW_DimComplianceItem],1,1,0,0,0,0,1
121,Package\Execute HR_Staging to EDW DimComplianceRating load\Execute spHR_StagingToEDW_DimComplianceRating,EXEC dbo.spHR_StagingToEDW_DimComplianceRating,1,1,0,0,0,0,1
122,Package\Execute HR_Staging to EDW DimLeaveReason load\Execute spHR_StagingToEDW_DimLeaveReason,EXEC dbo.spHR_StagingToEDW_DimLeaveReason,1,1,0,0,0,0,1
123,Package\Execute HR_Staging to EDW DimLeaveType load\Execute spHR_StagingToEDW_DimLeaveType,EXEC [dbo].[spHR_StagingToEDW_DimLeaveType] ,1,1,0,0,0,0,1
124,Package\Execute HR_Staging to EDW DimPayGrade load\Execute spHR_StagingToEDW_DimPayGrade,EXEC dbo.spHR_StagingToEDW_DimPayGrade,1,1,0,0,0,0,1
125,Package\Execute HR_Staging to EDW DimPayRateChangeReason load\Execute spHR_StagingToEDW_DimPayRateChangeReason,EXEC dbo.spHR_StagingToEDW_DimPayRateChangeReason,1,1,0,0,0,0,1
126,Package\Execute HR_Staging to EDW DimPerformanceRating load\Execute spHR_StagingToEDW_DimPerformanceRating,EXEC dbo.spHR_StagingToEDW_DimPerformanceRating;,1,1,0,0,0,0,1
127,Package\Execute HR_Staging to EDW DimPerson load\Execute spHR_StagingToEDW_DimPerson,EXEC dbo.spHR_StagingToEDW_DimPerson,1,1,0,0,0,0,1
128,Package\Execute HR_Staging to EDW DimPosition load\Execute spHR_StagingToEDW_DimPosition,EXEC dbo.spHR_StagingToEDW_DimPosition,1,1,0,0,0,0,1
129,Package\Execute HR_Staging to EDW DimQualificationType load\Execute spHR_StagingToEDW_DimQualificationType Item,EXEC [dbo].[spHR_StagingToEDW_DimQualificationType],1,1,0,0,0,0,1
130,Package\Execute Horizon_Staging To EDW FactNetRevenue load\SQL - spHOR_BatchLoad_StagingToEDW_FactNetRevenue,EXEC dbo.spHOR_BatchLoad_StagingToEDW_FactNetRevenue;,1,1,0,0,0,0,1
131,Package\Execute MISC_Staging To EDW FactGLBalancePlanAllocation LegacyDW load\SQL - spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,EXEC dbo.spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation;,1,1,0,0,0,0,1
132,Package\Execute MISC_Staging To EDW FactLaborHourActual load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourActual,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborHourActual,1,1,0,0,0,0,1
133,Package\Execute MISC_Staging To EDW FactLaborHourTarget load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTarget,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborHourTarget,1,1,0,0,0,0,1
134,Package\Execute MISC_Staging To EDW FactLaborHourTarget load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTargetLegacy,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborHourTargetLegacy,1,1,0,0,0,0,1
135,Package\Execute MISC_Staging To EDW FactLaborSalary load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborSalary,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborSalary,1,1,0,0,0,0,1
136,Package\Execute MISC_Staging to EDW DimPayrollType load\Execute spMISC_StagingToEDW_DimPayrollType,EXEC dbo.spMISC_StagingToEDW_DimPayrollType,1,1,0,0,0,0,1
137,Package\Execute MISC_Staging to EDW DimReportProfile load\Execute spMISC_StagingToEDW_DimReportProfile,EXEC dbo.spMISC_StagingToEDW_DimReportProfile,1,1,0,0,0,0,1
138,Package\Execute MISC_Staging to EDW FactGLBalancePlanAllocation load\Execute spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,EXEC dbo.spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,1,1,0,0,0,0,1
139,Package\Execute PRO_Staging to EDW FactNetRevenue load\Execute spPRO_BatchLoad_StagingToEDW_FactNetRevenue,EXEC spPRO_BatchLoad_StagingToEDW_FactNetRevenue,1,1,0,0,0,0,1
140,Package\Execute SalesForce FactLeadEvent Load\SQL - spSalesForce_StagingToEDW_FactLeadEvent,EXEC dbo.spSalesForce_StagingToEDW_FactLeadEvent,1,1,0,0,0,0,1
141,Package\Execute SalesForce FactLeadPipeline Load\SQL - spSalesForce_StagingToEDW_FactLeadPipeline,EXEC dbo.spSalesForce_StagingToEDW_FactLeadPipeline,1,1,0,0,0,0,1
142,Package\Execute SalesForce Method of Contact Lookup load\SQL - spSalesForce_StagingGenerate_LookupMethodOfContact,EXEC dbo.spSalesForce_StagingGenerate_LookupMethodOfContact,1,1,0,0,0,0,1
143,Package\Execute SalesForce_Staging To EDW DimWebCampaign load\SQL - spSalesForce_StagingToEDW_DimWebCampaign,EXEC dbo.spSalesForce_StagingToEDW_DimWebCampaign;,1,1,0,0,0,0,1
144,Package\Execute SalesForce_Staging to EDW DimLead load\Execute spSalesForce_StagingToEDW_DimLead,EXEC dbo.spSalesForce_StagingToEDW_DimLead,1,1,0,0,0,0,1
145,Package\Execute SalesForce_Staging to EDW DimLeadType load\Execute spSalesForce_StagingToEDW_DimLeadType,EXEC dbo.spSalesForce_StagingToEDW_DimLeadType,1,1,0,0,0,0,1
146,Package\Execute Staging to EDW FactAdjustment load\Execute spCMS_StagingToEDW_FactAdjustment,EXEC dbo.spCMS_StagingToEDW_FactAdjustment,1,1,0,0,0,0,1
147,Package\Execute Staging to EDW FactBilling load\Execute spCMS_BatchLoad_StagingToEDW_FactBilling,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactBilling,1,1,0,0,0,0,1
148,Package\Execute Staging to EDW FactEmployeeQualification load\Execute spHR_BatchLoad_StagingToEDW_FactEmployeeQualification,EXEC [dbo].[spHR_StagingToEDW_FactEmployeeQualification],1,1,0,0,0,0,1
149,Package\Execute Staging to EDW FactPayment load\Execute spCMS_BatchLoad_StagingToEDW_FactPayment,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactPayment,1,1,0,0,0,0,1
150,Package\Execute Staging to EDW FactPaymentApplied load\Execute spCMS_StagingToEDW_FactPaymentApplied,EXEC dbo.spCMS_StagingToEDW_FactPaymentApplied,1,1,0,0,0,0,1
151,Package\Execute Staging to EDW FactSessionEnrollment load\Execute spCMS_StagingToEDW_FactSessionEnrollment,EXEC dbo.spCMS_StagingToEDW_FactSessionEnrollment,1,1,0,0,0,0,1
152,Package\Execute Staging to EDW\Execute spCMS_StagingToEDW_FactTierAssignment,EXEC dbo.spCMS_StagingToEDW_FactTierAssignment,1,1,0,0,0,0,1
153,Package\Execute StagingToEDW FactLeadPipeline load\SQL - spSalesForce_StagingToEDW_FactLeadPipeline,EXEC dbo.spSalesForce_StagingToEDW_FactLeadPipeline;,1,1,0,0,0,0,1
154,Package\Execute spCMS_StagingToEDW_DimTuitionAssistanceProvider\SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,EXEC dbo.spCMS_StagingToEDW_DimTuitionAssistanceProvider;,1,1,0,0,0,0,1
155,Package\Execute spCSS_StagingToEDW_DimFeeType\SQL - spCSS_StagingToEDW_DimFeeType,EXEC dbo.spCSS_StagingToEDW_DimFeeType;,1,1,0,0,0,0,1
156,Package\Execute spCSS_StagingToEDW_DimTuitionAssistanceProvider\SRC - spCSS_StagingToEDW_DimTuitionAssistanceProvider,EXEC dbo.spCSS_StagingToEDW_DimTuitionAssistanceProvider;,1,1,0,0,0,0,1
157,Package\Execute spMISC_StagingToEDW_FactFTESnapshot\Execute spMISC_StagingToEDW_FactFTESnapshot,Exec [dbo]. spMISC_StagingToEDW_FactFTESnapshot,1,1,0,0,0,0,1
158,Package\Execute spMISC_StagingToEDW_FactLaborHourACQ\Execute spMISC_StagingToEDW_FactLaborHourACQ,"Exec [dbo].spMISC_StagingToEDW_FactLaborHourACQ
NULL,
?,
NULL",1,1,0,0,0,0,1
159,Package\Executes GL_Staging to Staging EDW BRidge Company Rollup\SQL_spGL_StagingToEDW_BridgeCompanyRollup,Execute [dbo].[spGL_StagingToEDW_BridgeCompanyRollup],1,1,0,0,0,0,1
160,Package\Executes HR_Staging to EDW BridgeSecurityPersonOrg\SQL - Exec spHR_StagingToEDW_BridgeSecurityPersonOrg,Execute [dbo].[spHR_StagingToEDW_BridgeSecurityPersonOrg],1,1,0,0,0,0,1
161,Package\Executes HR_Staging to Staging EDW BridgeSecurityPersonHRISGroup\SQL_spHR_StagingToEDW_BridgeSecurityPersonHRISGroup,Execute [dbo].[spHR_StagingToEDW_BridgeSecurityPersonHRISGroup],1,1,0,0,0,0,1
162,Package\Executes spCMS_StagingToEDW_DimSponsor\SQL_spCMS_StagingToEDW_DimSponsor,Execute [dbo].[spCMS_StagingToEDW_DimSponsor],1,1,0,0,0,0,1
163,Package\Executes spCSS_StagingToEDW_DimSponsor\SQL_spCSS_StagingToEDW_DimSponsor,Execute [dbo].[spCSS_StagingToEDW_DimSponsor],1,1,0,0,0,0,1
164,Package\Executes spGL_StagingToEDW_DimCompanyRollup\SQL_spGL_StagingToEDW_DimCompanyRollup,Execute [dbo].[spGL_StagingToEDW_DimCompanyRollup],1,1,0,0,0,0,1
165,Package\Executes spHR_StagingToEDW_DimHRUser\SQL_spHR_StagingToEDW_DimHRUser,Exec [dbo].[spHR_StagingToEDW_DimHRUser],1,1,0,0,0,0,1
166,Package\Insert Seed Records,"DECLARE @AuditID int = ?

SET IDENTITY_INSERT dbo.DimCostCenter ON 

IF NOT EXISTS (SELECT 1 FROM dbo.DimCostCenter WHERE CostCenterNumber = -1)
	BEGIN
		INSERT INTO dbo.DimCostCenter
		(
			CostCenterKey,
			CostCenterNumber,
			CostCenterName,
			CompanyID,
			CostCenterTypeID,
			CostCenterTypeName,
			BusinessUnitCode,
			BusinessUnitName,
			OrganizationLevelCode,
			OrganizationLevelName,
			FunctionCode,
			FunctionName,
			LineOfBusinessCode,
			LineOfBusinessName,
			LineOfBusinessCategoryCode,
			LineOfBusinessCategoryName,
			LineOfBusinessSubcategoryCode,
			LineOfBusinessSubcategoryName,
			CCHierarchyLevel1Name,
			CCHierarchyLevel2Name,
			CCHierarchyLevel3Name,
			CCHierarchyLevel4Name,
			CCHierarchyLevel5Name,
			CCHierarchyLevel6Name,
			CCHierarchyLevel7Name,
			CCHierarchyLevel8Name,
			CCHierarchyLevel9Name,
			CCHierarchyLevel10Name,
			CCHierarchyLevel11Name,
			CCOpenDate,
			CCClosedDate,
			CCReopenDate,
			CCReopenDateType,
			CCClassification,
			CCStatus,
			CCConsolidation,
			CCFlexAttribute1,
			CCFlexAttribute2,
			CCFlexAttribute3,
			CCFlexAttribute4,
			CCFlexAttribute5,
			OrgID,
			ParentOrgID,
			DefaultLocationID,
			OrgNumber,
			OrgHierarchyLevel1Name,
			OrgHierarchyLevel2Name,
			OrgHierarchyLevel3Name,
			OrgHierarchyLevel4Name,
			OrgHierarchyLevel5Name,
			OrgHierarchyLevel6Name,
			OrgHierarchyLevel7Name,
			OrgHierarchyLevel8Name,
			OrgHierarchyLevel9Name,
			OrgHierarchyLevel10Name,
			OrgHierarchyLevel11Name,
			AllName,
			ExecutiveFunctionName,
			ExecutiveFunctionLeaderName,
			ExecutiveSubFunctionName,
			ExecutiveSubFunctionLeaderName,
			CorporateFunctionName,
			CorporateSubFunctionName,
			DivisionName,
			DivisionLeaderName,
			RegionNumber,
			RegionName,
			RegionLeaderName,
			MarketNumber,
			MarketName,
			MarketLeaderName,
			SubMarketNumber,
			SubMarketName,
			SubMarketLeaderName,
			DistrictNumber,
			DistrictName,
			InterimDistrictNumber,
			InterimDistrictName,
			DistrictLeaderName,
			ActingDistrictLeaderName,
			InterimDistrictLeaderName,
			GroupNumber,
			GroupName,
			GroupLeaderName,
			SubgroupNumber,
			SubGroupName,
			SubGroupLeaderName,
			CampusNumber,
			CampusName,
			CampusLeaderName,
			CenterLeaderName,
			ActingCenterLeaderName,
			CategoryName,
			TypeCode,
			TypeName,
			PartnerGroupCode,
			PartnerGroupName,
			CenterGroupCode,
			CenterGroupName,
			DivisionLegacyName,
			BrandCode,
			BrandName,
			OrgFlexAttribute1,
			OrgFlexAttribute2,
			OrgFlexAttribute3,
			OrgFlexAttribute4,
			OrgFlexAttribute5,
			CenterCMSID,
			CenterCSSID,
			SiteHorizonID,
			CenterEnrollmentSourceSystem,
			CenterCMSMigrationDate,
			CenterCMSMigrationStatus,
			CenterLicensedCapacity,
			CenterBackupCareFlag,
			CenterChildCareSelectFlag,
			CenterPublicAllowedFlag,
			CenterOpenTime,
			CenterCloseTime,
			CenterStudentMinimumAge,
			CenterStudentMaximumAge,
			CenterOpenSunFlag,
			CenterOpenMonFlag,
			CenterOpenTueFlag,
			CenterOpenWedFlag,
			CenterOpenThuFlag,
			CenterOpenFriFlag,
			CenterOpenSatFlag,
			CenterFoodProgramStartDate,
			CenterFoodProgramEndDate,
			CenterRegistrationType,
			SiteSchoolDistrict,
			SiteClassYear,
			CenterURL,
			CenterMenuURL,
			CenterHasBreakfastFlag,
			CenterHasMorningSlackFlag,
			CenterHasLunchFlag,
			CenterHasAfternoonSnackFlag,
			CenterSpeaksASLFlag,
			CenterSpeaksArabicFlag,
			CenterSpeaksFrenchFlag,
			CenterSpeaksGermanFlag,
			CenterSpeaksHindiFlag,
			CenterSpeaksMandarinFlag,
			CenterSpeaksPunjabiFlag,
			CenterSpeaksSpanishFlag,
			CenterSpeaksOtherLanguages,
			CenterAccreditationAgencyCode,
			CenterAccreditationStartDate,
			CenterAccreditationExpirationDate,
			CenterAccreditationNextActivity,
			CenterAccreditationNextActivityDueDate,
			CenterAccreditationPrimaryStatus,
			CenterAccreditationProgramID,
			CenterQRISRating,
			CenterQRISRatingStartDate,
			CenterQRISRatingExpirationDate,
			CenterLatitude,
			City,
			[State],
			Zipcode,
			CenterOperationalCapacity,
			CenterLongitude,
			CenterCurrentHumanSigmaScore,
			CenterPreviousHumanSigmaScore,
			EDWEffectiveFrom,
			EDWEffectiveTo,
			EDWCreatedDate,
			EDWModifiedDate,
			EDWDeletedDate,
			EDWRowStatus,
			ETLJobId,
			Address1,
			Address2,
			Address3,
			County,
			Country,
			Timezone,
			PhoneNumber,
			Fax
		)
		VALUES
		(
			-1,
			'-1',
			'Unknown CostCenterName',
			'-1',
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			-1,
			-1,
			-1,
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			-1,
			'-1',
			-1,
			'UNK',
			'1900-01-01',
			NULL,
			-1,
			'Unknown',
			'Unknown',
			'Unknown',
			NULL,
			NULL,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'Unknown',
			'Unknown',
			-1,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'Unknown',
			'1900-01-01',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			-1,
			'Unknown',
			NULL,
			'Unknown',
			-1,
			-1,
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			NULL,
			'A',
			@AuditID,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown'
		)
	END

IF NOT EXISTS (SELECT 1 FROM dbo.DimCostCenter WHERE CostCenterNumber = -2)
	BEGIN
		INSERT INTO dbo.DimCostCenter
		(
			CostCenterKey,
			CostCenterNumber,
			CostCenterName,
			CompanyID,
			CostCenterTypeID,
			CostCenterTypeName,
			BusinessUnitCode,
			BusinessUnitName,
			OrganizationLevelCode,
			OrganizationLevelName,
			FunctionCode,
			FunctionName,
			LineOfBusinessCode,
			LineOfBusinessName,
			LineOfBusinessCategoryCode,
			LineOfBusinessCategoryName,
			LineOfBusinessSubcategoryCode,
			LineOfBusinessSubcategoryName,
			CCHierarchyLevel1Name,
			CCHierarchyLevel2Name,
			CCHierarchyLevel3Name,
			CCHierarchyLevel4Name,
			CCHierarchyLevel5Name,
			CCHierarchyLevel6Name,
			CCHierarchyLevel7Name,
			CCHierarchyLevel8Name,
			CCHierarchyLevel9Name,
			CCHierarchyLevel10Name,
			CCHierarchyLevel11Name,
			CCOpenDate,
			CCClosedDate,
			CCReopenDate,
			CCReopenDateType,
			CCClassification,
			CCStatus,
			CCConsolidation,
			CCFlexAttribute1,
			CCFlexAttribute2,
			CCFlexAttribute3,
			CCFlexAttribute4,
			CCFlexAttribute5,
			OrgID,
			ParentOrgID,
			DefaultLocationID,
			OrgNumber,
			OrgHierarchyLevel1Name,
			OrgHierarchyLevel2Name,
			OrgHierarchyLevel3Name,
			OrgHierarchyLevel4Name,
			OrgHierarchyLevel5Name,
			OrgHierarchyLevel6Name,
			OrgHierarchyLevel7Name,
			OrgHierarchyLevel8Name,
			OrgHierarchyLevel9Name,
			OrgHierarchyLevel10Name,
			OrgHierarchyLevel11Name,
			AllName,
			ExecutiveFunctionName,
			ExecutiveFunctionLeaderName,
			ExecutiveSubFunctionName,
			ExecutiveSubFunctionLeaderName,
			CorporateFunctionName,
			CorporateSubFunctionName,
			DivisionName,
			DivisionLeaderName,
			RegionNumber,
			RegionName,
			RegionLeaderName,
			MarketNumber,
			MarketName,
			MarketLeaderName,
			SubMarketNumber,
			SubMarketName,
			SubMarketLeaderName,
			DistrictNumber,
			DistrictName,
			InterimDistrictNumber,
			InterimDistrictName,
			DistrictLeaderName,
			ActingDistrictLeaderName,
			InterimDistrictLeaderName,
			GroupNumber,
			GroupName,
			GroupLeaderName,
			SubgroupNumber,
			SubGroupName,
			SubGroupLeaderName,
			CampusNumber,
			CampusName,
			CampusLeaderName,
			CenterLeaderName,
			ActingCenterLeaderName,
			CategoryName,
			TypeCode,
			TypeName,
			PartnerGroupCode,
			PartnerGroupName,
			CenterGroupCode,
			CenterGroupName,
			DivisionLegacyName,
			BrandCode,
			BrandName,
			OrgFlexAttribute1,
			OrgFlexAttribute2,
			OrgFlexAttribute3,
			OrgFlexAttribute4,
			OrgFlexAttribute5,
			CenterCMSID,
			CenterCSSID,
			SiteHorizonID,
			CenterEnrollmentSourceSystem,
			CenterCMSMigrationDate,
			CenterCMSMigrationStatus,
			CenterLicensedCapacity,
			CenterBackupCareFlag,
			CenterChildCareSelectFlag,
			CenterPublicAllowedFlag,
			CenterOpenTime,
			CenterCloseTime,
			CenterStudentMinimumAge,
			CenterStudentMaximumAge,
			CenterOpenSunFlag,
			CenterOpenMonFlag,
			CenterOpenTueFlag,
			CenterOpenWedFlag,
			CenterOpenThuFlag,
			CenterOpenFriFlag,
			CenterOpenSatFlag,
			CenterFoodProgramStartDate,
			CenterFoodProgramEndDate,
			CenterRegistrationType,
			SiteSchoolDistrict,
			SiteClassYear,
			CenterURL,
			CenterMenuURL,
			CenterHasBreakfastFlag,
			CenterHasMorningSlackFlag,
			CenterHasLunchFlag,
			CenterHasAfternoonSnackFlag,
			CenterSpeaksASLFlag,
			CenterSpeaksArabicFlag,
			CenterSpeaksFrenchFlag,
			CenterSpeaksGermanFlag,
			CenterSpeaksHindiFlag,
			CenterSpeaksMandarinFlag,
			CenterSpeaksPunjabiFlag,
			CenterSpeaksSpanishFlag,
			CenterSpeaksOtherLanguages,
			CenterAccreditationAgencyCode,
			CenterAccreditationStartDate,
			CenterAccreditationExpirationDate,
			CenterAccreditationNextActivity,
			CenterAccreditationNextActivityDueDate,
			CenterAccreditationPrimaryStatus,
			CenterAccreditationProgramID,
			CenterQRISRating,
			CenterQRISRatingStartDate,
			CenterQRISRatingExpirationDate,
			CenterLatitude,
			City,
			[State],
			Zipcode,
			CenterOperationalCapacity,
			CenterLongitude,
			CenterCurrentHumanSigmaScore,
			CenterPreviousHumanSigmaScore,
			EDWEffectiveFrom,
			EDWEffectiveTo,
			EDWCreatedDate,
			EDWModifiedDate,
			EDWDeletedDate,
			EDWRowStatus,
			ETLJobId,
			Address1,
			Address2,
			Address3,
			County,
			Country,
			Timezone,
			PhoneNumber,
			Fax
		)
		VALUES
		(
			-2,
			'-2',
			'Not Applicable CostCenterName',
			'-2',
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			-2,
			-2,
			-2,
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			-2,
			'-2',
			-2,
			'N/A',
			'1900-01-01',
			NULL,
			-2,
			'N/A',
			'N/A',
			'N/A',
			NULL,
			NULL,
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'N/A',
			'N/A',
			-2,
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'N/A',
			'1900-01-01',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			-2,
			'N/A',
			NULL,
			'N/A',
			-2,
			-2,
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			NULL,
			'A',
			@AuditID,
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A'
		)
	END

SET IDENTITY_INSERT dbo.DimCostCenter OFF
",1,1,0,0,0,0,1
167,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - End LicensedCapacity_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
168,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - Start BuidlingCapacity_Actual AuditLog,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
169,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
170,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount; ",1,1,0,0,0,0,1
171,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
172,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.PersonBN);

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
173,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - End LicensedCapacity_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
174,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LicensedCapacity_Actual AuditLog,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
175,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
176,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
177,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
178,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

SELECT @LastProcessedDate AS LastProcessedDate;

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
179,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\SQL - End LicensedCapacity_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
180,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LicensedCapacity_Plan AuditLog,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
181,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
182,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
183,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
184,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\SQL - Get List Of Weeks to Process,"SELECT	  d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(WEEK, DATEDIFF(WEEK, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]


UNION

SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
	ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
	ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
	AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
	AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [d].[FiscalWeekNumber] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]
ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
185,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - End OperationalCapacity_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
186,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LicensedCapacity_Actual AuditLog,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
187,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
188,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
189,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
190,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
191,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\SQL - End LicensedCapacity_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
192,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LicensedCapacity_Plan AuditLog,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
193,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
194,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
195,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
196,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\SQL - Get List Of Weeks to Process,"SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
    , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
    , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
    , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(WEEK, DATEDIFF(WEEK, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber]
      , d.[FiscalWeekEndDate]
      , d.[FiscalYearEndDate]
      , d.[FiscalWeekOfYearNumber]
      , d_nyr.[FiscalWeekNumber]
      , d_nyr.[FiscalWeekEndDate]


UNION

SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
    , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
    , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
    , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
 ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
 ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
 AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
 AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [d].[FiscalWeekNumber] > ?
GROUP BY d.[FiscalWeekNumber]
      , d.[FiscalWeekEndDate]
      , d.[FiscalYearEndDate]
      , d.[FiscalWeekOfYearNumber]
      , d_nyr.[FiscalWeekNumber]
      , d_nyr.[FiscalWeekEndDate]
ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
197,Package\Loaddimmartcostcenter,exec  [dbo].[spBING_EDW_Generate_DimCostCenter],1,1,0,0,0,0,1
198,Package\ORACLE GL and HRIS Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions\SQL - spGL_StagingToEDW_DimDate,EXEC dbo.spGL_StagingToEDW_DimDate,1,1,0,0,0,0,1
199,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging HrAllOrganizationUnits load\SQL - spGL_StagingGenerate_HrAllOrganizationUnits,EXEC dbo.spGL_StagingGenerate_HrAllOrganizationUnits,1,1,0,0,0,0,1
200,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW BridgeCompanyRollup load\SQL - spGL_StagingToEDW_BridgeCompanyRollup,EXEC dbo.spGL_StagingToEDW_BridgeCompanyRollup;,1,1,0,0,0,0,1
201,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimAccountSubaccount load\SQL - spGL_StagingToEDW_DimAccountSubAccount,EXEC dbo.spGL_StagingToEDW_DimAccountSubAccount,1,1,0,0,0,0,1
202,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompany load\SQL - spGL_StagingToEDW_DimCompany,EXEC dbo.spGL_StagingToEDW_DimCompany,1,1,0,0,0,0,1
203,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompanyRollup load\SQL - spGL_StagingToEDW_DimCompanyRollup,EXEC dbo.spGL_StagingToEDW_DimCompanyRollup;,1,1,0,0,0,0,1
204,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCostCenterType load\SQL - spGL_StagingToEDW_DimCostCenterType,EXEC dbo.spGL_StagingToEDW_DimCostCenterType,1,1,0,0,0,0,1
205,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging OrgLeaderAccess load\SQL - spHR_StagingGenerate_OrgLeaderAccess,EXEC dbo.spHR_StagingGenerate_OrgLeaderAccess,1,1,0,0,0,0,1
206,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonHRISGroup\SQL -spHR_StagingTransform_BridgeSecurityPersonHRISGroup,EXEC dbo.spHR_StagingToEDW_BridgeSecurityPersonHRISGroup;,1,1,0,0,0,0,1
207,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonOrg\SQL - spHR_StagingToEDW_BridgeSecurityPersonOrg,EXEC dbo.spHR_StagingToEDW_BridgeSecurityPersonOrg;,1,1,0,0,0,0,1
208,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssessmentType load\SQL - spHR_StagingToEDW_DimAssessmentType,EXEC dbo.spHR_StagingToEDW_DimAssessmentType,1,1,0,0,0,0,1
209,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssignmentType load\SQL - spHR_StagingToEDW_DimAssignmentType,EXEC dbo.spHR_StagingToEDW_DimAssignmentType,1,1,0,0,0,0,1
210,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceItem load\SQL - spHR_StagingToEDW_DimComplianceItem,EXEC dbo.spHR_StagingToEDW_DimComplianceItem,1,1,0,0,0,0,1
211,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceRating load\SQL - spHR_StagingToEDW_DimComplianceRating,EXEC dbo.spHR_StagingToEDW_DimComplianceRating; ,1,1,0,0,0,0,1
212,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimHRUser load\SQL - spHR_StagingToEDW_DimHRUser,EXEC dbo.spHR_StagingToEDW_DimHRUser;,1,1,0,0,0,0,1
213,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveReason load\SQL - spHR_StagingToEDW_DimLeaveReason,EXEC dbo.spHR_StagingToEDW_DimLeaveReason,1,1,0,0,0,0,1
214,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveType load\SQL - spHR_StagingToEDW_DimLeaveType,EXEC dbo.spHR_StagingToEDW_DimLeaveType,1,1,0,0,0,0,1
215,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayBasis load\SQL - spHR_StagingToEDW_DimPayBasis,EXEC dbo.spHR_StagingToEDW_DimPayBasis,1,1,0,0,0,0,1
216,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayGrade load\SQL - spHR_StagingToEDW_DimPayGrade,EXEC dbo.spHR_StagingToEDW_DimPayGrade;,1,1,0,0,0,0,1
217,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPeopleGroup load\SQL - spHR_StagingToEDW_DimPeopleGroup,EXEC dbo.spHR_StagingToEDW_DimPeopleGroup;,1,1,0,0,0,0,1
218,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerformanceRating load\SQL - spHR_StagingToEDW_DimPerformanceRating,EXEC dbo.spHR_StagingToEDW_DimPerformanceRating,1,1,0,0,0,0,1
219,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerson load\SQL - spHR_StagingToEDW_DimPerson,EXEC dbo.spHR_StagingToEDW_DimPerson;,1,1,0,0,0,0,1
220,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPosition load\SQL - spHR_StagingToEDW_DimPosition,EXEC dbo.spHR_StagingToEDW_DimPosition,1,1,0,0,0,0,1
221,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimQualificationType\SQL - spHR_StagingToEDW_DimQualificationType,EXEC dbo.spHR_StagingToEDW_DimQualificationType;,1,1,0,0,0,0,1
222,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimSpecialInfo load\SQL - spHR_StagingToEDW_DimSpecialInfo,EXEC dbo.spHR_StagingToEDW_DimSpecialInfo,1,1,0,0,0,0,1
223,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW • DimPayRateChangeReason load\SQL - spHR_StagingToEDW_DimPayRateChangeReason,EXEC dbo.spHR_StagingToEDW_DimPayRateChangeReason,1,1,0,0,0,0,1
224,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimLocation load\SQL - spHR_StagingToEDW_DimLocation,EXEC dbo.spHR_StagingToEDW_DimLocation,1,1,0,0,0,0,1
225,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimOrganization Load\SQL - spHR_StagingToEDW_DimOrganization,EXEC dbo.spHR_StagingToEDW_DimOrganization,1,1,0,0,0,0,1
226,Package\ORACLE GL and HRIS Dimensions\Execute MISC_Staging To EDW DimReport Profile\SQL - spMISC_StagingToEDW_DimReportProfile,EXEC dbo.spMISC_StagingToEDW_DimReportProfile,1,1,0,0,0,0,1
227,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactFTESnapshot,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactFTESnapshot Disable;
",1,1,0,0,0,0,1
228,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactGLBalancePlanAllocation,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey ON vFactGLBalancePlanAllocation DISABLE;",1,1,0,0,0,0,1
229,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactLaborHour,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey ON vFactLaborHour DISABLE;",1,1,0,0,0,0,1
230,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactLaborSalary,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactLaborSalary DISABLE;",1,1,0,0,0,0,1
231,Package\SEQ - Drop Indexed Views\SQL - Drop Index on FactNetRevenueConsolidated,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM [sys].[sysobjects] [O]
         INNER JOIN [sys].[sysindexes] [I] ON [O].[id] = [I].[id]
    WHERE [I].[name] = 'CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    DROP INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey] ON [dbo].[FactNetRevenueConsolidated];",1,1,0,0,0,0,1
232,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactFTESnapshot,"IF OBJECT_ID('dbo.vFactFTESnapshot') IS NOT NULL
	DROP VIEW [dbo].[vFactFTESnapshot];",1,1,0,0,0,0,1
233,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactGLBalancePlanAllocation,"IF OBJECT_ID('[dbo].[vFactGLBalancePlanAllocation]')IS NOT NULL
 DROP VIEW [dbo].[vFactGLBalancePlanAllocation];",1,1,0,0,0,0,1
234,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactLaborHour,"IF OBJECT_ID('[dbo].[vFactLaborHour]')IS NOT NULL
 DROP VIEW [dbo].[vFactLaborHour];",1,1,0,0,0,0,1
235,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactLaborSalary,"IF OBJECT_ID('[dbo].[vFactLaborSalary]')IS NOT NULL
 DROP VIEW [dbo].[vFactLaborSalary];",1,1,0,0,0,0,1
236,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactNetRevenue,"IF OBJECT_ID('[dbo].[vFactNetRevenue]')IS NOT NULL
 DROP VIEW [dbo].[vFactNetRevenue];",1,1,0,0,0,0,1
237,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursChildcare_Plan,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Childcare'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
238,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursChildcare_Plan,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Childcare'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
239,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursChildcare_Plan present,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Childcare'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",1,1,0,0,0,0,1
240,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - End LaborHoursChildcare_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
241,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",1,1,0,0,0,0,1
242,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - Start LaborHoursChildcare_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
243,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursOperating_Plan,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Operating'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
244,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursOperating_Plan,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Operating'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
245,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursOperating_Plan present,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Operating'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",1,1,0,0,0,0,1
246,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - End LaborHoursOperating_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
247,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",1,1,0,0,0,0,1
248,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - Start LaborHoursOperating_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
249,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursOvertime_Plan,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Overtime'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
250,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursOvertime_Plan,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Overtime'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
251,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursOvertime_Plan present,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Overtime'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",1,1,0,0,0,0,1
252,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - End LaborHoursOvertime_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
253,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",1,1,0,0,0,0,1
254,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - Start LaborHoursOvertime_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
255,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursSpecialProgramsMemo_Plan,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Special Programs (Memo)'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
256,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursSpecialProgramsMemo_Plan,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Special Programs (Memo)'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
257,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursSpecialProgramsMemo_Plan present,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Special Programs (Memo)'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",1,1,0,0,0,0,1
258,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - End LaborHoursSpecialProgramsMemo_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
259,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",1,1,0,0,0,0,1
260,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - Start LaborHoursSpecialProgramsMemo_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
261,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursTraining_Plan,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Training'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
262,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursTraining_Plan,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Training'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
263,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursTraining_Plan present,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Training'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",1,1,0,0,0,0,1
264,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - End LaborHoursTraining_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
265,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",1,1,0,0,0,0,1
266,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - Start LaborHoursTraining_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
267,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHours_Plan,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
268,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHours_Plan,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
269,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHours_Plan present,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",1,1,0,0,0,0,1
270,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - End LaborHours_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
271,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",1,1,0,0,0,0,1
272,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - Start LaborHours_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
273,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - BaseWeeklyMeasure Post Count for TotalLaborHours_Plan,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Total Labor Hours'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
274,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - BaseWeeklyMeasure Pre Count for TotalLaborHours_Plan,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Total Labor Hours'
AND DataScenarioName = ('Plan')",1,1,0,0,0,0,1
275,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - Delete from BaseWeeklyMeasure if TotalLaborHours_Plan present,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Total Labor Hours'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",1,1,0,0,0,0,1
276,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - End TotalLaborHours_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
277,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",1,1,0,0,0,0,1
278,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - Start TotalLaborHours_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
279,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursChildcare_Plan,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",1,1,0,0,0,0,1
280,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursOperating_Plan,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",1,1,0,0,0,0,1
281,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursOvertime_Plan,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",1,1,0,0,0,0,1
282,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursSpecialProgramsMemo_Plan,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",1,1,0,0,0,0,1
283,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursTraining_Plan,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",1,1,0,0,0,0,1
284,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHours_Plan,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",1,1,0,0,0,0,1
285,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for TotalLaborHours_Plan,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",1,1,0,0,0,0,1
286,Package\SEQ- StagingToEDW DimPayBasis Load\SQL- EXEC spHR_StagingToEDW_DimPayBasis,Exec [dbo].[spHR_StagingToEDW_DimPayBasis],1,1,0,0,0,0,1
287,Package\SEQ- StagingToEDW DimSpecialInfo Load\SQL- EXEC spHR_StagingToEDW_DimSpecialInfo,Exec [dbo].[spHR_StagingToEDW_DimSpecialInfo],1,1,0,0,0,0,1
288,Package\SEQ- StagingToEDW DimTier Load\SQL- EXEC spCMS_StagingToEDW_DimTier,Exec [dbo].[spCMS_StagingToEDW_DimTier];,1,1,0,0,0,0,1
289,Package\SEQ-spCMS_StagingToEDW_DimPaymentType\SQL-Execute spCMS_StagingToEDW_DimPaymentType,Execute [dbo].[spCMS_StagingToEDW_DimPaymentType];,1,1,0,0,0,0,1
290,Package\SEQ-spCMS_StagingToEDW_DimScheduleType\SQL-  EXEC spCMS_StagingToEDW_DimScheduleType, EXEC [dbo].[spCMS_StagingToEDW_DimScheduleType],1,1,0,0,0,0,1
291,Package\SQL - Assigning value to the SQl Variable,"DECLARE @Field MartLookup;
INSERT INTO @Field (FieldPath)
(SELECT FieldPath
FROM dbo.MartASALookup);

DECLARE @vSQL MartLookup;
INSERT @vSQL
EXEC dbo.spGL_Generate_ASA_SQLStatement @Field;

DECLARE @vSQLCommand VARCHAR(4000);
SET @vSQLCommand = (SELECT FieldPath FROM @vSQL)

SELECT @vSQLCommand AS vSQLCommand;",2,2,0,0,0,0,2
292,Package\SQL - Begin AccountSubaccountLanding Audit,"Execute dbo.spBeginAuditLog ? OUTPUT, ?,?;",1,1,0,0,0,0,1
293,Package\SQL - Begin CompNonComp ETL Audit,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
294,Package\SQL - Begin DimAccountSubAccount ETL Audit,"Execute spBeginAuditLog ? OUTPUT, ?,?;",1,1,0,0,0,0,1
295,Package\SQL - Begin DimCostCenter ETL Audit,"Execute spBeginAuditLog ? OUTPUT, ?;",2,2,0,0,0,0,2
296,Package\SQL - Begin DimProgram ETL Audit,"Execute spBeginAuditLog ? OUTPUT, ?,?;",3,3,0,0,0,0,3
297,Package\SQL - Begin DimSession ETL Audit,"Execute spBeginAuditLog ? OUTPUT, ?,?;",1,1,0,0,0,0,1
298,Package\SQL - Begin DimSponsorCSS ETL Audit,"Execute spBeginAuditLog ? OUTPUT, ?,?;",1,1,0,0,0,0,1
299,Package\SQL - Begin DimStudentCSS ETL Audit,"Execute spBeginAuditLog ? OUTPUT, ?,?;",1,1,0,0,0,0,1
300,Package\SQL - Begin DimTier ETL Audit,"Execute spBeginAuditLog ? OUTPUT, ?,?;",1,1,0,0,0,0,1
301,Package\SQL - CSS Insert Count,SELECT COUNT(1) AS IC FROM  [dbo].[DimTuitionAssistanceProvider] WHERE SourceSystem ='CSS',1,1,0,0,0,0,1
302,Package\SQL - Create Update Table,"IF OBJECT_ID('FactProgramDetailUpdate', 'U') IS NOT NULL 
	DROP TABLE FactProgramDetailUpdate; 

CREATE TABLE [FactProgramDetailUpdate](
	[ProgramDetailID] [int] NOT NULL,
	[CenterKey] [int] NOT NULL,
	[ProgramKey] [int] NOT NULL,
	[StudentTeacherRatio] [int] NOT NULL,
	[StudentMinimumAgeMonths] [int] NOT NULL,
	[StudentMaximumAgeMonths] [int] NOT NULL,
	[EDWCreatedDate] [datetime2](7) NOT NULL,
	[EDWCreatedBy] [varchar](50) NOT NULL,
	[EDWModifiedDate] [datetime2](7) NOT NULL,
	[EDWModifiedBy] [varchar](50) NOT NULL,
	[Deleted] [datetime2](7) NULL
)
",1,1,0,0,0,0,1
303,Package\SQL - Delete last 180 days from DW_Mart CompNonCompStatus table,"DELETE FROM CompNonCompStatus
WHERE FiscalWeekEndDate >= ?

Select @@Rowcount as DeleteCount",1,1,0,0,0,0,1
304,Package\SQL - Drop Update Table,DROP TABLE [FactProgramDetailUpdate],1,1,0,0,0,0,1
305,Package\SQL - End ARBalanceMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
306,Package\SQL - End AccountSubaccount Audit,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
307,Package\SQL - End Auditlog,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
308,Package\SQL - End CompNonComp ETL Audit,"Execute spEndAuditLog ?,0,?,?,?;",1,1,0,0,0,0,1
309,Package\SQL - End DimAccountSubAccount ETL Audit,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
310,Package\SQL - End DimCostCenter ETL Audit,"Execute spEndAuditLog ?,?,?,?,?;",2,2,0,0,0,0,2
311,Package\SQL - End DimDataScenario Auditlog,"Execute spEndAuditLog ?,?,?,?,?;",2,2,0,0,0,0,2
312,Package\SQL - End DimLifecycleStatus Auditlog,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
313,Package\SQL - End DimMeasure Auditlog,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
314,Package\SQL - End DimMeasureLanding Auditlog,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
315,Package\SQL - End DimPartner ETL Audit,"UPDATE AuditLog
SET DeleteCount = ?
WHERE AuditID = ?",1,1,0,0,0,0,1
316,Package\SQL - End DimProgram ETL Audit,"Execute spEndAuditLog ?,?,?,?,?;",3,3,0,0,0,0,3
317,Package\SQL - End DimRetentionBaseWeek Auditlog,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
318,Package\SQL - End DimScheduleWeek Auditlog,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
319,Package\SQL - End DimSession ETL Audit,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
320,Package\SQL - End DimSponsor ETL Audit,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
321,Package\SQL - End DimSponsor ETL Audit,"UPDATE AuditLog
SET DeleteCount = ?
WHERE AuditID = ?",1,1,0,0,0,0,1
322,Package\SQL - End DimStudent ETL Audit,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
323,Package\SQL - End DimStudent ETL Audit,"UPDATE AuditLog
SET DeleteCount = ?
WHERE AuditID = ?",1,1,0,0,0,0,1
324,Package\SQL - End DimTier ETL Audit,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
325,Package\SQL - End FTESnapshotMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
326,Package\SQL - End FactPartnerVerifiedSponsor Package Audit Log,"Execute spEndAuditLog ?,?,?,?,?",1,1,0,0,0,0,1
327,Package\SQL - End GLBalancePlanAllocation_FTEMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
328,Package\SQL - End GLBalancePlanAllocation_LaborHoursMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
329,Package\SQL - End GLBalancePlanAllocation_LaborSalaryMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
330,Package\SQL - End GLBalancePlanAllocation_NetRevenueMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
331,Package\SQL - End GLPlanAllocation_LaborHoursMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
332,Package\SQL - End LaborHoursMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
333,Package\SQL - End LaborSalaryMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
334,Package\SQL - End LeadEventMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
335,Package\SQL - End LicenseCapacity Measure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
336,Package\SQL - End LifeCycleStatusMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
337,Package\SQL - End NetRevenueMeasure Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",1,1,0,0,0,0,1
338,Package\SQL - End Package Auditlog,"Execute spEndAuditLog ?, ?, ?, ?, ?;",2,2,0,0,0,0,2
339,Package\SQL - End ReportMeasure Auditlog,"Execute spEndAuditLog ?,?,?,?,?;",1,1,0,0,0,0,1
340,Package\SQL - Execute Staging To EDW DimCreditMemoType load\Execute spCMS_StagingToEDW_DimCreditMemoType,EXEC dbo.spCMS_StagingToEDW_DimCreditMemoType,1,1,0,0,0,0,1
341,Package\SQL - Execute Staging To EDW DimStudent load\Execute spCMS_StagingToEDW_DimStudent,EXEC dbo.spCMS_StagingToEDW_DimStudent,1,1,0,0,0,0,1
342,Package\SQL - Get Delete Count, SELECT COUNT(1) AS DeleteCount  From [dbo].[ReportProfile],1,1,0,0,0,0,1
343,Package\SQL - Get Deleted Count," SELECT COUNT(1) AS DeleteCount 
From dbo.DimDataScenario",1,1,0,0,0,0,1
344,Package\SQL - Get Deleted Count," SELECT COUNT(1) AS DeleteCount 
From dbo.DimLifecycleStatus",1,1,0,0,0,0,1
345,Package\SQL - Get Deleted Count," SELECT COUNT(1) AS DeleteCount 
From dbo.DimScheduleWeek",1,1,0,0,0,0,1
346,Package\SQL - Get Insert count for Landing Table,SELECT COUNT(1) AS vInsertCount FROM DimMeasureLanding(NOLOCK),1,1,0,0,0,0,1
347,Package\SQL - Get Last Processed Date from BaseETLBatchControl,"IF EXISTS
(SELECT 1
FROM BaseETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM BaseETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO BaseETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",1,1,0,0,0,0,1
348,Package\SQL - Get LastProcessedDate,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",1,1,0,0,0,0,1
349,"Package\SQL - Get Total Insert, Source, Update, Delete Count","SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",15,15,0,0,0,0,15
350,Package\SQL - Get the FiscalWeekEndDate,"IF ? ='01/01/1900'  
SELECT MIN(d.FiscalWeekEndDate) AS FiscalWeekEndDate
FROM DimDate d
WHERE ( d.FullDate >= DATEADD( dd, -180, CAST( GETDATE() AS DATE ) ) ) AND ( d.FullDate <= GETDATE() )
ELSE
SELECT MIN(d.FiscalWeekEndDate) AS FiscalWeekEndDate
FROM DimDate d
WHERE ( d.FullDate >= DATEADD(dd, -180, CAST( ? AS DATE) ) ) AND ( d.FullDate <= GETDATE() )",1,1,0,0,0,0,1
351,Package\SQL - Insert CSS Data,"IF EXISTS
( SELECT 1 FROM dbo.DimTier WHERE SourceSystem='CSS' )
BEGIN 
 PRINT 'No Insert' 
END
ELSE 


INSERT INTO [dbo].[DimTier]
  ([TierID]
  ,[TierName]
  ,[CSSTierNumber]
  ,[SourceSystem]
  ,[EffectiveFrom]
  ,[EffectiveTo]
  ,[CreatedDate]
  ,[ModifiedDate]
  ,[DeletedDate]
  ,[RowStatus]
  ,[ETLJobID])
 SELECT
   -2,
   'T1CSS',
   1,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?
 UNION
 SELECT
   -2,
   'T2CSS',
   2,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?
   UNION
 SELECT
   -2,
   'T3CSS',
    3,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?
   UNION
 SELECT
   -2,
   'T4CSS',
    4,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?;


",1,1,0,0,0,0,1
352,Package\SQL - Insert Count, SELECT COUNT(1) AS InsertCount  From [dbo].[ReportProfile],1,1,0,0,0,0,1
353,Package\SQL - Insert Seed Rows,"
  IF EXISTS
( SELECT 1 FROM dbo.[DimSponsor] WHERE [SponsorKey] < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
 SET IDENTITY_INSERT dbo.DimSponsor ON;
             INSERT INTO [dbo].[DimSponsor]
             ([SponsorKey],
              [SponsorID],
			  [SponsorFirstName],
			  [SponsorLastName],
			  [SponsorFullName],
			  [SponsorStatus],
			  [SourceSystem],
              [CSSCenterNumber],
	          [CSSFamilyNumber],
		      [EffectiveFrom],
		      [EffectiveTo],
		      [CreatedDate],
		      [ModifiedDate],
		      [DeletedDate],
		      [RowStatus],
		      [ETLJobID]
              )
             SELECT-1,
             -1,
			'Unknown FirstName',
			'Unknown LastName',
			'Unknown FullName',
			'Unknown SponsorStatus',
			 'UNK',
            '-1',
            '-1',
		    '1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
            UNION
            SELECT-2,
            -2,
			'Unknown FirstName',
			'Unknown LastName',
			'Unknown FullName',
			'Unknown SponsorStatus',
			'UNK',
            '-2',
            '-2',
		    '1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;
            SET IDENTITY_INSERT dbo.DimSponsor OFF;
			END;

SELECT * FROM DW_Mart.dbo.DimSponsor
WHERE SponsorKey<0",1,1,0,0,0,0,1
354,Package\SQL - Insert Seed Rows," 

DELETE FROM [dbo].[DimDate]
             WHERE [DateKey] < 0;


             INSERT INTO [dbo].[DimDate]
             ([DateKey],
              [FullDate],
		    [FiscalWeekNumber],
		    [FiscalWeekName],
		    [FiscalWeekStartDateKey],
              [FiscalWeekEndDateKey],
              [HolidayName],
              [HolidayFiscalWeekFlag],
             [FiscalDayNumber],
             [FiscalDayOfWeekNumber],
            [FiscalDayOfPeriodNumber],
            [FiscalDayOfQuarterNumber],
            [FiscalDayOfYearNumber],
              [FiscalWeekOfPeriodNumber],
              [FiscalWeekOfPeriodName],
              [FiscalWeekOfQuarterNumber],
              [FiscalWeekOfQuarterName],
              [FiscalWeekOfYearNumber],
              [FiscalWeekOfYearName],
              [FiscalWeekSequenceNumber],
              [FiscalWeekStartDate],
              [FiscalWeekEndDate],
              [FiscalPeriodNumber],
              [FiscalPeriodName],
              [FiscalPeriodType],
              [FiscalPeriodOfYearNumber],
              [FiscalPeriodOfYearName],
              [FiscalPeriodSequenceNumber],
              [FiscalPeriodStartDate],
              [FiscalPeriodEndDate],
              [FiscalQuarterNumber],
              [FiscalQuarterName],
              [FiscalQuarterOfYearNumber],
              [FiscalQuarterOfYearName],
              [FiscalQuarterSequenceNumber],
              [FiscalQuarterStartDate],
              [FiscalQuarterEndDate],
              [FiscalYearNumber],
              [FiscalYearName],
              [FiscalYearStartDate],
		    [FiscalYearEndDate],
		    [EffectiveFrom],
		    [EffectiveTo],
		    [RowStatus],
		    [ETLJobID]
              )
                    SELECT-1, --[DateKey]
                          '19000101', --[FullDate]
					 -1, --[FiscalWeekNumber]
                          'Unknown Fiscal Week', --[FiscalWeekName]
					 -1,   ---[FiscalWeekStartDateKey]
					 -1,   ---[FiscalWeekEndDateKey]
                          'Unknown Holiday', --[HolidayName]
                          'Unknown Holiday Fiscal Week', --[HolidayFiscalWeekFlag]
						  -1,--- [FiscalDayNumber] 
	                      -1, ---[FiscalDayOfWeekNumber] 
	                      -1, ----[FiscalDayOfPeriodNumber] 
	                      -1, ---[FiscalDayOfQuarterNumber] 
	                      -1, ---[FiscalDayOfYearNumber] 
                          -1, --[FiscalWeekOfPeriodNumber]
                          'Unknown Fiscal Week of Period', --[FiscalWeekOfPeriodName]
                          -1, --[FiscalWeekOfQuarterNumber]
                          'Unknown Fiscal Week of Quarter', --[FiscalWeekOfQuarterName]
                          -1, --[FiscalWeekOfYearNumber]
                          'Unknown Fiscal Week of Year', --[FiscalWeekOfYearName]
                          -1, --[FiscalWeekSequenceNumber]
                          '19000101', --[FiscalWeekStartDate]
                          '19000101', --[FiscalWeekEndDate]
                          -1, --[FiscalPeriodNumber]
                          'Unknown Fiscal Period', --[FiscalPeriodName]
                          'Unknown', --[FiscalPeriodType]
                          -1, --[FiscalPeriodOfYearNumber]
                          'Unknown Fiscal Period of Year', --[FiscalPeriodOfYearName]
                          -1, --[FiscalPeriodSequenceNumber]
                          '19000101', --[FiscalPeriodStartDate]
                          '19000101', --[FiscalPeriodEndDate]
                          -1, --[FiscalQuarterNumber]
                          'Unknown Fiscal Quarter', --[FiscalQuarterName]
                          -1, --[FiscalQuarterOfYearNumber]
                          'Unknown Fiscal Quarter of Year', --[FiscalQuarterOfYearName]
                          -1, --[FiscalQuarterSequenceNumber]
                          '19000101', --[FiscalQuarterStartDate]
                          '19000101', --[FiscalQuarterEndDate]
                          -1, --[FiscalYearNumber]
                          'Unknown Fiscal Year', --[FiscalYearName]
                          '19000101', --[FIscalYearStartDate]
                          '19000101', --[FiscalYearEndDate]
					 '1900-01-01' , --[EffectiveFrom]
					 '12/31/9999 23:59:59.999', ---- [EffectiveTo]
					 'Active', ---RowStatus
					 ?   ---ETLJobID
                          
                    UNION
                    SELECT-2, --[DateKey]
                          '19000102', --[FullDate]
                          -2, --[FiscalWeekNumber]
                          'Not Applicable Fiscal Week', --[FiscalWeekName]
					 -2, --- [FiscalWeekStartDateKey]
                          -2, --- [FiscalWeekEndDateKey]
                          'Not Applicable Holiday', --[HolidayName]
                          'Not Applicable Holiday Fiscal Week', --[HolidayFiscalWeekFlag]
						  -2,--- [FiscalDayNumber] 
	                      -2, ---[FiscalDayOfWeekNumber] 
	                      -2, ----[FiscalDayOfPeriodNumber] 
	                      -2, ---[FiscalDayOfQuarterNumber] 
	                      -2, ---[FiscalDayOfYearNumber] 
                          -2, --[FiscalWeekOfPeriodNumber]
                          'Not Applicable Fiscal Week of Period', --[FiscalWeekOfPeriodName]
                          -2, --[FiscalWeekOfQuarterNumber]
                          'Not Applicable Fiscal Week of Quarter', --[FiscalWeekOfQuarterName]
                          -2, --[FiscalWeekOfYearNumber]
                          'Not Applicable Fiscal Week of Year', --[FiscalWeekOfYearName]
                          -2, --[FiscalWeekSequenceNumber]
                          '19000102', --[FiscalWeekStartDate]
                          '19000102', --[FiscalWeekEndDate]
                          -2, --[FiscalPeriodNumber]
                          'Not Applicable Fiscal Period', --[FiscalPeriodName]
                          'N/A', --[FiscalPeriodType]
                          -2, --[FiscalPeriodOfYearNumber]
                          'Not Applicable Fiscal Period of Year', --[FiscalPeriodOfYearName]
                          -2, --[FiscalPeriodSequenceNumber]
                          '19000102', --[FiscalPeriodStartDate]
                          '19000102', --[FiscalPeriodEndDate]
                          -2, --[FiscalQuarterNumber]
                          'Not Applicable Fiscal Quarter', --[FiscalQuarterName]
                          -2, --[FiscalQuarterOfYearNumber]
                          'Not Applicable Fiscal Quarter of Year', --[FiscalQuarterOfYearName]
                          -2, --[FiscalQuarterSequenceNumber]
                          '19000102', --[FiscalQuarterStartDate]
                          '19000102', --[FiscalQuarterEndDate]
                          -2, --[FiscalYearNumber]
                          'Not Applicable Fiscal Year', --[FiscalYearName]
                          '19000102', --[FIscalYearStartDate]
                          '19000102', --[FiscalYearEndDate]
                           '1900-01-02', --[EffectiveFrom]
					  '12/31/9999 23:59:59.999', ---- [EffectiveTo]
					 'Active', ---RowStatus;
                           ? --ETLJobID
           ",1,1,0,0,0,0,1
355,Package\SQL - Insert Seed Rows," 
 IF EXISTS
( SELECT 1 FROM dbo.[DimTuitionAssistanceProvider] WHERE [TuitionAssistanceProviderKey] < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
 SET IDENTITY_INSERT dbo.DimTuitionAssistanceProvider ON;
             INSERT INTO [dbo].[DimTuitionAssistanceProvider]
             ([TuitionAssistanceProviderKey],
              [TuitionAssistanceProviderID],
              [TuitionAssistanceProviderName],
              [TuitionAssistanceProviderType],
			  [SourceSystem],
              [CSSCenterNumber]
             ,[CSSCustomerCode]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID]

             )
                    SELECT-1,
                          -1,
                          'Unknown Tuition Assistance Provider',
                          'Unknown Tuition Assistance Provider Type',
						  'UNK',
                           '-1',
                           '-1',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
                         
                    UNION
                    SELECT-2,
                          -2,
                          'Not Applicable Tuition Assistance Provider',
                          'Not Applicable  Tuition Assistance Provider Type',
                         'UNK',
                        '-2',
                        '-2', 
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;
          
             SET IDENTITY_INSERT dbo.DimTuitionAssistanceProvider OFF;
			 END;",1,1,0,0,0,0,1
356,Package\SQL - Insert Seed Rows,"DBCC CHECKIDENT('[DimDataScenario]', RESEED, 1);
SET IDENTITY_INSERT dbo.DimDataScenario ON;
INSERT INTO [dbo].[DimDataScenario]
([DataScenarioKey],
 [DataScenarioName],
 [DataScenarioType],
 [DataScenarioSubtype],
 [GLActualFlag],
 [GLBudgetVersionID],
 [Deleted],
 [EffectiveFrom],
 [EffectiveTo],
 [ETLJobID]
)
       SELECT-1,
             'Unknown Scenario',
             'Unknown Scenario Type',
             'Unknown Scenario Subtype',
             NULL,
             NULL,
             NULL,
             '1900-01-01',
             '12/31/9999 23:59:59.999',
             ?
       UNION
       SELECT-2,
             'Not Applicable Scenario',
             'Not Applicable Scenario Type',
             'Not Applicable Scenario Subtype',
             NULL,
             NULL,
             NULL,
             '1900-01-01',
             '12/31/9999 23:59:59.999',
             ?;
SET IDENTITY_INSERT dbo.DimDataScenario OFF;",1,1,0,0,0,0,1
357,Package\SQL - Insert Seed Rows,"DBCC CHECKIDENT('[DimScheduleWeek]', RESEED, 1);
SET IDENTITY_INSERT dbo.DimScheduleWeek ON;
INSERT INTO [dbo].[DimScheduleWeek]
([ScheduleWeekKey],
 [ScheduleWeekName],
 [RowStatus],
 [ETLJobID]
)
       SELECT-1,
             'Unknown Schedule Week',
              'A',
             ?
       UNION
       SELECT-2,
             'Not Applicable Schedule Week',
             'A',
             ?;
SET IDENTITY_INSERT dbo.DimScheduleWeek OFF;",1,1,0,0,0,0,1
358,Package\SQL - Insert Seed Rows,"IF EXISTS
(
    SELECT 1
    FROM dbo.DimAccountSubaccount
    WHERE AccountSubaccountKey < 0
)
BEGIN
    PRINT 'No Insert';
END;
ELSE
BEGIN
    SET IDENTITY_INSERT dbo.DimAccountSubaccount ON;

    INSERT INTO [dbo].[DimAccountSubaccount]
    (
        [AccountSubaccountKey],
        [AccountSubaccountID],
        [AccountSubaccountName],
        [AccountID],
        [AccountName],
        [SubaccountID],
        [SubaccountName],
        [ASATuitionType],
        [ASAFieldDepth],
        [ASAFieldLevel1ID],
        [ASAFieldLevel1Name],
        [ASAFieldLevel1Unary],
        [ASAFieldLevel1Sort],
        [ASAFieldLevel2ID],
        [ASAFieldLevel2Name],
        [ASAFieldLevel2Unary],
        [ASAFieldLevel2Sort],
        [ASAFieldLevel3ID],
        [ASAFieldLevel3Name],
        [ASAFieldLevel3Unary],
        [ASAFieldLevel3Sort],
        [ASAFieldLevel4ID],
        [ASAFieldLevel4Name],
        [ASAFieldLevel4Unary],
        [ASAFieldLevel4Sort],
        [ASAFieldLevel5ID],
        [ASAFieldLevel5Name],
        [ASAFieldLevel5Unary],
        [ASAFieldLevel5Sort],
        [ASAFieldLevel6ID],
        [ASAFieldLevel6Name],
        [ASAFieldLevel6Unary],
        [ASAFieldLevel6Sort],
        [ASAFieldLevel7ID],
        [ASAFieldLevel7Name],
        [ASAFieldLevel7Unary],
        [ASAFieldLevel7Sort],
        [ASAFieldLevel8ID],
        [ASAFieldLevel8Name],
        [ASAFieldLevel8Unary],
        [ASAFieldLevel8Sort],
        [ASAFieldLevel9ID],
        [ASAFieldLevel9Name],
        [ASAFieldLevel9Unary],
        [ASAFieldLevel9Sort],
        [ASAFieldLevel10ID],
        [ASAFieldLevel10Name],
        [ASAFieldLevel10Unary],
        [ASAFieldLevel10Sort],
        [ASAFieldLevel11ID],
        [ASAFieldLevel11Name],
        [ASAFieldLevel11Unary],
        [ASAFieldLevel11Sort],
        [ASAFieldLevel12ID],
        [ASAFieldLevel12Name],
        [ASAFieldLevel12Unary],
        [ASAFieldLevel12Sort],
        [SourceSystem],
        [EffectiveFrom],
        [EffectiveTo],
        [CreatedDate],
        [ModifiedDate],
        [DeletedDate],
        [RowStatus],
        [ETLJobID]
    )
    SELECT -1,
           -1,
           'Unknown AccountSubaccountName',
           -1,
           'Unknown AccountName',
           -1,
           'Unknown SubaccountName',
           'Unknown ASATuitionType',
           -1,                           -- [ASAFieldDepth]
           '0000.000000',                -- [ASAFieldLevel1ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel1Name]	
           1,                            -- [ASAFieldLevel1Unary]	
           99999,                        -- [ASAFieldLevel1Sort]
           '0000.000000',                -- [ASAFieldLevel2ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel2Name]	
           1,                            -- [ASAFieldLevel2Unary]	
           99999,                        -- [ASAFieldLevel2Sort]
           '0000.000000',                -- [ASAFieldLevel3ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel3Name]	
           1,                            -- [ASAFieldLevel3Unary]	
           99999,                        -- [ASAFieldLevel3Sort]
           '0000.000000',                -- [ASAFieldLevel4ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel4Name]	
           1,                            -- [ASAFieldLevel4Unary]	
           99999,                        -- [ASAFieldLevel4Sort]
           '0000.000000',                -- [ASAFieldLevel5ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel5Name]	
           1,                            -- [ASAFieldLevel5Unary]	
           99999,                        -- [ASAFieldLevel5Sort]
           '0000.000000',                -- [ASAFieldLevel6ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel6Name]	
           1,                            -- [ASAFieldLevel6Unary]	
           99999,                        -- [ASAFieldLevel6Sort]
           '0000.000000',                -- [ASAFieldLevel7ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel7Name]	
           1,                            -- [ASAFieldLevel7Unary]	
           99999,                        -- [ASAFieldLevel7Sort]
           '0000.000000',                -- [ASAFieldLevel8ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel8Name]	
           1,                            -- [ASAFieldLevel8Unary]	
           99999,                        -- [ASAFieldLevel8Sort]
           '0000.000000',                -- [ASAFieldLevel9ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel9Name]	
           1,                            -- [ASAFieldLevel9Unary]	
           99999,                        -- [ASAFieldLevel9Sort]
           '0000.000000',                -- [ASAFieldLevel10ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
           1,                            -- [ASAFieldLevel10Unary]	
           99999,                        -- [ASAFieldLevel10Sort]
           '0000.000000',                -- [ASAFieldLevel11ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
           1,                            -- [ASAFieldLevel11Unary]	
           99999,                        -- [ASAFieldLevel11Sort]
           '0000.000000',                -- [ASAFieldLevel12ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
           1,                            -- [ASAFieldLevel12Unary]	
           99999,                        -- [ASAFieldLevel12Sort]
           'UNK',
           '1900-01-01',
           '9999-12-31 23:59:59.999',
           GETDATE(),
           GETDATE(),
           NULL,
           'A',
           ?
    UNION
    SELECT -2,
           -2,
           'Unknown AccountSubaccountName',
           -2,
           'Unknown AccountName',
           -2,
           'Unknown SubaccountName',
           'Unknown ASATuitionType',
           -1,                           -- [ASAFieldDepth]
           '0000.000000',                -- [ASAFieldLevel1ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel1Name]	
           1,                            -- [ASAFieldLevel1Unary]	
           99999,                        -- [ASAFieldLevel1Sort]
           '0000.000000',                -- [ASAFieldLevel2ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel2Name]	
           1,                            -- [ASAFieldLevel2Unary]	
           99999,                        -- [ASAFieldLevel2Sort]
           '0000.000000',                -- [ASAFieldLevel3ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel3Name]	
           1,                            -- [ASAFieldLevel3Unary]	
           99999,                        -- [ASAFieldLevel3Sort]
           '0000.000000',                -- [ASAFieldLevel4ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel4Name]	
           1,                            -- [ASAFieldLevel4Unary]	
           99999,                        -- [ASAFieldLevel4Sort]
           '0000.000000',                -- [ASAFieldLevel5ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel5Name]	
           1,                            -- [ASAFieldLevel5Unary]	
           99999,                        -- [ASAFieldLevel5Sort]
           '0000.000000',                -- [ASAFieldLevel6ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel6Name]	
           1,                            -- [ASAFieldLevel6Unary]	
           99999,                        -- [ASAFieldLevel6Sort]
           '0000.000000',                -- [ASAFieldLevel7ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel7Name]	
           1,                            -- [ASAFieldLevel7Unary]	
           99999,                        -- [ASAFieldLevel7Sort]
           '0000.000000',                -- [ASAFieldLevel8ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel8Name]	
           1,                            -- [ASAFieldLevel8Unary]	
           99999,                        -- [ASAFieldLevel8Sort]
           '0000.000000',                -- [ASAFieldLevel9ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel9Name]	
           1,                            -- [ASAFieldLevel9Unary]	
           99999,                        -- [ASAFieldLevel9Sort]
           '0000.000000',                -- [ASAFieldLevel10ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
           1,                            -- [ASAFieldLevel10Unary]	
           99999,                        -- [ASAFieldLevel10Sort]
           '0000.000000',                -- [ASAFieldLevel11ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
           1,                            -- [ASAFieldLevel11Unary]	
           99999,                        -- [ASAFieldLevel11Sort]
           '0000.000000',                -- [ASAFieldLevel12ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
           1,                            -- [ASAFieldLevel12Unary]	
           99999,                        -- [ASAFieldLevel12Sort]
           'UNK',
           '1900-01-01',
           '9999-12-31 23:59:59.999',
           GETDATE(),
           GETDATE(),
           NULL,
           'A',
           ?;

    SET IDENTITY_INSERT dbo.DimAccountSubaccount OFF;
END;",1,1,0,0,0,0,1
359,Package\SQL - Insert Seed Rows,"IF EXISTS
( SELECT 1 FROM dbo.DimPartner WHERE PartnerKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimPartner ON;

INSERT INTO [dbo].[DimPartner]
		([PartnerKey]
		,[PartnerID]
		,[PartnerName]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID])
	SELECT-1,
			-1,
			'Unknown PartnerName',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			0
	UNION
	SELECT-2,
			-2,
			'Not Applicable PartnerName',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			0
SET IDENTITY_INSERT dbo.DimPartner OFF;
END;",1,1,0,0,0,0,1
360,Package\SQL - Insert Seed Rows,"IF EXISTS
( SELECT 1 FROM dbo.DimProgram WHERE ProgramKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
             SET IDENTITY_INSERT dbo.DimProgram ON;
             INSERT INTO [dbo].[DimProgram]
             ([ProgramKey],
              [ProgramID],
              [ProgramName],
              [SourceSystem],
              [EffectiveFrom],
              [EffectiveTo],
              [CreatedDate],
              [ModifiedDate],
              [DeletedDate],
              [RowStatus],
              [ETLJobID]
             )
                    SELECT-1,
                          -1,
                          'Unknown Program',
                          'UNK',
                          '1900-01-01 00:00:00.000',
                          '9999-12-31 23:59:59.999',
                          GETDATE(),
                          GETDATE(),
                          NULL,
                         'A',
                         ?
                    UNION
                    SELECT-2,
                          -2,
                          'Not Applicable Program',
	          'UNK',
                          '1900-01-01 00:00:00.000',
                          '9999-12-31 23:59:59.999',
                          GETDATE(),
                          GETDATE(),
                          NULL,
                         'A',
                         ?;
        
                         SET IDENTITY_INSERT dbo.DimProgram OFF;
						 END;

						",1,1,0,0,0,0,1
361,Package\SQL - Insert Seed Rows,"IF EXISTS
( SELECT 1 FROM dbo.DimSession WHERE SessionKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimSession ON;

INSERT INTO [dbo].[DimSession]
		([SessionKey]
		,[SessionID]
		,[SessionName]
		,[SourceSystem]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID])
	SELECT-1,
			-1,
			'Unknown SessionName',
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
	UNION
	SELECT-2,
			-2, 
			'Not Applicable SessionName',
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;

SET IDENTITY_INSERT dbo.DimSession OFF;
END;",1,1,0,0,0,0,1
362,Package\SQL - Insert Seed Rows,"IF EXISTS
( SELECT 1 FROM dbo.DimStudent WHERE StudentKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimStudent ON;

INSERT INTO [dbo].[DimStudent]
		([StudentKey]
		,[StudentID]
		,[StudentFirstName]
		,[StudentLastName]
		,[StudentStatus]
		,[StudentFirstEnrollmentDate]
		,[FiscalWeekNumber]
		,[CSSCenterNumber]
		,[CSSFamilyNumber]
		,[CSSStudentNumber]
		,[SourceSystem]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID]
		,[StudentFullName]
		,[StudentBirthDate])
	SELECT-1,
			-1,
			'Unknown StudentFirstName',
			'Unknown StudentLastName',
			'Unknown StudentStatus',
			'1900-01-01',
			-1,
			-1,
			-1,
			-1,
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?,
			'Unknown Student Name',
			'Unknown Student Birth Date'
	UNION
	SELECT-2,
			-2,
			'Unknown StudentFirstName',
			'Unknown StudentLastName',
			'Unknown StudentStatus',
			'1900-01-01',
			-1,
			-1,
			-1,
			-1,
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?,
			'Unknown Student Name',
			'Unknown Student Birth Date';

SET IDENTITY_INSERT dbo.DimStudent OFF;
END;",1,1,0,0,0,0,1
363,Package\SQL - Insert Seed Rows,"IF EXISTS
( SELECT 1 FROM dbo.DimTier WHERE TierKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimTier ON;

INSERT INTO [dbo].[DimTier]
		([TierKey]
		,[TierID]
		,[TierName]                                
		,[SourceSystem]
                                ,[CSSTierNumber]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID])
	SELECT-1,
			-1,
			'Unknown TierName',
			'UNK',
                                                -1,
                                	'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
	UNION
	SELECT-2,
			-2, 
			'Not Applicable TierName',                                                 
                                                 'UNK',
                                                 -2,
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;

SET IDENTITY_INSERT dbo.DimTier OFF;
END;",1,1,0,0,0,0,1
364,Package\SQL - Insert Seed Rows,"SET IDENTITY_INSERT [dbo].[ReportProfile] ON;
INSERT INTO [dbo].[ReportProfile]
([ReportProfileKey], 
 [ReportProfileID], 
 [ReportProfileName], 
 [ReportProfileLogoImage], 
 [ReportProfileSmallImage], 
 [ReportProfileLegalNoticeDescription], 
 [MartCreatedDate]
)
       SELECT-1, 
             -1, 
             '-1', 
             0x00, 
             0x00, 
             'Unknown Description', 
             GETDATE()
       UNION
       SELECT-2, 
             -2, 
             '-2', 
             0x00, 
             0x00, 
             'Not Applicable Description', 
             GETDATE();
SET IDENTITY_INSERT [dbo].[ReportProfile] OFF;",1,1,0,0,0,0,1
365,Package\SQL - Insert data into DimDtaScenario,"WITH DataScenario
     AS (
     SELECT 1 AS Id,
            'Actual' AS DataScenarioName,
            'Actual' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'A' AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 2 AS Id,
            'Plan' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'B' AS GLActualFlag,
            1101 AS GLBudgetVersionID
     UNION
     SELECT 3 AS Id,
            'Plan Var' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 4 AS Id,
            'Plan Var %' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 5 AS Id,
            'Forecast' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'B' AS GLActualFlag,
            1181 AS GLBudgetVersionID
     UNION
     SELECT 6 AS Id,
            'Forecast Var' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 7 AS Id,
            'Forecast Var %' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 8 AS Id,
            'Target' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 9 AS Id,
            'Target Var' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 10 AS Id,
            'Target Var %' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionIDUNION
     UNION
     SELECT 11 AS Id,
            'LY' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 12 AS Id,
            'LY Var' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 13 AS Id,
            'LY Var %' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID)
     INSERT INTO [dbo].[DimDataScenario]
     ([DataScenarioName],
      [DataScenarioType],
      [DataScenarioSubtype],
      [GLActualFlag],
      [GLBudgetVersionID],
      [EffectiveFrom],
      [EffectiveTo],
      [ETLJobID]
     )
            SELECT COALESCE(DataScenarioName, 'Unknown Scenario') AS DataScenarioName,
                   COALESCE(DataScenarioType, 'Unknown Scenario Type') AS DataScenarioType,
                   COALESCE(DataScenarioSubtype, 'Unknown Scenario Subtype') AS DataScenarioSubtype,
                   GLActualFlag,
                   GLBudgetVersionID,
                   '1900-01-01',
                   '12/31/9999 23:59:59.999',
                   ?
            FROM DataScenario
            ORDER BY Id;
SELECT @@ROWCOUNT + 1 AS SourceCount;
",1,1,0,0,0,0,1
366,Package\SQL - Insert data into DimLifecycleStatus,"SET IDENTITY_INSERT dbo.DimLifecycleStatus ON;

WITH LifecycleStatus
                  AS (
                  SELECT-1 AS LifecycleStatusKey,
                        'Unknown Lifecycle Status' AS LifecycleStatusName,
	        'A' AS RowStatus
                  UNION
                  SELECT-2 AS LifecycleStatusKey,
                        'Not Applicable Lifecycle Status' AS LifecycleStatusName,
	        'A' AS RowStatus
                  UNION
                  SELECT 1 AS LifecycleStatusKey,
                         'Pre-Enrolled (New)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 2 AS LifecycleStatusKey,
                         'Pre-Enrolled (Existing)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 3 AS LifecycleStatusKey,
                         'New' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 4 AS LifecycleStatusKey,
                         'Transferred' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 5 AS LifecycleStatusKey,
                         'Enrolled' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 6 AS LifecycleStatusKey,
                         'Reserved' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 7 AS LifecycleStatusKey,
                         'At-Risk (Disenrollment)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 8 AS LifecycleStatusKey,
                         'At-Risk (A/R)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 9 AS LifecycleStatusKey,
                         'Re-Enrolled (Short Term)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 10 AS LifecycleStatusKey,
                         'Re-Enrolled (Long Term)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 11 AS LifecycleStatusKey,
                         'Withdrawing' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 12 AS LifecycleStatusKey,
                         'Withdrawn' AS LifecycleStatusName,
	         'A' AS RowStatus)
                  INSERT INTO dbo.DimLifecycleStatus
                  ([LifecycleStatusKey],
                   [LifecycleStatusName],
	   [RowStatus],
                   [ETLJobID]
                  )
                         SELECT LifecycleStatusKey,
                                LifecycleStatusName,
                                RowStatus,
		?
                         FROM LifecycleStatus;

SELECT @@ROWCOUNT  AS SourceCount;

SET IDENTITY_INSERT dbo.DimLifecycleStatus OFF;",1,1,0,0,0,0,1
367,Package\SQL - Insert data into DimScheduleWeek,"WITH Numbers(N) -- CTE building the 7 weekday numbers
                  AS (
                  SELECT N
                  FROM(VALUES(1), (2), (3), (4), (5), (6), (7)) Numbers(N)),
                  Recur(N,
                        CalendarID) -- CTE building a combinations of Days per Week as a CalendarID
                  AS (
                  SELECT N,
                         CAST(N AS VARCHAR(1000))
                  FROM Numbers
                  UNION ALL
                  SELECT n.N,
                         CAST(r.CalendarID+','+CAST(n.N AS VARCHAR(10)) AS VARCHAR(1000))
                  FROM Recur r
                       INNER JOIN Numbers n ON n.N > r.N),
                  ScheduleWeekFlags -- CTE building a dataset of 7 flag columns for each days of the week, linking to the CalendarID
                  AS (
                  SELECT CalendarID,
                         CASE
                             WHEN CalendarID LIKE '%1%'
                             THEN '1'
                             ELSE '0'
                         END S,
                         CASE
                             WHEN CalendarID LIKE '%2%'
                             THEN '1'
                             ELSE '0'
                         END M,
                         CASE
                             WHEN CalendarID LIKE '%3%'
                             THEN '1'
                             ELSE '0'
                         END T,
                         CASE
                             WHEN CalendarID LIKE '%4%'
                             THEN '1'
                             ELSE '0'
                         END W,
                         CASE
                             WHEN CalendarID LIKE '%5%'
                             THEN '1'
                             ELSE '0'
                         END TH,
                         CASE
                             WHEN CalendarID LIKE '%6%'
                             THEN '1'
                             ELSE '0'
                         END F,
                         CASE
                             WHEN CalendarID LIKE '%7%'
                             THEN '1'
                             ELSE '0'
                         END SA
                  FROM Recur)
                  INSERT INTO dbo.DimScheduleWeek
                  ([ScheduleWeekName],
                  [RowStatus],
                   [ETLJobID]
                 )
                         SELECT CAST(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(r.CalendarID, '1', 'Su'), '2', 'M'), '3', 'Tu'), '4', 'W'), '5', 'Th'), '6', 'F'), '7', 'Sa') AS VARCHAR(50)) AS ScheduleWeekName,
                                'A' AS RowStatus,
                                ?
                         FROM Recur r
                              JOIN ScheduleWeekFlags s ON r.CalendarID = s.CalendarID
                         ORDER BY LEN(r.CalendarID),
                                  r.CalendarID;
             SELECT @@ROWCOUNT + 2 AS SourceCount;
    
                ",1,1,0,0,0,0,1
368,Package\SQL - InsertCount,"SELECT COUNT(*) AS vInsertCount
FROM dbo.DimSponsor
WHERE ETLJobID = ?",1,1,0,0,0,0,1
369,Package\SQL - InsertCount,"SELECT COUNT(*) AS vInsertCount
FROM dbo.DimStudent 
WHERE ETLJobID = ?",1,1,0,0,0,0,1
370,Package\SQL - InsertCount,SELECT COUNT(1) AS InsertCount FROM dbo.FactPartnerVerifiedSponsor WHERE  CreatedDate>?,1,1,0,0,0,0,1
371,Package\SQL - Load AccountSubaccountLanding,"EXECUTE [spGL_Staging_AccountSubAccountLanding] 
NULL, ? OUTPUT, ? OUTPUT
GO
",2,2,0,0,0,0,2
372,Package\SQL - Onetime History for CompStatus,"/*--------------Comp---------------*/

INSERT INTO [dbo].DimCostCenter
SELECT 
      [CostCenterNumber]
      ,[CostCenterName]
      ,[CompanyID]
      ,[CostCenterTypeID]
      ,[CostCenterTypeName]
      ,[BusinessUnitCode]
      ,[BusinessUnitName]
      ,[OrganizationLevelCode]
      ,[OrganizationLevelName]
      ,[FunctionCode]
      ,[FunctionName]
      ,[LineOfBusinessCode]
      ,[LineOfBusinessName]
      ,[LineOfBusinessCategoryCode]
      ,[LineOfBusinessCategoryName]
      ,[LineOfBusinessSubcategoryCode]
      ,[LineOfBusinessSubcategoryName]
      ,[CCHierarchyLevel1Name]
      ,[CCHierarchyLevel2Name]
      ,[CCHierarchyLevel3Name]
      ,[CCHierarchyLevel4Name]
      ,[CCHierarchyLevel5Name]
      ,[CCHierarchyLevel6Name]
      ,[CCHierarchyLevel7Name]
      ,[CCHierarchyLevel8Name]
      ,[CCHierarchyLevel9Name]
      ,[CCHierarchyLevel10Name]
      ,[CCHierarchyLevel11Name]
      ,[CCOpenDate]
      ,[CCClosedDate]
      ,[CCReopenDate]
      ,[CCReopenDateType]
      ,[CCClassification]
      ,'Active - Non-Comp' AS [CCCompStatus]
      ,[CCStatus]
      ,[CCConsolidation]
      ,[CCFlexAttribute1]
      ,[CCFlexAttribute2]
      ,[CCFlexAttribute3]
      ,[CCFlexAttribute4]
      ,[CCFlexAttribute5]
      ,[OrgID]
      ,[ParentOrgID]
      ,[DefaultLocationID]
      ,[OrgNumber]
      ,[OrgHierarchyLevel1Name]
      ,[OrgHierarchyLevel2Name]
      ,[OrgHierarchyLevel3Name]
      ,[OrgHierarchyLevel4Name]
      ,[OrgHierarchyLevel5Name]
      ,[OrgHierarchyLevel6Name]
      ,[OrgHierarchyLevel7Name]
      ,[OrgHierarchyLevel8Name]
      ,[OrgHierarchyLevel9Name]
      ,[OrgHierarchyLevel10Name]
      ,[OrgHierarchyLevel11Name]
      ,[AllName]
      ,[ExecutiveFunctionName]
      ,[ExecutiveFunctionLeaderName]
      ,[ExecutiveSubFunctionName]
      ,[ExecutiveSubFunctionLeaderName]
      ,[CorporateFunctionName]
      ,[CorporateSubFunctionName]
      ,[DivisionName]
      ,[DivisionLeaderName]
      ,[RegionNumber]
      ,[RegionName]
      ,[RegionLeaderName]
      ,[MarketNumber]
      ,[MarketName]
      ,[MarketLeaderName]
      ,[SubMarketNumber]
      ,[SubMarketName]
      ,[SubMarketLeaderName]
      ,[DistrictNumber]
      ,[DistrictName]
      ,[InterimDistrictNumber]
      ,[InterimDistrictName]
      ,[DistrictLeaderName]
      ,[ActingDistrictLeaderName]
      ,[InterimDistrictLeaderName]
      ,[GroupNumber]
      ,[GroupName]
      ,[GroupLeaderName]
      ,[SubgroupNumber]
      ,[SubGroupName]
      ,[SubGroupLeaderName]
      ,[CampusNumber]
      ,[CampusName]
      ,[CampusLeaderName]
      ,[CenterLeaderName]
      ,[ActingCenterLeaderName]
      ,[CategoryName]
      ,[TypeCode]
      ,[TypeName]
      ,[PartnerGroupCode]
      ,[PartnerGroupName]
      ,[CenterGroupCode]
      ,[CenterGroupName]
      ,[DivisionLegacyName]
      ,[BrandCode]
      ,[BrandName]
      ,[OrgFlexAttribute1]
      ,[OrgFlexAttribute2]
      ,[OrgFlexAttribute3]
      ,[OrgFlexAttribute4]
      ,[OrgFlexAttribute5]
      ,[CenterCMSID]
      ,[CenterCSSID]
      ,[SiteHorizonID]
      ,[CenterEnrollmentSourceSystem]
      ,[CenterCMSMigrationDate]
      ,[CenterCMSMigrationStatus]
      ,[CenterLicensedCapacity]
      ,[CenterBackupCareFlag]
      ,[CenterChildCareSelectFlag]
      ,[CenterPublicAllowedFlag]
      ,[CenterOpenTime]
      ,[CenterCloseTime]
      ,[CenterStudentMinimumAge]
      ,[CenterStudentMaximumAge]
      ,[CenterOpenSunFlag]
      ,[CenterOpenMonFlag]
      ,[CenterOpenTueFlag]
      ,[CenterOpenWedFlag]
      ,[CenterOpenThuFlag]
      ,[CenterOpenFriFlag]
      ,[CenterOpenSatFlag]
      ,[CenterFoodProgramStartDate]
      ,[CenterFoodProgramEndDate]
      ,[CenterRegistrationType]
      ,[SiteSchoolDistrict]
      ,[SiteClassYear]
      ,[CenterURL]
      ,[CenterMenuURL]
      ,[CenterHasBreakfastFlag]
      ,[CenterHasMorningSlackFlag]
      ,[CenterHasLunchFlag]
      ,[CenterHasAfternoonSnackFlag]
      ,[CenterSpeaksASLFlag]
      ,[CenterSpeaksArabicFlag]
      ,[CenterSpeaksFrenchFlag]
      ,[CenterSpeaksGermanFlag]
      ,[CenterSpeaksHindiFlag]
      ,[CenterSpeaksMandarinFlag]
      ,[CenterSpeaksPunjabiFlag]
      ,[CenterSpeaksSpanishFlag]
      ,[CenterSpeaksOtherLanguages]
      ,[CenterAccreditationAgencyCode]
      ,[CenterAccreditationStartDate]
      ,[CenterAccreditationExpirationDate]
      ,[CenterAccreditationNextActivity]
      ,[CenterAccreditationNextActivityDueDate]
      ,[CenterAccreditationPrimaryStatus]
      ,[CenterAccreditationProgramID]
      ,[CenterQRISRating]
      ,[CenterQRISRatingStartDate]
      ,[CenterQRISRatingExpirationDate]
      ,[CenterLatitude]
      ,[CenterLongitude]
      ,[CenterCurrentHumanSigmaScore]
      ,[CenterPreviousHumanSigmaScore]
      ,'1900-01-01 00:00:00.000' AS [EDWEffectiveFrom]
      ,DATEADD(MM, 13, CCOpenDate) AS [EDWEffectiveTo]
      ,GETDATE() AS [EDWCreatedDate]
      ,GETDATE() AS [EDWModifiedDate]
      ,[EDWDeletedDate]
      ,'H' AS [EDWRowStatus]
      ,[ETLJobId] 
  FROM [dbo].[DimCostCenter]
WHERE CCCompStatus = 'Comp'
GO

UPDATE [DimCostCenter]
SET EDWEffectiveFrom = DATEADD(MM, 13, CCOpenDate),
	[EDWModifiedDate] = GETDATE()
WHERE CCCompStatus = 'Comp'
GO

/*--------------Active - Non-Comp---------------*/

INSERT INTO dbo.DimCostCenter
SELECT 
      [CostCenterNumber]
      ,[CostCenterName]
      ,[CompanyID]
      ,[CostCenterTypeID]
      ,[CostCenterTypeName]
      ,[BusinessUnitCode]
      ,[BusinessUnitName]
      ,[OrganizationLevelCode]
      ,[OrganizationLevelName]
      ,[FunctionCode]
      ,[FunctionName]
      ,[LineOfBusinessCode]
      ,[LineOfBusinessName]
      ,[LineOfBusinessCategoryCode]
      ,[LineOfBusinessCategoryName]
      ,[LineOfBusinessSubcategoryCode]
      ,[LineOfBusinessSubcategoryName]
      ,[CCHierarchyLevel1Name]
      ,[CCHierarchyLevel2Name]
      ,[CCHierarchyLevel3Name]
      ,[CCHierarchyLevel4Name]
      ,[CCHierarchyLevel5Name]
      ,[CCHierarchyLevel6Name]
      ,[CCHierarchyLevel7Name]
      ,[CCHierarchyLevel8Name]
      ,[CCHierarchyLevel9Name]
      ,[CCHierarchyLevel10Name]
      ,[CCHierarchyLevel11Name]
      ,[CCOpenDate]
      ,[CCClosedDate]
      ,[CCReopenDate]
      ,[CCReopenDateType]
      ,[CCClassification]
      ,'UnOpened' AS [CCCompStatus]
      ,[CCStatus]
      ,[CCConsolidation]
      ,[CCFlexAttribute1]
      ,[CCFlexAttribute2]
      ,[CCFlexAttribute3]
      ,[CCFlexAttribute4]
      ,[CCFlexAttribute5]
      ,[OrgID]
      ,[ParentOrgID]
      ,[DefaultLocationID]
      ,[OrgNumber]
      ,[OrgHierarchyLevel1Name]
      ,[OrgHierarchyLevel2Name]
      ,[OrgHierarchyLevel3Name]
      ,[OrgHierarchyLevel4Name]
      ,[OrgHierarchyLevel5Name]
      ,[OrgHierarchyLevel6Name]
      ,[OrgHierarchyLevel7Name]
      ,[OrgHierarchyLevel8Name]
      ,[OrgHierarchyLevel9Name]
      ,[OrgHierarchyLevel10Name]
      ,[OrgHierarchyLevel11Name]
      ,[AllName]
      ,[ExecutiveFunctionName]
      ,[ExecutiveFunctionLeaderName]
      ,[ExecutiveSubFunctionName]
      ,[ExecutiveSubFunctionLeaderName]
      ,[CorporateFunctionName]
      ,[CorporateSubFunctionName]
      ,[DivisionName]
      ,[DivisionLeaderName]
      ,[RegionNumber]
      ,[RegionName]
      ,[RegionLeaderName]
      ,[MarketNumber]
      ,[MarketName]
      ,[MarketLeaderName]
      ,[SubMarketNumber]
      ,[SubMarketName]
      ,[SubMarketLeaderName]
      ,[DistrictNumber]
      ,[DistrictName]
      ,[InterimDistrictNumber]
      ,[InterimDistrictName]
      ,[DistrictLeaderName]
      ,[ActingDistrictLeaderName]
      ,[InterimDistrictLeaderName]
      ,[GroupNumber]
      ,[GroupName]
      ,[GroupLeaderName]
      ,[SubgroupNumber]
      ,[SubGroupName]
      ,[SubGroupLeaderName]
      ,[CampusNumber]
      ,[CampusName]
      ,[CampusLeaderName]
      ,[CenterLeaderName]
      ,[ActingCenterLeaderName]
      ,[CategoryName]
      ,[TypeCode]
      ,[TypeName]
      ,[PartnerGroupCode]
      ,[PartnerGroupName]
      ,[CenterGroupCode]
      ,[CenterGroupName]
      ,[DivisionLegacyName]
      ,[BrandCode]
      ,[BrandName]
      ,[OrgFlexAttribute1]
      ,[OrgFlexAttribute2]
      ,[OrgFlexAttribute3]
      ,[OrgFlexAttribute4]
      ,[OrgFlexAttribute5]
      ,[CenterCMSID]
      ,[CenterCSSID]
      ,[SiteHorizonID]
      ,[CenterEnrollmentSourceSystem]
      ,[CenterCMSMigrationDate]
      ,[CenterCMSMigrationStatus]
      ,[CenterLicensedCapacity]
      ,[CenterBackupCareFlag]
      ,[CenterChildCareSelectFlag]
      ,[CenterPublicAllowedFlag]
      ,[CenterOpenTime]
      ,[CenterCloseTime]
      ,[CenterStudentMinimumAge]
      ,[CenterStudentMaximumAge]
      ,[CenterOpenSunFlag]
      ,[CenterOpenMonFlag]
      ,[CenterOpenTueFlag]
      ,[CenterOpenWedFlag]
      ,[CenterOpenThuFlag]
      ,[CenterOpenFriFlag]
      ,[CenterOpenSatFlag]
      ,[CenterFoodProgramStartDate]
      ,[CenterFoodProgramEndDate]
      ,[CenterRegistrationType]
      ,[SiteSchoolDistrict]
      ,[SiteClassYear]
      ,[CenterURL]
      ,[CenterMenuURL]
      ,[CenterHasBreakfastFlag]
      ,[CenterHasMorningSlackFlag]
      ,[CenterHasLunchFlag]
      ,[CenterHasAfternoonSnackFlag]
      ,[CenterSpeaksASLFlag]
      ,[CenterSpeaksArabicFlag]
      ,[CenterSpeaksFrenchFlag]
      ,[CenterSpeaksGermanFlag]
      ,[CenterSpeaksHindiFlag]
      ,[CenterSpeaksMandarinFlag]
      ,[CenterSpeaksPunjabiFlag]
      ,[CenterSpeaksSpanishFlag]
      ,[CenterSpeaksOtherLanguages]
      ,[CenterAccreditationAgencyCode]
      ,[CenterAccreditationStartDate]
      ,[CenterAccreditationExpirationDate]
      ,[CenterAccreditationNextActivity]
      ,[CenterAccreditationNextActivityDueDate]
      ,[CenterAccreditationPrimaryStatus]
      ,[CenterAccreditationProgramID]
      ,[CenterQRISRating]
      ,[CenterQRISRatingStartDate]
      ,[CenterQRISRatingExpirationDate]
      ,[CenterLatitude]
      ,[CenterLongitude]
      ,[CenterCurrentHumanSigmaScore]
      ,[CenterPreviousHumanSigmaScore]
      ,'1900-01-01 00:00:00.000' AS [EDWEffectiveFrom]
      ,CCOpenDate AS [EDWEffectiveTo]
      ,GETDATE() AS [EDWCreatedDate]
      ,GETDATE() AS [EDWModifiedDate]
      ,[EDWDeletedDate]
      ,'H' AS [EDWRowStatus]
      ,[ETLJobId] 
  FROM [dbo].[DimCostCenter]
WHERE CCCompStatus = 'Active - Non-Comp'
GO

UPDATE [DimCostCenter]
SET EDWEffectiveFrom = CCOpenDate,
	[EDWModifiedDate] = GETDATE()
WHERE CCCompStatus = 'Active - Non-Comp'
GO",1,1,0,0,0,0,1
373,Package\SQL - SpDimPartnerLoad,"EXECUTE [dbo].[spDimPartnerLoad] null, null, ?, ? output;",1,1,0,0,0,0,1
374,Package\SQL - SpDimSponsorLoad,"EXECUTE [dbo].[spDimSponsorLoad] null, null, ?, ? output;",1,1,0,0,0,0,1
375,Package\SQL - SpDimStudentLoad,"EXECUTE [dbo].[spDimStudentLoad] null, null, ?, ? output;",1,1,0,0,0,0,1
376,Package\SQL - Start Auditlog,"Execute spBeginAuditLog ? OUTPUT, ?;",1,1,0,0,0,0,1
377,Package\SQL - Start DimDataScenario Auditlog,"Execute spBeginAuditLog ? OUTPUT, ?;",1,1,0,0,0,0,1
378,Package\SQL - Start DimLifecycleStatus Auditlog,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
379,Package\SQL - Start DimScheduleWeek Auditlog,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
380,Package\SQL - Start FactPartnerVerifiedSponsor Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?,?;",1,1,0,0,0,0,1
381,Package\SQL - Start GLPlanAllocation_LaborHoursMeasure Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
382,Package\SQL - Start Package Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",14,14,0,0,0,0,14
383,Package\SQL - Start Report Profile Auditlog,"Execute spBeginAuditLog ? OUTPUT, ?;",1,1,0,0,0,0,1
384,Package\SQL - Start ReportMeasure Auditlog,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
385,Package\SQL - Start the AuditLog for DimMeasure,"Execute spBeginAuditLog ? OUTPUT, ?;",1,1,0,0,0,0,1
386,Package\SQL - Start the AuditLog for DimRetentionBaseWeek,"Execute spBeginAuditLog ? OUTPUT, ?,?;",1,1,0,0,0,0,1
387,Package\SQL - Truncate DimCostCenter,Truncate table DimCostCenter,1,1,0,0,0,0,1
388,Package\SQL - Truncate DimDataScenario, TRUNCATE TABLE dbo.DimDataScenario,1,1,0,0,0,0,1
389,Package\SQL - Truncate DimLifecycleStatus, TRUNCATE TABLE dbo.DimLifecycleStatus,1,1,0,0,0,0,1
390,Package\SQL - Truncate DimMartCostCenter,Truncate table DimMartCostCenter,1,1,0,0,0,0,1
391,Package\SQL - Truncate DimScheduleWeek, TRUNCATE TABLE dbo.DimScheduleWeek,1,1,0,0,0,0,1
392,Package\SQL - Truncate Landing Table,Truncate table DimPartnerLanding,1,1,0,0,0,0,1
393,Package\SQL - Truncate Landing Table,Truncate table DimSponsorLanding,1,1,0,0,0,0,1
394,Package\SQL - Truncate Landing Table,Truncate table DimStudentLanding,1,1,0,0,0,0,1
395,Package\SQL - Truncate ReportMeasure table,TRUNCATE TABLE [dbo].[ReportMeasure],1,1,0,0,0,0,1
396,Package\SQL - Truncate Table, TRUNCATE TABLE dbo.ReportProfile,1,1,0,0,0,0,1
397,Package\SQL - Update EDWETLBatchControl,"UPDATE EDWETLBatchControl
SET LastProcessedDate = ?, Status = 'Success'
WHERE EventName = 'FactProgramDetail'",1,1,0,0,0,0,1
398,Package\SQL - Update FactPartnerVerifiedSponsor,"-------------------------------------------------------------------------------------------------------
UPDATE FCT
SET FCT.PartnerAssignmentEndDate = GETDATE()
  , FCT.ModifiedDate = GETDATE()
  , FCT.Effectiveto = CONVERT(Date, GETDATE())
  , FCT.RowStatus='H'
  ,FCT.ETLJobID=?
FROM DW_Mart.dbo.FactPartnerVerifiedSponsor                    FCT
    JOIN DW_Mart.dbo.DimSponsor                                Spon
        ON FCT.SponsorKey = Spon.SponsorKey
    LEFT JOIN DW_Mart.dbo.DimPartner                           Prtnr
        ON FCT.PartnerKey = Prtnr.PartnerKey
     JOIN DW_Landing.dbo.FactPartnerVerifiedSponsorLanding Ldng
        ON Ldng.SponsorID = Spon.SponsorID
WHERE (COALESCE(Ldng.PartnerID, '-1') <> COALESCE(Prtnr.PartnerID, '-1') OR COALESCE(Ldng.PartnerAssignmentStartDate,'1900-01-01')<>COALESCE(FCT.PartnerAssignmentStartDate,'1900-01-01'))
      AND FCT.PartnerAssignmentEndDate IS NULL  AND FCT.RowStatus='A'
-------------------------------------------------------------------------------------------------------
UPDATE FCT
SET FCT.PartnerVerificationEndDate = GETDATE()
  , FCT.ModifiedDate = GETDATE()
  , FCT.EffectiveTo = CONVERT(Date, GETDATE())
  , FCT.RowStatus='H'
  ,FCT.ETLJobID=?
FROM DW_Mart.dbo.FactPartnerVerifiedSponsor                    FCT
    JOIN DW_Mart.dbo.DimSponsor                                Spon
        ON FCT.SponsorKey = Spon.SponsorKey
    LEFT JOIN DW_Mart.dbo.DimPartner                           Prtnr
        ON FCT.PartnerKey = Prtnr.PartnerKey
     JOIN DW_Landing.dbo.FactPartnerVerifiedSponsorLanding Ldng
        ON Ldng.SponsorID = Spon.SponsorID
WHERE (
          COALESCE(Ldng.PartnerID, '-1') <> COALESCE(Prtnr.PartnerID, '-1')
          OR (Ldng.isPartnerVerified <> FCT.isPartnerVerified)
		  OR(COALESCE(Convert(Date,ldng.PartnerVerificationStartDate),'1900-01-01')<>COALESCE(Convert(Date,Fct.PartnerVerificationStartDate),'1900-01-01')) 
      )
      AND FCT.PartnerVerificationEndDate IS NULL  AND FCT.RowStatus='A'
-------------------------------------------------------------------------------------------------------",1,1,0,0,0,0,1
399,Package\SQL - Update FactProgramDetail from Update table,"DELETE f 
FROM FactProgramDetail f
INNER JOIN FactProgramDetailUpdate u
ON f.ProgramDetailID = u.ProgramDetailID 
AND u.Deleted IS NULL

INSERT INTO FactProgramDetail
SELECT ProgramDetailID, CenterKey, ProgramKey, StudentTeacherRatio, StudentMinimumAgeMonths, StudentMaximumAgeMonths,
EDWCreatedDate, EDWCreatedBy, EDWModifiedDate, EDWModifiedBy, Deleted           
FROM FactProgramDetailUpdate WHERE Deleted IS NULL

SELECT @@ROWCOUNT AS UpdateCount",1,1,0,0,0,0,1
400,Package\SQL - Update Last Processed Date in BaseETLBatchControl,"UPDATE BaseETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = 'GLPlanAllocation_LaborHours'",1,1,0,0,0,0,1
401,Package\SQL - Update LastProcessedDate,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",1,1,0,0,0,0,1
402,Package\SQL - Update Seed Rows,"UPDATE [dbo].[DimAccountSubaccount]
SET [ASAFieldDepth] = -1,                                 -- [ASAFieldDepth]
    [ASAFieldLevel1ID] = '0000.000000',                   -- [ASAFieldLevel1ID]	
    [ASAFieldLevel1Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel1Name]	
    [ASAFieldLevel1Unary] = 1,                            -- [ASAFieldLevel1Unary]	
    [ASAFieldLevel1Sort] = 99999,                         -- [ASAFieldLevel1Sort]
    [ASAFieldLevel2ID] = '0000.000000',                   -- [ASAFieldLevel2ID]	
    [ASAFieldLevel2Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel2Name]	
    [ASAFieldLevel2Unary] = 1,                            -- [ASAFieldLevel2Unary]	
    [ASAFieldLevel2Sort] = 99999,                         -- [ASAFieldLevel2Sort]
    [ASAFieldLevel3ID] = '0000.000000',                   -- [ASAFieldLevel3ID]	
    [ASAFieldLevel3Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel3Name]	
    [ASAFieldLevel3Unary] = 1,                            -- [ASAFieldLevel3Unary]	
    [ASAFieldLevel3Sort] = 99999,                         -- [ASAFieldLevel3Sort]
    [ASAFieldLevel4ID] = '0000.000000',                   -- [ASAFieldLevel4ID]	
    [ASAFieldLevel4Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel4Name]	
    [ASAFieldLevel4Unary] = 1,                            -- [ASAFieldLevel4Unary]	
    [ASAFieldLevel4Sort] = 99999,                         -- [ASAFieldLevel4Sort]
    [ASAFieldLevel5ID] = '0000.000000',                   -- [ASAFieldLevel5ID]	
    [ASAFieldLevel5Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel5Name]	
    [ASAFieldLevel5Unary] = 1,                            -- [ASAFieldLevel5Unary]	
    [ASAFieldLevel5Sort] = 99999,                         -- [ASAFieldLevel5Sort]
    [ASAFieldLevel6ID] = '0000.000000',                   -- [ASAFieldLevel6ID]	
    [ASAFieldLevel6Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel6Name]	
    [ASAFieldLevel6Unary] = 1,                            -- [ASAFieldLevel6Unary]	
    [ASAFieldLevel6Sort] = 99999,                         -- [ASAFieldLevel6Sort]
    [ASAFieldLevel7ID] = '0000.000000',                   -- [ASAFieldLevel7ID]	
    [ASAFieldLevel7Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel7Name]	
    [ASAFieldLevel7Unary] = 1,                            -- [ASAFieldLevel7Unary]	
    [ASAFieldLevel7Sort] = 99999,                         -- [ASAFieldLevel7Sort]
    [ASAFieldLevel8ID] = '0000.000000',                   -- [ASAFieldLevel8ID]	
    [ASAFieldLevel8Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel8Name]	
    [ASAFieldLevel8Unary] = 1,                            -- [ASAFieldLevel8Unary]	
    [ASAFieldLevel8Sort] = 99999,                         -- [ASAFieldLevel8Sort]
    [ASAFieldLevel9ID] = '0000.000000',                   -- [ASAFieldLevel9ID]	
    [ASAFieldLevel9Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel9Name]	
    [ASAFieldLevel9Unary] = 1,                            -- [ASAFieldLevel9Unary]	
    [ASAFieldLevel9Sort] = 99999,                         -- [ASAFieldLevel9Sort]
    [ASAFieldLevel10ID] = '0000.000000',                  -- [ASAFieldLevel10ID]	
    [ASAFieldLevel10Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
    [ASAFieldLevel10Unary] = 1,                           -- [ASAFieldLevel10Unary]	
    [ASAFieldLevel10Sort] = 99999,                        -- [ASAFieldLevel10Sort]
    [ASAFieldLevel11ID] = '0000.000000',                  -- [ASAFieldLevel11ID]	
    [ASAFieldLevel11Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
    [ASAFieldLevel11Unary] = 1,                           -- [ASAFieldLevel11Unary]	
    [ASAFieldLevel11Sort] = 99999,                        -- [ASAFieldLevel11Sort]
    [ASAFieldLevel12ID] = '0000.000000',                  -- [ASAFieldLevel12ID]	
    [ASAFieldLevel12Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
    [ASAFieldLevel12Unary] = 1,                           -- [ASAFieldLevel12Unary]	
    [ASAFieldLevel12Sort] = 99999                         -- [ASAFieldLevel12Sort]
WHERE AccountSubaccountKey = '-1';

UPDATE dbo.DimAccountSubaccount
SET [ASAFieldDepth] = -1,                                 -- [ASAFieldDepth]
    [ASAFieldLevel1ID] = '0000.000000',                   -- [ASAFieldLevel1ID]	
    [ASAFieldLevel1Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel1Name]	
    [ASAFieldLevel1Unary] = 1,                            -- [ASAFieldLevel1Unary]	
    [ASAFieldLevel1Sort] = 99999,                         -- [ASAFieldLevel1Sort]
    [ASAFieldLevel2ID] = '0000.000000',                   -- [ASAFieldLevel2ID]	
    [ASAFieldLevel2Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel2Name]	
    [ASAFieldLevel2Unary] = 1,                            -- [ASAFieldLevel2Unary]	
    [ASAFieldLevel2Sort] = 99999,                         -- [ASAFieldLevel2Sort]
    [ASAFieldLevel3ID] = '0000.000000',                   -- [ASAFieldLevel3ID]	
    [ASAFieldLevel3Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel3Name]	
    [ASAFieldLevel3Unary] = 1,                            -- [ASAFieldLevel3Unary]	
    [ASAFieldLevel3Sort] = 99999,                         -- [ASAFieldLevel3Sort]
    [ASAFieldLevel4ID] = '0000.000000',                   -- [ASAFieldLevel4ID]	
    [ASAFieldLevel4Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel4Name]	
    [ASAFieldLevel4Unary] = 1,                            -- [ASAFieldLevel4Unary]	
    [ASAFieldLevel4Sort] = 99999,                         -- [ASAFieldLevel4Sort]
    [ASAFieldLevel5ID] = '0000.000000',                   -- [ASAFieldLevel5ID]	
    [ASAFieldLevel5Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel5Name]	
    [ASAFieldLevel5Unary] = 1,                            -- [ASAFieldLevel5Unary]	
    [ASAFieldLevel5Sort] = 99999,                         -- [ASAFieldLevel5Sort]
    [ASAFieldLevel6ID] = '0000.000000',                   -- [ASAFieldLevel6ID]	
    [ASAFieldLevel6Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel6Name]	
    [ASAFieldLevel6Unary] = 1,                            -- [ASAFieldLevel6Unary]	
    [ASAFieldLevel6Sort] = 99999,                         -- [ASAFieldLevel6Sort]
    [ASAFieldLevel7ID] = '0000.000000',                   -- [ASAFieldLevel7ID]	
    [ASAFieldLevel7Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel7Name]	
    [ASAFieldLevel7Unary] = 1,                            -- [ASAFieldLevel7Unary]	
    [ASAFieldLevel7Sort] = 99999,                         -- [ASAFieldLevel7Sort]
    [ASAFieldLevel8ID] = '0000.000000',                   -- [ASAFieldLevel8ID]	
    [ASAFieldLevel8Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel8Name]	
    [ASAFieldLevel8Unary] = 1,                            -- [ASAFieldLevel8Unary]	
    [ASAFieldLevel8Sort] = 99999,                         -- [ASAFieldLevel8Sort]
    [ASAFieldLevel9ID] = '0000.000000',                   -- [ASAFieldLevel9ID]	
    [ASAFieldLevel9Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel9Name]	
    [ASAFieldLevel9Unary] = 1,                            -- [ASAFieldLevel9Unary]	
    [ASAFieldLevel9Sort] = 99999,                         -- [ASAFieldLevel9Sort]
    [ASAFieldLevel10ID] = '0000.000000',                  -- [ASAFieldLevel10ID]	
    [ASAFieldLevel10Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
    [ASAFieldLevel10Unary] = 1,                           -- [ASAFieldLevel10Unary]	
    [ASAFieldLevel10Sort] = 99999,                        -- [ASAFieldLevel10Sort]
    [ASAFieldLevel11ID] = '0000.000000',                  -- [ASAFieldLevel11ID]	
    [ASAFieldLevel11Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
    [ASAFieldLevel11Unary] = 1,                           -- [ASAFieldLevel11Unary]	
    [ASAFieldLevel11Sort] = 99999,                        -- [ASAFieldLevel11Sort]
    [ASAFieldLevel12ID] = '0000.000000',                  -- [ASAFieldLevel12ID]	
    [ASAFieldLevel12Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
    [ASAFieldLevel12Unary] = 1,                           -- [ASAFieldLevel12Unary]	
    [ASAFieldLevel12Sort] = 99999                         -- [ASAFieldLevel12Sort]
WHERE AccountSubaccountKey = '-2';",1,1,0,0,0,0,1
403,Package\SQL - Update in FactProgramDetail for Deleted Records,"UPDATE dest 
SET	dest.Deleted =  upd.Deleted
   ,dest.EDWModifiedDate = upd.Deleted
FROM FactProgramDetail dest
INNER JOIN FactProgramDetailUpdate upd
ON dest.ProgramDetailID = upd.ProgramDetailID
AND upd.Deleted IS NOT NULL

SELECT @@ROWCOUNT AS DeleteCount",1,1,0,0,0,0,1
404,Package\SQL - Update the EffectiveFrom,"UPDATE A
SET A.EDWEffectiveFrom = B.EDWEffectiveTo
FROM DW_MART..DimCostCenter A
    INNER JOIN
    (
        SELECT *
        FROM
        (
            SELECT *,
                   ROW_NUMBER() OVER (PARTITION BY B.CostCenterNumber ORDER BY B.EDWEffectiveTo DESC) AS RW
            FROM DW_MART..DimCostCenter B
            WHERE B.CostCenterNumber IN
                  (
                      SELECT CostCenterNumber
                      FROM DW_MART..DimCostCenter
                      WHERE EDWEffectiveFrom = '1900-01-01 00:00:00.000'
                      GROUP BY CostCenterNumber
                      HAVING COUNT(1) > 1
                  )
                  AND B.EDWRowStatus = 'H'
        ) A
        WHERE A.RW = 1
    ) B
        ON A.CostCenterNumber = B.CostCenterNumber
           AND A.EDWEffectiveFrom = '1900-01-01 00:00:00.000'
           AND A.EDWEffectiveTo = '9999-12-31 23:59:59.999';
",1,1,0,0,0,0,1
405,Package\SQL - UpdateCount,SELECT COUNT(1) AS UpdateCount FROM dbo.FactPartnerVerifiedSponsor WHERE CreatedDate<>ModifiedDate AND ModifiedDate>?,1,1,0,0,0,0,1
406,Package\SQL - Upsert Mart ReportMeasure,"DECLARE @SummaryOfChanges TABLE (Change VARCHAR(20));
DECLARE @InsertCount INT,
		@UpdateCount INT,
		@DeleteCount INT;

MERGE [DW_Mart].[dbo].[ReportMeasure] AS [T]
USING (
	SELECT
		[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
		[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
	FROM [DW_Landing].[dbo].[ReportMeasure]
) AS [S]
	(
		[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
		[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
	)
	ON
		[T].[ReportID] = [S].[ReportID]
		AND [T].[MeasureOrder] = [S].[MeasureOrder]
		AND [T].[MeasureLabel] = [S].[MeasureLabel]
WHEN MATCHED
	THEN
		UPDATE
			SET [ReportName] = [S].[ReportName],
				[MeasureName] = [S].[MeasureName],
				[NumberFormat] = [S].[NumberFormat],
				[IsHeader] = [S].[IsHeader],
				[PageOrder] = [S].[PageOrder],
				[PageName] = [S].[PageName],
				[HasRightBorder] = [S].[HasRightBorder],
				[Font] = [S].[Font],
				[PlanDisplay] = [S].[PlanDisplay],
				[PlanVarDisplay] = [S].[PlanVarDisplay],
				[PlanVarPctDisplay] = [S].[PlanVarPctDisplay],
				[LYDisplay] = [S].[LYDisplay],
				[LYVarDisplay] = [S].[LYVarDisplay],
				[LYVarPctDisplay] = [S].[LYVarPctDisplay],
				[ActualToDateDisplay] = [S].[ActualToDateDisplay],
				[PlanVarInverse] = [S].[PlanVarInverse],
				[LYVarInverse] = [S].[LYVarInverse],
				[AbsDivisor] = [S].[AbsDivisor],
				[TargetForPlan] = [S].[TargetForPlan]

WHEN NOT MATCHED BY TARGET
	THEN
		INSERT (
			[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
			[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
		)
		VALUES (
			[S].[ReportID], [S].[ReportName], [S].[MeasureOrder], [S].[MeasureLabel], [S].[MeasureName], [S].[NumberFormat], [S].[IsHeader], [S].[PageOrder], [S].[PageName], [S].[HasRightBorder], [S].[Font],
			[S].[PlanDisplay], [S].[PlanVarDisplay], [S].[PlanVarPctDisplay], [S].[LYDisplay], [S].[LYVarDisplay], [S].[LYVarPctDisplay], [S].[ActualToDateDisplay], [S].[PlanVarInverse], [S].[LYVarInverse],
			[S].[AbsDivisor], [S].[TargetForPlan], GETDATE()
		)
WHEN NOT MATCHED BY SOURCE
	THEN
		DELETE
OUTPUT $action
INTO @SummaryOfChanges;

SELECT @InsertCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'INSERT';
SELECT @UpdateCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'UPDATE';
SELECT @DeleteCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'DELETE';

SELECT
	@InsertCount AS [InsertCount],
	@UpdateCount AS [UpdateCount],
	@DeleteCount AS [DeleteCount];",1,1,0,0,0,0,1
407,Package\SQL - spGL_StagingToEDW_DimAccountSubAccount,EXEC dbo.spGL_StagingToEDW_DimAccountSubAccount,1,1,0,0,0,0,1
408,Package\SQL - spGL_StagingToEDW_DimCostCenter,EXEC dbo.spGL_StagingToEDW_DimCostCenter,1,1,0,0,0,0,1
409,Package\STATIC and FOUNDATION Dimensions\EDW Dimension Package Start\SQL - EDW Dimension Package Start,"INSERT INTO dbo.EDWAuditLog 
(StartTime,
 StatusCode,
 StatusName,
 TaskName,
 EndTime
)
VALUES
(GETDATE(),
 1,
 'Completed',
 'EDW Dimension BNG-1262 - 2/26/2018',
 GETDATE()
);",1,1,0,0,0,0,1
410,Package\STATIC and FOUNDATION Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions\SQL - spGL_StagingToEDW_DimDate,EXEC dbo.spGL_StagingToEDW_DimDate,2,2,0,0,0,0,2
411,Package\STATIC and FOUNDATION Dimensions\StagingToEDW Static Dimension Loads\SQL - Dimension Static Data,EXEC dbo.spBING_EDW_Build_DimensionStaticData,2,2,0,0,0,0,2
412,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARParent0to7Days_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
413,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARParent0to7Days_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
414,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
415,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
416,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
417,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
418,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARParent8to14Days_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
419,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARParent8to14Days_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
420,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
421,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
422,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
423,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
424,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARParent_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
425,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARParent_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
426,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
427,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
428,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
429,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
430,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARParentover30Days_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
431,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARParentover30Days_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
432,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
433,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
434,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
435,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
436,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARPrepay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
437,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARPrepay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
438,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
439,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
440,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
441,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
442,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARStaff_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
443,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARStaff_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
444,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
445,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
446,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
447,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
448,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARSubsidyOver90Days_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
449,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARSubsidyOver90Days_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
450,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
451,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
452,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
453,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
454,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARSubsidyOver90DayswARParent_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
455,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARSubsidyOver90DayswARParent_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
456,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
457,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
458,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
459,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
460,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARSubsidyUnder90Days_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
461,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARSubsidyUnder90Days_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
462,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
463,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
464,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
465,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
466,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
467,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
468,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
469,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
470,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
471,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
472,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\SQL - End AR_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
473,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\SQL - Start AR_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
474,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
475,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
476,Package\Seq - ARBalance Measures\Seq - AR_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
477,Package\Seq - ARBalance Measures\Seq - AR_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
478,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAR_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
479,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAR_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
480,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
481,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
482,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
483,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
484,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
485,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildCare Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
486,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
487,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
488,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
489,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",1,1,0,0,0,0,1
490,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursPerFTEPlan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
491,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursPerFTEPlan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
492,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
493,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
494,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",1,1,0,0,0,0,1
495,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursPerFTETarget Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
496,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursPerFTETarget Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
497,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target'
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
498,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
499,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",1,1,0,0,0,0,1
500,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
501,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildCare Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
502,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
503,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
504,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
505,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\SQL - Get List Of Weeks to Process,"   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]


  Union

  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber
",1,1,0,0,0,0,1
506,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryPctNetRevenuePlan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
507,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryPctNetRevenuePlan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
508,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
509,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
510,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]


  Union

  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
511,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedWageRateBase_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
512,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedWageRateBase_plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
513,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
514,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
515,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",1,1,0,0,0,0,1
516,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedWageRateBase_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
517,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedWageRateBaseTarget Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
518,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target'
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
519,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
520,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",1,1,0,0,0,0,1
521,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\SQL - End BaseWeekStudents_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
522,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\SQL - Start BaseWeekStudents_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
523,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
524,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
525,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
526,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
527,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\SQL - End InquirytoNSE_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
528,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start InquirytoNSE_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
529,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
530,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
531,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
532,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",1,1,0,0,0,0,1
533,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
534,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourperFTE_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
535,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
536,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
537,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
538,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",1,1,0,0,0,0,1
539,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
540,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourPerFTE_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
541,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
542,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
543,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
  Union
  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
544,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
545,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourPerFTE_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
546,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
547,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
548,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION

   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
549,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPctNetRevenue_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
550,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryPctNetRevenue_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
551,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
552,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
553,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
554,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]


  Union

  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
555,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPctNetRevenue_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
556,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Labor Salary Pct Net Revenue_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
557,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
558,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
559,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\SQL - Get List Of Weeks to Process,"
 SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber
",1,1,0,0,0,0,1
560,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\SQL - End NSE_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
561,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NSE_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
562,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
563,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
564,Package\Seq - Calculated Measures\Seq - NSE_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
565,Package\Seq - Calculated Measures\Seq - NSE_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   UNION 
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM CMS_Staging.dbo.enrlScheduleDay AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.EffectiveDate = d.FullDate
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].StgModifiedDate > ?
   AND f.EffectiveDate BETWEEN '2011-01-01' AND GETDATE()
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
     ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
566,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRatePrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
567,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRatePrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
568,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
569,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
570,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
571,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
572,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRatePrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
573,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRatePrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
574,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
575,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
576,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
577,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRateSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
578,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRateSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
579,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
580,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
581,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
582,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
583,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRateSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
584,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRateSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
585,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
586,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
587,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
588,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRate_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
589,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRate_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
590,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
591,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
592,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
593,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
594,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRate_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
595,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRate_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
596,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
597,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
598,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
599,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\SQL - End Occupancy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
600,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Occupancy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
601,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
602,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
603,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
604,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
605,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\SQL - End Occupancy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
606,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start Occupancy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
607,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
608,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
609,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
  Union

  SELECT	  d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactCenterStatSnapshot (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
ON f.[FiscalWeekEndDateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]

UNION

SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactCenterStatSnapshot (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
	ON f.[FiscalWeekEndDateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
	ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
	AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
	AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [d].[FiscalWeekNumber] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]
ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
610,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\SQL - End StudentRetention_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
611,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\SQL - Start StudentRetention_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
612,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
613,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
614,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
615,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
616,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\SQL - End TourstoNSE_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
617,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TourstoNSE_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
618,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
619,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
620,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
621,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
622,Package\Seq - Calculated Measures\SpPopulateNSESupport,EXEC [dbo].[SpPopulateNSESupport]   @DebugMode =1,1,1,0,0,0,0,1
623,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFivesPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
624,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFivesPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
625,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
626,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
627,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
628,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
629,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFivesSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
630,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFivesSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
631,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
632,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
633,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
634,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
635,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFives_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
636,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFives_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
637,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
638,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
639,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
640,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
641,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFoursPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
642,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFoursPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
643,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
644,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
645,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
646,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
647,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFoursSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
648,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFoursSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
649,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
650,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
651,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
652,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
653,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFours_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
654,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFours_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
655,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
656,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
657,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
658,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
659,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropInPP_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
660,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropInPP_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
661,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
662,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
663,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
664,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
665,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropInSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
666,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropInSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
667,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
668,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
669,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
670,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
671,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropIn_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
672,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropIn_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
673,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
674,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
675,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
676,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
677,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfantPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
678,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfantPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
679,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
680,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
681,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
682,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
683,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfantSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
684,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfantSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
685,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
686,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
687,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
688,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
689,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfant_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
690,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfant_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
691,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
692,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
693,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
694,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
695,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergartenPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
696,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergartenPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
697,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
698,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
699,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
700,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
701,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergartenSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
702,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergartenSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
703,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
704,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
705,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
706,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
707,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergarten_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
708,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergarten_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
709,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
710,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
711,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
712,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
713,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiagePrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
714,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiagePrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
715,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
716,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
717,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
718,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
719,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiageSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
720,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiageSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
721,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
722,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
723,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
724,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
725,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiage_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
726,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiage_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
727,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
728,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
729,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
730,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
731,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
732,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
733,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
734,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
735,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
736,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
737,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAgePP_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
738,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAgePP_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
739,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
740,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
741,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
742,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
743,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAgeSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
744,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAgeSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
745,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
746,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
747,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
748,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
749,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAge_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
750,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAge_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
751,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
752,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
753,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
754,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
755,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
756,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
757,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
758,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
759,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
760,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
761,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumThreesPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
762,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThreesPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
763,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
764,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
765,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
766,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
767,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumThreesSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
768,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThreesSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
769,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
770,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
771,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
772,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
773,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumThrees_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
774,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThrees_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
775,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
776,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
777,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
778,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
779,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddlerPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
780,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddlerPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
781,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
782,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
783,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
784,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
785,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddlerSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
786,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddlerSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
787,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
788,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
789,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
790,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
791,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddler_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
792,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddler_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
793,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
794,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
795,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
796,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
797,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwosPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
798,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwosPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
799,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
800,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
801,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
802,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
803,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwosSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
804,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwosSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
805,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
806,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
807,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
808,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
809,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwos_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
810,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwos_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
811,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
812,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
813,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
814,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
815,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESum_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
816,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESum_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
817,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
818,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
819,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
820,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
821,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
822,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvgPP_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
823,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
824,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
825,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
826,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
827,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTEWeeklyAvgSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
828,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvgSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
829,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
830,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
831,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
832,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
833,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTEWeeklyAvg_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
834,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeekly_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
835,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
836,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
837,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
838,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
839,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
840,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourperFTE_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
841,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
842,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
843,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
844,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
845,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\SQL - End Occupancy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
846,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Occupancy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
847,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
848,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
849,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
850,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
851,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFivesPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
852,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFivesPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
853,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
854,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
855,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
856,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFivesSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
857,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFivesSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
858,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
859,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
860,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
861,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFives_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
862,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFives_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
863,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
864,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
865,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
866,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFoursPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
867,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFoursPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
868,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
869,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
870,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
871,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFoursSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
872,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFoursSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
873,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
874,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
875,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
876,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFours_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
877,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFours_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
878,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
879,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
880,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
881,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropInPP_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
882,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropInPP_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
883,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
884,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
885,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
886,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropInSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
887,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropInSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
888,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
889,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
890,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
891,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropIn_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
892,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropIn_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
893,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
894,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
895,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
896,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfantPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
897,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfantPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
898,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
899,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
900,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
901,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfantSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
902,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfantSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
903,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
904,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
905,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
906,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfant_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
907,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfant_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
908,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
909,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
910,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
911,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergartenPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
912,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergartenPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
913,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
914,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
915,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
916,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergartenSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
917,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergartenSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
918,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
919,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
920,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
921,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergarten_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
922,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergarten_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
923,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
924,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
925,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
926,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiagePrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
927,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiagePrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
928,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
929,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
930,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
931,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiageSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
932,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiageSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
933,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
934,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
935,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
936,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiage_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
937,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiage_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
938,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
939,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
940,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
941,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
942,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
943,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
944,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
945,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
946,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAgePP_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
947,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAgePP_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
948,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
949,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
950,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
951,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAgeSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
952,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAgeSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
953,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
954,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
955,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
956,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAge_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
957,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAge_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
958,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
959,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
960,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
961,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
962,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
963,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
964,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
965,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
966,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumThreesPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
967,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThreesPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
968,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
969,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
970,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
971,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumThreesSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
972,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThreesSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
973,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
974,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
975,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
976,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumThrees_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
977,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThrees_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
978,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
979,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
980,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
981,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddlerPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
982,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddlerPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
983,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
984,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
985,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
986,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddlerSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
987,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddlerSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
988,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
989,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
990,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
991,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddler_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
992,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddler_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
993,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
994,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
995,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
996,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwosPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
997,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwosPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
998,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
999,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1000,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1001,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwosSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1002,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwosSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1003,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1004,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1005,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1006,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwos_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1007,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwos_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1008,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1009,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1010,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1011,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESum_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1012,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESum_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1013,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1014,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1015,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1016,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTEWeeklyAvgPP_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1017,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvgPP_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1018,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1019,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1020,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1021,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTEWeeklyAvgSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1022,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvgSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1023,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1024,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1025,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1026,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESum_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1027,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvg_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1028,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1029,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1030,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1031,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1032,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourPerFTE_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1033,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1034,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1035,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1036,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1037,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourPerFTE_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1038,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1039,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1040,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1041,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\SQL - End Occupancy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1042,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start Occupancy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1043,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1044,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1045,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1046,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcare_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1047,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcare_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1048,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1049,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1050,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1051,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursManagementAndAdmin_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1052,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursManagementAndAdmin_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1053,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1054,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1055,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1056,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperating_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1057,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperating_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1058,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1059,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1060,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1061,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOvertime_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1062,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOvertime_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1063,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1064,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1065,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1066,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursRegulare_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1067,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursRegular_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1068,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1069,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1070,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1071,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsMemo_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1072,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsMemo_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1073,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1074,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1075,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1076,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalDirect_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1077,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalDirect_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1078,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1079,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1080,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1081,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalFringeBenefits_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1082,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalFringeBenefits_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1083,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1084,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1085,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1086,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalSalariesandFringeBenefits_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1087,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalSalariesandFringeBenefits_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1088,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1089,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1090,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1091,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTraining_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1092,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTraining_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1093,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1094,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1095,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1096,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1097,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHours_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1098,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1099,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1100,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1101,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildcare_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1102,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildcare_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1103,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1104,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1105,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1106,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursRegulare_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1107,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursRegular_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1108,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1109,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1110,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1111,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHours_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1112,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHours_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1113,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1114,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1115,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1116,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborHours_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1117,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborHours_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1118,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1119,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1120,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1121,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcareOvertime_Plan  Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1122,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcareOvertime_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1123,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1124,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1125,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1126,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcareRegular_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1127,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcareRegular_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1128,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1129,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1130,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1131,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcare_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1132,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcare_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1133,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1134,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1135,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1136,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryManagementAndAdmin_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1137,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryManagementAndAdmin_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1138,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1139,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1140,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1141,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingOvertime_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1142,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingOvertime_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1143,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1144,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1145,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1146,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingRegular_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1147,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingRegular_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1148,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1149,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1150,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1151,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperating_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1152,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperating_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1153,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1154,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1155,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1156,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOvertime_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1157,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOvertime_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1158,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1159,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1160,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1161,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPaidTimeOff_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1162,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryPaidTimeOff_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1163,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1164,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1165,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1166,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryRegular_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1167,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryRegular_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1168,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1169,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1170,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1171,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsOvertime_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1172,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsOvertime_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1173,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1174,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1175,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1176,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsRegular_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1177,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsRegular_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1178,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1179,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1180,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1181,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialPrograms_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1182,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialPrograms_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1183,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1184,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1185,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1186,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalDirect_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1187,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalDirect_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1188,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1189,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1190,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1191,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalFringeBenefits_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1192,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalFringeBenefits_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1193,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1194,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1195,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1196,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalSalariesandFringeBenefits_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1197,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalSalariesandFringeBenefits_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1198,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1199,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1200,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1201,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingOvertime_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1202,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingOvertime_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1203,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1204,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1205,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1206,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingRegular_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1207,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingRegular_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1208,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1209,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1210,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1211,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTraining_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1212,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTraining_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1213,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1214,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1215,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1216,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalary_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1217,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalary_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1218,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1219,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1220,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1221,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalariesOvertimePremium_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1222,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalariesOvertimePremium_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1223,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1224,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1225,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1226,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryChildcare_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1227,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryChildcare_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1228,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1229,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1230,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1231,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryOperating_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1232,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryOperating_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1233,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1234,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1235,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1236,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryRegular_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1237,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryRegular_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1238,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1239,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1240,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1241,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalarySpecialPrograms_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1242,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalarySpecialPrograms_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1243,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1244,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1245,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1246,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryTraining_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1247,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryTraining_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1248,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1249,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1250,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1251,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalary_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1252,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalary_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1253,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1254,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1255,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1256,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborSalaries_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1257,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborSalaries_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1258,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1259,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1260,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1261,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\SQL - End BadDebt_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1262,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\SQL - Start BadDebt_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1263,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1264,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1265,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1266,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\SQL - End ChargeOffAverage_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1267,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ChargeOffAverage_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1268,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1269,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1270,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1271,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\SQL - End ChargeOff_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1272,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ChargeOff_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1273,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1274,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1275,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1276,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountCareSelect_Plan,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1277,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountCareSelect_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1278,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1279,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1280,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1281,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountClosedCenterPriceMatch_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1282,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountClosedCenterPriceMatch_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1283,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1284,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1285,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1286,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountDMApproved_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1287,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDMApproved_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1288,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1289,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1290,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1291,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionaryPctTuitionPP_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1292,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionaryPctTuitionPP_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1293,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1294,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1295,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1296,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionaryPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1297,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionaryPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1298,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1299,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1300,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1301,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionary_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1302,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionary_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1303,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1304,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1305,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1306,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountFamily_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1307,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFamily_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1308,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1309,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1310,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1311,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountFees_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1312,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFees_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1313,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1314,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1315,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1316,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountFreeDay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1317,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFreeDay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1318,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1319,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1320,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1321,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountGiftOfEducation_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1322,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountGiftOfEducation_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1323,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1324,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1325,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1326,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountNationalMarketing_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1327,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountNationalMarketing_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1328,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1329,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1330,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1331,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountNationalTuition_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1332,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountNationalTuition_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1333,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1334,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1335,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1336,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountOther_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1337,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountOther_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1338,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1339,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1340,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1341,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountPPPctTuitionPP_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1342,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPPPctTuitionPP_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1343,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1344,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1345,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1346,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountPrimary_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1347,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPrimary_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1348,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1349,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1350,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1351,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1352,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1353,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1354,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1355,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1356,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountPromotion_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1357,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPromotion_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1358,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1359,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1360,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1361,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountReferral_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1362,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountReferral_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1363,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1364,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1365,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1366,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountSpecialPrograms_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1367,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSpecialPrograms_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1368,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1369,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1370,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1371,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountStaff_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1372,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountStaff_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1373,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1374,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1375,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1376,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountSubsidyPctTuitionSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1377,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSubsidyPctTuitionSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1378,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1379,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1380,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1381,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1382,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1383,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1384,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1385,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1386,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountTieredTuition_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1387,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTieredTuition_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1388,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1389,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1390,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1391,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotalTuitionPctTuition_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1392,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotalTuitionPctTuition_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1393,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1394,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1395,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1396,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotalTuition_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1397,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotalTuition_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1398,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1399,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1400,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1401,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotal_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1402,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotal_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1403,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1404,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1405,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1406,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\SQL - End FeesEducation_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1407,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FeesEducation_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1408,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1409,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1410,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1411,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\SQL - End FeesRegistration_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1412,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FeesRegistration_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1413,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1414,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1415,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1416,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\SQL - End FeesReservation_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1417,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FeesReservation_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1418,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1419,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1420,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1421,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End FeesRevenue_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1422,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FeesRevenue_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1423,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1424,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1425,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1426,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPctNetRevenue_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1427,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Labor Salary Pct Net Revenue_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1428,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1429,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1430,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1431,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRatePrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1432,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRatePrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1433,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1434,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1435,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1436,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRateSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1437,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRateSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1438,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1439,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1440,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1441,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRate_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1442,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRate_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1443,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1444,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1445,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1446,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetFees_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1447,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetFees_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1448,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1449,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1450,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1451,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetRevenue_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1452,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetRevenue_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1453,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1454,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1455,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1456,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetSpecialPrograms_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1457,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetSpecialPrograms_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1458,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1459,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1460,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1461,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetTuitionPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1462,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetTuitionPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1463,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1464,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1465,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1466,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetTuitionSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1467,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetTuitionSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1468,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1469,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1470,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1471,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetTuition_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1472,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetTuition_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1473,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1474,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1475,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1476,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\SQL - End Recovery_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1477,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\SQL - Start Recovery_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1478,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1479,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1480,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1481,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueActivities_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1482,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueActivities_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1483,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1484,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1485,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1486,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueEPManagementFee_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1487,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueEPManagementFee_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1488,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1489,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1490,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1491,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueFieldTrips_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1492,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueFieldTrips_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1493,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1494,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1495,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1496,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueHeadStart_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1497,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueHeadStart_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1498,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1499,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1500,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1501,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueKLCStore_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1502,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueKLCStore_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1503,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1504,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1505,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1506,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueLatePayment_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1507,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueLatePayment_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1508,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1509,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1510,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1511,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueLatePickup_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1512,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueLatePickup_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1513,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1514,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1515,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1516,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueMiscandOther_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1517,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueMiscandOther_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1518,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1519,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1520,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1521,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueNationalAccounts_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1522,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueNationalAccounts_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1523,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1524,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1525,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1526,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueOther_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1527,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueOther_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1528,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1529,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1530,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1531,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenuePrimary_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1532,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenuePrimary_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1533,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1534,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1535,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1536,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueSpecialServices_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1537,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueSpecialServices_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1538,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1539,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1540,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1541,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\SQL - End TotalMiscellaneousIncome_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1542,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TotalMiscellaneousIncome_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1543,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1544,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1545,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1546,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\SQL - End TotalNetMiscAndOtherRevenues_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1547,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TotalNetMiscAndOtherRevenues_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1548,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1549,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1550,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1551,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustmentsPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1552,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustmentsPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1553,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1554,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1555,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1556,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustmentsSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1557,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustmentsSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1558,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1559,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1560,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1561,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustments_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1562,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustments_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1563,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1564,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1565,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1566,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionDiscount_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1567,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionDiscount_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1568,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1569,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1570,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1571,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFivesPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1572,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFivesPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1573,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1574,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1575,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1576,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFivesSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1577,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFivesSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1578,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1579,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1580,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1581,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFives_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1582,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFives_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1583,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1584,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1585,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1586,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFoursPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1587,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFoursPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1588,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1589,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1590,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1591,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFoursSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1592,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFoursSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1593,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1594,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1595,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1596,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFours_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1597,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFours_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1598,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1599,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1600,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1601,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropInPP_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1602,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropInPP_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1603,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1604,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1605,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1606,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropInSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1607,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropInSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1608,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1609,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1610,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1611,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropIn_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1612,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropIn_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1613,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1614,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1615,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1616,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfantPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1617,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfantPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1618,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1619,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1620,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1621,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfantSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1622,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfantSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1623,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1624,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1625,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1626,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfant_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1627,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfant_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1628,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1629,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1630,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1631,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergartenPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1632,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergartenPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1633,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1634,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1635,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1636,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergartenSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1637,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergartenSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1638,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1639,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1640,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1641,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergarten_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1642,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergarten_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1643,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1644,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1645,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1646,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiagePrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1647,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiagePrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1648,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1649,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1650,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1651,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiageSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1652,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiageSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1653,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1654,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1655,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1656,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiage_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1657,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiage_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1658,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1659,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1660,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1661,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolagePrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1662,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolagePrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1663,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1664,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1665,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1666,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolageSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1667,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolageSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1668,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1669,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1670,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1671,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolage_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1672,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolage_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1673,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1674,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1675,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1676,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionSpecialPrograms_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1677,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSpecialPrograms_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1678,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1679,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1680,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1681,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionThreesPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1682,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThreesPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1683,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1684,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1685,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1686,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionThreesSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1687,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThreesSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1688,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1689,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1690,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1691,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionThrees_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1692,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThrees_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1693,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1694,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1695,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1696,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddlerPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1697,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddlerPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1698,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1699,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1700,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1701,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddlerSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1702,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddlerSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1703,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1704,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1705,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1706,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddler_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1707,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddler_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1708,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1709,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1710,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1711,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotalPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1712,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotalPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1713,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1714,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1715,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1716,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotalSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1717,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotalSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1718,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1719,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1720,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1721,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotal_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1722,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotal_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1723,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1724,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1725,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1726,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwosPrivatePay_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1727,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwosPrivatePay_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1728,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1729,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1730,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1731,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwosSubsidy_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1732,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwosSubsidy_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1733,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1734,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1735,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1736,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwos_Plan Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1737,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwos_Plan Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1738,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1739,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1740,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1741,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursRegular Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1742,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursRegular Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1743,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1744,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1745,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1746,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1747,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryRegular Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1748,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryRegular Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1749,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1750,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1751,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1752,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1753,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHours Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1754,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHours Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1755,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1756,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1757,Package\Seq - LaborHours Measures\Reported_Labor_Hours\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1758,Package\Seq - LaborHours Measures\Reported_Labor_Hours\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1759,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalary Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1760,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalary Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1761,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1762,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1763,Package\Seq - LaborHours Measures\Reported_Labor_Salary\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1764,Package\Seq - LaborHours Measures\Reported_Labor_Salary\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1765,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryChildCare Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1766,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryChildCare Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1767,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1768,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1769,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1770,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1771,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryOperating Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1772,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryOperating Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1773,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1774,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1775,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1776,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1777,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalarySpecialProgram Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1778,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalarySpecialProgram Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1779,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1780,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1781,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1782,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1783,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryTraining Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1784,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryTraining Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1785,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1786,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1787,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1788,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1789,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\SQL - End ReportedSalariesOvertimePremium Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1790,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\SQL - Start ReportedSalariesOvertimePremium Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1791,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1792,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1793,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1794,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1795,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\SQL - End ReportedWageRateBase Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1796,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\SQL - Start ReportedWageRateBase Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1797,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1798,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1799,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1800,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1801,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcareOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1802,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcareOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1803,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1804,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1805,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1806,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1807,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcareOvertime_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1808,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcareOvertime_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1809,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1810,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1811,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1812,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcareRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1813,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcareRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1814,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1815,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1816,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1817,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1818,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcareRegular_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1819,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcareRegular_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1820,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1821,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1822,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1823,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcare_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1824,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcare_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1825,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1826,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1827,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1828,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1829,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcare_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1830,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcare_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1831,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1832,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1833,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1834,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursManagementAndAdmin_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1835,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursManagementAndAdmin_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1836,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1837,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1838,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1839,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1840,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursManagementAndAdmin_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1841,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursManagementAndAdmin_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1842,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1843,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1844,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1845,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperatingOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1846,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperatingOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1847,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1848,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1849,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1850,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1851,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperatingOvertime_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1852,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperatingOvertime_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1853,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1854,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1855,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1856,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperatingRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1857,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperatingRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1858,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1859,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1860,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1861,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1862,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperatingRegular_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1863,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperatingRegular_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1864,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1865,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1866,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1867,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperating_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1868,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperating_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1869,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1870,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1871,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1872,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1873,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperating_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1874,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperating_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1875,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1876,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1877,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1878,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1879,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1880,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1881,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1882,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1883,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1884,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOvertime_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1885,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOvertime_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1886,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1887,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1888,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1889,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursPaidTimeOff_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1890,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursPaidTimeOff_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1891,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1892,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1893,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1894,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1895,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursPaidTimeOff_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1896,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursPaidTimeOff_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1897,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1898,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1899,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1900,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1901,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1902,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1903,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1904,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1905,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1906,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsMemo_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1907,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsMemo_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1908,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1909,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1910,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1911,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1912,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsMemo_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1913,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsMemo_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1914,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1915,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1916,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1917,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1918,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1919,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1920,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1921,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1922,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1923,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsOvertime_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1924,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsOvertime_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1925,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1926,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1927,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1928,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1929,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1930,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1931,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1932,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1933,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1934,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsRegular_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1935,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsRegular_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1936,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1937,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1938,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1939,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalDirect_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1940,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalDirect_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1941,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1942,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1943,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1944,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1945,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalDirect_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1946,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalDirect_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1947,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1948,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1949,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1950,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalFringeBenefits_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1951,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalFringeBenefits_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1952,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1953,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1954,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1955,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1956,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalFringeBenefits_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1957,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalFringeBenefits_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1958,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1959,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1960,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1961,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalSalariesandFringeBenefits_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1962,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalSalariesandFringeBenefits_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1963,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1964,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1965,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1966,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1967,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalSalariesandFringeBenefits_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1968,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalSalariesandFringeBenefits_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1969,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1970,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1971,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1972,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTrainingOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1973,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursvOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1974,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1975,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1976,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1977,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1978,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTrainingOvertime_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1979,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTrainingOvertime_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1980,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1981,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1982,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1983,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTrainingRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1984,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTrainingRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1985,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1986,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1987,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1988,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1989,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTrainingRegular_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1990,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTrainingRegular_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1991,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1992,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1993,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
1994,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTraining_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
1995,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTraining_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
1996,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1997,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
1998,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
1999,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2000,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTraining_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2001,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTraining_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2002,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2003,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2004,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2005,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2006,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHours_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2007,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2008,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2009,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2010,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2011,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2012,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHours_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2013,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2014,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2015,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2016,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcareOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2017,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcareOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2018,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2019,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2020,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2021,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2022,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcare_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2023,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcare_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2024,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2025,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2026,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2027,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2028,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryManagementAndAdmin_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2029,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryManagementAndAdmin_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2030,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2031,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2032,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2033,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2034,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2035,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2036,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2037,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2038,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2039,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2040,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2041,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2042,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2043,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2044,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2045,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2046,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperating_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2047,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperating_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2048,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2049,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2050,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2051,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2052,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2053,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2054,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2055,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2056,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2057,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2058,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2059,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2060,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2061,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2062,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2063,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2064,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialPrograms_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2065,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialPrograms_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2066,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2067,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2068,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2069,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2070,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalDirect_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2071,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalDirect_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2072,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2073,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2074,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2075,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2076,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalFringeBenefits_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2077,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalFringeBenefits_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2078,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2079,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2080,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2081,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2082,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalSalariesandFringeBenefits_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2083,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalSalariesandFringeBenefits_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2084,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2085,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2086,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2087,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2088,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2089,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2090,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2091,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2092,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2093,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2094,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2095,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2096,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2097,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2098,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2099,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2100,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTraining_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2101,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTraining_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2102,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2103,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2104,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2105,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2106,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildcareOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2107,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildcareOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2108,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2109,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2110,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2111,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2112,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildcareRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2113,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildcareRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2114,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2115,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2116,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2117,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2118,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildcare_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2119,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildcare_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2120,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2121,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2122,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2123,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursOperatingOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2124,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursOperatingOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2125,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2126,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2127,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2128,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2129,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursOperatingRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2130,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursOperatingRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2131,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2132,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2133,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2134,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2135,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursOperating_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2136,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursOperating_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2137,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2138,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2139,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2140,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2141,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursRegular_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2142,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursRegular_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2143,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2144,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2145,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2146,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHours_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2147,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHours_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2148,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2149,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2150,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2151,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryChildcareRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2152,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryChildcareRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2153,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2154,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2155,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2156,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2157,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildCare Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2158,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildCare Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2159,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2160,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2161,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2162,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2163,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\SQL - End TargetStaffEfficiencyFactor_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2164,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TargetStaffEfficiencyFactor_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2165,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2166,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2167,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2168,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2169,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\SQL - End TargetStaffEfficiencyFactor_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2170,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\SQL - Start TargetStaffEfficiencyFactor_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2171,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2172,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2173,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2174,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborHours_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2175,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborHours_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2176,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2177,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2178,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2179,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2180,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborHours_Target Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2181,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborHours_Target Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2182,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2183,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2184,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2185,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborSalaries_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2186,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborSalaries_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2187,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2188,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2189,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2190,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2191,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcareOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2192,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcareOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2193,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2194,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2195,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2196,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2197,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcare_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2198,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcare_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2199,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2200,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2201,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2202,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2203,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryManagementAndAdmin_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2204,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryManagementAndAdmin_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2205,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2206,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2207,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2208,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2209,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2210,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2211,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2212,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2213,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2214,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2215,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2216,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2217,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2218,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2219,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2220,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2221,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperating_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2222,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperating_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2223,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2224,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2225,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2226,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2227,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2228,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2229,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2230,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2231,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2232,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2233,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPaidTimeOff_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2234,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryPaidTimeOff_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2235,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2236,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2237,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2238,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2239,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2240,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2241,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2242,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2243,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2244,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2245,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2246,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2247,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2248,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2249,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2250,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2251,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2252,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2253,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2254,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2255,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2256,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2257,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialPrograms_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2258,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialPrograms_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2259,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2260,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2261,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2262,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2263,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingOvertime_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2264,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingOvertime_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2265,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2266,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2267,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2268,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2269,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2270,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2271,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2272,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2273,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2274,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2275,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTraining_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2276,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTraining_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2277,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2278,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2279,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2280,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2281,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalary_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2282,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalary_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2283,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2284,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2285,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2286,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2287,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryChildcareRegular_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2288,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryChildcareRegular_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2289,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2290,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2291,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2292,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2293,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborSalaries_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2294,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborSalaries_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2295,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2296,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2297,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2298,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2299,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - End Enrollment_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2300,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Enrollment_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2301,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2302,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2303,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2304,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2305,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\SQL - End Inquiry_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2306,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Inquiry_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2307,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2308,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2309,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2310,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2311,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - End InquirytoEnrollment_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2312,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - Start InquirytoEnrollment_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2313,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2314,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2315,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2316,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2317,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\SQL - End InquirytoTours_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2318,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start InquirytoTours_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2319,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2320,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2321,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2322,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2323,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\SQL - End NoResponse_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2324,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NoResponse_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2325,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2326,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2327,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2328,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2329,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\SQL - End SpeedOfResponseLessthan24_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2330,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\SQL - Start SpeedOfResponseLessthan24_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2331,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2332,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2333,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2334,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2335,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\SQL - End SpeedOfResponseMorethan24_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2336,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\SQL - Start SpeedOfResponseMorethan24_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2337,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2338,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2339,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2340,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2341,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - End SpeedOfResponseWebInquiries_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2342,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start SpeedOfResponseWebInquiries_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2343,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2344,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2345,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2346,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2347,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalInquiries_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2348,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalInquiries_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2349,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2350,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2351,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2352,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2353,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalInquiries_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2354,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalInquiries_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2355,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2356,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2357,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2358,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2359,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\SQL - End Tour_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2360,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Tour_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2361,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2362,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2363,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2364,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2365,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - End TourstoEnrollment_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2366,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TourstoEnrollment_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2367,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2368,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2369,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2370,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2371,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\SQL - End LifeCycleStatusSnapshot_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2372,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LifeCycleStatusSnapshot_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2373,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2374,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2375,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2376,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2377,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\SQL - End NSEBTSLost_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2378,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NSEBTSLost_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2379,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2380,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2381,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2382,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2383,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\SQL - End NSEBTS_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2384,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NSEBTS_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2385,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2386,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2387,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2388,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2389,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\SQL - End Withdrawn_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2390,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Withdrawn_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2391,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2392,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2393,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2394,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2395,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\SQL - End NSE_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2396,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\SQL - Start NSE_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2397,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseDailyMeasureFTE
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2398,Package\Seq - NSESD\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201901) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '2019-01-04') AS LastProcessDate",1,1,0,0,0,0,1
2399,Package\Seq - NSESD\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   UNION 
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM CMS_Staging.dbo.enrlScheduleDay AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.EffectiveDate = d.FullDate
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].StgModifiedDate > ?
   AND f.EffectiveDate BETWEEN '2019-01-04' AND GETDATE()
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
     ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2400,Package\Seq - NSESD\SpPopulateNSESupportSD, Exec [dbo].[SpPopulateNSESupportSD]   @DebugMode =1,1,1,0,0,0,0,1
2401,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\SQL - End BadDebt_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2402,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\SQL - Start BadDebt_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2403,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2404,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2405,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2406,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2407,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\SQL - End ChargeOffAverage_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2408,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ChargeOffAverage_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2409,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2410,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2411,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2412,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2413,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - End ChargeOff_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2414,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ChargeOff_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2415,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2416,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2417,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2418,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2419,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountCareSelect_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2420,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountCareSelect_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2421,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2422,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2423,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2424,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2425,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountClosedCenterPriceMatch_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2426,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountClosedCenterPriceMatch_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2427,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2428,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2429,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2430,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2431,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountDMApproved_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2432,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDMApproved_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2433,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2434,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2435,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2436,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2437,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionaryPctTuitionPP_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2438,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionaryPctTuitionPP_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2439,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2440,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2441,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2442,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2443,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionaryPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2444,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionaryPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2445,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2446,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2447,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2448,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2449,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionary_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2450,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionary_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2451,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2452,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2453,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2454,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2455,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountFamily_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2456,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFamily_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2457,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2458,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2459,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2460,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2461,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountFees_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2462,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFees_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2463,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2464,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2465,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2466,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2467,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountFreeDay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2468,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFreeDay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2469,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2470,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2471,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2472,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2473,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountGiftOfEducation_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2474,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountGiftOfEducation_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2475,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2476,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2477,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2478,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2479,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountNationalMarketing_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2480,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountNationalMarketing_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2481,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2482,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2483,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2484,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2485,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountNationalTuition_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2486,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountNationalTuition_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2487,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2488,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2489,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2490,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2491,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountOther_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2492,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountOther_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2493,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2494,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2495,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2496,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2497,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountPPPctTuitionPP_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2498,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPPPctTuitionPP_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2499,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2500,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2501,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2502,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2503,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountPrimary_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2504,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPrimary_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2505,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2506,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2507,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2508,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2509,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2510,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2511,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2512,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2513,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2514,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2515,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountPromotion_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2516,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPromotion_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2517,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2518,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2519,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2520,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2521,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountReferral_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2522,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountReferral_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2523,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2524,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2525,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2526,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2527,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountSpecialPrograms_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2528,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSpecialPrograms_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2529,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2530,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2531,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2532,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2533,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountStaff_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2534,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountStaff_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2535,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2536,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2537,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2538,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2539,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountSubsidyPctTuitionSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2540,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSubsidyPctTuitionSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2541,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2542,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2543,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2544,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2545,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2546,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2547,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2548,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2549,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2550,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2551,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountTieredTuition_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2552,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTieredTuition_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2553,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2554,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2555,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2556,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2557,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotalTuitionPctTuition_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2558,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotalTuitionPctTuition_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2559,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2560,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2561,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2562,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2563,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotalTuition_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2564,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotalTuition_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2565,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2566,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2567,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2568,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2569,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotal_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2570,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotal_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2571,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2572,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2573,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2574,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2575,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\SQL - End FeesEducation_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2576,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FeesEducation_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2577,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2578,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2579,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2580,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2581,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\SQL - End FeesRegistration_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2582,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FeesRegistration_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2583,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2584,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2585,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2586,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2587,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\SQL - End FeesReservation_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2588,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FeesReservation_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2589,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2590,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2591,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2592,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2593,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - End FeesRevenue_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2594,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FeesRevenue_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2595,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2596,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2597,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2598,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2599,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPctNetRevenue_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2600,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryPctNetRevenue_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2601,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2602,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2603,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2604,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2605,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRatePrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2606,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRatePrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2607,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2608,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2609,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2610,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2611,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRateSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2612,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRateSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2613,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2614,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2615,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2616,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2617,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRate_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2618,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRate_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2619,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2620,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2621,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2622,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2623,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetFees_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2624,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetFees_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2625,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2626,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2627,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2628,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2629,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetRevenue_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2630,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetRevenue_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2631,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2632,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2633,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2634,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2635,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetSpecialPrograms_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2636,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetSpecialPrograms_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2637,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2638,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2639,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2640,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2641,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetTuitionPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2642,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetTuitionPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2643,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2644,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2645,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2646,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2647,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetTuitionSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2648,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetTuitionSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2649,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2650,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2651,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2652,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2653,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetTuition_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2654,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetTuition_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2655,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2656,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2657,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2658,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2659,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\SQL - End Recovery_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2660,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Recovery_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2661,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2662,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2663,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2664,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2665,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueActivities_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2666,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueActivities_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2667,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2668,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2669,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2670,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2671,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueEPManagementFee_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2672,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueEPManagementFee_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2673,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2674,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2675,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2676,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2677,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueFieldTrips_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2678,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueFieldTrips_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2679,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2680,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2681,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2682,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2683,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueHeadStart_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2684,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueHeadStart_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2685,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2686,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2687,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2688,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2689,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueKLCStore_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2690,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueKLCStore_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2691,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2692,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2693,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2694,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2695,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueLatePayment_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2696,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueLatePayment_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2697,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2698,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2699,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2700,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2701,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueLatePickup_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2702,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueLatePickup_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2703,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2704,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2705,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2706,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2707,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueMiscandOther_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2708,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueMiscandOther_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2709,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2710,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2711,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2712,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2713,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueNationalAccounts_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2714,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueNationalAccounts_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2715,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2716,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2717,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2718,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2719,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueOther_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2720,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueOther_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2721,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2722,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2723,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2724,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2725,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenuePrimary_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2726,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenuePrimary_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2727,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2728,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2729,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2730,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2731,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueSpecialServices_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2732,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueSpecialServices_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2733,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2734,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2735,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2736,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2737,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReverseChargesMemo_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2738,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReverseChargesMemo_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2739,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2740,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2741,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2742,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2743,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalMiscellaneousIncome_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2744,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalMiscellaneousIncome_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2745,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2746,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2747,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2748,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2749,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalNetMiscAndOtherRevenues_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2750,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalNetMiscAndOtherRevenues_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2751,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2752,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2753,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2754,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2755,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustmentsPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2756,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustmentsPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2757,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2758,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2759,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2760,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2761,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustmentsSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2762,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustmentsSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2763,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2764,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2765,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2766,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2767,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustments_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2768,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustments_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2769,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2770,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2771,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2772,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2773,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionDiscount_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2774,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionDiscount_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2775,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2776,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2777,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2778,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2779,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFivesPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2780,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFivesPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2781,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2782,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2783,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2784,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2785,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFivesSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2786,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFivesSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2787,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2788,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2789,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2790,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2791,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFives_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2792,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFives_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2793,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2794,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2795,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2796,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2797,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFoursPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2798,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFoursPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2799,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2800,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2801,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2802,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2803,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFoursSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2804,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFoursSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2805,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2806,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2807,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2808,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2809,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFours_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2810,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFours_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2811,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2812,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2813,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2814,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2815,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropInPP_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2816,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropInPP_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2817,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2818,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2819,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2820,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2821,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropInSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2822,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropInSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2823,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2824,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2825,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2826,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2827,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropIn_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2828,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropIn_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2829,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2830,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2831,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2832,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2833,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfantPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2834,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfantPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2835,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2836,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2837,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2838,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2839,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfantSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2840,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfantSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2841,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2842,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2843,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2844,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2845,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfant_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2846,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfant_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2847,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2848,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2849,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2850,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2851,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergartenPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2852,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergartenPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2853,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2854,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2855,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2856,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2857,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergartenSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2858,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergartenSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2859,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2860,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2861,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2862,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2863,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergarten_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2864,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergarten_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2865,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2866,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2867,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2868,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2869,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiagePrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2870,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiagePrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2871,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2872,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2873,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2874,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2875,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiageSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2876,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiageSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2877,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2878,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2879,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2880,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2881,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiage_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2882,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiage_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2883,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2884,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2885,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2886,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2887,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolagePrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2888,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolagePrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2889,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2890,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2891,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2892,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2893,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolageSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2894,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolageSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2895,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2896,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2897,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2898,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2899,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolage_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2900,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolage_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2901,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2902,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2903,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2904,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2905,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionSpecialPrograms_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2906,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSpecialPrograms_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2907,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2908,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2909,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2910,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2911,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionThreesPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2912,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThreesPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2913,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2914,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2915,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2916,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2917,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionThreesSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2918,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThreesSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2919,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2920,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2921,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2922,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2923,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionThrees_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2924,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThrees_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2925,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2926,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2927,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2928,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2929,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddlerPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2930,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddlerPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2931,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2932,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2933,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2934,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2935,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddlerSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2936,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddlerSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2937,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2938,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2939,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2940,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2941,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddler_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2942,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddler_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2943,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2944,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2945,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2946,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2947,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotalPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2948,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotalPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2949,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2950,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2951,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2952,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2953,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotalSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2954,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotalSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2955,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2956,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2957,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2958,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2959,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotal_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2960,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotal_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2961,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2962,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2963,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2964,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2965,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwosPrivatePay_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2966,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwosPrivatePay_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2967,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2968,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2969,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2970,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2971,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwosSubsidy_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2972,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwosSubsidy_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2973,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2974,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2975,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2976,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2977,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwos_Actual Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2978,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwos_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2979,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2980,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
2981,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",1,1,0,0,0,0,1
2982,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",1,1,0,0,0,0,1
2983,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\SQL - End NewFTE Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2984,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\SQL - Start NewFTE_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2985,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\SQL- Assigning SRC query to Variable,"DECLARE @QueryTable TABLE
(
    SELECT 1
    FROM dbo.AssignmentBN pbn
    WHERE pbn.AssignmentID = vpbn.AssignmentID
 AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
)
)A ON p.AssignmentID = a.AssignmentID AND p.EffectiveStartDate = a.EffectiveStartDate AND p.BaseEffectiveDate = a.BaseEffectiveDate

DECLARE @Measurename VARCHAR(100);
DECLARE csr_fact_rabalance_fisc_weekend CURSOR FOR
SELECT MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT DISTINCT MeasureName FROM BING_EDW..SupportDailyMeasureFTE
      )
      AND GLMetricTypeCode = 'Stat';
--
-- Use cursor to loop through the values we have chosen to split this batch by
--
OPEN csr_fact_rabalance_fisc_weekend;
FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN


    IF
    (
        SELECT TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
        DELETE FROM @Field;
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
       Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
        DELETE FROM @Field2;
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
    INTO @Measurename;
END;

CLOSE csr_fact_rabalance_fisc_weekend;
DEALLOCATE csr_fact_rabalance_fisc_weekend;




SELECT CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX));",1,1,0,0,0,0,1
2986,Package\Sequence Container 1\Seq - New FTE\Get Processed Date to End,"DECLARE @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessDate,GETDATE()) AS LastProcessDate",1,1,0,0,0,0,1
2987,Package\Sequence Container 1\Seq - New FTE\SQL - Get Last Processed Dates,"SELECT  201101 AS LastProcessFiscalWeekNumber, '01-08-2011' AS LastProcessDate",1,1,0,0,0,0,1
2988,Package\Sequence Container 1\Seq - New FTE\SQL - Get List Of Weeks to Process,"IF (SELECT TOP 1 MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT DISTINCT MeasureName FROM BING_EDW..SupportDailyMeasureFTE
      )
      AND GLMetricTypeCode = 'Stat' ) IS NULL 
	  BEGIN 
	  SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE[f].EDWCreatedDate  BETWEEN '01-01-1900' AND  '01-01-1900'
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
   END 
   ELSE 
   BEGIN

SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].Fulldate  BETWEEN ? AND ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ? AND [d].[Fulldate]<= ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate

END ",1,1,0,0,0,0,1
2989,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\SQL - End NewNetRev Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
2990,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\SQL - Start NewNetRev_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
2991,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\SQL- Assigning SRC query to Variable,"DECLARE @QueryTable TABLE
(
    SELECT 1
    FROM dbo.PersonBN pbn
    WHERE pbn.PersonID = vpbn.PersonID
 AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
)
)A ON p.PersonID = a.PersonID AND p.EffectiveStartDate = a.EffectiveStartDate AND p.BaseEffectiveDate = a.BaseEffectiveDate

DECLARE @Measurename VARCHAR(100);
DECLARE csr_BaseRevenue CURSOR FOR
SELECT Distinct  MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT DISTINCT MeasureName FROM BING_EDW..SupportDailyMeasureRev
      )
	  AND MeasureName <> 'Payroll'
      AND GLMetricTypeCode = 'USD';
--
-- Use cursor to loop through the values we have chosen to split this batch by
--
OPEN csr_BaseRevenue;
FETCH NEXT FROM csr_BaseRevenue
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN


    IF
    (
        SELECT  TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
        DELETE FROM @Field;
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	  COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR,?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
        Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
        DELETE FROM @Field2;
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
         Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_BaseRevenue
    INTO @Measurename;
END;

CLOSE csr_BaseRevenue;
DEALLOCATE csr_BaseRevenue;




SELECT CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX))
	WHERE CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX)) IS NOT NULL;",1,1,0,0,0,0,1
2992,Package\Sequence Container 1\Seq - New NetRev\Get Processed Date to End,"DECLARE @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessDate,GETDATE()) AS LastProcessDate",1,1,0,0,0,0,1
2993,Package\Sequence Container 1\Seq - New NetRev\SQL - Get Last Processed Dates,"SELECT  201101 AS LastProcessFiscalWeekNumber, '01-08-2011' AS LastProcessDate",1,1,0,0,0,0,1
2994,Package\Sequence Container 1\Seq - New NetRev\SQL - Get List Of Weeks to Process,"IF (SELECT TOP 1 MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT MeasureName FROM BING_EDW..SupportDailyMeasureRev
      )
      AND GLMetricTypeCode = 'USD' ) IS  NULL
	  BEGIN 
	  SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [f].[EDWCreatedDate]  BETWEEN '01-01-1900' AND  '01-01-1900'
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
   END 
   ELSE 
   BEGIN

SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].FullDate  BETWEEN  ? AND  ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ? AND [d].FullDate<=?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate

END",1,1,0,0,0,0,1
2995,Package\Sequence Container\SQL - Create FTE Index,"CREATE UNIQUE CLUSTERED INDEX CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON [dbo].[vFactFTESnapshot](FiscalWeekNumber, CostCenterKey, AccountSubaccountKey);",1,1,0,0,0,0,1
2996,Package\Sequence Container\SQL - Create Labor Hour Index,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey]
ON [dbo].[vFactLaborHour]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC, [DataScenarioKey] ASC);
",1,1,0,0,0,0,1
2997,Package\Sequence Container\SQL - Create Labor SalaryIndex,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[vFactLaborSalary]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",1,1,0,0,0,0,1
2998,Package\Sequence Container\SQL - Create Plan Allocation  Index,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey]
    ON [dbo].[vFactGLBalancePlanAllocation]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC, [GLMetricTypeKey] ASC);",1,1,0,0,0,0,1
2999,Package\Sequence Container\SQL - Create Revenue Index,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactNetRevenue_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[vFactNetRevenue]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",1,1,0,0,0,0,1
3000,Package\Sequence Container\SQL - Populate Revenue & Create Index,"TRUNCATE TABLE [dbo].[FactNetRevenueConsolidated];

INSERT INTO [dbo].[FactNetRevenueConsolidated] (
	[FiscalWeekNumber], [FiscalWeekEndDate], [CostCenterKey], [CostCenterNumber], [AccountSubaccountKey], [Count], [NetRevenueAmount]
)
SELECT
	[D].[FiscalWeekNumber],
	[D].[FiscalWeekEndDate],
	[MCC].[CostCenterKey],
	[MCC].[CostCenterNumber],
	[F].[AccountSubaccountKey],
	COUNT_BIG(*) AS [Count],
	SUM([F].[NetRevenueAmount]) AS [NetRevenueAmount]
FROM [dbo].[FactNetRevenue] [F]
INNER JOIN [dbo].[DimDate] [D] ON [F].[DateKey] = [D].[DateKey]
INNER JOIN [dbo].[DimCostCenter] [C] ON [F].[CostCenterKey] = [C].[CostCenterKey]
INNER JOIN [dbo].[DimMartCostCenter] [MCC] ON [C].[CostCenterNumber] = [MCC].[CostCenterNumber]
	AND [D].[FullDate] BETWEEN [MCC].[EDWEffectiveFrom] AND [MCC].[EDWEffectiveTo]
GROUP BY
	[D].[FiscalWeekNumber], [D].[FiscalWeekEndDate],
	[MCC].[CostCenterKey], [MCC].[CostCenterNumber],
	[F].[AccountSubaccountKey];

CREATE UNIQUE CLUSTERED INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[FactNetRevenueConsolidated]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",1,1,0,0,0,0,1
3001,Package\Sequence Container\SQL - Rebuild FTE Index,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactFTESnapshot  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",1,1,0,0,0,0,1
3002,Package\Sequence Container\SQL - Rebuild Labor Hour Index,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey ON vFactLaborHour  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",1,1,0,0,0,0,1
3003,Package\Sequence Container\SQL - Rebuild Labor SalaryIndex,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactLaborSalary  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",1,1,0,0,0,0,1
3004,Package\Sequence Container\SQL - Rebuild Plan Allocation  Index,"
DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey ON vFactGLBalancePlanAllocation  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",1,1,0,0,0,0,1
3005,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\SQL - End IncremenalFTE Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
3006,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\SQL - Delete DailyMeasureFTE,"DELETE FROM DW_Base.dbo.BaseDailyMeasureFTE WHERE FiscalWeekEndDate =?


Select @@Rowcount as DC",1,1,0,0,0,0,1
3007,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\SQL - Start IncrementalFTE_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
3008,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\SQL- Assigning SRC query to Variable,"DECLARE @QueryTable TABLE
(
    SELECT 1
    FROM dbo.vAssignmentBN vpbn
    WHERE pbn.AssignmentID = vpbn.AssignmentID
	AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
)

SELECT @@ROWCOUNT + ? AS DeleteCount ;",1,1,0,0,0,0,1
9,Package\Base - BN Data Load\SQL - Delete records from PersonBN not in source,"DELETE pbn
FROM dbo.PersonBN pbn
WHERE NOT EXISTS
(
    SELECT 1
    FROM dbo.vPersonBN vpbn
    WHERE pbn.PersonID = vpbn.PersonID
	AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
)

SELECT @@ROWCOUNT + ? AS DeleteCount ;",1,1,0,0,0,0,1
10,Package\Base - BN Data Load\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",2,2,0,0,0,0,2
11,Package\Base - BN Data Load\SQL - Update LastProcessed Date,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",2,2,0,0,0,0,2
12,Package\Base - BN Data Load\SQl - SCD1 Update,"WITH Updates AS 
(
SELECT * 
FROM dbo.vAssignmentBN vabn
WHERE EXISTS
(
    SELECT 1
    FROM dbo.AssignmentBN abn
    WHERE abn.AssignmentID = vabn.AssignmentID
	AND abn.EffectiveStartDate = vabn.EffectiveStartDate
    AND abn.BaseEffectiveDate = vabn.BaseEffectiveDate
	AND abn.BaseEndDate = vabn.BaseEndDate
	AND abn.RowHash <> vabn.RowHash
)
)

UPDATE a
SET [AssignmentNumber] = u.AssignmentNumber
,[AssignmentType] = u.AssignmentType	
,[AssignmentStatusType] = u.AssignmentStatusType
,[WorkAtHomeIndicator] = u.WorkAtHomeIndicator
,[NormalWorkingHours] = u.NormalWorkingHours
,[NDQCFlag] = u.NDQCFlag
,[BonusPercent] = u.BonusPercent
,[ChangeReason] = u.ChangeReason
,[AssignmentSubType] = u.AssignmentSubType
,[IVRCode] = u.IVRCode
,[Title] = u.Title
,[ExecutiveAssistant] = u.ExecutiveAssistant
,[CAWaiverIndicator] = u.CAWaiverIndicator
,[EmploymentCategory] = u.EmploymentCategory
,[EmployeePayBasis] = u.EmployeePayBasis
,[SpecialInfoTypeName] = u.SpecialInfoTypeName
,[SecondaryRateStartDate] = u.SecondaryRateStartDate
,[SecondaryRateEndDate] = u.SecondaryRateEndDate
,[SecondaryJobName] = u.SecondaryJobName
,[SecondaryPayRate] = u.SecondaryPayRate
,[SecondaryHoursType] = u.SecondaryHoursType
,[Vendor] = u.Vendor
,[PeopleGroup] = u.PeopleGroup
,[KLCLineOfBusiness] = u.KLCLineOfBusiness
,[KLCPeopleGroup] = u.KLCPeopleGroup
,[KCLOTLLink] = u.KCLOTLLink
,[ProjectedAssignmentEndDate] = u.ProjectedAssignmentEndDate
,[PayGradeID] = u.PayGradeID
,[PositionID] = u.PositionID
,[LocationID] = u.LocationID
,[OrganizationID] = u.OrganizationID
,[EffectiveStartDate] = u.EffectiveStartDate
,[ExpirationDate] = u.ExpirationDate
,[BaseEffectiveDate] = u.BaseEffectiveDate
,[BaseEndDate] = u.BaseEndDate
,[BaseModifiedDate] = GETDATE()
,[UpdateAuditID] = ?
,[RowHash] = u.RowHash
,[SourceUpdateDate] = u.SourceUpdateDate
FROM dbo.AssignmentBN a
JOIN Updates u ON a.AssignmentID = u.AssignmentID AND a.EffectiveStartDate = u.EffectiveStartDate 
		AND a.BaseEffectiveDate = u.BaseEffectiveDate AND a.BaseEndDate = u.BaseEndDate

SELECT @@ROWCOUNT  AS UpdateCount;",1,1,0,0,0,0,1
13,Package\Base - BN Data Load\SQl - SCD1 Update,"WITH Updates AS 
(
SELECT * 
FROM dbo.vPersonBN vpbn
WHERE EXISTS
(
    SELECT 1
    FROM dbo.PersonBN pbn
    WHERE pbn.PersonID = vpbn.PersonID
	AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
	AND pbn.BaseEndDate = vpbn.BaseEndDate
	AND pbn.RowHash <> vpbn.RowHash
)
)

UPDATE [dbo].[PersonBN]
   SET [PersonID] = u.PersonID
      ,[PersonType] = u.PersonType
      ,[PersonName] = u.PersonName
      ,[Title] = u.Title
      ,[PersonFirstName] = u.PersonFirstName
      ,[PersonMiddleName] = u.PersonMiddleName
      ,[PersonLastName] = u.PersonLastName
      ,[PersonSuffix] = u.PersonSuffix
      ,[PersonPreferredName] = u.PersonPreferredName
      ,[SocialSecurityNumber] = u.SocialSecurityNumber
      ,[BirthDate] = u.BirthDate
      ,[EmployeeNumber] = u.EmployeeNumber
      ,[SupervisorNumber] = u.SupervisorNumber
      ,[BonusStartDate] = u.BonusStartDate
      ,[BonusEndDate] = u.BonusEndDate
      ,[BonusPlanName] = u.BonusPlanName
      ,[BonusTarget] = u.BonusTarget
      ,[MaritalStatus] = u.MaritalStatus
      ,[Gender] = u.Gender
      ,[Ethnicity] = u.Ethnicity
      ,[VeteranStatus] = u.VeteranStatus
      ,[HomeAddressLine1] = u.HomeAddressLine1
      ,[HomeAddressLine2] = u.HomeAddressLine2
      ,[HomeCity] = u.HomeCity
      ,[HomeState] = u.HomeState
      ,[HomeZipCode] = u.HomeZipCode
      ,[HomeCounty] = u.HomeCounty
      ,[EmailAddressKinderCare] = u.EmailAddressKinderCare
      ,[EmailAddressPersonal] = u.EmailAddressPersonal
      ,[PhoneNumberKindercareWork] = u.PhoneNumberKindercareWork
      ,[PhoneNumberKinderCareMobile] = u.PhoneNumberKinderCareMobile
      ,[PhoneNumberPersonalHome] = u.PhoneNumberPersonalHome
      ,[PhoneNumberPersonalMobile] = u.PhoneNumberPersonalMobile
      ,[OriginalHireDate] = u.OriginalHireDate
      ,[StartDate] = u.StartDate
      ,[TerminationDate] = u.TerminationDate
      ,[AdjustedServiceDate] = u.AdjustedServiceDate
      ,[DeathDate] = u.DeathDate
      ,[PreviousEmployeeNumber] = u.PreviousEmployeeNumber
      ,[PreviousEmployeeSource] = u.PreviousEmployeeSource
      ,[WOTCNotifiedIndicator] = u.WOTCNotifiedIndicator
      ,[WOTCNumber] = u.WOTCNumber
      ,[CheckSendToLocationID] = u.CheckSendToLocationID
      ,[VestingDate] = u.VestingDate
      ,[MealPeriodWaived] = u.MealPeriodWaived
      ,[AlaskaWaiveDailyOTIndicator] = u.AlaskaWaiveDailyOTIndicator
      ,[PersonAcquisitionDate] = u.PersonAcquisitionDate
      ,[TaleoCandidateID] = u.TaleoCandidateID
      ,[ContingentWorkerEmployeeID] = u.ContingentWorkerEmployeeID
      ,[ContingentWorkerEmployeeNumber] = u.ContingentWorkerEmployeeNumber
      ,[I9ReceivedIndicator] = u.I9ReceivedIndicator
      ,[WorkSchedule] = u.WorkSchedule
      ,[EmployeePerformanceRating] = u.EmployeePerformanceRating
      ,[PerformanceReviewDate] = u.PerformanceReviewDate
      ,[EffectiveStartDate] = u.EffectiveStartDate
      ,[ExpirationDate] = u.ExpirationDate
      ,[BaseEffectiveDate] = u.BaseEffectiveDate
      ,[BaseEndDate] = u.BaseEndDate
      ,[BaseModifiedDate] = GETDATE()
      ,[UpdateAuditID] = ?
      ,[RowHash] = u.RowHash
FROM dbo.PersonBN p
JOIN Updates u ON p.PersonID = u.PersonID AND p.EffectiveStartDate = u.EffectiveStartDate 
		AND p.BaseEffectiveDate = u.BaseEffectiveDate AND p.BaseEndDate = u.BaseEndDate

SELECT @@ROWCOUNT  AS UpdateCount;",1,1,0,0,0,0,1
14,Package\Base - BN Data Load\SQl - Update RowStatus for history records,"UPDATE dbo.AssignmentBN 
SET RowStatus = 'H'
, BaseModifiedDate = GETDATE()
, UpdateAuditID = ?
WHERE
 CAST(BaseEndDate AS DATE)< CAST(GETDATE() AS DATE) 
 AND RowStatus <> 'H'

SELECT @@ROWCOUNT + ? AS UpdateCount;",1,1,0,0,0,0,1
15,Package\Base - BN Data Load\SQl - Update RowStatus for history records,"UPDATE dbo.PersonBN 
SET RowStatus = 'H'
, BaseModifiedDate = GETDATE()
, UpdateAuditID = ?
WHERE
 CAST(BaseEndDate AS DATE)< CAST(GETDATE() AS DATE) 
 AND RowStatus <> 'H'

SELECT @@ROWCOUNT + ? AS UpdateCount;",1,1,0,0,0,0,1
16,Package\Base - Data Load\Merge into PerPeriodsB10 all,"

declare @AuditId int = ?
declare @PackageName varchar(35) = ?
declare @ExecutionInstanceGuid varchar(200) = ?


-----------------------------------------------------------------------------------------------------------
--Variables
declare @MergeOutput table (
Action_Out VARCHAR(20),
inserted_PerPeriodsID varchar(30),
inserted_Deleted varchar(1),
inserted_InsertAuditId bigint,
inserted_UpdateAuditId bigint,
deleted_PerPeriodsID  varchar(30),
deleted_Deleted  varchar(1),
deleted_InsertAuditId bigint,
deleted_UpdateAuditId bigint);


declare @vInsertedCount  Int
declare @vUpdateCount  Int
declare @vDeleteCount  Int
declare @vSourceCount  Int
declare @vRejectCount  Int
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
--2.) SQL - Get the LastProcessed Date

declare @TableName varchar(30) = 'PerPeriodsB10'
declare @LastProcessedDate datetime
declare @BaseCreatedDate datetime


IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @TableName)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (@TableName)
	END

UPDATE dbo.ETLBatchControl SET [Status] = 'In Process' WHERE TableName = @TableName

SELECT @LastProcessedDate = LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @TableName
SELECT @BaseCreatedDate = MAX(BaseCreatedDate) FROM dbo.PerPeriodsB10

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
	BEGIN
		SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));
	END



------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
--3.) Merge into PerPeriodsB10


;with  PP as
(--PPoS
select 
'F' + cast(period_of_service_id as varchar(12)) as 'PerPeriodsID', --8
person_id as person_id,  --9
date_start,  --10
adjusted_svc_date,  --11
actual_termination_date,  --12
leaving_reason,  --13
attribute2 as 'eligible_for_rehire_ind',  --14
attribute3 as 'two_week_notice_ind',  --15
attribute5 as 'regrettable_termination_ind',  --16
attribute4 as 'termination_comments',  --17
notified_termination_date as 'notified_termination_date',  --18
attribute1 as 'last_worked_date'  --19
--CAST(HASHBYTES('MD5', (SELECT t.FlexValueSetName, t.FlexValue, t.[Description] FOR XML RAW)) AS BINARY(16)) AS RowHash
 FROM [HR_Base].[dbo].[PER_PERIODS_OF_SERVICE_B0]

 
 union all
 

--PPoP
 select
'C' + cast(period_of_placement_id as varchar(12)) as 'PerPeriodsID',  --8
person_id,  --9
date_start,  --10
date_start as 'adjusted_svc_date',  --11
actual_termination_date,  --12
termination_reason as 'leaving_reason',  --13
attribute1 as 'eligible_for_rehire_ind',  --14
'N/A' as 'two_week_notice_ind',  --15
'N/A' as 'regrettable_termination_ind',  --16
'N/A' as 'termination_comments',  --17
null as 'notified_termination_date',  --18
'N/A' as 'last_worked_date'  --19
--CAST(HASHBYTES('MD5', (SELECT t.FlexValueSetName, t.FlexValue, t.[Description] FOR XML RAW)) AS BINARY(16)) AS RowHash
FROM [HR_Base].[dbo].[PER_PERIODS_OF_PLACEMENT_B0]


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1)PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + '''' +
	  @MeasureName +'''' + '  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( '
             +  '''' + CONVERT(VARCHAR, ?, 23) + '''' +' )' + N' AND Acct.AccountSubaccountKey IN (' + N'SELECT AccountSubaccountKey '
              + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
    INTO @Measurename;
END;

CLOSE csr_fact_rabalance_fisc_weekend;
DEALLOCATE csr_fact_rabalance_fisc_weekend;

SELECT CAST( Replace ((SELECT STUFF(( SELECT  N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')),1,6,N'')) , '&#x0D;', '') AS VARCHAR(MAX) )",1,1,0,0,0,0,1
3009,Package\Sequence Container\Seq - Incremental FTE\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate DATETIME, @LastsuccessfulDate DATETIME;
IF (SELECT Top 1 AuditId
           FROM dbo.AuditLog WHERE TaskName= ?) IS NULL 
BEGIN
    WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName ='NewFTE' )
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;

WITH LatestJobAuditBySuccessfulRun AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditBySuccessfulRun AS lja ON lja.LatestJobAudit = ja.AuditId;

SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate,
ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate
END
ELSE 
BEGIN

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;

WITH LatestJobAuditBySuccessfulRun AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditBySuccessfulRun AS lja ON lja.LatestJobAudit = ja.AuditId;

SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate,
ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate;

END",1,1,0,0,0,0,1
3010,Package\Sequence Container\Seq - Incremental FTE\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ? AND [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate",1,1,0,0,0,0,1
3011,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\SQL - End IncremenalNetRev Auditlog,"Execute spEndAuditLog ?,?,?,?,?,?,?;",1,1,0,0,0,0,1
3012,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\SQL - Delete DailyMeasureNetRevenue,"DELETE FROM DW_Base.dbo.BaseDailyMeasureNetRevenue WHERE FiscalWeekEndDate =?


Select @@Rowcount as DC",1,1,0,0,0,0,1
3013,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\SQL - Start IncrementalNet_Actual Audit Log,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",1,1,0,0,0,0,1
3014,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\SQL- Assigning SRC query to Variable,"DECLARE @QueryTable TABLE
(
    SELECT 1
    FROM [HR_Landing].dbo.[AP_SUPPLIERS_B0Landing] landing
    WHERE base.vendor_id = landing.vendor_id
);

SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
20,Package\Base - Data Load\SQL - Delete records,"DELETE FROM base
FROM dbo.[HR_ALL_ORGANIZATION_UNITS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[HR_ALL_ORGANIZATION_UNITS_B0Landing] landing
    WHERE base.organization_id = landing.organization_id
);

SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
21,Package\Base - Data Load\SQL - Delete records,"DELETE FROM base
FROM dbo.[PAY_COST_ALLOCATION_KEYFLEX_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PAY_COST_ALLOCATION_KEYFLEX_B0Landing] landing
    WHERE base.cost_allocation_keyflex_id = landing.cost_allocation_keyflex_id
);

SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
22,Package\Base - Data Load\SQL - Delete records,"DELETE FROM base
FROM dbo.[PER_COMPETENCES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_COMPETENCES_B0Landing] landing
    WHERE base.competence_id = landing.competence_id
);

SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
23,Package\Base - Data Load\SQL - Delete records,"DELETE FROM base
FROM dbo.[PER_COMPETENCE_ELEMENTS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_COMPETENCE_ELEMENTS_B0Landing] landing
    WHERE base.competence_element_id = landing.competence_element_id
);

SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
24,Package\Base - Data Load\SQL - Delete records,"DELETE FROM base
FROM dbo.[PER_GRADES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_GRADES_B0Landing] landing
    WHERE base.grade_id = landing.grade_id
);

SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
25,Package\Base - Data Load\SQL - End Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",5,5,0,0,0,0,5
26,Package\Base - Data Load\SQL - End Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",7,7,0,0,0,0,7
27,Package\Base - Data Load\SQL - End Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?,?
GO",2,2,0,0,0,0,2
28,Package\Base - Data Load\SQL - End Base Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",1,1,0,0,0,0,1
29,Package\Base - Data Load\SQL - End Base Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",4,4,0,0,0,0,4
30,Package\Base - Data Load\SQL - End Base Load Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",1,1,0,0,0,0,1
31,Package\Base - Data Load\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",27,27,0,0,0,0,27
32,Package\Base - Data Load\SQL - Get the LastProcessed Date,"DECLARE @TableName varchar(30) = 'FlexValuesLookupB10'
DECLARE @LastProcessedDate datetime
DECLARE @BaseCreatedDate datetime


IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @TableName)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (@TableName)
	END

UPDATE dbo.ETLBatchControl SET [Status] = 'In Process' WHERE TableName = @TableName

SELECT @LastProcessedDate = LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @TableName
SELECT @BaseCreatedDate = MAX(BaseCreatedDate) FROM dbo.FlexValuesLookupB10

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
	BEGIN
		SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));
	END

SELECT @LastProcessedDate AS LastProcessedDate;",1,1,0,0,0,0,1
33,Package\Base - Data Load\SQL - Get the LastProcessed Date,"DECLARE @TableName varchar(30) = 'PerPeriodsB10'
DECLARE @LastProcessedDate datetime
DECLARE @BaseCreatedDate datetime


IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @TableName)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (@TableName)
	END

UPDATE dbo.ETLBatchControl SET [Status] = 'In Process' WHERE TableName = @TableName

SELECT @LastProcessedDate = LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @TableName
SELECT @BaseCreatedDate = MAX(BaseCreatedDate) FROM dbo.FlexValuesLookupB10

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
	BEGIN
		SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));
	END

SELECT @LastProcessedDate AS LastProcessedDate;",1,1,0,0,0,0,1
34,Package\Base - Data Load\SQL - Get the LastProcessed Date,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.AccreditationBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",1,1,0,0,0,0,1
35,Package\Base - Data Load\SQL - Get the LastProcessed Date,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.PositionBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;

",1,1,0,0,0,0,1
36,Package\Base - Data Load\SQL - Get the LastProcessed Date,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)

BEGIN


    IF
    (
        SELECT  TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
        DELETE FROM @Field;
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR,?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
        Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
        DELETE FROM @Field2;
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
         Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_BaseRevenue
    INTO @Measurename;
END;

CLOSE csr_BaseRevenue;
DEALLOCATE csr_BaseRevenue;




SELECT CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX));",1,1,0,0,0,0,1
3015,Package\Sequence Container\Seq - Incremental NetRev\SQL - Get Last Processed Dates,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate DATETIME , @LastsuccessfulDate DateTime;
IF (SELECT Top 1 AuditId
           FROM dbo.AuditLog WHERE TaskName= ?) IS NULL 
BEGIN
    WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName ='NewNetRev' )
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
	    WITH CTE AS (	  SELECT TaskName,MAX(AuditId) AS e FROM dbo.AuditLog WHERE Statuscode=1 AND TaskName =?   GROUP BY TaskName)
	  
	  SELECT  @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN CTE AS lja ON lja.e = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate, ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate
END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.PayGradeBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",1,1,0,0,0,0,1
37,Package\Base - Data Load\SQL - Get the LastProcessed Date,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
 END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.AccreditationBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",1,1,0,0,0,0,1
38,Package\Base - Data Load\SQL - Get the LastProcessed Date,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
 END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.AssessmentBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",1,1,0,0,0,0,1
39,Package\Base - Data Load\SQL - Soft Delete Records,"DELETE FROM base
FROM dbo.[FND_ID_FLEX_STRUCTURES_TL_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[FND_ID_FLEX_STRUCTURES_TL_B0Landing] landing
    WHERE
	base.[application_id] = landing.[application_id] AND
	base.[id_flex_code] = landing.[id_flex_code] AND
	base.[id_flex_num] = landing.[id_flex_num] AND
	base.[language] = landing.[language]
);

SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
40,Package\Base - Data Load\SQL - Soft Delete records,"
DELETE FROM base
FROM dbo.[PAY_PEOPLE_GROUPS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PAY_PEOPLE_GROUPS_B0Landing] landing
    WHERE base.people_group_id = landing.people_group_id   
);

SELECT @@ROWCOUNT AS DeleteCount ;
",1,1,0,0,0,0,1
41,Package\Base - Data Load\SQL - Soft Delete records,"
DELETE FROM base
FROM dbo.[PER_ANALYSIS_CRITERIA_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ANALYSIS_CRITERIA_B0Landing] landing
    WHERE base.analysis_criteria_id= landing.analysis_criteria_id
);

SELECT @@ROWCOUNT AS DeleteCount ;
",1,1,0,0,0,0,1
42,Package\Base - Data Load\SQL - Soft Delete records,"
DELETE FROM base
FROM dbo.[PER_PAY_PROPOSALS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PAY_PROPOSALS_B0Landing] landing
    WHERE base.pay_proposal_id = landing.pay_proposal_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
43,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.FND_FLEX_VALUES_TL_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.FND_FLEX_VALUES_TL_B0Landing landing
    WHERE base.flex_value_id = landing.flex_value_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
44,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.Fnd_Logins_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.Fnd_Logins_B0PreLanding landing
    WHERE base.Login_id = landing.Login_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
45,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.HR_LOCATION_EXTRA_INFO_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.HR_LOCATION_EXTRA_INFO_B0Landing landing
    WHERE base.  [location_extra_info_id]  = landing.  [location_extra_info_id] 
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
46,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.PER_ALL_PEOPLE_F_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.PER_ALL_PEOPLE_F_B0PreLanding  landing
    WHERE base.person_id = landing.person_id
and base.effective_start_date= landing.effective_start_date
	AND base.effective_end_date = landing.effective_end_date
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
47,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.PER_JOBS_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.PER_JOBS_B0Landing landing
    WHERE base.job_id = landing.job_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
48,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.PER_ORG_STRUCTURE_VERSIONS_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.PER_ORG_STRUCTURE_VERSIONS_B0Landing landing
    WHERE base.  [org_structure_version_id]  = landing.  [org_structure_version_id] 
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
49,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.Per_Org_Structure_Elements_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.Per_Org_Structure_Elements_B0Landing landing
    WHERE base.  [org_structure_element_id]  = landing.  [org_structure_element_id] 
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
50,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[FND_FLEX_VALUES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[FND_FLEX_VALUES_B0Landing] landing
    WHERE base.[flex_value_id] = landing.[flex_value_id]
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
51,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[FND_FLEX_VALUE_SETS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[FND_FLEX_VALUE_SETS_B0Landing] landing
    WHERE base.flex_value_set_id = landing.flex_value_set_id   
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
52,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[HR_ALL_POSITIONS_F_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[HR_ALL_POSITIONS_F_B0Landing] landing
    WHERE base.position_id = landing.position_id
AND base.[effective_start_date] = landing.effective_start_date
AND base.[effective_end_date] = landing.effective_end_date
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
53,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[HR_LOCATIONS_ALL_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[HR_LOCATIONS_ALL_B0Landing] landing
    WHERE base.location_id = landing.location_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
54,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PAY_GRADE_RULES_F_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PAY_GRADE_RULES_F_B0Landing] landing
    WHERE base.grade_rule_id = landing.grade_rule_id   AND base.effective_start_date = landing.effective_start_date
            AND base.effective_end_date = landing.effective_end_date
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
55,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_ADDRESSES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ADDRESSES_B0Landing] landing
    WHERE base.address_id= landing.address_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
56,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_ALL_ASSIGNMENTS_F_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ALL_ASSIGNMENTS_F_B0PreLanding] landing
    WHERE base.assignment_id = landing.assignment_id
   AND  base.effective_start_date = landing.effective_start_date
   AND base.effective_end_date = landing.effective_end_date
);

SELECT @@ROWCOUNT AS DeleteCount ;
",1,1,0,0,0,0,1
57,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_ASSIGNMENT_STATUS_TYPES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ASSIGNMENT_STATUS_TYPES_B0Landing] landing
    WHERE base.[assignment_status_type_id] = landing.[assignment_status_type_id]
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
58,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_JOB_GROUPS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_JOB_GROUPS_B0Landing] landing
    WHERE base.job_group_id = landing.job_group_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
59,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_ORGANIZATION_STRUCTURES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ORGANIZATION_STRUCTURES_B0Landing] landing
    WHERE base.organization_structure_id = landing.organization_structure_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
60,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_PAY_BASES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PAY_BASES_B0Landing] landing
    WHERE base.pay_basis_id = landing.pay_basis_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
61,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_PERFORMANCE_REVIEWS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERFORMANCE_REVIEWS_B0Landing] landing
    WHERE base.performance_review_id = landing.performance_review_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
62,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_PERIODS_OF_PLACEMENT_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERIODS_OF_PLACEMENT_B0Landing] landing
    WHERE base.period_of_placement_id = landing.period_of_placement_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
63,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_PERIODS_OF_SERVICE_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERIODS_OF_SERVICE_B0Landing] landing
    WHERE base.period_of_service_id = landing.period_of_service_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
64,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_PERSON_ANALYSES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERSON_ANALYSES_B0Landing] landing
    WHERE base.person_analysis_id = landing.person_analysis_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
65,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_PERSON_TYPES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERSON_TYPES_B0Landing] landing
    WHERE base.person_type_id = landing.person_type_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
66,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_PHONES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PHONES_B0Landing] landing
    WHERE base.phone_id = landing.phone_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
67,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_QUALIFICATIONS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_QUALIFICATIONS_B0Landing] landing
    WHERE base.[qualification_id] = landing.[qualification_id]
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
68,Package\Base - Data Load\SQL - Soft Delete records,"DELETE FROM base
FROM dbo.[PER_QUALIFICATION_TYPES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_QUALIFICATION_TYPES_B0Landing] landing
    WHERE base.[qualification_type_id] = landing.[qualification_type_id]
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
69,Package\Base - Data Load\SQL - Soft Delete records,"UPDATE dbo.[FND_LOOKUP_VALUES_B0] SET deleted= 'Y'
WHERE RowHash NOT IN
(
    SELECT RowHash
    FROM [HR_Landing].dbo.[FND_LOOKUP_VALUES_B0Landing]
);

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
70,Package\Base - Data Load\SQL - Soft Delete records,"UPDATE pbn 
SET pbn.Deleted = 'Y',
pbn.BaseModifiedDate = GETDATE(),
pbn.UpdateAuditID = ?
FROM dbo.PositionBN pbn
WHERE NOT EXISTS
(
    SELECT 1
    FROM dbo.vPositionBN vpbn
    WHERE pbn.PositionID = vpbn.PositionID
AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate 

)
AND pbn.Deleted IS NULL;

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
71,Package\Base - Data Load\SQL - Soft Delete records,"UPDATE pgbn 
SET pgbn.Deleted = 'Y',
pgbn.BaseModifiedDate = GETDATE(),
pgbn.UpdateAuditID = ?
FROM dbo.PayGradeBN pgbn
WHERE NOT EXISTS
(
    SELECT 1
    FROM dbo.vPayGradeBN vpgbn
    WHERE pgbn.GradeID = vpgbn.GradeID 
AND pgbn.EffectiveStartDate = vpgbn.EffectiveStartDate 
)
AND pgbn.Deleted IS NULL;

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
72,Package\Base - Data Load\SQL - Soft Delete records,"UPDATE tgt SET
	Deleted			= 'Y',
	BaseEndDate		= GETDATE()
FROM
	dbo.FlexValuesLookupB10 AS tgt
WHERE NOT EXISTS
	(
		SELECT 1
		FROM
			dbo.FND_FLEX_VALUES_B0 AS fv WITH (NOLOCK)
			INNER JOIN
			dbo.FND_FLEX_VALUE_SETS_B0 AS fvs WITH (NOLOCK)
				ON	fv.flex_value_set_id = fvs.flex_value_set_id
			INNER JOIN
			dbo.FND_FLEX_VALUES_TL_B0 AS fvtl WITH (NOLOCK)
				ON	fv.flex_value_id = fvtl.flex_value_id
		WHERE
			fvs.flex_value_set_name	= tgt.FlexValueSetName AND
			fv.flex_value		= tgt.FlexValue
	)
	AND tgt.RowStatus				= 'A'
	AND ISNULL(tgt.Deleted, '')			!= 'Y'
	;

SELECT @@ROWCOUNT AS DeleteCount;",1,1,0,0,0,0,1
73,Package\Base - Data Load\SQL - Soft Delete records,"WITH PerQualifications AS 
(
SELECT 
pq.qualification_id AS QualificationID
FROM dbo.PER_QUALIFICATIONS_B0 pq
LEFT JOIN dbo.PER_QUALIFICATION_TYPES_B0 pqt ON pq.qualification_type_id = pqt.qualification_type_id
WHERE pq.person_id IS NOT NULL
)

UPDATE abn 
SET abn.Deleted = 'Y'
  , abn.BaseModifiedDate = GETDATE()
  , abn.UpdateAuditID = ?
FROM dbo.AccreditationBN abn
WHERE NOT EXISTS
(
    SELECT 1
    FROM PerQualifications pq
    WHERE pq.QualificationID = abn.QualificationID
)
AND abn.Deleted IS NULL;

SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
74,Package\Base - Data Load\SQL - Source Count,User::vLandingCountQuery,37,37,0,0,0,0,37
75,Package\Base - Data Load\SQL - Update LastProcessed Date,"
UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",2,2,0,0,0,0,2
76,Package\Base - Data Load\SQL - Update LastProcessed Date,"DECLARE @Tablename varchar(30) = 'FlexValuesLookupB10'

UPDATE dbo.ETLBatchControl SET
	LastProcessedDate = GETDATE(),
	[Status] = 'Success'
WHERE
	Tablename = @Tablename",1,1,0,0,0,0,1
77,Package\Base - Data Load\SQL - Update LastProcessed Date,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",3,3,0,0,0,0,3
78,Package\Base - Data Load\SQL - Update Modified Records,"UPDATE base 
   SET 
       base.[competence_id] = landing.competence_id
      ,base.[business_group_id] = landing.business_group_id
      ,base.[object_version_number] = landing.object_version_number
      ,base.[name] = landing.[name]
      ,base.[description] = landing.description
      ,base.[date_from] = landing.date_from
      ,base.[date_to] = landing.date_to
      ,base.[behavioural_indicator] = landing.behavioural_indicator
      ,base.[certification_required] = landing.certification_required
      ,base.[evaluation_method] = landing.evaluation_method
      ,base.[renewal_period_frequency] = landing.renewal_period_frequency
      ,base.[renewal_period_units] = landing.renewal_period_units
      ,base.[max_level] = landing.max_level
      ,base.[min_level] = landing.min_level
      ,base.[rating_scale_id] = landing.rating_scale_id
      ,base.[attribute_category] = landing.attribute_category
      ,base.[attribute1] = landing.attribute1
      ,base.[attribute2] = landing.attribute2
      ,base.[attribute3] = landing.attribute3
      ,base.[attribute4] = landing.attribute4
      ,base.[attribute5] = landing.attribute5
      ,base.[attribute6] = landing.attribute6
      ,base.[attribute7] = landing.attribute7
      ,base.[attribute8] = landing.attribute8
      ,base.[attribute9] = landing.attribute9
      ,base.[attribute10] = landing.attribute10
      ,base.[attribute11] = landing.attribute11
      ,base.[attribute12] = landing.attribute12
      ,base.[attribute13] = landing.attribute13
      ,base.[attribute14] = landing.attribute14
      ,base.[attribute15] = landing.attribute15
      ,base.[attribute16] = landing.attribute16
      ,base.[attribute17] = landing.attribute17
      ,base.[attribute18] = landing.attribute18
      ,base.[attribute19] = landing.attribute19
      ,base.[attribute20] = landing.attribute20
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_update_login] = landing.last_update_login
      ,base.[created_by] = landing.created_by
      ,base.[creation_date] = landing.creation_date
      ,base.[competence_definition_id] = landing.competence_definition_id
      ,base.[competence_alias] = landing.competence_alias
      ,base.[competence_cluster] = landing.competence_cluster
      ,base.[unit_standard_id] = landing.unit_standard_id
      ,base.[credit_type] = landing.credit_type
      ,base.[credits] = landing.credits
      ,base.[level_type] = landing.level_type
      ,base.[level_number] = landing.level_number
      ,base.[field] = landing.field
      ,base.[sub_field] = landing.sub_field
      ,base.[provider] = landing.provider
      ,base.[qa_organization] = landing.qa_organization
      ,base.[information_category] = landing.information_category
      ,base.[information1] = landing.information1
      ,base.[information2] = landing.information2
      ,base.[information3] = landing.information3
      ,base.[information4] = landing.information4
      ,base.[information5] = landing.information5
      ,base.[information6] = landing.information6
      ,base.[information7] = landing.information7
      ,base.[information8] = landing.information8
      ,base.[information9] = landing.information9
      ,base.[information10] = landing.information10
      ,base.[information11] = landing.information11
      ,base.[information12] = landing.information12
      ,base.[information13] = landing.information13
      ,base.[information14] = landing.information14
      ,base.[information15] = landing.information15
      ,base.[information16] = landing.information16
      ,base.[information17] = landing.information17
      ,base.[information18] = landing.information18
      ,base.[information19] = landing.information19
      ,base.[information20] = landing.information20
      ,base.datalakeinserttime = landing.datalakeinserttime
	  ,base.RowHash = landing.RowHash
	  ,base.[BaseCreatedDate] = GETDATE()
	  ,base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_COMPETENCES_B0] base
JOIN [HR_Landing].dbo.[PER_COMPETENCES_B0Landing] landing 
	ON base.competence_id = landing.competence_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;



",1,1,0,0,0,0,1
79,Package\Base - Data Load\SQL - Update Modified Records,"UPDATE base SET 
	base.[last_update_date] = landing.[last_update_date],
	base.[last_updated_by] = landing.[last_updated_by],
	base.[creation_date] = landing.[creation_date],
	base.[created_by] = landing.[created_by],
	base.[last_update_login] = landing.[last_update_login],
	base.[id_flex_structure_name] = landing.[id_flex_structure_name],
	base.[description] = landing.[description],
	base.[shorthand_prompt] = landing.[shorthand_prompt],
	base.[source_lang] = landing.[source_lang],
	base.[zd_edition_name] = landing.[zd_edition_name],
	base.[datalakeinserttime] = landing.[datalakeinserttime],
	base.[RowHash] = landing.[RowHash],
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = suser_sname()
FROM
	[HR_Base].dbo.[FND_ID_FLEX_STRUCTURES_TL_B0] base
	INNER JOIN
	[HR_Landing].dbo.[FND_ID_FLEX_STRUCTURES_TL_B0Landing] landing
		ON	base.[application_id] = landing.[application_id] AND
			base.[id_flex_code] = landing.[id_flex_code] AND
			base.[id_flex_num] = landing.[id_flex_num] AND
			base.[language] = landing.[language]
WHERE
	base.[RowHash] != landing.[RowHash];

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
80,Package\Base - Data Load\SQL - Update Modified Records,"UPDATE base SET 
	base.competence_element_id = landing.competence_element_id,
	base.business_group_id = landing.business_group_id,
	base.object_version_number = landing.object_version_number,
	base.[type] = landing.[type],
	base.competence_id = landing.competence_id,
	base.member_competence_set_id = landing.member_competence_set_id,
	base.proficiency_level_id = landing.proficiency_level_id,
	base.high_proficiency_level_id = landing.high_proficiency_level_id,
	base.weighting_level_id = landing.weighting_level_id,
	base.rating_level_id = landing.rating_level_id,
	base.person_id = landing.person_id,
	base.enterprise_id = landing.enterprise_id,
	base.job_id = landing.job_id,
	base.valid_grade_id = landing.valid_grade_id,
	base.position_id = landing.position_id,
	base.organization_id = landing.organization_id,
	base.work_item_id = landing.work_item_id,
	base.competence_set_id = landing.competence_set_id,
	base.parent_competence_element_id = landing.parent_competence_element_id,
	base.activity_version_id = landing.activity_version_id,
	base.assessment_id = landing.assessment_id,
	base.assessment_type_id = landing.assessment_type_id,
	base.mandatory = landing.mandatory,
	base.effective_date_from = landing.effective_date_from,
	base.effective_date_to = landing.effective_date_to,
	base.group_competence_type = landing.group_competence_type,
	base.competence_type = landing.competence_type,
	base.sequence_number = landing.sequence_number,
	base.normal_elapse_duration = landing.normal_elapse_duration,
	base.normal_elapse_duration_unit = landing.normal_elapse_duration_unit,
	base.source_of_proficiency_level = landing.source_of_proficiency_level,
	base.line_score = landing.line_score,
	base.certification_date = landing.certification_date,
	base.certification_method = landing.certification_method,
	base.next_certification_date = landing.next_certification_date,
	base.attribute_category = landing.attribute_category,
	base.attribute1 = landing.attribute1,
	base.attribute2 = landing.attribute2,
	base.attribute3 = landing.attribute3,
	base.attribute4 = landing.attribute4,
	base.attribute5 = landing.attribute5,
	base.attribute6 = landing.attribute6,
	base.attribute7 = landing.attribute7,
	base.attribute8 = landing.attribute8,
	base.attribute9 = landing.attribute9,
	base.attribute10 = landing.attribute10,
	base.attribute11 = landing.attribute11,
	base.attribute12 = landing.attribute12,
	base.attribute13 = landing.attribute13,
	base.attribute14 = landing.attribute14,
	base.attribute15 = landing.attribute15,
	base.attribute16 = landing.attribute16,
	base.attribute17 = landing.attribute17,
	base.attribute18 = landing.attribute18,
	base.attribute19 = landing.attribute19,
	base.attribute20 = landing.attribute20,
	base.last_update_date = landing.last_update_date,
	base.last_updated_by = landing.last_updated_by,
	base.last_update_login = landing.last_update_login,
	base.created_by = landing.created_by,
	base.creation_date = landing.creation_date,
	base.[object_id] = landing.[object_id],
	base.[object_name] = landing.[object_name],
	base.party_id = landing.party_id,
	base.qualification_type_id = landing.qualification_type_id,
	base.unit_standard_type = landing.unit_standard_type,
	base.[status] = landing.[status],
	base.information_category = landing.information_category,
	base.information1 = landing.information1,
	base.information2 = landing.information2,
	base.information3 = landing.information3,
	base.information4 = landing.information4,
	base.information5 = landing.information5,
	base.information6 = landing.information6,
	base.information7 = landing.information7,
	base.information8 = landing.information8,
	base.information9 = landing.information9,
	base.information10 = landing.information10,
	base.information11 = landing.information11,
	base.information12 = landing.information12,
	base.information13 = landing.information13,
	base.information14 = landing.information14,
	base.information15 = landing.information15,
	base.information16 = landing.information16,
	base.information17 = landing.information17,
	base.information18 = landing.information18,
	base.information19 = landing.information19,
	base.information20 = landing.information20,
	base.achieved_date = landing.achieved_date,
	base.appr_line_score = landing.appr_line_score,
	base.[comments#1] = landing.[comments#1],
	base.datalakeinserttime = landing.datalakeinserttime,
	base.RowHash = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_COMPETENCE_ELEMENTS_B0] base
JOIN [HR_Landing].dbo.[PER_COMPETENCE_ELEMENTS_B0Landing] landing 
	ON base.competence_element_id = landing.competence_element_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;

",1,1,0,0,0,0,1
81,Package\Base - Data Load\SQL - Update modified records,"



UPDATE base
   SET
       base.period_of_placement_id = landing.period_of_placement_id
      ,base.object_version_number = landing.object_version_number
      ,base.business_group_id = landing.business_group_id
      ,base.person_id = landing.person_id
      ,base.date_start = landing.date_start
      ,base.actual_termination_date = landing.actual_termination_date
      ,base.projected_termination_date = landing.projected_termination_date
      ,base.termination_reason = landing.termination_reason
      ,base.attribute_category = landing.attribute_category
      ,base.attribute1 = landing.attribute1
      ,base.attribute2 = landing.attribute2
      ,base.attribute3 = landing.attribute3
      ,base.attribute4 = landing.attribute4
      ,base.attribute5 = landing.attribute5
      ,base.attribute6 = landing.attribute6
      ,base.attribute7 = landing.attribute7
      ,base.attribute8 = landing.attribute8
      ,base.attribute9 = landing.attribute9
      ,base.attribute10 = landing.attribute10
      ,base.attribute11 = landing.attribute11
      ,base.attribute12 = landing.attribute12
      ,base.attribute13 = landing.attribute13
      ,base.attribute14 = landing.attribute14
      ,base.attribute15 = landing.attribute15
      ,base.attribute16 = landing.attribute16
      ,base.attribute17 = landing.attribute17
      ,base.attribute18 = landing.attribute18
      ,base.attribute19 = landing.attribute19
      ,base.attribute20 = landing.attribute20
      ,base.attribute21 = landing.attribute21
      ,base.attribute22 = landing.attribute22
      ,base.attribute23 = landing.attribute23
      ,base.attribute24 = landing.attribute24
      ,base.attribute25 = landing.attribute25
      ,base.attribute26 = landing.attribute26
      ,base.attribute27 = landing.attribute27
      ,base.attribute28 = landing.attribute28
      ,base.attribute29 = landing.attribute29
      ,base.attribute30 = landing.attribute30
      ,base.information_category = landing.information_category
      ,base.information1 = landing.information1
      ,base.information2 = landing.information2
      ,base.information3 = landing.information3
      ,base.information4 = landing.information4
      ,base.information5 = landing.information5
      ,base.information6 = landing.information6
      ,base.information7 = landing.information7
      ,base.information8 = landing.information8
      ,base.information9 = landing.information9
      ,base.information10 = landing.information10
      ,base.information11 = landing.information11
      ,base.information12 = landing.information12
      ,base.information13 = landing.information13
      ,base.information14 = landing.information14
      ,base.information15 = landing.information15
      ,base.information16 = landing.information16
      ,base.information17 = landing.information17
      ,base.information18 = landing.information18
      ,base.information19 = landing.information19
      ,base.information20 = landing.information20
      ,base.information21 = landing.information21
      ,base.information22 = landing.information22
      ,base.information23 = landing.information23
      ,base.information24 = landing.information24
      ,base.information25 = landing.information25
      ,base.information26 = landing.information26
      ,base.information27 = landing.information27
      ,base.information28 = landing.information28
      ,base.information29 = landing.information29
      ,base.information30 = landing.information30
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_date = landing.last_update_date
      ,base.last_update_login = landing.last_update_login
      ,base.final_process_date = landing.final_process_date
      ,base.last_standard_process_date = landing.last_standard_process_date
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_PERIODS_OF_PLACEMENT_B0] base
JOIN [HR_Landing].dbo.[PER_PERIODS_OF_PLACEMENT_B0Landing] landing ON base.period_of_placement_id = landing.period_of_placement_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
82,Package\Base - Data Load\SQL - Update modified records,"
UPDATE base SET 
       base.[location_extra_info_id] = landing.location_extra_info_id
      ,base.[information_type] = landing.information_type
      ,base.[location_id] = landing.location_id
      ,base.[request_id] = landing.request_id
      ,base.[program_application_id] = landing.program_application_id
      ,base.[program_id] = landing.program_id
      ,base.[program_update_date] = landing.program_update_date
      ,base.[lei_attribute_category] = landing.lei_attribute_category
      ,base.[lei_attribute1] = landing.lei_attribute1
      ,base.[lei_attribute2] = landing.lei_attribute2
      ,base.[lei_attribute3] = landing.lei_attribute3
      ,base.[lei_attribute4] = landing.lei_attribute4
      ,base.[lei_attribute5] = landing.lei_attribute5
      ,base.[lei_attribute6] = landing.lei_attribute6
      ,base.[lei_attribute7] = landing.lei_attribute7
      ,base.[lei_attribute8] = landing.lei_attribute8
      ,base.[lei_attribute9] = landing.lei_attribute9
      ,base.[lei_attribute10] = landing.lei_attribute10
      ,base.[lei_attribute11] = landing.lei_attribute11
      ,base.[lei_attribute12] = landing.lei_attribute12
      ,base.[lei_attribute13] = landing.lei_attribute13
      ,base.[lei_attribute14] = landing.lei_attribute14
      ,base.[lei_attribute15] = landing.lei_attribute15
      ,base.[lei_attribute16] = landing.lei_attribute16
      ,base.[lei_attribute17] = landing.lei_attribute17
      ,base.[lei_attribute18] = landing.lei_attribute18
      ,base.[lei_attribute19] = landing.lei_attribute19
      ,base.[lei_attribute20] = landing.lei_attribute20
      ,base.[lei_information_category] = landing.lei_information_category
      ,base.[lei_information1] = landing.lei_information1
      ,base.[lei_information2] = landing.lei_information2
      ,base.[lei_information3] = landing.lei_information3
      ,base.[lei_information4] = landing.lei_information4
      ,base.[lei_information5] = landing.lei_information5
      ,base.[lei_information6] = landing.lei_information6
      ,base.[lei_information7] = landing.lei_information7
      ,base.[lei_information8] = landing.lei_information8
      ,base.[lei_information9] = landing.lei_information9
      ,base.[lei_information10] = landing.lei_information10
      ,base.[lei_information11] = landing.lei_information11
      ,base.[lei_information12] = landing.lei_information12
      ,base.[lei_information13] = landing.lei_information13
      ,base.[lei_information14] = landing.lei_information14
      ,base.[lei_information15] = landing.lei_information15
      ,base.[lei_information16] = landing.lei_information16
      ,base.[lei_information17] = landing.lei_information17
      ,base.[lei_information18] = landing.lei_information18
      ,base.[lei_information19] = landing.lei_information19
      ,base.[lei_information20] = landing.lei_information20
      ,base.[lei_information21] = landing.lei_information21
      ,base.[lei_information22] = landing.lei_information22
      ,base.[lei_information23] = landing.lei_information23
      ,base.[lei_information24] = landing.lei_information24
      ,base.[lei_information25] = landing.lei_information25
      ,base.[lei_information26] = landing.lei_information26
      ,base.[lei_information27] = landing.lei_information27
      ,base.[lei_information28] = landing.lei_information28
      ,base.[lei_information29] = landing.lei_information29
      ,base.[lei_information30] = landing.lei_information30
      ,base.[object_version_number] = landing.object_version_number
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[last_update_login] = landing.last_update_login
      ,base.[created_by] = landing.created_by
      ,base.[creation_date] = landing.creation_date
      ,base.datalakeinserttime = landing.datalakeinserttime
      ,base.RowHash = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[HR_LOCATION_EXTRA_INFO_B0] base
JOIN [HR_Landing].dbo.[HR_LOCATION_EXTRA_INFO_B0Landing] landing 
	ON base.location_extra_info_id = landing.location_extra_info_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
83,Package\Base - Data Load\SQL - Update modified records,"
UPDATE base SET 
      base.[org_structure_version_id] = landing.org_structure_version_id
      ,base.[business_group_id] = landing.business_group_id
      ,base.[organization_structure_id] = landing.organization_structure_id
      ,base.[date_from] = landing.date_from
      ,base.[version_number] = landing.version_number
      ,base.[copy_structure_version_id] = landing.copy_structure_version_id
      ,base.[date_to] = landing.date_to
      ,base.[request_id] = landing.request_id
      ,base.[program_application_id] = landing.program_application_id
      ,base.[program_id] = landing.program_id
      ,base.[program_update_date] = landing.program_update_date
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[last_update_login] = landing.last_update_login
      ,base.[created_by] = landing.created_by
      ,base.[creation_date] = landing.creation_date
      ,base.[object_version_number] = landing.object_version_number
      ,base.[topnode_pos_ctrl_enabled_flag] = landing.topnode_pos_ctrl_enabled_flag
      ,base.datalakeinserttime = landing.datalakeinserttime
      ,base.RowHash = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_ORG_STRUCTURE_VERSIONS_B0] base
JOIN [HR_Landing].dbo.[PER_ORG_STRUCTURE_VERSIONS_B0Landing] landing 
	ON base.org_structure_version_id = landing.org_structure_version_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
84,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET 
       base.flex_value_set_id = landing.flex_value_set_id
      ,base.flex_value_set_name = landing.flex_value_set_name
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.creation_date = landing.creation_date
      ,base.created_by = landing.created_by
      ,base.last_update_login = landing.last_update_login
      ,base.validation_type = landing.validation_type
      ,base.protected_flag = landing.protected_flag
      ,base.security_enabled_flag = landing.security_enabled_flag
      ,base.longlist_flag = landing.longlist_flag
      ,base.format_type = landing.format_type
      ,base.maximum_size= landing.maximum_size
      ,base.alphanumeric_allowed_flag = landing.alphanumeric_allowed_flag
      ,base.uppercase_only_flag = landing.uppercase_only_flag
      ,base.numeric_mode_enabled_flag = landing.numeric_mode_enabled_flag
      ,base.description = landing.description
      ,base.dependant_default_value = landing.dependant_default_value
      ,base.dependant_default_meaning = landing.dependant_default_meaning
      ,base.parent_flex_value_set_id = landing.parent_flex_value_set_id
      ,base.minimum_value = landing.minimum_value
      ,base.maximum_value = landing.maximum_value
      ,base.number_precision = landing.number_precision
      ,base.zd_edition_name = landing.zd_edition_name
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[FND_FLEX_VALUE_SETS_B0] base
JOIN [HR_Landing].dbo.[FND_FLEX_VALUE_SETS_B0Landing] landing ON base.flex_value_set_id = landing.flex_value_set_id 
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
85,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET  base.[assignment_status_type_id] =  landing.[assignment_status_type_id]
      , base.[business_group_id]         =  landing.[business_group_id]
      , base.[legislation_code]          =  landing.[legislation_code]
      , base.[active_flag]               =  landing.[active_flag]
      , base.[default_flag]              =  landing.[default_flag]
      , base.[primary_flag]              =  landing.[primary_flag]
      , base.[user_status]               =  landing.[user_status]
      , base.[pay_system_status]         =  landing.[pay_system_status]
      , base.[per_system_status]         =  landing.[per_system_status]
      , base.[last_update_date]          =  landing.[last_update_date]
      , base.[last_updated_by]           =  landing.[last_updated_by]
      , base.[last_update_login]         =  landing.[last_update_login]
      , base.[created_by]                =  landing.[created_by]
      , base.[creation_date]             =  landing.[creation_date]
      , base.[zd_edition_name]           =  landing.[zd_edition_name]
      , base.[datalakeinserttime]        =  landing.[datalakeinserttime]
      , base.[RowHash]                   =  landing.[RowHash]
      , base.[BaseCreatedDate]           =  GETDATE()
      , base.[BaseCreatedBy]             =  suser_sname()
FROM [HR_Base].dbo.[PER_ASSIGNMENT_STATUS_TYPES_B0] base
JOIN [HR_Landing].dbo.[PER_ASSIGNMENT_STATUS_TYPES_B0Landing] landing ON base.[assignment_status_type_id] = landing.[assignment_status_type_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
86,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET  base.[organization_structure_id]		=   landing.[organization_structure_id]
      , base.[business_group_id]				=   landing.[business_group_id]
      , base.[name]								=   landing.[name]
      , base.[primary_structure_flag]			=   landing.[primary_structure_flag]
      , base.[request_id]						=   landing.[request_id]
      , base.[program_application_id]			=   landing.[program_application_id]
      , base.[program_id]						=   landing.[program_id]
      , base.[program_update_date]				=   landing.[program_update_date]
      , base.[attribute_category]				=   landing.[attribute_category]
      , base.[attribute1]						=   landing.[attribute1]
      , base.[attribute2]						=   landing.[attribute2]
      , base.[attribute3]						=   landing.[attribute3]
      , base.[attribute4]						=   landing.[attribute4]
      , base.[attribute5]						=   landing.[attribute5]
      , base.[attribute6]						=   landing.[attribute6]
      , base.[attribute7]						=   landing.[attribute7]
      , base.[attribute8]						=   landing.[attribute8]
      , base.[attribute9]						=   landing.[attribute9]
      , base.[attribute10]						=   landing.[attribute10]
      , base.[attribute11]						=   landing.[attribute11]
      , base.[attribute12]						=   landing.[attribute12]
      , base.[attribute13]						=   landing.[attribute13]
      , base.[attribute14]						=   landing.[attribute14]
      , base.[attribute15]						=   landing.[attribute15]
      , base.[attribute16]						=   landing.[attribute16]
      , base.[attribute17]						=   landing.[attribute17]
      , base.[attribute18]						=   landing.[attribute18]
      , base.[attribute19]						=   landing.[attribute19]
      , base.[attribute20]						=   landing.[attribute20]
      , base.[last_update_date]					=   landing.[last_update_date]
      , base.[last_updated_by]					=   landing.[last_updated_by]
      , base.[last_update_login]				=   landing.[last_update_login]
      , base.[created_by]						=   landing.[created_by]
      , base.[creation_date]					=   landing.[creation_date]
      , base.[position_control_structure_flg]	=   landing.[position_control_structure_flg]
      , base.[object_version_number]			=   landing.[object_version_number]
      , base.[comments]							=   landing.[comments]
      , base.[datalakeinserttime]				=   landing.datalakeinserttime
      , base.[RowHash]							=   landing.RowHash
      , base.[BaseCreatedDate]					=   GETDATE()
      , base.[BaseCreatedBy]					=   SUSER_SNAME()
FROM [PER_ORGANIZATION_STRUCTURES_B0] base
JOIN [HR_Landing].dbo.[PER_ORGANIZATION_STRUCTURES_B0Landing] landing ON base.organization_structure_id = landing.organization_structure_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
87,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET  base.job_group_id = landing.job_group_id
      , base.business_group_id = landing.business_group_id
      , base.legislation_code = landing.legislation_code
      , base.internal_name = landing.internal_name
      , base.displayed_name = landing.displayed_name
      , base.id_flex_num = landing.id_flex_num
      , base.master_flag = landing.master_flag
      , base.object_version_number = landing.object_version_number
      , base.[last_update_date] = landing.last_update_date
      , base.[last_updated_by] = landing.last_updated_by
      , base.[last_update_login] = landing.last_update_login
      , base.[created_by] = landing.created_by
      , base.[creation_date] = landing.creation_date
      , base.[datalakeinserttime] = landing.datalakeinserttime
      , base.[RowHash] = landing.RowHash
      , base.[BaseCreatedDate] = GETDATE()
      , base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_JOB_GROUPS_B0] base
JOIN [HR_Landing].dbo.[PER_JOB_GROUPS_B0Landing] landing ON base.job_group_id = landing.job_group_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
88,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[analysis_criteria_id] = landing.analysis_criteria_id
      ,base.[request_id] = landing.request_id
      ,base.[program_application_id] = landing.program_application_id
      ,base.[program_id] = landing.program_id
      ,base.[program_update_date] = landing.program_update_date
      ,base.[id_flex_num] = landing.id_flex_num
	 ,base.[summary_flag] = landing.summary_flag
	 ,base.[enabled_flag] = landing.enabled_flag
	 ,base.[start_date_active] = landing.start_date_active
      ,base.[end_date_active] = landing.end_date_active
      ,base.[segment1] = landing.segment1
      ,base.[segment2] = landing.segment2
      ,base.[segment3] = landing.segment3
      ,base.[segment4] = landing.segment4
      ,base.[segment5] = landing.segment5
      ,base.[segment6] = landing.segment6
      ,base.[segment7] = landing.segment7
      ,base.[segment8] = landing.segment8
      ,base.[segment9] = landing.segment9
      ,base.[segment10] = landing.segment10
      ,base.[segment11] = landing.segment11
      ,base.[segment12] = landing.segment12
      ,base.[segment13] = landing.segment13
      ,base.[segment14] = landing.segment14
      ,base.[segment15] = landing.segment15
      ,base.[segment16] = landing.segment16
      ,base.[segment17] = landing.segment17
      ,base.[segment18] = landing.segment18
      ,base.[segment19] = landing.segment19
      ,base.[segment20] = landing.segment20
      ,base.[segment21] = landing.segment21
      ,base.[segment22] = landing.segment22
      ,base.[segment23] = landing.segment23
      ,base.[segment24] = landing.segment24
      ,base.[segment25] = landing.segment25
      ,base.[segment26] = landing.segment26
      ,base.[segment27] = landing.segment27
      ,base.[segment28] = landing.segment28
      ,base.[segment29] = landing.segment29
      ,base.[segment30] = landing.segment30
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[creation_date] = landing.creation_date
      ,base.[created_by] = landing.created_by
      ,base.[last_update_login] = landing.last_update_login
	 ,base.[object_version_number] = landing.object_version_number
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_ANALYSIS_CRITERIA_B0] base
JOIN [HR_Landing].dbo.[PER_ANALYSIS_CRITERIA_B0Landing] landing ON base.analysis_criteria_id = landing.analysis_criteria_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
89,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[availability_status_id] = landing.availability_status_id
      ,base.[business_group_id] = landing.business_group_id
      ,base.[entry_grade_id] = landing.entry_grade_id
      ,base.[entry_grade_rule_id] = landing.entry_grade_rule_id
      ,base.[entry_step_id] = landing.entry_step_id
      ,base.[job_id] = landing.job_id
      ,base.[location_id] = landing.location_id
      ,base.[organization_id] = landing.organization_id
      ,base.[pay_basis_id] = landing.pay_basis_id
      ,base.[pay_freq_payroll_id] = landing.pay_freq_payroll_id
      ,base.[position_definition_id] = landing.position_definition_id
      ,base.[position_transaction_id] = landing.position_transaction_id
      ,base.[prior_position_id] = landing.prior_position_id
      ,base.[relief_position_id] = landing.relief_position_id
      ,base.[successor_position_id] = landing.successor_position_id
      ,base.[supervisor_id] = landing.supervisor_id
      ,base.[supervisor_position_id] = landing.supervisor_position_id
      ,base.[amendment_date] = landing.amendment_date
      ,base.[amendment_recommendation] = landing.amendment_recommendation
      ,base.[amendment_ref_number] = landing.amendment_ref_number
      ,base.[avail_status_prop_end_date] = landing.avail_status_prop_end_date
      ,base.[bargaining_unit_cd] = landing.bargaining_unit_cd
      ,base.[copied_to_old_table_flag] = landing.copied_to_old_table_flag
      ,base.[current_job_prop_end_date] = landing.current_job_prop_end_date
      ,base.[current_org_prop_end_date] = landing.current_org_prop_end_date
      ,base.[date_effective] = landing.date_effective
      ,base.[date_end] = landing.date_end
      ,base.[earliest_hire_date] = landing.earliest_hire_date
      ,base.[fill_by_date] = landing.fill_by_date
      ,base.[frequency] = landing.frequency
      ,base.[fte] = landing.fte
      ,base.[max_persons] = landing.max_persons
      ,base.[name] = landing.NAME
      ,base.[overlap_period] = landing.overlap_period
      ,base.[overlap_unit_cd] = landing.overlap_unit_cd
      ,base.[pay_term_end_day_cd] = landing.pay_term_end_day_cd
      ,base.[pay_term_end_month_cd] = landing.pay_term_end_month_cd
      ,base.[permanent_temporary_flag] = landing.permanent_temporary_flag
      ,base.[permit_recruitment_flag] = landing.permit_recruitment_flag
      ,base.[position_type] = landing.position_type
      ,base.[posting_description] = landing.posting_description
      ,base.[probation_period] = landing.probation_period
      ,base.[probation_period_unit_cd] = landing.probation_period_unit_cd
      ,base.[proposed_fte_for_layoff] = landing.proposed_fte_for_layoff
      ,base.[proposed_date_for_layoff] = landing.proposed_date_for_layoff
      ,base.[replacement_required_flag] = landing.replacement_required_flag
      ,base.[review_flag] = landing.review_flag
      ,base.[seasonal_flag] = landing.seasonal_flag
      ,base.[security_requirements] = landing.security_requirements
      ,base.[status] = landing.STATUS
      ,base.[term_start_day_cd] = landing.term_start_day_cd
      ,base.[term_start_month_cd] = landing.term_start_month_cd
      ,base.[time_normal_finish] = landing.time_normal_finish
      ,base.[time_normal_start] = landing.time_normal_start
      ,base.[update_source_cd] = landing.update_source_cd
      ,base.[working_hours] = landing.working_hours
      ,base.[works_council_approval_flag] = landing.works_council_approval_flag
      ,base.[work_period_type_cd] = landing.work_period_type_cd
      ,base.[work_term_end_day_cd] = landing.work_term_end_day_cd
      ,base.[work_term_end_month_cd] = landing.work_term_end_month_cd
      ,base.[information1] = landing.information1
      ,base.[information2] = landing.information2
      ,base.[information3] = landing.information3
      ,base.[information4] = landing.information4
      ,base.[information5] = landing.information5
      ,base.[information6] = landing.information6
      ,base.[information7] = landing.information7
      ,base.[information8] = landing.information8
      ,base.[information9] = landing.information9
      ,base.[information10] = landing.information10
      ,base.[information11] = landing.information11
      ,base.[information12] = landing.information12
      ,base.[information13] = landing.information13
      ,base.[information14] = landing.information14
      ,base.[information15] = landing.information15
      ,base.[information16] = landing.information16
      ,base.[information17] = landing.information17
      ,base.[information18] = landing.information18
      ,base.[information19] = landing.information19
      ,base.[information20] = landing.information20
      ,base.[information21] = landing.information21
      ,base.[information22] = landing.information22
      ,base.[information23] = landing.information23
      ,base.[information24] = landing.information24
      ,base.[information25] = landing.information25
      ,base.[information26] = landing.information26
      ,base.[information27] = landing.information27
      ,base.[information28] = landing.information28
      ,base.[information29] = landing.information29
      ,base.[information30] = landing.information30
      ,base.[information_category] = landing.information_category
      ,base.[attribute1] = landing.attribute1
      ,base.[attribute2] = landing.attribute2
      ,base.[attribute3] = landing.attribute3
      ,base.[attribute4] = landing.attribute4
      ,base.[attribute5] = landing.attribute5
      ,base.[attribute6] = landing.attribute6
      ,base.[attribute7] = landing.attribute7
      ,base.[attribute8] = landing.attribute8
      ,base.[attribute9] = landing.attribute9
      ,base.[attribute10] = landing.attribute10
      ,base.[attribute11] = landing.attribute11
      ,base.[attribute12] = landing.attribute12
      ,base.[attribute13] = landing.attribute13
      ,base.[attribute14] = landing.attribute14
      ,base.[attribute15] = landing.attribute15
      ,base.[attribute16] = landing.attribute16
      ,base.[attribute17] = landing.attribute17
      ,base.[attribute18] = landing.attribute18
      ,base.[attribute19] = landing.attribute19
      ,base.[attribute20] = landing.attribute20
      ,base.[attribute21] = landing.attribute21
      ,base.[attribute22] = landing.attribute22
      ,base.[attribute23] = landing.attribute23
      ,base.[attribute24] = landing.attribute24
      ,base.[attribute25] = landing.attribute25
      ,base.[attribute26] = landing.attribute26
      ,base.[attribute27] = landing.attribute27
      ,base.[attribute28] = landing.attribute28
      ,base.[attribute29] = landing.attribute29
      ,base.[attribute30] = landing.attribute30
      ,base.[attribute_category] = landing.attribute_category
      ,base.[request_id] = landing.request_id
      ,base.[program_application_id] = landing.program_application_id
      ,base.[program_id] = landing.program_id
      ,base.[program_update_date] = landing.program_update_date
      ,base.[created_by] = landing.created_by
      ,base.[creation_date] = landing.creation_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_update_login] = landing.last_update_login
      ,base.[object_version_number] = landing.object_version_number
      ,base.[comments] = landing.comments
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_ALL_POSITIONS_F_B0] base
JOIN [HR_Landing].dbo.[HR_ALL_POSITIONS_F_B0Landing] landing ON base.position_id = landing.position_id
AND base.[effective_start_date] = landing.effective_start_date
AND base.[effective_end_date] = landing.effective_end_date
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
90,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[grade_rule_id] = landing.[grade_rule_id],
      base.[effective_start_date] = landing.effective_start_date,
      base.[effective_end_date] = landing.effective_end_date,
      base.[business_group_id] = landing.business_group_id,
      base.[rate_id] = landing.rate_id,
      base.[grade_or_spinal_point_id] = landing.grade_or_spinal_point_id,
      base.[rate_type] = landing.rate_type,
      base.[maximum] = landing.maximum,
      base.[mid_value] = landing.mid_value,
      base.[minimum] = landing.minimum,
      base.[sequence] = landing.sequence,
      base.[value] = landing.value,
      base.[request_id] = landing.request_id,
      base.[program_application_id] = landing.program_application_id,
      base.[program_id] = landing.program_id,
      base.[program_update_date] = landing.program_update_date,
      base.[last_update_date] = landing.last_update_date,
      base.[last_updated_by] = landing.last_updated_by,
      base.[last_update_login] = landing.last_update_login,
      base.[created_by] = landing.created_by,
      base.[creation_date] = landing.creation_date,
      base.[object_version_number] = landing.object_version_number,
      base.[currency_code] = landing.currency_code,
      base.[datalakeinserttime] = landing.datalakeinserttime,
      base.[RowHash] = landing.RowHash,
      base.[BaseCreatedDate] = GETDATE(),
      base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PAY_GRADE_RULES_F_B0] base
JOIN [HR_Landing].dbo.[PAY_GRADE_RULES_F_B0Landing] landing ON base.grade_rule_id = landing.grade_rule_id AND  base.effective_start_date = landing.effective_start_date AND base.effective_end_date = landing.effective_end_date
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
91,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[location_id] = landing.location_id,
      base.[location_code] = landing.location_code,
      base.[business_group_id] = landing.business_group_id,
      base.[description] = landing.description,
      base.[ship_to_location_id] = landing.ship_to_location_id,
      base.[ship_to_site_flag] = landing.ship_to_site_flag,
      base.[receiving_site_flag] = landing.receiving_site_flag,
      base.[bill_to_site_flag] = landing.bill_to_site_flag,
      base.[in_organization_flag] = landing.in_organization_flag,
      base.[office_site_flag] = landing.office_site_flag,
      base.[designated_receiver_id] = landing.designated_receiver_id,
      base.[inventory_organization_id] = landing.inventory_organization_id,
      base.[inactive_date] = landing.inactive_date,
      base.[style] = landing.style,
      base.[address_line_1] = landing.address_line_1,
      base.[address_line_2] = landing.address_line_2,
      base.[address_line_3] = landing.address_line_3,
      base.[town_or_city] = landing.town_or_city,
      base.[country] = landing.country,
      base.[postal_code] = landing.postal_code,
      base.[region_1] = landing.region_1,
      base.[region_2] = landing.region_2,
      base.[region_3] = landing.region_3,
      base.[telephone_number_1] = landing.telephone_number_1,
      base.[telephone_number_2] = landing.telephone_number_2,
      base.[telephone_number_3] = landing.telephone_number_3,
      base.[loc_information13] = landing.loc_information13,
      base.[loc_information14] = landing.loc_information14,
      base.[loc_information15] = landing.loc_information15,
      base.[loc_information16] = landing.loc_information16,
      base.[loc_information17] = landing.loc_information17,
      base.[attribute_category] = landing.attribute_category,
      base.[attribute1] = landing.attribute1,
      base.[attribute2] = landing.attribute2,
      base.[attribute3] = landing.attribute3,
      base.[attribute4] = landing.attribute4,
      base.[attribute5] = landing.attribute5,
      base.[attribute6] = landing.attribute6,
      base.[attribute7] = landing.attribute7,
      base.[attribute8] = landing.attribute8,
      base.[attribute9] = landing.attribute9,
      base.[attribute10] = landing.attribute10,
      base.[attribute11] = landing.attribute11,
      base.[attribute12] = landing.attribute12,
      base.[attribute13] = landing.attribute13,
      base.[attribute14] = landing.attribute14,
      base.[attribute15] = landing.attribute15,
      base.[attribute16] = landing.attribute16,
      base.[attribute17] = landing.attribute17,
      base.[attribute18] = landing.attribute18,
      base.[attribute19] = landing.attribute19,
      base.[attribute20] = landing.attribute20,
      base.[global_attribute_category] = landing.global_attribute_category,
      base.[global_attribute1] = landing.global_attribute1,
      base.[global_attribute2] = landing.global_attribute2,
      base.[global_attribute3] = landing.global_attribute3,
      base.[global_attribute4] = landing.global_attribute4,
      base.[global_attribute5] = landing.global_attribute5,
      base.[global_attribute6] = landing.global_attribute6,
      base.[global_attribute7] = landing.global_attribute7,
      base.[global_attribute8] = landing.global_attribute8,
      base.[global_attribute9] = landing.global_attribute9,
      base.[global_attribute10] = landing.global_attribute10,
      base.[global_attribute11] = landing.global_attribute11,
      base.[global_attribute12] = landing.global_attribute12,
      base.[global_attribute13] = landing.global_attribute13,
      base.[global_attribute14] = landing.global_attribute14,
      base.[global_attribute15] = landing.global_attribute15,
      base.[global_attribute16] = landing.global_attribute16,
      base.[global_attribute17] = landing.global_attribute17,
      base.[global_attribute18] = landing.global_attribute18,
      base.[global_attribute19] = landing.global_attribute19,
      base.[global_attribute20] = landing.global_attribute20,
      base.[last_update_date] = landing.last_update_date,
      base.[last_updated_by] = landing.last_updated_by,
      base.[last_update_login] = landing.last_update_login,
      base.[created_by] = landing.created_by,
      base.[creation_date] = landing.creation_date,
      base.[entered_by] = landing.entered_by,
      base.[tp_header_id] = landing.tp_header_id,
      base.[ece_tp_location_code] = landing.ece_tp_location_code,
      base.[object_version_number] = landing.object_version_number,
      base.[geometry] = landing.geometry,
      base.[loc_information18] = landing.loc_information18,
      base.[loc_information19] = landing.loc_information19,
      base.[loc_information20] = landing.loc_information20,
      base.[derived_locale] = landing.derived_locale,
      base.[legal_address_flag] = landing.legal_address_flag,
      base.[timezone_code] = landing.timezone_code,
      base.[tax_name#1] = landing.tax_name#1,
      base.[datalakeinserttime] = landing.datalakeinserttime,
      base.[RowHash] = landing.RowHash,
      base.[BaseCreatedDate] = GETDATE(),
      base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[HR_LOCATIONS_ALL_B0] base
JOIN [HR_Landing].dbo.[HR_LOCATIONS_ALL_B0Landing] landing ON base.location_id = landing.location_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
92,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[pay_basis_id]				     =  landing.[pay_basis_id]				
	   , base.[input_value_id]				 =  landing.[input_value_id]			
	   , base.[rate_id]					     =  landing.[rate_id]					
	   , base.[business_group_id]			 =  landing.[business_group_id]			
	   , base.[name]						 =  landing.[name]						
	   , base.[pay_basis]					 =  landing.[pay_basis]					
	   , base.[rate_basis]					 =  landing.[rate_basis]				
	   , base.[annualized_hours]			 =  landing.[annualized_hours]			
	   , base.[pay_annualization_factor]	 =  landing.[pay_annualization_factor]	
	   , base.[grade_annualization_factor]	 =  landing.[grade_annualization_factor]
	   , base.[attribute_category]			 =  landing.[attribute_category]		
	   , base.[attribute1]					 =  landing.[attribute1]				
	   , base.[attribute2]					 =  landing.[attribute2]				
	   , base.[attribute3]					 =  landing.[attribute3]				
	   , base.[attribute4]					 =  landing.[attribute4]				
	   , base.[attribute5]					 =  landing.[attribute5]				
	   , base.[attribute6]					 =  landing.[attribute6]				
	   , base.[attribute7]					 =  landing.[attribute7]				
	   , base.[attribute8]					 =  landing.[attribute8]				
	   , base.[attribute9]					 =  landing.[attribute9]				
	   , base.[attribute10]				     =  landing.[attribute10]				
	   , base.[attribute11]				     =  landing.[attribute11]				
	   , base.[attribute12]				     =  landing.[attribute12]				
	   , base.[attribute13]				     =  landing.[attribute13]				
	   , base.[attribute14]				     =  landing.[attribute14]				
	   , base.[attribute15]				     =  landing.[attribute15]				
	   , base.[attribute16]				     =  landing.[attribute16]				
	   , base.[attribute17]				     =  landing.[attribute17]				
	   , base.[attribute18]				     =  landing.[attribute18]				
	   , base.[attribute19]				     =  landing.[attribute19]				
	   , base.[attribute20]				     =  landing.[attribute20]				
	   , base.[last_update_date]			 =  landing.[last_update_date]			
	   , base.[last_updated_by]			     =  landing.[last_updated_by]			
	   , base.[last_update_login]			 =  landing.[last_update_login]			
	   , base.[created_by]				   	 =  landing.[created_by]				
	   , base.[creation_date]				 =  landing.[creation_date]				
	   , base.[information_category]		 =  landing.[information_category]		
	   , base.[information1]				 =  landing.[information1]				
	   , base.[information2]				 =  landing.[information2]				
	   , base.[information3]				 =  landing.[information3]				
	   , base.[information4]				 =  landing.[information4]				
	   , base.[information5]				 =  landing.[information5]				
	   , base.[information6]				 =  landing.[information6]				
	   , base.[information7]				 =  landing.[information7]				
	   , base.[information8]				 =  landing.[information8]				
	   , base.[information9]				 =  landing.[information9]				
	   , base.[information10]				 =  landing.[information10]				
	   , base.[information11]				 =  landing.[information11]				
	   , base.[information12]				 =  landing.[information12]				
	   , base.[information13]				 =  landing.[information13]				
	   , base.[information14]				 =  landing.[information14]				
	   , base.[information15]				 =  landing.[information15]				
	   , base.[information16]				 =  landing.[information16]				
	   , base.[information17]				 =  landing.[information17]				
	   , base.[information18]				 =  landing.[information18]				
	   , base.[information19]				 =  landing.[information19]				
	   , base.[information20]				 =  landing.[information20]				
	   , base.[object_version_number]		 =  landing.[object_version_number]		
	   , base.[comments]					 =  landing.[comments]					
       , base.[datalakeinserttime]           =  landing.datalakeinserttime
       , base.[RowHash]                      =  landing.RowHash
       , base.[BaseCreatedDate]              =  GETDATE()
       , base.[BaseCreatedBy]               =  suser_sname()
FROM [HR_Base].dbo.[PER_PAY_BASES_B0] base
JOIN [HR_Landing].dbo.[PER_PAY_BASES_B0Landing] landing ON base.pay_basis_id = landing.pay_basis_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
93,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[people_group_id] = landing.people_group_id
      ,base.[group_name] = landing.group_name
      ,base.[id_flex_num] = landing.id_flex_num
      ,base.[summary_flag] = landing.summary_flag
      ,base.[enabled_flag] = landing.enabled_flag
      ,base.[start_date_active] = landing.start_date_active
      ,base.[end_date_active] = landing.end_date_active
      ,base.[segment1] = landing.segment1
      ,base.[segment2] = landing.segment2
      ,base.[segment3] = landing.segment3
      ,base.[segment4] = landing.segment4
      ,base.[segment5] = landing.segment5
      ,base.[segment6] = landing.segment6
      ,base.[segment7] = landing.segment7
      ,base.[segment8] = landing.segment8
      ,base.[segment9] = landing.segment9
      ,base.[segment10] = landing.segment10
      ,base.[segment11] = landing.segment11
      ,base.[segment12] = landing.segment12
      ,base.[segment13] = landing.segment13
      ,base.[segment14] = landing.segment14
      ,base.[segment15] = landing.segment15
      ,base.[segment16] = landing.segment16
      ,base.[segment17] = landing.segment17
      ,base.[segment18] = landing.segment18
      ,base.[segment19] = landing.segment19
      ,base.[segment20] = landing.segment20
      ,base.[segment21] = landing.segment21
      ,base.[segment22] = landing.segment22
      ,base.[segment23] = landing.segment23
      ,base.[segment24] = landing.segment24
      ,base.[segment25] = landing.segment25
      ,base.[segment26] = landing.segment26
      ,base.[segment27] = landing.segment27
      ,base.[segment28] = landing.segment28
      ,base.[segment29] = landing.segment29
      ,base.[segment30] = landing.segment30
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[creation_date] = landing.creation_date
      ,base.[created_by] = landing.created_by
      ,base.[last_update_login] = landing.last_update_login
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PAY_PEOPLE_GROUPS_B0] base
JOIN [HR_Landing].dbo.[PAY_PEOPLE_GROUPS_B0Landing] landing ON base.people_group_id = landing.people_group_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
94,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[performance_review_id] = landing.performance_review_id,
      base.[event_id] = landing.event_id,
      base.[review_date] = landing.review_date,
      base.[performance_rating] = landing.performance_rating,
      base.[next_perf_review_date] = landing.next_perf_review_date,
      base.[attribute_category] = landing.attribute_category,
      base.[attribute1] = landing.attribute1,
      base.[attribute2] = landing.attribute2,
      base.[attribute3] = landing.attribute3,
      base.[attribute4] = landing.attribute4,
      base.[attribute5] = landing.attribute5,
      base.[attribute6] = landing.attribute6,
      base.[attribute7] = landing.attribute7,
      base.[attribute8] = landing.attribute8,
      base.[attribute9] = landing.attribute9,
      base.[attribute10] = landing.attribute10,
      base.[attribute11] = landing.attribute11,
      base.[attribute12] = landing.attribute12,
      base.[attribute13] = landing.attribute13,
      base.[attribute14] = landing.attribute14,
      base.[attribute15] = landing.attribute15,
      base.[attribute16] = landing.attribute16,
      base.[attribute17] = landing.attribute17,
      base.[attribute18] = landing.attribute18,
      base.[attribute19] = landing.attribute19,
      base.[attribute20] = landing.attribute20,
      base.[attribute21] = landing.attribute21,
      base.[attribute22] = landing.attribute22,
      base.[attribute23] = landing.attribute23,
      base.[attribute24] = landing.attribute24,
      base.[attribute25] = landing.attribute25,
      base.[attribute26] = landing.attribute26,
      base.[attribute27] = landing.attribute27,
      base.[attribute28] = landing.attribute28,
      base.[attribute29] = landing.attribute29,
      base.[attribute30] = landing.attribute30,
      base.[object_version_number] = landing.object_version_number,
      base.[last_update_date] = landing.last_update_date,
      base.[last_updated_by] = landing.last_updated_by,
      base.[last_update_login] = landing.last_update_login,
      base.[created_by] = landing.created_by,
      base.[creation_date] = landing.creation_date,
      base.[datalakeinserttime] = landing.datalakeinserttime,
      base.[RowHash] = landing.RowHash,
      base.[BaseCreatedDate] = GETDATE(),
      base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_PERFORMANCE_REVIEWS_B0] base
JOIN [HR_Landing].dbo.[PER_PERFORMANCE_REVIEWS_B0Landing] landing ON base.performance_review_id = landing.performance_review_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
95,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[person_analysis_id]      = landing.person_analysis_id
      , base.[business_group_id]	  =   landing.[business_group_id]		
      , base.[analysis_criteria_id]	  =   landing.[analysis_criteria_id]	
      , base.[person_id]			  =   landing.[person_id]				
      , base.[date_from]			  =   landing.[date_from]				
      , base.[date_to]				  =   landing.[date_to]				
      , base.[id_flex_num]			  =   landing.[id_flex_num]			
      , base.[request_id]			  =   landing.[request_id]				
      , base.[program_application_id] =   landing.[program_application_id]	
      , base.[program_id]			  =   landing.[program_id]				
      , base.[program_update_date]	  =   landing.[program_update_date]	
      , base.[attribute_category]	  =   landing.[attribute_category] 		
      , base.[attribute1]			  =   landing.[attribute1]				
      , base.[attribute2]			  =   landing.[attribute2]				
      , base.[attribute3]			  =   landing.[attribute3]				
      , base.[attribute4]			  =   landing.[attribute4]				
      , base.[attribute5]			  =   landing.[attribute5]				
      , base.[attribute6]			  =   landing.[attribute6]				
      , base.[attribute7]			  =   landing.[attribute7]				
      , base.[attribute8]			  =   landing.[attribute8]				
      , base.[attribute9]			  =   landing.[attribute9]				
      , base.[attribute10]			  =   landing.[attribute10]			
      , base.[attribute11]			  =   landing.[attribute11]			
      , base.[attribute12]			  =   landing.[attribute12]			
      , base.[attribute13]			  =   landing.[attribute13]			
      , base.[attribute14]			  =   landing.[attribute14]			
      , base.[attribute15]			  =   landing.[attribute15]			
      , base.[attribute16]			  =   landing.[attribute16]			
      , base.[attribute17]			  =   landing.[attribute17]			
      , base.[attribute18]			  =   landing.[attribute18]			
      , base.[attribute19]			  =   landing.[attribute19]			
      , base.[attribute20]			  =   landing.[attribute20]			
      , base.[last_update_date]		  =   landing.[last_update_date]		
      , base.[last_updated_by]		  =   landing.[last_updated_by]		
      , base.[last_update_login]	  =   landing.[last_update_login]		
      , base.[created_by]			  =   landing.[created_by]				
      , base.[creation_date]		  =   landing.[creation_date]			
      , base.[object_version_number]  =   landing.[object_version_number]	
      , base.[party_id]				  =   landing.[party_id]				
      , base.[comments]				  =   landing.[comments]				
      , base.[datalakeinserttime]	  =   landing.[datalakeinserttime]		
      , base.[RowHash]				  =   landing.[RowHash]				
      , base.[BaseCreatedDate]		  =   GETDATE()			
      , base.[BaseCreatedBy]		  =   suser_sname()	
FROM [dbo].[PER_PERSON_ANALYSES_B0] base
JOIN [HR_Landing].dbo.[PER_PERSON_ANALYSES_B0Landing] landing ON base.person_analysis_id = landing.person_analysis_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
96,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[person_type_id] = landing.person_type_id
      , base.[business_group_id] = landing.business_group_id
      , base.[active_flag] = landing.active_flag
      , base.[default_flag] = landing.default_flag
      , base.[system_person_type] = landing.system_person_type
      , base.[user_person_type] = landing.user_person_type
      , base.[last_update_date] = landing.last_update_date
      , base.[last_updated_by] = landing.last_updated_by
      , base.[last_update_login] = landing.last_update_login
      , base.[created_by] = landing.created_by
      , base.[creation_date] = landing.creation_date
      , base.[seeded_person_type_key] = landing.seeded_person_type_key
      , base.[zd_edition_name] = landing.zd_edition_name
      , base.[datalakeinserttime] = landing.datalakeinserttime
      , base.[RowHash] = landing.RowHash
      , base.[BaseCreatedDate] = GETDATE()
      , base.[BaseCreatedBy] = suser_sname()
FROM [dbo].[PER_PERSON_TYPES_B0] base
JOIN [HR_Landing].dbo.[PER_PERSON_TYPES_B0Landing] landing ON base.person_type_id = landing.person_type_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
97,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[phone_id] =			 landing.phone_id,
      base.[date_from] =			 landing.date_from,
      base.[date_to] =				 landing.date_to, 
      base.[phone_type] =			 landing.phone_type, 
      base.[phone_number] =			 landing.phone_number, 
      base.[parent_id] =			 landing.parent_id, 
      base.[parent_table] =			 landing.parent_table,
      base.[attribute_category] =	 landing.attribute_category,
      base.[attribute1] =			 landing.attribute1,
      base.[attribute2] =			 landing.attribute2,
      base.[attribute3] =			 landing.attribute3,
      base.[attribute4] =			 landing.attribute4,
      base.[attribute5] =			 landing.attribute5,
      base.[attribute6] =			 landing.attribute6,
      base.[attribute7] =			 landing.attribute7,
      base.[attribute8] =			 landing.attribute8,
      base.[attribute9] =			 landing.attribute9,
      base.[attribute10] =			 landing.attribute10,
      base.[attribute11] =			 landing.attribute11,
      base.[attribute12] =			 landing.attribute12,
      base.[attribute13] =			 landing.attribute13,
      base.[attribute14] =			 landing.attribute14,
      base.[attribute15] =			 landing.attribute15,
      base.[attribute16] =			 landing.attribute16,
      base.[attribute17] =			 landing.attribute17,
      base.[attribute18] =			 landing.attribute18,
      base.[attribute19] =			 landing.attribute19,
      base.[attribute20] =			 landing.attribute20,
      base.[attribute21] =			 landing.attribute21,
      base.[attribute22] =			 landing.attribute22,
      base.[attribute23] =			 landing.attribute23,
      base.[attribute24] =			 landing.attribute24,
      base.[attribute25] =			 landing.attribute25,
      base.[attribute26] =			 landing.attribute26,
      base.[attribute27] =			 landing.attribute27,
      base.[attribute28] =			 landing.attribute28,
      base.[attribute29] =			 landing.attribute29,
      base.[attribute30] =			 landing.attribute30,
      base.[created_by] =			 landing.created_by, 
      base.[creation_date] =		 landing.creation_date,
      base.[last_updated_by] =		 landing.last_updated_by,
      base.[last_update_date] =		 landing.last_update_date,
      base.[last_update_login] =	 landing.last_update_login,
      base.[object_version_number] = landing.object_version_number,
      base.[party_id] =				 landing.party_id, 
      base.[validity] =				 landing.validity, 
      base.[datalakeinserttime] =	 landing.datalakeinserttime,
      base.[RowHash] =				 landing.RowHash,
      base.[BaseCreatedDate] =		 GETDATE(),
      base.[BaseCreatedBy] =		 suser_sname()
FROM [HR_Base].dbo.[PER_PHONES_B0] base
JOIN [HR_Landing].dbo.[PER_PHONES_B0Landing] landing ON base.phone_id = landing.phone_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
98,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.[qualification_id]				= landing.qualification_id
      ,base.[business_group_id]				= landing.business_group_id
      ,base.[object_version_number]			= landing.object_version_number
      ,base.[person_id]						= landing.person_id
      ,base.[title]							= landing.title
      ,base.[grade_attained]				= landing.grade_attained
      ,base.[status]						= landing.status
      ,base.[awarded_date]					= landing.awarded_date
      ,base.[fee]							= landing.fee
      ,base.[fee_currency]					= landing.fee_currency
      ,base.[training_completed_amount]		= landing.training_completed_amount
      ,base.[reimbursement_arrangements]	= landing.reimbursement_arrangements
      ,base.[training_completed_units]		= landing.training_completed_units
      ,base.[total_training_amount]			= landing.total_training_amount
      ,base.[start_date]					= landing.start_date
      ,base.[end_date]						= landing.end_date
      ,base.[license_number]				= landing.license_number
      ,base.[expiry_date]					= landing.expiry_date
      ,base.[license_restrictions]			= landing.license_restrictions
      ,base.[projected_completion_date]		= landing.projected_completion_date
      ,base.[awarding_body]					= landing.awarding_body
      ,base.[tuition_method]				= landing.tuition_method
      ,base.[group_ranking]					= landing.group_ranking
      ,base.[comments]						= landing.comments
      ,base.[qualification_type_id]			= landing.qualification_type_id
      ,base.[attendance_id]					= landing.attendance_id
      ,base.[attribute_category]			= landing.attribute_category
      ,base.[attribute1]					= landing.attribute1
      ,base.[attribute2]					= landing.attribute2
      ,base.[attribute3]					= landing.attribute3
      ,base.[attribute4]					= landing.attribute4
      ,base.[attribute5]					= landing.attribute5
      ,base.[attribute6]					= landing.attribute6
      ,base.[attribute7]					= landing.attribute7
      ,base.[attribute8]					= landing.attribute8
      ,base.[attribute9]					= landing.attribute9
      ,base.[attribute10]					= landing.attribute10
      ,base.[attribute11]					= landing.attribute11
      ,base.[attribute12]					= landing.attribute12
      ,base.[attribute13]					= landing.attribute13
      ,base.[attribute14]					= landing.attribute14
      ,base.[attribute15]					= landing.attribute15
      ,base.[attribute16]					= landing.attribute16
      ,base.[attribute17]					= landing.attribute17
      ,base.[attribute18]					= landing.attribute18
      ,base.[attribute19]					= landing.attribute19
      ,base.[attribute20]					= landing.attribute20
      ,base.[last_update_date]				= landing.last_update_date
      ,base.[last_updated_by]				= landing.last_updated_by
      ,base.[last_update_login]				= landing.last_update_login
      ,base.[created_by]					= landing.created_by
      ,base.[creation_date]					= landing.creation_date
      ,base.[party_id]						= landing.party_id
      ,base.[professional_body_name]		= landing.professional_body_name
      ,base.[membership_number]				= landing.membership_number
      ,base.[membership_category]			= landing.membership_category
      ,base.[subscription_payment_method]	= landing.subscription_payment_method
      ,base.[qua_information_category]		= landing.qua_information_category
      ,base.[qua_information1]				= landing.qua_information1
      ,base.[qua_information2]				= landing.qua_information2
      ,base.[qua_information3]				= landing.qua_information3
      ,base.[qua_information4]				= landing.qua_information4
      ,base.[qua_information5]				= landing.qua_information5
      ,base.[qua_information6]				= landing.qua_information6
      ,base.[qua_information7]				= landing.qua_information7
      ,base.[qua_information8]				= landing.qua_information8
      ,base.[qua_information9]				= landing.qua_information9
      ,base.[qua_information10]				= landing.qua_information10
      ,base.[qua_information11]				= landing.qua_information11
      ,base.[qua_information12]				= landing.qua_information12
      ,base.[qua_information13]				= landing.qua_information13
      ,base.[qua_information14]				= landing.qua_information14
      ,base.[qua_information15]				= landing.qua_information15
      ,base.[qua_information16]				= landing.qua_information16
      ,base.[qua_information17]				= landing.qua_information17
      ,base.[qua_information18]				= landing.qua_information18
      ,base.[qua_information19]				= landing.qua_information19
      ,base.[qua_information20]				= landing.qua_information20
      ,base.[datalakeinserttime]			= landing.[datalakeinserttime]
      ,base.[RowHash]						= landing.[RowHash]
      ,base.[BaseCreatedDate]				= GETDATE()
      ,base.[BaseCreatedBy]					= suser_sname()
FROM [HR_Base].dbo.[PER_QUALIFICATIONS_B0] base
JOIN [HR_Landing].dbo.[PER_QUALIFICATIONS_B0Landing] landing ON base.[qualification_id] = landing.[qualification_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
99,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.address_id = landing.address_id
      ,base.business_group_id = landing.business_group_id
      ,base.person_id = landing.person_id
      ,base.date_from = landing.date_from
      ,base.primary_flag = landing.primary_flag
      ,base.style = landing.style
      ,base.address_line1 = landing.address_line1
      ,base.address_line2 = landing.address_line2
      ,base.address_line3 = landing.address_line3
      ,base.address_type = landing.address_type
      ,base.country = landing.country
      ,base.date_to = landing.date_to
      ,base.postal_code = landing.postal_code
      ,base.region_1 = landing.region_1
      ,base.region_2 = landing.region_2
      ,base.region_3 = landing.region_3
      ,base.telephone_number_1 = landing.telephone_number_1
      ,base.telephone_number_2 = landing.telephone_number_2
      ,base.telephone_number_3 = landing.telephone_number_3
      ,base.town_or_city = landing.town_or_city
      ,base.request_id = landing.request_id
      ,base.program_application_id = landing.program_application_id
      ,base.program_id = landing.program_id
      ,base.program_update_date = landing.program_update_date
      ,base.addr_attribute_category = landing.addr_attribute_category
      ,base.addr_attribute1 = landing.addr_attribute1
      ,base.addr_attribute2 = landing.addr_attribute2
      ,base.addr_attribute3 = landing.addr_attribute3
      ,base.addr_attribute4 = landing.addr_attribute4
      ,base.addr_attribute5 = landing.addr_attribute5
      ,base.addr_attribute6 = landing.addr_attribute6
      ,base.addr_attribute7 = landing.addr_attribute7
      ,base.addr_attribute8 = landing.addr_attribute8
      ,base.addr_attribute9 = landing.addr_attribute9
      ,base.addr_attribute10 = landing.addr_attribute10
      ,base.addr_attribute11 = landing.addr_attribute11
      ,base.addr_attribute12 = landing.addr_attribute12
      ,base.addr_attribute13 = landing.addr_attribute13
      ,base.addr_attribute14 = landing.addr_attribute14
      ,base.addr_attribute15 = landing.addr_attribute15
      ,base.addr_attribute16 = landing.addr_attribute16
      ,base.addr_attribute17 = landing.addr_attribute17
      ,base.addr_attribute18 = landing.addr_attribute18
      ,base.addr_attribute19 = landing.addr_attribute19
      ,base.addr_attribute20 = landing.addr_attribute20
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.object_version_number = landing.object_version_number
      ,base.add_information13 = landing.add_information13
      ,base.add_information14 = landing.add_information14
      ,base.add_information15 = landing.add_information15
      ,base.add_information16 = landing.add_information16
      ,base.add_information17 = landing.add_information17
      ,base.add_information18 = landing.add_information18
      ,base.add_information19 = landing.add_information19
      ,base.add_information20 = landing.add_information20
      ,base.party_id = landing.party_id
      ,base.derived_locale = landing.derived_locale
      ,base.geometry = landing.geometry
      ,base.comments = landing.comments
      ,base.datalakeinserttime= landing.datalakeinserttime
      ,base.RowHash = landing.RowHash
      ,base.BaseCreatedDate = GETDATE()
      ,base.BaseCreatedBy = suser_sname()
FROM [HR_Base].dbo.[PER_ADDRESSES_B0] base
JOIN [HR_Landing].dbo.[PER_ADDRESSES_B0Landing] landing ON base.address_id = landing.address_id
WHERE base.RowHash != landing.RowHash;


SELECT @@ROWCOUNT AS UpdateCount;
",1,1,0,0,0,0,1
100,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.assignment_id = landing.assignment_id
      ,base.effective_start_date = landing.effective_start_date
      ,base.effective_end_date = landing.effective_end_date
      ,base.business_group_id = landing.business_group_id
      ,base.recruiter_id = landing.recruiter_id
      ,base.grade_id = landing.grade_id
      ,base.position_id = landing.position_id
      ,base.job_id = landing.job_id
      ,base.assignment_status_type_id = landing.assignment_status_type_id
      ,base.payroll_id = landing.payroll_id
      ,base.location_id = landing.location_id
      ,base.person_referred_by_id = landing.person_referred_by_id
      ,base.supervisor_id = landing.supervisor_id
      ,base.special_ceiling_step_id = landing.special_ceiling_step_id
      ,base.person_id = landing.person_id
      ,base.recruitment_activity_id = landing.recruitment_activity_id
      ,base.source_organization_id = landing.source_organization_id
      ,base.organization_id = landing.organization_id
      ,base.people_group_id = landing.people_group_id
      ,base.soft_coding_keyflex_id = landing.soft_coding_keyflex_id
      ,base.vacancy_id = landing.vacancy_id
      ,base.pay_basis_id = landing.pay_basis_id
      ,base.assignment_sequence = landing.assignment_sequence
      ,base.assignment_type = landing.assignment_type
      ,base.primary_flag = landing.primary_flag
      ,base.application_id = landing.application_id
      ,base.assignment_number = landing.assignment_number
      ,base.change_reason = landing.change_reason
      ,base.comment_id = landing.comment_id
      ,base.date_probation_end = landing.date_probation_end
      ,base.default_code_comb_id = landing.default_code_comb_id
      ,base.employment_category = landing.employment_category
      ,base.frequency = landing.frequency
      ,base.internal_address_line = landing.internal_address_line
      ,base.manager_flag = landing.manager_flag
      ,base.normal_hours = landing.normal_hours
      ,base.perf_review_period = landing.perf_review_period
      ,base.perf_review_period_frequency = landing.perf_review_period_frequency
      ,base.period_of_service_id = landing.period_of_service_id
      ,base.probation_period = landing.probation_period
      ,base.probation_unit = landing.probation_unit
      ,base.sal_review_period = landing.sal_review_period
      ,base.sal_review_period_frequency = landing.sal_review_period_frequency
      ,base.set_of_books_id = landing.set_of_books_id
      ,base.source_type = landing.source_type
      ,base.time_normal_finish = landing.time_normal_finish
      ,base.time_normal_start = landing.time_normal_start
      ,base.bargaining_unit_code = landing.bargaining_unit_code
      ,base.labour_union_member_flag = landing.labour_union_member_flag
      ,base.hourly_salaried_code = landing.hourly_salaried_code
      ,base.contract_id = landing.contract_id
      ,base.collective_agreement_id = landing.collective_agreement_id
      ,base.cagr_id_flex_num = landing.cagr_id_flex_num
      ,base.cagr_grade_def_id = landing.cagr_grade_def_id
      ,base.establishment_id = landing.establishment_id
      ,base.request_id = landing.request_id
      ,base.program_application_id = landing.program_application_id
      ,base.program_id = landing.program_id
      ,base.program_update_date = landing.program_update_date
      ,base.ass_attribute_category = landing.ass_attribute_category
      ,base.ass_attribute1 = landing.ass_attribute1
      ,base.ass_attribute2 = landing.ass_attribute2
      ,base.ass_attribute3 = landing.ass_attribute3
      ,base.ass_attribute4 = landing.ass_attribute4
      ,base.ass_attribute5 = landing.ass_attribute5
      ,base.ass_attribute6 = landing.ass_attribute6
      ,base.ass_attribute7 = landing.ass_attribute7
      ,base.ass_attribute8 = landing.ass_attribute8
      ,base.ass_attribute9 = landing.ass_attribute9
      ,base.ass_attribute10 = landing.ass_attribute10
      ,base.ass_attribute11 = landing.ass_attribute11
      ,base.ass_attribute12 = landing.ass_attribute12
      ,base.ass_attribute13 = landing.ass_attribute13
      ,base.ass_attribute14 = landing.ass_attribute14
      ,base.ass_attribute15 = landing.ass_attribute15
      ,base.ass_attribute16 = landing.ass_attribute16
      ,base.ass_attribute17 = landing.ass_attribute17
      ,base.ass_attribute18 = landing.ass_attribute18
      ,base.ass_attribute19 = landing.ass_attribute19
      ,base.ass_attribute20 = landing.ass_attribute20
      ,base.ass_attribute21 = landing.ass_attribute21
      ,base.ass_attribute22 = landing.ass_attribute22
      ,base.ass_attribute23 = landing.ass_attribute23
      ,base.ass_attribute24 = landing.ass_attribute24
      ,base.ass_attribute25 = landing.ass_attribute25
      ,base.ass_attribute26 = landing.ass_attribute26
      ,base.ass_attribute27 = landing.ass_attribute27
      ,base.ass_attribute28 = landing.ass_attribute28
      ,base.ass_attribute29 = landing.ass_attribute29
      ,base.ass_attribute30 = landing.ass_attribute30
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.title = landing.title
      ,base.object_version_number = landing.object_version_number
      ,base.notice_period = landing.notice_period
      ,base.notice_period_uom = landing.notice_period_uom
      ,base.employee_category = landing.employee_category
      ,base.work_at_home = landing.work_at_home
      ,base.job_post_source_name = landing.job_post_source_name
      ,base.posting_content_id = landing.posting_content_id
      ,base.period_of_placement_date_start = landing.period_of_placement_date_start
      ,base.vendor_id = landing.vendor_id
      ,base.vendor_employee_number = landing.vendor_employee_number
      ,base.vendor_assignment_number = landing.vendor_assignment_number
      ,base.assignment_category = landing.assignment_category
      ,base.project_title = landing.project_title
      ,base.applicant_rank = landing.applicant_rank
      ,base.vendor_site_id = landing.vendor_site_id
      ,base.po_header_id = landing.po_header_id
      ,base.po_line_id = landing.po_line_id
      ,base.projected_assignment_end = landing.projected_assignment_end
      ,base.grade_ladder_pgm_id = landing.grade_ladder_pgm_id
      ,base.supervisor_assignment_id = landing.supervisor_assignment_id
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [PER_ALL_ASSIGNMENTS_F_B0] base
JOIN [HR_Landing].dbo.[PER_ALL_ASSIGNMENTS_F_B0Landing] landing ON base.assignment_id = landing.assignment_id
 AND  base.effective_start_date = landing.effective_start_date
 AND base.effective_end_date = landing.effective_end_date
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;
",1,1,0,0,0,0,1
101,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.pay_proposal_id = landing.pay_proposal_id
      ,base.object_version_number = landing.object_version_number
      ,base.assignment_id = landing.assignment_id
      ,base.event_id = landing.event_id
      ,base.business_group_id = landing.business_group_id
      ,base.change_date = landing.change_date
      ,base.last_change_date = landing.last_change_date
      ,base.next_perf_review_date = landing.next_perf_review_date
      ,base.next_sal_review_date = landing.next_sal_review_date
      ,base.performance_rating = landing.performance_rating
      ,base.proposal_reason = landing.proposal_reason
      ,base.proposed_salary_n = landing.proposed_salary_n
      ,base.review_date = landing.review_date
      ,base.approved = landing.approved
      ,base.multiple_components = landing.multiple_components
      ,base.forced_ranking = landing.forced_ranking
      ,base.performance_review_id = landing.performance_review_id
      ,base.attribute_category = landing.attribute_category
      ,base.attribute1 = landing.attribute1
      ,base.attribute2 = landing.attribute2
      ,base.attribute3 = landing.attribute3
      ,base.attribute4 = landing.attribute4
      ,base.attribute5 = landing.attribute5
      ,base.attribute6 = landing.attribute6
      ,base.attribute7 = landing.attribute7
      ,base.attribute8 = landing.attribute8
      ,base.attribute9 = landing.attribute9
      ,base.attribute10 = landing.attribute10
      ,base.attribute11 = landing.attribute11
      ,base.attribute12 = landing.attribute12
      ,base.attribute13 = landing.attribute13
      ,base.attribute14 = landing.attribute14
      ,base.attribute15 = landing.attribute15
      ,base.attribute16 = landing.attribute16
      ,base.attribute17 = landing.attribute17
      ,base.attribute18 = landing.attribute18
      ,base.attribute19 = landing.attribute19
      ,base.attribute20 = landing.attribute20
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.proposed_salary = landing.proposed_salary
      ,base.comments = landing.comments
      ,base.date_to = landing.date_to
      , base.[datalakeinserttime]           =  landing.datalakeinserttime
      , base.[RowHash]                      =  landing.RowHash
      , base.[BaseCreatedDate]              =  GETDATE()
      , base.[BaseCreatedBy]               =  suser_sname()
FROM [HR_Base].dbo.[PER_PAY_PROPOSALS_B0] base
JOIN [HR_Landing].dbo.[PER_PAY_PROPOSALS_B0Landing] landing ON base.pay_proposal_id = landing.pay_proposal_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
102,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.period_of_service_id = landing.period_of_service_id
      ,base.business_group_id = landing.business_group_id
      ,base.termination_accepted_person_id = landing.termination_accepted_person_id
      ,base.person_id = landing.person_id
      ,base.date_start = landing.date_start
      ,base.accepted_termination_date = landing.accepted_termination_date
      ,base.actual_termination_date = landing.actual_termination_date
      ,base.final_process_date = landing.final_process_date
      ,base.last_standard_process_date = landing.last_standard_process_date
      ,base.leaving_reason = landing.leaving_reason
      ,base.notified_termination_date = landing.notified_termination_date
      ,base.projected_termination_date = landing.projected_termination_date
      ,base.adjusted_svc_date = landing.adjusted_svc_date
      ,base.request_id = landing.request_id
      ,base.program_application_id = landing.program_application_id
      ,base.program_id = landing.program_id
      ,base.program_update_date = landing.program_update_date
      ,base.attribute_category = landing.attribute_category
      ,base.attribute1 = landing.attribute1
      ,base.attribute2 = landing.attribute2
      ,base.attribute3 = landing.attribute3
      ,base.attribute4 = landing.attribute4
      ,base.attribute5 = landing.attribute5
      ,base.attribute6 = landing.attribute6
      ,base.attribute7 = landing.attribute7
      ,base.attribute8 = landing.attribute8
      ,base.attribute9 = landing.attribute9
      ,base.attribute10 = landing.attribute10
      ,base.attribute11 = landing.attribute11
      ,base.attribute12 = landing.attribute12
      ,base.attribute13 = landing.attribute13
      ,base.attribute14 = landing.attribute14
      ,base.attribute15 = landing.attribute15
      ,base.attribute16 = landing.attribute16
      ,base.attribute17 = landing.attribute17
      ,base.attribute18 = landing.attribute18
      ,base.attribute19 = landing.attribute19
      ,base.attribute20 = landing.attribute20
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.object_version_number = landing.object_version_number
      ,base.prior_employment_ssp_paid_to = landing.prior_employment_ssp_paid_to
      ,base.prior_employment_ssp_weeks = landing.prior_employment_ssp_weeks
      ,base.pds_information_category = landing.pds_information_category
      ,base.pds_information1 = landing.pds_information1
      ,base.pds_information2 = landing.pds_information2
      ,base.pds_information3 = landing.pds_information3
      ,base.pds_information4 = landing.pds_information4
      ,base.pds_information5 = landing.pds_information5
      ,base.pds_information6 = landing.pds_information6
      ,base.pds_information7 = landing.pds_information7
      ,base.pds_information8 = landing.pds_information8
      ,base.pds_information9 = landing.pds_information9
      ,base.pds_information10 = landing.pds_information10
      ,base.pds_information11 = landing.pds_information11
      ,base.pds_information12 = landing.pds_information12
      ,base.pds_information13 = landing.pds_information13
      ,base.pds_information14 = landing.pds_information14
      ,base.pds_information15 = landing.pds_information15
      ,base.pds_information16 = landing.pds_information16
      ,base.pds_information17 = landing.pds_information17
      ,base.pds_information18 = landing.pds_information18
      ,base.pds_information19 = landing.pds_information19
      ,base.pds_information20 = landing.pds_information20
      ,base.pds_information21 = landing.pds_information21
      ,base.pds_information22 = landing.pds_information22
      ,base.pds_information23 = landing.pds_information23
      ,base.pds_information24 = landing.pds_information24
      ,base.pds_information25 = landing.pds_information25
      ,base.pds_information26 = landing.pds_information26
      ,base.pds_information27 = landing.pds_information27
      ,base.pds_information28 = landing.pds_information28
      ,base.pds_information29 = landing.pds_information29
      ,base.pds_information30 = landing.pds_information30
      ,base.comments = landing.comments
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_PERIODS_OF_SERVICE_B0] base
JOIN [HR_Landing].dbo.[PER_PERIODS_OF_SERVICE_B0Landing] landing ON base.period_of_service_id = landing.period_of_service_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
103,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
   SET base.qualification_type_id = landing.qualification_type_id
      ,base.name = landing.name
      ,base.category = landing.category
      ,base.rank = landing.rank
      ,base.object_version_number = landing.object_version_number
      ,base.attribute_category = landing.attribute_category
      ,base.attribute1 = landing.attribute1
      ,base.attribute2 = landing.attribute2
      ,base.attribute3 = landing.attribute3
      ,base.attribute4 = landing.attribute4
      ,base.attribute5 = landing.attribute5
      ,base.attribute6 = landing.attribute6
      ,base.attribute7 = landing.attribute7
      ,base.attribute8 = landing.attribute8
      ,base.attribute9 = landing.attribute9
      ,base.attribute10 = landing.attribute10
      ,base.attribute11 = landing.attribute11
      ,base.attribute12 = landing.attribute12
      ,base.attribute13 = landing.attribute13
      ,base.attribute14 = landing.attribute14
      ,base.attribute15 = landing.attribute15
      ,base.attribute16 = landing.attribute16
      ,base.attribute17 = landing.attribute17
      ,base.attribute18 = landing.attribute18
      ,base.attribute19 = landing.attribute19
      ,base.attribute20 = landing.attribute20
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.information1 = landing.information1
      ,base.information2 = landing.information2
      ,base.information3 = landing.information3
      ,base.information4 = landing.information4
      ,base.information5 = landing.information5
      ,base.information6 = landing.information6
      ,base.information7 = landing.information7
      ,base.information8 = landing.information8
      ,base.information9 = landing.information9
      ,base.information10 = landing.information10
      ,base.information11 = landing.information11
      ,base.information12 = landing.information12
      ,base.information13 = landing.information13
      ,base.information14 = landing.information14
      ,base.information15 = landing.information15
      ,base.information16 = landing.information16
      ,base.information17 = landing.information17
      ,base.information18 = landing.information18
      ,base.information19 = landing.information19
      ,base.information20 = landing.information20
      ,base.information21 = landing.information21
      ,base.information22 = landing.information22
      ,base.information23 = landing.information23
      ,base.information24 = landing.information24
      ,base.information25 = landing.information25
      ,base.information26 = landing.information26
      ,base.information27 = landing.information27
      ,base.information28 = landing.information28
      ,base.information29 = landing.information29
      ,base.information30 = landing.information30
      ,base.information_category = landing.information_category
      ,base.qual_framework_id = landing.qual_framework_id
      ,base.qualification_type = landing.qualification_type
      ,base.credit_type = landing.credit_type
      ,base.credits = landing.credits
      ,base.level_type = landing.level_type
      ,base.level_number = landing.level_number
      ,base.field = landing.field
      ,base.sub_field = landing.sub_field
      ,base.provider = landing.provider
      ,base.qa_organization = landing.qa_organization
      ,base.zd_edition_name = landing.zd_edition_name
      ,base.[datalakeinserttime] = landing.[datalakeinserttime]
      ,base.[RowHash] = landing.[RowHash]
      ,base.[BaseCreatedDate]	= GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_QUALIFICATION_TYPES_B0] base
JOIN [HR_Landing].dbo.[PER_QUALIFICATION_TYPES_B0Landing] landing ON base.[qualification_type_id] = landing.[qualification_type_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
104,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
SET
Base.effective_start_date = Landing.effective_start_date
,Base.effective_end_date = Landing.effective_end_date
,Base.business_group_id = Landing.business_group_id
,Base.person_type_id = Landing.person_type_id
,Base.last_name = Landing.last_name
,Base.start_date = Landing.start_date
,Base.applicant_number = Landing.applicant_number
,Base.background_check_status = Landing.background_check_status
,Base.background_date_check = Landing.background_date_check
,Base.blood_type = Landing.blood_type
,Base.comment_id = Landing.comment_id
,Base.correspondence_language = Landing.correspondence_language
,Base.current_applicant_flag = Landing.current_applicant_flag
,Base.current_emp_or_apl_flag = Landing.current_emp_or_apl_flag
,Base.current_employee_flag = Landing.current_employee_flag
,Base.date_employee_data_verified = Landing.date_employee_data_verified
,Base.date_of_birth = Landing.date_of_birth
,Base.email_address = Landing.email_address
,Base.employee_number = Landing.employee_number
,Base.expense_check_send_to_address = Landing.expense_check_send_to_address
,Base.fast_path_employee = Landing.fast_path_employee
,Base.first_name = Landing.first_name
,Base.fte_capacity = Landing.fte_capacity
,Base.full_name = Landing.full_name
,Base.hold_applicant_date_until = Landing.hold_applicant_date_until
,Base.honors = Landing.honors
,Base.internal_location = Landing.internal_location
,Base.known_as = Landing.known_as
,Base.last_medical_test_by = Landing.last_medical_test_by
,Base.last_medical_test_date = Landing.last_medical_test_date
,Base.mailstop = Landing.mailstop
,Base.marital_status = Landing.marital_status
,Base.middle_names = Landing.middle_names
,Base.nationality = Landing.nationality
,Base.national_identifier = Landing.national_identifier
,Base.office_number = Landing.office_number
,Base.on_military_service = Landing.on_military_service
,Base.order_name = Landing.order_name
,Base.pre_name_adjunct = Landing.pre_name_adjunct
,Base.previous_last_name = Landing.previous_last_name
,Base.projected_start_date = Landing.projected_start_date
,Base.rehire_authorizor = Landing.rehire_authorizor
,Base.rehire_reason = Landing.rehire_reason
,Base.rehire_recommendation = Landing.rehire_recommendation
,Base.resume_exists = Landing.resume_exists
,Base.resume_last_updated = Landing.resume_last_updated
,Base.registered_disabled_flag = Landing.registered_disabled_flag
,Base.second_passport_exists = Landing.second_passport_exists
,Base.sex = Landing.sex
,Base.student_status = Landing.student_status
,Base.suffix = Landing.suffix
,Base.title = Landing.title
,Base.vendor_id = Landing.vendor_id
,Base.work_schedule = Landing.work_schedule
,Base.work_telephone = Landing.work_telephone
,Base.coord_ben_med_pln_no = Landing.coord_ben_med_pln_no
,Base.coord_ben_no_cvg_flag = Landing.coord_ben_no_cvg_flag
,Base.dpdnt_adoption_date = Landing.dpdnt_adoption_date
,Base.dpdnt_vlntry_svce_flag = Landing.dpdnt_vlntry_svce_flag
,Base.receipt_of_death_cert_date = Landing.receipt_of_death_cert_date
,Base.uses_tobacco_flag = Landing.uses_tobacco_flag
,Base.benefit_group_id = Landing.benefit_group_id
,Base.request_id = Landing.request_id
,Base.program_application_id = Landing.program_application_id
,Base.program_id = Landing.program_id
,Base.program_update_date = Landing.program_update_date
,Base.attribute_category = Landing.attribute_category
,Base.attribute1 = Landing.attribute1
,Base.attribute2 = Landing.attribute2
,Base.attribute3 = Landing.attribute3
,Base.attribute4 = Landing.attribute4
,Base.attribute5 = Landing.attribute5
,Base.attribute6 = Landing.attribute6
,Base.attribute7 = Landing.attribute7
,Base.attribute8 = Landing.attribute8
,Base.attribute9 = Landing.attribute9
,Base.attribute10 = Landing.attribute10
,Base.attribute11 = Landing.attribute11
,Base.attribute12 = Landing.attribute12
,Base.attribute13 = Landing.attribute13
,Base.attribute14 = Landing.attribute14
,Base.attribute15 = Landing.attribute15
,Base.attribute16 = Landing.attribute16
,Base.attribute17 = Landing.attribute17
,Base.attribute18 = Landing.attribute18
,Base.attribute19 = Landing.attribute19
,Base.attribute20 = Landing.attribute20
,Base.attribute21 = Landing.attribute21
,Base.attribute22 = Landing.attribute22
,Base.attribute23 = Landing.attribute23
,Base.attribute24 = Landing.attribute24
,Base.attribute25 = Landing.attribute25
,Base.attribute26 = Landing.attribute26
,Base.attribute27 = Landing.attribute27
,Base.attribute28 = Landing.attribute28
,Base.attribute29 = Landing.attribute29
,Base.attribute30 = Landing.attribute30
,Base.last_update_date = Landing.last_update_date
,Base.last_updated_by = Landing.last_updated_by
,Base.last_update_login = Landing.last_update_login
,Base.created_by = Landing.created_by
,Base.creation_date = Landing.creation_date
,Base.per_information_category = Landing.per_information_category
,Base.per_information1 = Landing.per_information1
,Base.per_information2 = Landing.per_information2
,Base.per_information3 = Landing.per_information3
,Base.per_information4 = Landing.per_information4
,Base.per_information5 = Landing.per_information5
,Base.per_information6 = Landing.per_information6
,Base.per_information7 = Landing.per_information7
,Base.per_information8 = Landing.per_information8
,Base.per_information9 = Landing.per_information9
,Base.per_information10 = Landing.per_information10
,Base.per_information11 = Landing.per_information11
,Base.per_information12 = Landing.per_information12
,Base.per_information13 = Landing.per_information13
,Base.per_information14 = Landing.per_information14
,Base.per_information15 = Landing.per_information15
,Base.per_information16 = Landing.per_information16
,Base.per_information17 = Landing.per_information17
,Base.per_information18 = Landing.per_information18
,Base.per_information19 = Landing.per_information19
,Base.per_information20 = Landing.per_information20
,Base.per_information21 = Landing.per_information21
,Base.per_information22 = Landing.per_information22
,Base.per_information23 = Landing.per_information23
,Base.per_information24 = Landing.per_information24
,Base.per_information25 = Landing.per_information25
,Base.per_information26 = Landing.per_information26
,Base.per_information27 = Landing.per_information27
,Base.per_information28 = Landing.per_information28
,Base.per_information29 = Landing.per_information29
,Base.per_information30 = Landing.per_information30
,Base.object_version_number = Landing.object_version_number
,Base.date_of_death = Landing.date_of_death
,Base.original_date_of_hire = Landing.original_date_of_hire
,Base.town_of_birth = Landing.town_of_birth
,Base.region_of_birth = Landing.region_of_birth
,Base.country_of_birth = Landing.country_of_birth
,Base.global_person_id = Landing.global_person_id
,Base.coord_ben_med_pl_name = Landing.coord_ben_med_pl_name
,Base.coord_ben_med_insr_crr_name = Landing.coord_ben_med_insr_crr_name
,Base.coord_ben_med_insr_crr_ident = Landing.coord_ben_med_insr_crr_ident
,Base.coord_ben_med_ext_er = Landing.coord_ben_med_ext_er
,Base.coord_ben_med_cvg_strt_dt = Landing.coord_ben_med_cvg_strt_dt
,Base.coord_ben_med_cvg_end_dt = Landing.coord_ben_med_cvg_end_dt
,Base.party_id = Landing.party_id
,Base.npw_number = Landing.npw_number
,Base.current_npw_flag = Landing.current_npw_flag
,Base.global_name = Landing.global_name
,Base.local_name = Landing.local_name
,Base.[RowHash] = landing.RowHash
,Base.[BaseCreatedDate] = GETDATE()
,Base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_ALL_PEOPLE_F_B0] base
    JOIN [HR_Landing].dbo.[PER_ALL_PEOPLE_F_B0Landing] landing
        ON base.person_id = landing.person_id
	and base.effective_start_date= landing.effective_start_date
	AND base.effective_end_date = landing.effective_end_date
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
105,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
SET BASE.[job_id]  =  Landing.[job_id]
,BASE.[business_group_id]  =  Landing.[business_group_id]
,BASE.[job_definition_id]  =  Landing.[job_definition_id]
,BASE.[date_from]  =  Landing.[date_from]
,BASE.[date_to]  =  Landing.[date_to]
,BASE.[name]  =  Landing.[name]
,BASE.[request_id]  =  Landing.[request_id]
,BASE.[program_application_id]  =  Landing.[program_application_id]
,BASE.[program_id]  =  Landing.[program_id]
,BASE.[program_update_date]  =  Landing.[program_update_date]
,BASE.[attribute_category]  =  Landing.[attribute_category]
,BASE.[attribute1]  =  Landing.[attribute1]
,BASE.[attribute2]  =  Landing.[attribute2]
,BASE.[attribute3]  =  Landing.[attribute3]
,BASE.[attribute4]  =  Landing.[attribute4]
,BASE.[attribute5]  =  Landing.[attribute5]
,BASE.[attribute6]  =  Landing.[attribute6]
,BASE.[attribute7]  =  Landing.[attribute7]
,BASE.[attribute8]  =  Landing.[attribute8]
,BASE.[attribute9]  =  Landing.[attribute9]
,BASE.[attribute10]  =  Landing.[attribute10]
,BASE.[attribute11]  =  Landing.[attribute11]
,BASE.[attribute12]  =  Landing.[attribute12]
,BASE.[attribute13]  =  Landing.[attribute13]
,BASE.[attribute14]  =  Landing.[attribute14]
,BASE.[attribute15]  =  Landing.[attribute15]
,BASE.[attribute16]  =  Landing.[attribute16]
,BASE.[attribute17]  =  Landing.[attribute17]
,BASE.[attribute18]  =  Landing.[attribute18]
,BASE.[attribute19]  =  Landing.[attribute19]
,BASE.[attribute20]  =  Landing.[attribute20]
,BASE.[last_update_date]  =  Landing.[last_update_date]
,BASE.[last_updated_by]  =  Landing.[last_updated_by]
,BASE.[last_update_login]  =  Landing.[last_update_login]
,BASE.[created_by]  =  Landing.[created_by]
,BASE.[creation_date]  =  Landing.[creation_date]
,BASE.[job_information_category]  =  Landing.[job_information_category]
,BASE.[job_information1]  =  Landing.[job_information1]
,BASE.[job_information2]  =  Landing.[job_information2]
,BASE.[job_information3]  =  Landing.[job_information3]
,BASE.[job_information4]  =  Landing.[job_information4]
,BASE.[job_information5]  =  Landing.[job_information5]
,BASE.[job_information6]  =  Landing.[job_information6]
,BASE.[job_information7]  =  Landing.[job_information7]
,BASE.[job_information8]  =  Landing.[job_information8]
,BASE.[job_information9]  =  Landing.[job_information9]
,BASE.[job_information10]  =  Landing.[job_information10]
,BASE.[job_information11]  =  Landing.[job_information11]
,BASE.[job_information12]  =  Landing.[job_information12]
,BASE.[job_information13]  =  Landing.[job_information13]
,BASE.[job_information14]  =  Landing.[job_information14]
,BASE.[job_information15]  =  Landing.[job_information15]
,BASE.[object_version_number]  =  Landing.[object_version_number]
,BASE.[job_information16]  =  Landing.[job_information16]
,BASE.[job_information17]  =  Landing.[job_information17]
,BASE.[job_information18]  =  Landing.[job_information18]
,BASE.[job_information19]  =  Landing.[job_information19]
,BASE.[job_information20]  =  Landing.[job_information20]
,BASE.[benchmark_job_flag]  =  Landing.[benchmark_job_flag]
,BASE.[benchmark_job_id]  =  Landing.[benchmark_job_id]
,BASE.[emp_rights_flag]  =  Landing.[emp_rights_flag]
,BASE.[job_group_id]  =  Landing.[job_group_id]
,BASE.[approval_authority]  =  Landing.[approval_authority]
,BASE.[comments]  =  Landing.[comments]
,BASE.[datalakeinserttime]  =  Landing.[datalakeinserttime]

   , base.[RowHash] = landing.[RowHash],
    base.[BaseCreatedDate] = GETDATE(),
    base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_JOBS_B0] base
    JOIN [HR_Landing].dbo.[PER_JOBS_B0Landing] landing
        ON base.job_id = landing.job_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
106,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
SET base.[Login_id] = landing.[Login_id],
    base.[User_id] = landing.[User_id],
    base.[Start_time] = landing.[Start_time],
    base.[End_time] = landing.[End_time],
    base.[pid] = landing.[pid],
    base.[Spid] = landing.[Spid],
    base.[Terminal_id] = landing.[Terminal_id],
    base.[Login_name] = landing.[Login_name],
    base.[Session_number] = landing.[Session_number],
    base.[Submitted_login_id] = landing.[Submitted_login_id],
    base.[Serial#] = landing.[Serial#],
    base.[process_spid] = landing.[process_spid],
    base.[login_type] = landing.[login_type],
    base.[datalakeinserttime] = landing.[datalakeinserttime],
    base.[RowHash] = landing.[RowHash],
    base.[BaseCreatedDate] = GETDATE(),
    base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[Fnd_Logins_B0] base
    JOIN [HR_Landing].dbo.[Fnd_Logins_B0Landing] landing
        ON base.Login_id = landing.Login_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
107,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
SET base.[org_structure_element_id] = landing.[org_structure_element_id],
    base.[business_group_id] = landing.[business_group_id],
    base.[organization_id_parent] = landing.[organization_id_parent],
    base.[org_structure_version_id] = landing.[org_structure_version_id],
    base.[organization_id_child] = landing.[organization_id_child],
    base.[request_id] = landing.[request_id],
    base.[program_application_id] = landing.[program_application_id],
    base.[program_id] = landing.[program_id],
    base.[program_update_date] = landing.[program_update_date],
    base.[last_update_date] = landing.[last_update_date],
    base.[last_updated_by] = landing.[last_updated_by],
    base.[last_update_login] = landing.[last_update_login],
    base.[created_by] = landing.[created_by],
    base.[creation_date] = landing.[creation_date],
    base.[object_version_number] = landing.[object_version_number],
    base.[position_control_enabled_flag] = landing.[position_control_enabled_flag],
    base.[party_id] = landing.[party_id],
    base.[datalakeinserttime] = landing.[datalakeinserttime],
    base.[RowHash] = landing.[RowHash],
    base.[BaseCreatedDate] = GETDATE(),
    base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[Per_Org_Structure_Elements_B0] base
    JOIN [HR_Landing].dbo.[Per_Org_Structure_Elements_B0Landing] landing
        ON base.[org_structure_element_id] = landing.[org_structure_element_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
108,Package\Base - Data Load\SQL - Update modified records,"UPDATE base
SET base.flex_value_id = landing.flex_value_id,
    base.language = landing.language,
    base.last_update_date = landing.last_update_date,
    base.last_updated_by = landing.last_updated_by,
    base.creation_date = landing.creation_date,
    base.created_by = landing.created_by,
    base.last_update_login = landing.last_update_login,
    base.description = landing.description,
    base.source_lang = landing.source_lang,
    base.flex_value_meaning = landing.flex_value_meaning,
    base.zd_edition_name = landing.zd_edition_name,
    base.[datalakeinserttime] = landing.[datalakeinserttime],
    base.[RowHash] = landing.[RowHash],
    base.[BaseCreatedDate] = GETDATE(),
    base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[FND_FLEX_VALUES_TL_B0] base
    JOIN [HR_Landing].dbo.[FND_FLEX_VALUES_TL_B0Landing] landing
        ON base.flex_value_id = landing.flex_value_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
109,Package\Base - Data Load\SQL - Update modified records,"UPDATE base SET 
	base.[flex_value_set_id] = landing.[flex_value_set_id],
	base.[flex_value] = landing.[flex_value],
	base.[last_update_date] = landing.[last_update_date],
	base.[last_updated_by] = landing.[last_updated_by],
	base.[creation_date] = landing.[creation_date],
	base.[created_by] = landing.[created_by],
	base.[last_update_login] = landing.[last_update_login],
	base.[enabled_flag] = landing.[enabled_flag],
	base.[summary_flag] = landing.[summary_flag],
	base.[start_date_active] = landing.[start_date_active],
	base.[end_date_active] = landing.[end_date_active],
	base.[parent_flex_value_low] = landing.[parent_flex_value_low],
	base.[parent_flex_value_high] = landing.[parent_flex_value_high],
	base.[structured_hierarchy_level] = landing.[structured_hierarchy_level],
	base.[hierarchy_level] = landing.[hierarchy_level],
	base.[compiled_value_attributes] = landing.[compiled_value_attributes],
	base.[value_category] = landing.[value_category],
	base.[attribute1] = landing.[attribute1],
	base.[attribute2] = landing.[attribute2],
	base.[attribute3] = landing.[attribute3],
	base.[attribute4] = landing.[attribute4],
	base.[attribute5] = landing.[attribute5],
	base.[attribute6] = landing.[attribute6],
	base.[attribute7] = landing.[attribute7],
	base.[attribute8] = landing.[attribute8],
	base.[attribute9] = landing.[attribute9],
	base.[attribute10] = landing.[attribute10],
	base.[attribute11] = landing.[attribute11],
	base.[attribute12] = landing.[attribute12],
	base.[attribute13] = landing.[attribute13],
	base.[attribute14] = landing.[attribute14],
	base.[attribute15] = landing.[attribute15],
	base.[attribute16] = landing.[attribute16],
	base.[attribute17] = landing.[attribute17],
	base.[attribute18] = landing.[attribute18],
	base.[attribute19] = landing.[attribute19],
	base.[attribute20] = landing.[attribute20],
	base.[attribute21] = landing.[attribute21],
	base.[attribute22] = landing.[attribute22],
	base.[attribute23] = landing.[attribute23],
	base.[attribute24] = landing.[attribute24],
	base.[attribute25] = landing.[attribute25],
	base.[attribute26] = landing.[attribute26],
	base.[attribute27] = landing.[attribute27],
	base.[attribute28] = landing.[attribute28],
	base.[attribute29] = landing.[attribute29],
	base.[attribute30] = landing.[attribute30],
	base.[attribute31] = landing.[attribute31],
	base.[attribute32] = landing.[attribute32],
	base.[attribute33] = landing.[attribute33],
	base.[attribute34] = landing.[attribute34],
	base.[attribute35] = landing.[attribute35],
	base.[attribute36] = landing.[attribute36],
	base.[attribute37] = landing.[attribute37],
	base.[attribute38] = landing.[attribute38],
	base.[attribute39] = landing.[attribute39],
	base.[attribute40] = landing.[attribute40],
	base.[attribute41] = landing.[attribute41],
	base.[attribute42] = landing.[attribute42],
	base.[attribute43] = landing.[attribute43],
	base.[attribute44] = landing.[attribute44],
	base.[attribute45] = landing.[attribute45],
	base.[attribute46] = landing.[attribute46],
	base.[attribute47] = landing.[attribute47],
	base.[attribute48] = landing.[attribute48],
	base.[attribute49] = landing.[attribute49],
	base.[attribute50] = landing.[attribute50],
	base.[attribute_sort_order] = landing.[attribute_sort_order],
	base.[zd_edition_name] = landing.[zd_edition_name],
	base.[datalakeinserttime] = landing.[datalakeinserttime],
	base.[RowHash] = landing.[RowHash],
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[FND_FLEX_VALUES_B0] base
JOIN [HR_Landing].dbo.[FND_FLEX_VALUES_B0Landing] landing ON base.[flex_value_id] = landing.[flex_value_id]
WHERE base.[RowHash] != landing.[RowHash];

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
110,Package\Base - Data Load\SQL - Update modified records,"UPDATE base SET 
	base.[language] = landing.[language],
	base.[meaning] = landing.[meaning],
	base.[description] = landing.[description],
	base.[enabled_flag] = landing.[enabled_flag],
	base.[start_date_active] = landing.[start_date_active],
	base.[end_date_active] = landing.[end_date_active],
	base.[created_by] = landing.[created_by],
	base.[creation_date] = landing.[creation_date],
	base.[last_updated_by] = landing.[last_updated_by],
	base.[last_update_login] = landing.[last_update_login],
	base.[last_update_date] = landing.[last_update_date],
	base.[source_lang] = landing.[source_lang],
	base.[security_group_id] = landing.[security_group_id],
	base.[territory_code] = landing.[territory_code],
	base.[attribute_category] = landing.[attribute_category],
	base.[attribute1] = landing.[attribute1],
	base.[attribute2] = landing.[attribute2],
	base.[attribute3] = landing.[attribute3],
	base.[attribute4] = landing.[attribute4],
	base.[attribute5] = landing.[attribute5],
	base.[attribute6] = landing.[attribute6],
	base.[attribute7] = landing.[attribute7],
	base.[attribute8] = landing.[attribute8],
	base.[attribute9] = landing.[attribute9],
	base.[attribute10] = landing.[attribute10],
	base.[attribute11] = landing.[attribute11],
	base.[attribute12] = landing.[attribute12],
	base.[attribute13] = landing.[attribute13],
	base.[attribute14] = landing.[attribute14],
	base.[attribute15] = landing.[attribute15],
	base.[tag] = landing.[tag],
	base.[leaf_node] = landing.[leaf_node],
	base.[zd_edition_name] = landing.[zd_edition_name],
	base.[datalakeinserttime] = landing.[datalakeinserttime],
	base.[RowHash] = landing.[RowHash],
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[FND_LOOKUP_VALUES_B0] base
JOIN [HR_Landing].dbo.[FND_LOOKUP_VALUES_B0Landing] landing 
	ON base.[lookup_type] COLLATE Latin1_General_CS_AS = landing.[lookup_type] COLLATE Latin1_General_CS_AS
	AND base.[lookup_code] COLLATE Latin1_General_CS_AS = landing.[lookup_code] COLLATE Latin1_General_CS_AS
	AND base.[view_application_id] = landing.[view_application_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
111,Package\Base - Data Load\SQL - Update modified records,"UPDATE base SET 
	base.attribute_category	= landing.attribute_category,
	base.attribute1 = landing.attribute1,
	base.attribute10 = landing.attribute10,
	base.attribute11 = landing.attribute11,
	base.attribute12 = landing.attribute12,
	base.attribute13 = landing.attribute13,
	base.attribute14 = landing.attribute14,
	base.attribute15 = landing.attribute15,
	base.attribute16 = landing.attribute16,
	base.attribute17 = landing.attribute17,
	base.attribute18 = landing.attribute18,
	base.attribute19 = landing.attribute19,
	base.attribute2 = landing.attribute2,
	base.attribute20 = landing.attribute20,
	base.attribute21 = landing.attribute21,
	base.attribute22 = landing.attribute22,
	base.attribute23 = landing.attribute23,
	base.attribute24 = landing.attribute24,
	base.attribute25 = landing.attribute25,
	base.attribute26 = landing.attribute26,
	base.attribute27 = landing.attribute27,
	base.attribute28 = landing.attribute28,
	base.attribute29 = landing.attribute29,
	base.attribute3 = landing.attribute3,
	base.attribute30 = landing.attribute30,
	base.attribute4 = landing.attribute4,
	base.attribute5 = landing.attribute5,
	base.attribute6 = landing.attribute6,
	base.attribute7 = landing.attribute7,
	base.attribute8 = landing.attribute8,
	base.attribute9 = landing.attribute9,
	base.business_group_id = landing.business_group_id,
	base.comments = landing.comments,
	base.cost_allocation_keyflex_id = landing.cost_allocation_keyflex_id,
	base.created_by = landing.created_by,
	base.creation_date = landing.creation_date,
	base.datalakeinserttime = landing.datalakeinserttime,
	base.date_from = landing.date_from,
	base.date_to = landing.date_to,
	base.internal_address_line = landing.internal_address_line,
	base.internal_external_flag = landing.internal_external_flag,
	base.last_update_date = landing.last_update_date,
	base.last_update_login = landing.last_update_login,
	base.last_updated_by = landing.last_updated_by,
	base.location_id = landing.location_id,
	base.[name] = landing.[name],
	base.object_version_number = landing.object_version_number,
	base.party_id = landing.party_id,
	base.program_application_id = landing.program_application_id,
	base.program_id = landing.program_id,
	base.program_update_date = landing.program_update_date,
	base.request_id = landing.request_id,
	base.soft_coding_keyflex_id = landing.soft_coding_keyflex_id,
	base.[type] = landing.[type],
	base.[RowHash] = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[HR_ALL_ORGANIZATION_UNITS_B0] base
JOIN [HR_Landing].dbo.[HR_ALL_ORGANIZATION_UNITS_B0Landing] landing 
	ON base.organization_id = landing.organization_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
112,Package\Base - Data Load\SQL - Update modified records,"UPDATE base SET 
	base.business_group_id = landing.business_group_id,
	base.grade_definition_id = landing.grade_definition_id,
	base.date_from = landing.date_from,
	base.[sequence] = landing.[sequence],
	base.date_to = landing.date_to,
	base.[name] = landing.[name],
	base.request_id = landing.request_id,
	base.program_application_id = landing.program_application_id,
	base.program_id = landing.program_id,
	base.program_update_date = landing.program_update_date,
	base.attribute_category = landing.attribute_category,
	base.attribute1 = landing.attribute1,
	base.attribute2 = landing.attribute2,
	base.attribute3 = landing.attribute3,
	base.attribute4 = landing.attribute4,
	base.attribute5 = landing.attribute5,
	base.attribute6 = landing.attribute6,
	base.attribute7 = landing.attribute7,
	base.attribute8 = landing.attribute8,
	base.attribute9 = landing.attribute9,
	base.attribute10 = landing.attribute10,
	base.attribute11 = landing.attribute11,
	base.attribute12 = landing.attribute12,
	base.attribute13 = landing.attribute13,
	base.attribute14 = landing.attribute14,
	base.attribute15 = landing.attribute15,
	base.attribute16 = landing.attribute16,
	base.attribute17 = landing.attribute17,
	base.attribute18 = landing.attribute18,
	base.attribute19 = landing.attribute19,
	base.attribute20 = landing.attribute20,
	base.last_update_date = landing.last_update_date,
	base.last_updated_by = landing.last_updated_by,
	base.last_update_login = landing.last_update_login,
	base.created_by = landing.created_by,
	base.creation_date = landing.creation_date,
	base.information_category = landing.information_category,
	base.information1 = landing.information1,
	base.information2 = landing.information2,
	base.information3 = landing.information3,
	base.information4 = landing.information4,
	base.information5 = landing.information5,
	base.information6 = landing.information6,
	base.information7 = landing.information7,
	base.information8 = landing.information8,
	base.information9 = landing.information9,
	base.information10 = landing.information10,
	base.information11 = landing.information11,
	base.information12 = landing.information12,
	base.information13 = landing.information13,
	base.information14 = landing.information14,
	base.information15 = landing.information15,
	base.information16 = landing.information16,
	base.information17 = landing.information17,
	base.information18 = landing.information18,
	base.information19 = landing.information19,
	base.information20 = landing.information20,
	base.object_version_number = landing.object_version_number,
	base.short_name = landing.short_name,
	base.comments = landing.comments,
	base.datalakeinserttime = landing.datalakeinserttime,
	base.[RowHash] = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_GRADES_B0] base
JOIN [HR_Landing].dbo.[PER_GRADES_B0Landing] landing 
	ON base.grade_id = landing.grade_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;
",1,1,0,0,0,0,1
113,Package\Base - Data Load\SQL - Update modified records,"UPDATE base SET 
	base.concatenated_segments = landing.concatenated_segments,
	base.id_flex_num = landing.id_flex_num,
	base.summary_flag = landing.summary_flag,
	base.enabled_flag = landing.enabled_flag,
	base.start_date_active = landing.start_date_active,
	base.end_date_active = landing.end_date_active,
	base.segment1 = landing.segment1,
	base.segment2 = landing.segment2,
	base.segment3 = landing.segment3,
	base.segment4 = landing.segment4,
	base.segment5 = landing.segment5,
	base.segment6 = landing.segment6,
	base.segment7 = landing.segment7,
	base.segment8 = landing.segment8,
	base.segment9 = landing.segment9,
	base.segment10 = landing.segment10,
	base.segment11 = landing.segment11,
	base.segment12 = landing.segment12,
	base.segment13 = landing.segment13,
	base.segment14 = landing.segment14,
	base.segment15 = landing.segment15,
	base.segment16 = landing.segment16,
	base.segment17 = landing.segment17,
	base.segment18 = landing.segment18,
	base.segment19 = landing.segment19,
	base.segment20 = landing.segment20,
	base.segment21 = landing.segment21,
	base.segment22 = landing.segment22,
	base.segment23 = landing.segment23,
	base.segment24 = landing.segment24,
	base.segment25 = landing.segment25,
	base.segment26 = landing.segment26,
	base.segment27 = landing.segment27,
	base.segment28 = landing.segment28,
	base.segment29 = landing.segment29,
	base.segment30 = landing.segment30,
	base.last_update_date = landing.last_update_date,
	base.last_updated_by = landing.last_updated_by,
	base.last_update_login = landing.last_update_login,
	base.created_by = landing.created_by,
	base.creation_date = landing.creation_date,
	base.datalakeinserttime = landing.datalakeinserttime,
	base.[RowHash] = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PAY_COST_ALLOCATION_KEYFLEX_B0] base
JOIN [HR_Landing].dbo.[PAY_COST_ALLOCATION_KEYFLEX_B0Landing] landing 
	ON base.cost_allocation_keyflex_id = landing.cost_allocation_keyflex_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
114,Package\Base - Data Load\SQL - Update modified records,"UPDATE base SET 
	base.last_update_date = landing.last_update_date,
	base.last_updated_by = landing.last_updated_by,
	base.vendor_name = landing.vendor_name,
	base.vendor_name_alt = landing.vendor_name_alt,
	base.segment1 = landing.segment1,
	base.summary_flag = landing.summary_flag,
	base.enabled_flag = landing.enabled_flag,
	base.segment2 = landing.segment2,
	base.segment3 = landing.segment3,
	base.segment4 = landing.segment4,
	base.segment5 = landing.segment5,
	base.last_update_login = landing.last_update_login,
	base.creation_date = landing.creation_date,
	base.created_by = landing.created_by,
	base.employee_id = landing.employee_id,
	base.vendor_type_lookup_code = landing.vendor_type_lookup_code,
	base.customer_num = landing.customer_num,
	base.one_time_flag = landing.one_time_flag,
	base.parent_vendor_id = landing.parent_vendor_id,
	base.min_order_amount = landing.min_order_amount,
	base.ship_to_location_id = landing.ship_to_location_id,
	base.bill_to_location_id = landing.bill_to_location_id,
	base.ship_via_lookup_code = landing.ship_via_lookup_code,
	base.freight_terms_lookup_code = landing.freight_terms_lookup_code,
	base.fob_lookup_code = landing.fob_lookup_code,
	base.terms_id = landing.terms_id,
	base.set_of_books_id = landing.set_of_books_id,
	base.credit_status_lookup_code = landing.credit_status_lookup_code,
	base.credit_limit = landing.credit_limit,
	base.always_take_disc_flag = landing.always_take_disc_flag,
	base.pay_date_basis_lookup_code = landing.pay_date_basis_lookup_code,
	base.pay_group_lookup_code = landing.pay_group_lookup_code,
	base.payment_priority = landing.payment_priority,
	base.invoice_currency_code = landing.invoice_currency_code,
	base.payment_currency_code = landing.payment_currency_code,
	base.invoice_amount_limit = landing.invoice_amount_limit,
	base.exchange_date_lookup_code = landing.exchange_date_lookup_code,
	base.hold_all_payments_flag = landing.hold_all_payments_flag,
	base.hold_future_payments_flag = landing.hold_future_payments_flag,
	base.hold_reason = landing.hold_reason,
	base.distribution_set_id = landing.distribution_set_id,
	base.accts_pay_code_combination_id = landing.accts_pay_code_combination_id,
	base.disc_lost_code_combination_id = landing.disc_lost_code_combination_id,
	base.disc_taken_code_combination_id = landing.disc_taken_code_combination_id,
	base.expense_code_combination_id = landing.expense_code_combination_id,
	base.prepay_code_combination_id = landing.prepay_code_combination_id,
	base.num_1099 = landing.num_1099,
	base.type_1099 = landing.type_1099,
	base.withholding_status_lookup_code = landing.withholding_status_lookup_code,
	base.withholding_start_date = landing.withholding_start_date,
	base.organization_type_lookup_code = landing.organization_type_lookup_code,
	base.vat_code = landing.vat_code,
	base.start_date_active = landing.start_date_active,
	base.end_date_active = landing.end_date_active,
	base.minority_group_lookup_code = landing.minority_group_lookup_code,
	base.payment_method_lookup_code = landing.payment_method_lookup_code,
	base.bank_account_name = landing.bank_account_name,
	base.bank_account_num = landing.bank_account_num,
	base.bank_num = landing.bank_num,
	base.bank_account_type = landing.bank_account_type,
	base.women_owned_flag = landing.women_owned_flag,
	base.small_business_flag = landing.small_business_flag,
	base.standard_industry_class = landing.standard_industry_class,
	base.hold_flag = landing.hold_flag,
	base.purchasing_hold_reason = landing.purchasing_hold_reason,
	base.hold_by = landing.hold_by,
	base.hold_date = landing.hold_date,
	base.terms_date_basis = landing.terms_date_basis,
	base.price_tolerance = landing.price_tolerance,
	base.inspection_required_flag = landing.inspection_required_flag,
	base.receipt_required_flag = landing.receipt_required_flag,
	base.qty_rcv_tolerance = landing.qty_rcv_tolerance,
	base.qty_rcv_exception_code = landing.qty_rcv_exception_code,
	base.enforce_ship_to_location_code = landing.enforce_ship_to_location_code,
	base.days_early_receipt_allowed = landing.days_early_receipt_allowed,
	base.days_late_receipt_allowed = landing.days_late_receipt_allowed,
	base.receipt_days_exception_code = landing.receipt_days_exception_code,
	base.receiving_routing_id = landing.receiving_routing_id,
	base.allow_substitute_receipts_flag = landing.allow_substitute_receipts_flag,
	base.allow_unordered_receipts_flag = landing.allow_unordered_receipts_flag,
	base.hold_unmatched_invoices_flag = landing.hold_unmatched_invoices_flag,
	base.exclusive_payment_flag = landing.exclusive_payment_flag,
	base.ap_tax_rounding_rule = landing.ap_tax_rounding_rule,
	base.auto_tax_calc_flag = landing.auto_tax_calc_flag,
	base.auto_tax_calc_override = landing.auto_tax_calc_override,
	base.amount_includes_tax_flag = landing.amount_includes_tax_flag,
	base.tax_verification_date = landing.tax_verification_date,
	base.name_control = landing.name_control,
	base.state_reportable_flag = landing.state_reportable_flag,
	base.federal_reportable_flag = landing.federal_reportable_flag,
	base.attribute_category = landing.attribute_category,
	base.attribute1 = landing.attribute1,
	base.attribute2 = landing.attribute2,
	base.attribute3 = landing.attribute3,
	base.attribute4 = landing.attribute4,
	base.attribute5 = landing.attribute5,
	base.attribute6 = landing.attribute6,
	base.attribute7 = landing.attribute7,
	base.attribute8 = landing.attribute8,
	base.attribute9 = landing.attribute9,
	base.attribute10 = landing.attribute10,
	base.attribute11 = landing.attribute11,
	base.attribute12 = landing.attribute12,
	base.attribute13 = landing.attribute13,
	base.attribute14 = landing.attribute14,
	base.attribute15 = landing.attribute15,
	base.request_id = landing.request_id,
	base.program_application_id = landing.program_application_id,
	base.program_id = landing.program_id,
	base.program_update_date = landing.program_update_date,
	base.offset_vat_code = landing.offset_vat_code,
	base.vat_registration_num = landing.vat_registration_num,
	base.auto_calculate_interest_flag = landing.auto_calculate_interest_flag,
	base.validation_number = landing.validation_number,
	base.exclude_freight_from_discount = landing.exclude_freight_from_discount,
	base.tax_reporting_name = landing.tax_reporting_name,
	base.check_digits = landing.check_digits,
	base.bank_number = landing.bank_number,
	base.allow_awt_flag = landing.allow_awt_flag,
	base.awt_group_id = landing.awt_group_id,
	base.global_attribute1 = landing.global_attribute1,
	base.global_attribute2 = landing.global_attribute2,
	base.global_attribute3 = landing.global_attribute3,
	base.global_attribute4 = landing.global_attribute4,
	base.global_attribute5 = landing.global_attribute5,
	base.global_attribute6 = landing.global_attribute6,
	base.global_attribute7 = landing.global_attribute7,
	base.global_attribute8 = landing.global_attribute8,
	base.global_attribute9 = landing.global_attribute9,
	base.global_attribute10 = landing.global_attribute10,
	base.global_attribute11 = landing.global_attribute11,
	base.global_attribute12 = landing.global_attribute12,
	base.global_attribute13 = landing.global_attribute13,
	base.global_attribute14 = landing.global_attribute14,
	base.global_attribute15 = landing.global_attribute15,
	base.global_attribute16 = landing.global_attribute16,
	base.global_attribute17 = landing.global_attribute17,
	base.global_attribute18 = landing.global_attribute18,
	base.global_attribute19 = landing.global_attribute19,
	base.global_attribute20 = landing.global_attribute20,
	base.global_attribute_category = landing.global_attribute_category,
	base.edi_transaction_handling = landing.edi_transaction_handling,
	base.edi_payment_method = landing.edi_payment_method,
	base.edi_payment_format = landing.edi_payment_format,
	base.edi_remittance_method = landing.edi_remittance_method,
	base.edi_remittance_instruction = landing.edi_remittance_instruction,
	base.bank_charge_bearer = landing.bank_charge_bearer,
	base.bank_branch_type = landing.bank_branch_type,
	base.match_option = landing.match_option,
	base.future_dated_payment_ccid = landing.future_dated_payment_ccid,
	base.create_debit_memo_flag = landing.create_debit_memo_flag,
	base.offset_tax_flag = landing.offset_tax_flag,
	base.party_id = landing.party_id,
	base.parent_party_id = landing.parent_party_id,
	base.ni_number = landing.ni_number,
	base.tca_sync_num_1099 = landing.tca_sync_num_1099,
	base.tca_sync_vendor_name = landing.tca_sync_vendor_name,
	base.tca_sync_vat_reg_num = landing.tca_sync_vat_reg_num,
	base.unique_tax_reference_num = landing.unique_tax_reference_num,
	base.partnership_utr = landing.partnership_utr,
	base.partnership_name = landing.partnership_name,
	base.cis_enabled_flag = landing.cis_enabled_flag,
	base.first_name = landing.first_name,
	base.second_name = landing.second_name,
	base.last_name = landing.last_name,
	base.salutation = landing.salutation,
	base.trading_name = landing.trading_name,
	base.work_reference = landing.work_reference,
	base.company_registration_number = landing.company_registration_number,
	base.national_insurance_number = landing.national_insurance_number,
	base.verification_number = landing.verification_number,
	base.verification_request_id = landing.verification_request_id,
	base.match_status_flag = landing.match_status_flag,
	base.cis_verification_date = landing.cis_verification_date,
	base.individual_1099 = landing.individual_1099,
	base.pay_awt_group_id = landing.pay_awt_group_id,
	base.cis_parent_vendor_id = landing.cis_parent_vendor_id,
	base.bus_class_last_certified_date = landing.bus_class_last_certified_date,
	base.bus_class_last_certified_by = landing.bus_class_last_certified_by,
	base.datalakeinserttime = landing.datalakeinserttime,
	base.[RowHash] = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[AP_SUPPLIERS_B0] base
JOIN [HR_Landing].dbo.[AP_SUPPLIERS_B0Landing] landing 
	ON base.vendor_id = landing.vendor_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
115,Package\Base - Data Load\SQl - Soft Delete From AssessmentBN,"WITH Assessment AS
(
SELECT  
	    ( coalesce(PAC.segment1,'') + case when PAC.segment1 is not null or PAC.segment3 is not null then   '_' end  + coalesce (PAC.segment3,'')) AS  AssessmentID 
FROM dbo.PER_ANALYSIS_CRITERIA_B0 PAC
     LEFT JOIN dbo.FND_ID_FLEX_STRUCTURES_TL_B0 FIFST
        ON PAC.id_flex_num = FIFST.id_flex_num
WHERE  FIFST.id_flex_structure_name='Assessment -'
)

UPDATE Trmn
SET Trmn.Deleted = 'Y',
    Trmn.BaseModifiedDate = GETDATE(),
   Trmn.UpdateAuditID = ?
FROM AssessmentBN Trmn
WHERE NOT EXISTS
      (
          SELECT 1
		  FROM Assessment pps
		  WHERE pps.AssessmentID=Trmn.AssessmentID
)		  
      
      AND Trmn.deleted IS NULL;

SELECT @@RowCount AS DeleteCount;",1,1,0,0,0,0,1
116,Package\Base - Data Load\SQl - Soft Delete From TerminationBN,"DECLARE @InsertAuditID bigint = ?

;WITH PerPeriodOfService AS
(
	SELECT
		Pps.PerPeriodsID AS period_of_service_id
	FROM
		dbo.PerPeriodsB10 AS Pps WITH (NOLOCK)
		LEFT JOIN
		dbo.FND_LOOKUP_VALUES_B0 AS Lkp WITH (NOLOCK)
			ON Pps.LeavingReason = Lkp.lookup_code
	WHERE
		Pps.PersonID IS NOT NULL
		AND Pps.ActualTerminationDate IS NOT NULL
)
UPDATE Trmn SET
	Trmn.Deleted = 'Y',
	Trmn.BaseModifiedDate = GETDATE(),
	Trmn.UpdateAuditID = @InsertAuditID
FROM
	dbo.TerminationBN AS Trmn
	WHERE NOT EXISTS
	(
		SELECT 1
		FROM dbo.PerPeriodsB10 AS pps WITH (NOLOCK)
		WHERE pps.PerPeriodsID = Trmn.PeriodofServiceID
	)
	AND Trmn.Deleted IS NULL;

SELECT @@RowCount AS DeleteCount;",1,1,0,0,0,0,1
117,Package\Base - Data Load\SQl - Update Modified Records,"
WITH B0Query AS 
(
SELECT 
 DISTINCT PAC.segment1 as AssessmentType,
  PAC.segment3 as AssessmentBand,
( coalesce(PAC.segment1,'') + case when PAC.segment1 is not null or PAC.segment3 is not null then   '_' end  + coalesce (PAC.segment3,'')) AS  AssessmentID 
, CAST(HASHBYTES('MD5',
(SELECT PAC.segment1 as AssessmentType,
  PAC.segment3 as AssessmentBand,
( coalesce(PAC.segment1,'') + case when PAC.segment1 is not null or PAC.segment3 is not null then   '_' end  + coalesce (PAC.segment3,'')) AS  AssessmentID FOR XML RAW)) AS BINARY(16)) AS RowHash
FROM dbo.PER_ANALYSIS_CRITERIA_B0 PAC
     LEFT JOIN dbo.FND_ID_FLEX_STRUCTURES_TL_B0 FIFST
        ON PAC.id_flex_num = FIFST.id_flex_num
WHERE  FIFST.id_flex_structure_name='Assessment -' 
)

, AssessmentBNUpdate AS (SELECT * FROM B0Query B0

WHERE EXISTS 
(SELECT 1 FROM dbo.AssessmentBN BN
WHERE BN.AssessmentID=B0.AssessmentID AND B0.RowHash<>BN.RowHash  )
)
UPDATE BN 

SET  [AssessmentType] =                      Upd.[AssessmentType],
    [AssessmentBand] =              Upd.[AssessmentBand],     
    [BaseModifiedDate] = GETDATE(),
    [UpdateAuditID] = ?,

    [RowHash] =upd.RowHash
	

	FROM dbo.AssessmentBN BN 
	JOIN AssessmentBNUpdate Upd ON BN.AssessmentID=Upd.AssessmentID

	
SELECT @@ROWCOUNT AS UpdateCount
    
",1,1,0,0,0,0,1
118,Package\Base - Data Load\SQl - Update Modified Records,"DECLARE @InsertAuditID bigint = ?
DECLARE @LastProcessedDate datetime = ?

;WITH B0Query AS
(
	SELECT
		Pps.PerPeriodsID AS period_of_service_id,
		CASE
			WHEN Lkp.meaning IS NULL THEN 'Unknown (' + ISNULL(Pps.LeavingReason, 'N/A') + ')'
			ELSE Lkp.meaning
		END AS [Termination Reason],
		CASE
			WHEN Lkp.attribute2 IS NULL THEN 'Unknown (' + ISNULL(Pps.LeavingReason, 'N/A') + ')'
			ELSE Lkp.attribute2
		END AS [Termination Type],
		CASE
			WHEN Pps.EligibleForRehireInd IS NULL THEN 'Unknown'
			ELSE Pps.EligibleForRehireInd
		END AS [Eligible FOR Rehire Indicator],
		CASE
			WHEN Pps.TwoWeekNoticeInd = 'Y' THEN 'Yes'
			WHEN Pps.TwoWeekNoticeInd = 'N' THEN 'No'
			WHEN Pps.TwoWeekNoticeInd IS NULL THEN 'Unknown'
			ELSE Pps.TwoWeekNoticeInd
		END AS [Two Week Notice Indicator],
		CASE
			WHEN Pps.RegrettableTerminationInd = 'Y' THEN 'Yes'
			WHEN Pps.RegrettableTerminationInd = 'N' THEN 'No'
			WHEN Pps.RegrettableTerminationInd IS NULL THEN 'Unknown'
			ELSE Pps.RegrettableTerminationInd
		END AS [Regrettable Termination Indicator],
		CASE
			WHEN Pps.TerminationComments IS NULL THEN 'N/A'
			ELSE Pps.TerminationComments
		END AS [Termination Comments],
		Pps.NotifiedTerminationDate AS [Termination Notified Date],
		Pps.LastWorkedDate AS [Last Worked Date]
	FROM
		dbo.PerPeriodsB10 AS Pps WITH (NOLOCK)
		LEFT JOIN
		dbo.FND_LOOKUP_VALUES_B0 AS Lkp WITH (NOLOCK)
			ON Pps.LeavingReason = Lkp.lookup_code AND
			Lkp.lookup_type = 'LEAV_REAS' AND
			Lkp.deleted = 'N' AND
			Lkp.view_application_id = 3
	WHERE
		--(Lkp.BaseCreatedDate > @LastProcessedDate OR Pps.BaseCreatedDate > @LastProcessedDate)
		(Lkp.BaseCreatedDate > @LastProcessedDate OR Pps.BaseModifiedDate > @LastProcessedDate)
		AND Pps.ActualTerminationDate IS NOT NULL
),
RowHashtoB0 AS
(
	SELECT
		A.period_of_service_id,
		A.[Termination Reason],
		A.[Termination Type],
		A.[Eligible FOR Rehire Indicator],
		A.[Two Week Notice Indicator],
		A.[Regrettable Termination Indicator],
		A.[Termination Comments],
		A.[Termination Notified Date],
		A.[Last Worked Date],
		CAST(HASHBYTES('MD5',
			(SELECT
				A.period_of_service_id,
				A.[Termination Reason],
				A.[Termination Type],
				A.[Eligible FOR Rehire Indicator],
				A.[Two Week Notice Indicator],
				A.[Regrettable Termination Indicator],
				A.[Termination Comments],
				A.[Termination Notified Date],
				A.[Last Worked Date] FOR XML RAW)) AS BINARY(16)
			) AS RowHash
			--GETDATE() AS BaseCreatedDate,
			--GETDATE() AS BaseModifiedDate
	FROM
		B0Query AS A 
),
TerminationBNUpdate AS
(
	SELECT
		*
	FROM
		RowHashtoB0 AS B0
	WHERE
		EXISTS 
		(
			SELECT 1 
			FROM dbo.TerminationBN WITH (NOLOCK)
			WHERE
				PeriodofServiceID = B0.period_of_service_id
				AND RowHash <> B0.RowHash
		)
)
UPDATE BN SET
	[TerminationReason]				= Upd.[Termination Reason],
	[TerminationType]				= Upd.[Termination Type],
	[EligibleforRehireIndicator]			= Upd.[Eligible FOR Rehire Indicator],
	[TwoWeekNoticeIndicator]			= Upd.[Two Week Notice Indicator],           
	[RegrettableTerminationIndicator]		= Upd.[Regrettable Termination Indicator],
	[TerminationComments]			= Upd.[Termination Comments],
	[TerminationNotifiedDate]			= Upd.[Termination Notified Date],
	[LastWorkedDate]				= Upd.[Last Worked Date],       
	[BaseModifiedDate]				= GETDATE(),
	[UpdateAuditID]				= @InsertAuditID,
	[RowHash]				= upd.RowHash
FROM
	dbo.TerminationBN AS BN 
	INNER JOIN
	TerminationBNUpdate AS Upd
		ON BN.PeriodofServiceID = Upd.period_of_service_id
	
SELECT @@ROWCOUNT AS UpdateCount",1,1,0,0,0,0,1
119,Package\Base - Data Load\SQl - Update Modified Records as SCD 1,"WITH PerQualifications AS 
(
SELECT 
pq.qualification_id AS QualificationID
, COALESCE(pqt.name, 'N/A') AS Accreditation
, COALESCE(pq.title, '') AS AreaOfStudy
, COALESCE(pq.start_date, '9999-12-31') AS AccreditationDate
, COALESCE(pq.comments, '') AS Comments
, CAST(HASHBYTES('MD5',
(SELECT pq.qualification_id
      , COALESCE(pqt.name, 'N/A') Accreditation
      , pq.title
      , pq.start_date
      , pq.comments FOR XML RAW)) AS BINARY(16)) AS RowHash
FROM dbo.PER_QUALIFICATIONS_B0 pq
LEFT JOIN dbo.PER_QUALIFICATION_TYPES_B0 pqt ON pq.qualification_type_id = pqt.qualification_type_id
WHERE pq.person_id IS NOT NULL
)
, PerQualificationUpdate AS
(
SELECT *
FROM PerQualifications pq
WHERE EXISTS
(
    SELECT 1
    FROM dbo.AccreditationBN abn
    WHERE pq.QualificationID = abn.QualificationID AND pq.RowHash <> abn.RowHash
)
)

UPDATE bn
   SET  bn.Accreditation	  =   base.Accreditation		
      , bn.AreaOfStudy		  =   base.AreaOfStudy		
      , bn.AccreditationDate  =   base.AccreditationDate  
      , bn.Comments		      =   base.Comments		    
      , bn.BaseModifiedDate	  =   GETDATE()    
      , bn.UpdateAuditID	  =   ?	    
      , bn.RowHash			  =   base.RowHash			
FROM dbo.AccreditationBN bn
JOIN PerQualificationUpdate base ON bn.QualificationID = base.QualificationID

SELECT @@ROWCOUNT AS UpdateCount ;",1,1,0,0,0,0,1
120,Package\Base - Data Load\SQl - Update RowStatus for history records,"UPDATE dbo.PayGradeBN 
SET RowStatus = 'H'
, BaseModifiedDate = GETDATE()
, UpdateAuditID = ?
WHERE CAST(BaseEndDate AS DATE)< CAST(GETDATE() AS DATE)
 AND RowStatus <> 'H'

SELECT @@ROWCOUNT + ? AS UpdateCount;",1,1,0,0,0,0,1
121,Package\Base - Data Load\SQl - Update RowStatus for history records,"UPDATE dbo.PositionBN 
SET RowStatus = 'H'
, BaseModifiedDate = GETDATE()
, UpdateAuditID = ?
WHERE
	CAST(BaseEndDate AS DATE)< CAST(GETDATE() AS DATE) 
	AND RowStatus <> 'H'

SELECT @@ROWCOUNT + ? AS UpdateCount;",1,1,0,0,0,0,1
122,Package\First landing - Data Load\SQL - Begin Landing Audit Log,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",3,3,0,0,0,0,3
123,Package\First landing - Data Load\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",3,3,0,0,0,0,3
124,Package\First landing - Data Load\SQL - Truncate First Landing Table,User::vPreLandingTruncateQuery,3,3,0,0,0,0,3
125,Package\First landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE TARGET 
SET target.RowHash=SRC.RowHash
FROM 
(SELECT Login_id,
HASHBYTES('MD5',
(SELECT  [Login_id]
      ,[User_id]
      ,[Start_time]
      ,[End_time]
      ,[pid]
      ,[Spid]
      ,[Terminal_id]
      ,[Login_name]
      ,[Session_number]
      ,[Submitted_login_id]
      ,[Serial#]
      ,[process_spid]
      ,[login_type] FOR XML RAW)) AS RowHash
      
  FROM [dbo].[FND_LOGINS_B0PreLanding]
) SRC
    JOIN [dbo].[FND_LOGINS_B0PreLanding] Target
        ON SRC.Login_id = Target.Login_id;
           
SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
126,Package\First landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE Target
SET Target.RowHash = SRC.RowHash
FROM
(
    SELECT assignment_id,
 effective_start_date,
 effective_end_date,
           HASHBYTES(   'MD5',
           (
               SELECT  [assignment_id]
                      ,[effective_start_date]
                      ,[effective_end_date]
                      ,[business_group_id]
                      ,[recruiter_id]
                      ,[grade_id]
                      ,[position_id]
                      ,[job_id]
                      ,[assignment_status_type_id]
                      ,[payroll_id]
                      ,[location_id]
                      ,[person_referred_by_id]
                      ,[supervisor_id]
                      ,[special_ceiling_step_id]
                      ,[person_id]
                      ,[recruitment_activity_id]
                      ,[source_organization_id]
                      ,[organization_id]
                      ,[people_group_id]
                      ,[soft_coding_keyflex_id]
                      ,[vacancy_id]
                      ,[pay_basis_id]
                      ,[assignment_sequence]
                      ,[assignment_type]
                      ,[primary_flag]
                      ,[application_id]
                      ,[assignment_number]
                      ,[change_reason]
                      ,[comment_id]
                      ,[date_probation_end]
                      ,[default_code_comb_id]
                      ,[employment_category]
                      ,[frequency]
                      ,[internal_address_line]
                      ,[manager_flag]
                      ,[normal_hours]
                      ,[perf_review_period]
                      ,[perf_review_period_frequency]
                      ,[period_of_service_id]
                      ,[probation_period]
                      ,[probation_unit]
                      ,[sal_review_period]
                      ,[sal_review_period_frequency]
                      ,[set_of_books_id]
                      ,[source_type]
                      ,[time_normal_finish]
                      ,[time_normal_start]
                      ,[bargaining_unit_code]
                      ,[labour_union_member_flag]
                      ,[hourly_salaried_code]
                      ,[contract_id]
                      ,[collective_agreement_id]
                      ,[cagr_id_flex_num]
                      ,[cagr_grade_def_id]
                      ,[establishment_id]
                      ,[request_id]
                      ,[program_application_id]
                      ,[program_id]
                      ,[program_update_date]
                      ,[ass_attribute_category]
                      ,[ass_attribute1]
                      ,[ass_attribute2]
                      ,[ass_attribute3]
                      ,[ass_attribute4]
                      ,[ass_attribute5]
                      ,[ass_attribute6]
                      ,[ass_attribute7]
                      ,[ass_attribute8]
                      ,[ass_attribute9]
                      ,[ass_attribute10]
                      ,[ass_attribute11]
                      ,[ass_attribute12]
                      ,[ass_attribute13]
                      ,[ass_attribute14]
                      ,[ass_attribute15]
                      ,[ass_attribute16]
                      ,[ass_attribute17]
                      ,[ass_attribute18]
                      ,[ass_attribute19]
                      ,[ass_attribute20]
                      ,[ass_attribute21]
                      ,[ass_attribute22]
                      ,[ass_attribute23]
                      ,[ass_attribute24]
                      ,[ass_attribute25]
                      ,[ass_attribute26]
                      ,[ass_attribute27]
                      ,[ass_attribute28]
                      ,[ass_attribute29]
                      ,[ass_attribute30]
                      ,[title]
                      ,[object_version_number]
                      ,[notice_period]
                      ,[notice_period_uom]
                      ,[employee_category]
                      ,[work_at_home]
                      ,[job_post_source_name]
                      ,[posting_content_id]
                      ,[period_of_placement_date_start]
                      ,[vendor_id]
                      ,[vendor_employee_number]
                      ,[vendor_assignment_number]
                      ,[assignment_category]
                      ,[project_title]
                      ,[applicant_rank]
                      ,[vendor_site_id]
                      ,[po_header_id]
                      ,[po_line_id]
                      ,[projected_assignment_end]
                      ,[grade_ladder_pgm_id]
                      ,[supervisor_assignment_id] FOR XML RAW			 
           )					 
                    ) AS RowHash			 
    FROM [dbo].[PER_ALL_ASSIGNMENTS_F_B0PreLanding]
) SRC										 
    JOIN [dbo].[PER_ALL_ASSIGNMENTS_F_B0PreLanding] Target
        ON SRC.assignment_id = Target.assignment_id 	 
           AND SRC.effective_start_date = Target.effective_start_date
           AND SRC.effective_end_date = Target.effective_end_date;

SELECT @@ROWCOUNT AS UpdateCount;			 ",1,1,0,0,0,0,1
127,Package\First landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE Target
SET Target.RowHash = SRC.RowHash
FROM
(
    SELECT person_id,
 effective_start_date,
 effective_end_date,
           HASHBYTES(   'MD5',
           (
               SELECT [person_id],
                      [effective_start_date],
                      [effective_end_date],
                      [business_group_id],
                      [person_type_id],
                      [last_name],
                      [start_date],
                      [applicant_number],
                      [background_check_status],
                      [background_date_check],
                      [blood_type],
                      [comment_id],
                      [correspondence_language],
                      [current_applicant_flag],
                      [current_emp_or_apl_flag],
                      [current_employee_flag],
                      [date_employee_data_verified],
                      [date_of_birth],
                      [email_address],
                      [employee_number],
                      [expense_check_send_to_address],
                      [fast_path_employee],
                      [first_name],
                      [fte_capacity],
                      [full_name],
                      [hold_applicant_date_until],
                      [honors],
                      [internal_location],
                      [known_as],
                      [last_medical_test_by],
                      [last_medical_test_date],
                      [mailstop],
                      [marital_status],
                      [middle_names],
                      [nationality],
                      [national_identifier],
                      [office_number],
                      [on_military_service],
                      [order_name],
                      [pre_name_adjunct],
                      [previous_last_name],
                      [projected_start_date],
                      [rehire_authorizor],
                      [rehire_reason],
                      [rehire_recommendation],
                      [resume_exists],
                      [resume_last_updated],
                      [registered_disabled_flag],
                      [second_passport_exists],
                      [sex],
                      [student_status],
                      [suffix],
                      [title],
                      [vendor_id],
                      [work_schedule],
                      [work_telephone],
                      [coord_ben_med_pln_no],
                      [coord_ben_no_cvg_flag],
                      [dpdnt_adoption_date],
                      [dpdnt_vlntry_svce_flag],
                      [receipt_of_death_cert_date],
                      [uses_tobacco_flag],
                      [benefit_group_id],
                      [request_id],
                      [program_application_id],
                      [program_id],
                      [program_update_date],
                      [attribute_category],
                      [attribute1],
                      [attribute2],
                      [attribute3],
                      [attribute4],
                      [attribute5],
                      [attribute6],
                      [attribute7],
                      [attribute8],
                      [attribute9],
                      [attribute10],
                      [attribute11],
                      [attribute12],
                      [attribute13],
                      [attribute14],
                      [attribute15],
                      [attribute16],
                      [attribute17],
                      [attribute18],
                      [attribute19],
                      [attribute20],
                      [attribute21],
                      [attribute22],
                      [attribute23],
                      [attribute24],
                      [attribute25],
                      [attribute26],
                      [attribute27],
                      [attribute28],
                      [attribute29],
                      [attribute30],
                      [per_information_category],
                      [per_information1],
                      [per_information2],
                      [per_information3],
                      [per_information4],
                      [per_information5],
                      [per_information6],
                      [per_information7],
                      [per_information8],
                      [per_information9],
                      [per_information10],
                      [per_information11],
                      [per_information12],
                      [per_information13],
                      [per_information14],
                      [per_information15],
                      [per_information16],
                      [per_information17],
                      [per_information18],
                      [per_information19],
                      [per_information20],
                      [per_information21],
                      [per_information22],
                      [per_information23],
                      [per_information24],
                      [per_information25],
                      [per_information26],
                      [per_information27],
                      [per_information28],
                      [per_information29],
                      [per_information30],
                      [object_version_number],
                      [date_of_death],
                      [original_date_of_hire],
                      [town_of_birth],
                      [region_of_birth],
                      [country_of_birth],
                      [global_person_id],
                      [coord_ben_med_pl_name],
                      [coord_ben_med_insr_crr_name],
                      [coord_ben_med_insr_crr_ident],
                      [coord_ben_med_ext_er],
                      [coord_ben_med_cvg_strt_dt],
                      [coord_ben_med_cvg_end_dt],
                      [party_id],
                      [npw_number],
                      [current_npw_flag],
                      [global_name],
                      [local_name]
               FOR XML RAW
           )
                    ) AS RowHash
    FROM [dbo].[PER_ALL_PEOPLE_F_B0PreLanding]
) SRC
    JOIN [dbo].[PER_ALL_PEOPLE_F_B0PreLanding] Target
        ON SRC.person_id = Target.person_id
           AND  SRC.effective_start_date= Target.effective_start_date
           AND SRC.effective_end_date = Target.effective_end_date;
SELECT @@ROWCOUNT AS UpdateCount;


",1,1,0,0,0,0,1
128,Package\Landing - Data Load\SQL - Begin Landing Audit Log,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",37,37,0,0,0,0,37
129,Package\Landing - Data Load\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",6,6,0,0,0,0,6
130,Package\Landing - Data Load\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",29,29,0,0,0,0,29
131,Package\Landing - Data Load\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?,?
GO",2,2,0,0,0,0,2
132,Package\Landing - Data Load\SQL - Insert Count,User::vLandingCountQuery,37,37,0,0,0,0,37
133,Package\Landing - Data Load\SQL - Truncate Landing Table,User::vLandingTruncateQuery,37,37,0,0,0,0,37
134,Package\Landing - Data Load\SQL - Update RowHash,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	competence_element_id,
	HASHBYTES('MD5',
(SELECT
	competence_element_id,
	business_group_id,
	object_version_number,
	[type],
	competence_id,
	member_competence_set_id,
	proficiency_level_id,
	high_proficiency_level_id,
	weighting_level_id,
	rating_level_id,
	person_id,
	enterprise_id,
	job_id,
	valid_grade_id,
	position_id,
	organization_id,
	work_item_id,
	competence_set_id,
	parent_competence_element_id,
	activity_version_id,
	assessment_id,
	assessment_type_id,
	mandatory,
	effective_date_from,
	effective_date_to,
	group_competence_type,
	competence_type,
	sequence_number,
	normal_elapse_duration,
	normal_elapse_duration_unit,
	source_of_proficiency_level,
	line_score,
	certification_date,
	certification_method,
	next_certification_date,
	attribute_category,
	attribute1,
	attribute2,
	attribute3,
	attribute4,
	attribute5,
	attribute6,
	attribute7,
	attribute8,
	attribute9,
	attribute10,
	attribute11,
	attribute12,
	attribute13,
	attribute14,
	attribute15,
	attribute16,
	attribute17,
	attribute18,
	attribute19,
	attribute20,
	[object_id],
	[object_name],
	party_id,
	qualification_type_id,
	unit_standard_type,
	[status],
	information_category,
	information1,
	information2,
	information3,
	information4,
	information5,
	information6,
	information7,
	information8,
	information9,
	information10,
	information11,
	information12,
	information13,
	information14,
	information15,
	information16,
	information17,
	information18,
	information19,
	information20,
	achieved_date,
	appr_line_score,
	[comments#1]
	FOR XML RAW)) AS RowHash
FROM dbo.PER_COMPETENCE_ELEMENTS_B0Landing l) src
JOIN dbo.PER_COMPETENCE_ELEMENTS_B0Landing target ON src.[competence_element_id] = target.[competence_element_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
135,Package\Landing - Data Load\SQL - Update RowHash,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	competence_id,
	HASHBYTES('MD5',
(SELECT
	[competence_id],
	[business_group_id],
	[object_version_number],
	[name],
	[description],
	[date_from],
	[date_to],
	[behavioural_indicator],
	[certification_required],
	[evaluation_method],
	[renewal_period_frequency],
	[renewal_period_units],
	[max_level],
	[min_level],
	[rating_scale_id],
	[attribute_category],
	[attribute1],
	[attribute2],
	[attribute3],
	[attribute4],
	[attribute5], 
	[attribute6], 
	[attribute7], 
	[attribute8], 
	[attribute9], 
	[attribute10],
	[attribute11],
	[attribute12],
	[attribute13],
	[attribute14],
	[attribute15],
	[attribute16],
	[attribute17],
	[attribute18],
	[attribute19],
	[attribute20],
	[competence_definition_id],
	[competence_alias],
	[competence_cluster],
	[unit_standard_id],
	[credit_type],
	[credits],
	[level_type],
	[level_number],
	[field],
	[sub_field],
	[provider],
	[qa_organization],
	[information_category],
	[information1],
	[information2],
	[information3],
	[information4],
	[information5],
	[information6],
	[information7],
	[information8],
	[information9],
	[information10],
	[information11],
	[information12],
	[information13],
	[information14],
	[information15],
	[information16],
	[information17],
	[information18],
	[information19],
	[information20]
	FOR XML RAW)) AS RowHash
FROM dbo.PER_COMPETENCES_B0Landing l) src
JOIN dbo.PER_COMPETENCES_B0Landing target ON src.[competence_id] = target.[competence_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
136,Package\Landing - Data Load\SQL - Update RowHash,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	cost_allocation_keyflex_id,
	HASHBYTES('MD5',
(SELECT
	concatenated_segments,
	id_flex_num,
	summary_flag,
	enabled_flag,
	start_date_active,
	end_date_active,
	segment1,
	segment2,
	segment3,
	segment4,
	segment5,
	segment6,
	segment7,
	segment8,
	segment9,
	segment10,
	segment11,
	segment12,
	segment13,
	segment14,
	segment15,
	segment16,
	segment17,
	segment18,
	segment19,
	segment20,
	segment21,
	segment22,
	segment23,
	segment24,
	segment25,
	segment26,
	segment27,
	segment28,
	segment29,
	segment30
	FOR XML RAW)) AS RowHash
FROM dbo.PAY_COST_ALLOCATION_KEYFLEX_B0Landing l) src
JOIN dbo.PAY_COST_ALLOCATION_KEYFLEX_B0Landing target ON src.cost_allocation_keyflex_id = target.cost_allocation_keyflex_id

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
137,Package\Landing - Data Load\SQL - Update RowHash,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	grade_id,
	HASHBYTES('MD5',
(SELECT
	grade_id,
	business_group_id,
	grade_definition_id,
	date_from,
	[sequence],
	date_to,
	[name],
	request_id,
	program_application_id,
	program_id,
	program_update_date,
	attribute_category,
	attribute1,
	attribute2,
	attribute3,
	attribute4,
	attribute5,
	attribute6,
	attribute7,
	attribute8,
	attribute9,
	attribute10,
	attribute11,
	attribute12,
	attribute13,
	attribute14,
	attribute15,
	attribute16,
	attribute17,
	attribute18,
	attribute19,
	attribute20,
	information_category,
	information1,
	information2,
	information3,
	information4,
	information5,
	information6,
	information7,
	information8,
	information9,
	information10,
	information11,
	information12,
	information13,
	information14,
	information15,
	information16,
	information17,
	information18,
	information19,
	information20,
	object_version_number,
	short_name,
	comments
	FOR XML RAW)) AS RowHash
FROM dbo.PER_GRADES_B0Landing l) src
JOIN dbo.PER_GRADES_B0Landing target ON src.grade_id = target.grade_id

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
138,Package\Landing - Data Load\SQL - Update RowHash,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	organization_id,
	HASHBYTES('MD5',
(SELECT
	attribute_category,
	attribute1,
	attribute10,
	attribute11,
	attribute12,
	attribute13,
	attribute14,
	attribute15,
	attribute16,
	attribute17,
	attribute18,
	attribute19,
	attribute2,
	attribute20,
	attribute21,
	attribute22,
	attribute23,
	attribute24,
	attribute25,
	attribute26,
	attribute27,
	attribute28,
	attribute29,
	attribute3,
	attribute30,
	attribute4,
	attribute5,
	attribute6,
	attribute7,
	attribute8,
	attribute9,
	business_group_id,
	comments,
	cost_allocation_keyflex_id,
	date_from,
	date_to,
	internal_address_line,
	internal_external_flag,
	location_id,
	[name],
	object_version_number,
	organization_id,
	party_id,
	program_application_id,
	program_id,
	program_update_date,
	request_id,
	soft_coding_keyflex_id,
	[type]
	FOR XML RAW)) AS RowHash
FROM dbo.HR_ALL_ORGANIZATION_UNITS_B0Landing l) src
JOIN dbo.HR_ALL_ORGANIZATION_UNITS_B0Landing target ON src.[organization_id] = target.[organization_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
139,Package\Landing - Data Load\SQL - Update RowHash,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	vendor_id,
	HASHBYTES('MD5',
(SELECT
	vendor_name,
	vendor_name_alt,
	segment1,
	summary_flag,
	enabled_flag,
	segment2,
	segment3,
	segment4,
	segment5,
	employee_id,
	vendor_type_lookup_code,
	customer_num,
	one_time_flag,
	parent_vendor_id,
	min_order_amount,
	ship_to_location_id,
	bill_to_location_id,
	ship_via_lookup_code,
	freight_terms_lookup_code,
	fob_lookup_code,
	terms_id,
	set_of_books_id,
	credit_status_lookup_code,
	credit_limit,
	always_take_disc_flag,
	pay_date_basis_lookup_code,
	pay_group_lookup_code,
	payment_priority,
	invoice_currency_code,
	payment_currency_code,
	invoice_amount_limit,
	exchange_date_lookup_code,
	hold_all_payments_flag,
	hold_future_payments_flag,
	hold_reason,
	distribution_set_id,
	accts_pay_code_combination_id,
	disc_lost_code_combination_id,
	disc_taken_code_combination_id,
	expense_code_combination_id,
	prepay_code_combination_id,
	num_1099,
	type_1099,
	withholding_status_lookup_code,
	withholding_start_date,
	organization_type_lookup_code,
	vat_code,
	start_date_active,
	end_date_active,
	minority_group_lookup_code,
	payment_method_lookup_code,
	bank_account_name,
	bank_account_num,
	bank_num,
	bank_account_type,
	women_owned_flag,
	small_business_flag,
	standard_industry_class,
	hold_flag,
	purchasing_hold_reason,
	hold_by,
	hold_date,
	terms_date_basis,
	price_tolerance,
	inspection_required_flag,
	receipt_required_flag,
	qty_rcv_tolerance,
	qty_rcv_exception_code,
	enforce_ship_to_location_code,
	days_early_receipt_allowed,
	days_late_receipt_allowed,
	receipt_days_exception_code,
	receiving_routing_id,
	allow_substitute_receipts_flag,
	allow_unordered_receipts_flag,
	hold_unmatched_invoices_flag,
	exclusive_payment_flag,
	ap_tax_rounding_rule,
	auto_tax_calc_flag,
	auto_tax_calc_override,
	amount_includes_tax_flag,
	tax_verification_date,
	name_control,
	state_reportable_flag,
	federal_reportable_flag,
	attribute_category,
	attribute1,
	attribute2,
	attribute3,
	attribute4
	attribute5,
	attribute6,
	attribute7,
	attribute8,
	attribute9,
	attribute10,
	attribute11,
	attribute12,
	attribute13,
	attribute14,
	attribute15,
	request_id,
	program_application_id,
	program_id,
	program_update_date,
	offset_vat_code,
	vat_registration_num,
	auto_calculate_interest_flag,
	validation_number,
	exclude_freight_from_discount,
	tax_reporting_name,
	check_digits,
	bank_number,
	allow_awt_flag,
	awt_group_id,
	global_attribute1,
	global_attribute2,
	global_attribute3,
	global_attribute4,
	global_attribute5,
	global_attribute6,
	global_attribute7,
	global_attribute8,
	global_attribute9,
	global_attribute10,
	global_attribute11,
	global_attribute12,
	global_attribute13,
	global_attribute14,
	global_attribute15,
	global_attribute16,
	global_attribute17,
	global_attribute18,
	global_attribute19,
	global_attribute20,
	global_attribute_category,
	edi_transaction_handling,
	edi_payment_method,
	edi_payment_format,
	edi_remittance_method,
	edi_remittance_instruction,
	bank_charge_bearer,
	bank_branch_type,
	match_option,
	future_dated_payment_ccid,
	create_debit_memo_flag,
	offset_tax_flag,
	party_id,
	parent_party_id,
	ni_number,
	tca_sync_num_1099,
	tca_sync_vendor_name,
	tca_sync_vat_reg_num,
	unique_tax_reference_num,
	partnership_utr,
	partnership_name,
	cis_enabled_flag,
	first_name,
	second_name,
	last_name,
	salutation,
	trading_name,
	work_reference,
	company_registration_number,
	national_insurance_number,
	verification_number,
	verification_request_id,
	match_status_flag,
	cis_verification_date,
	individual_1099,
	pay_awt_group_id,
	cis_parent_vendor_id,
	bus_class_last_certified_date,
	bus_class_last_certified_by
	FOR XML RAW)) AS RowHash
FROM dbo.AP_SUPPLIERS_B0Landing l) src
JOIN dbo.AP_SUPPLIERS_B0Landing target ON src.vendor_id = target.vendor_id

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
140,Package\Landing - Data Load\SQL - Update RowHash Column,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [application_id], [id_flex_code], [id_flex_num], [language], 
HASHBYTES('MD5',
(SELECT
	[application_id],
	[id_flex_code],
	[id_flex_num],
	[language],
	[id_flex_structure_name],
	[description],
	[shorthand_prompt],
	[source_lang]
	FOR XML RAW)) AS RowHash
FROM [dbo].FND_ID_FLEX_STRUCTURES_TL_B0Landing l) src
JOIN [dbo].FND_ID_FLEX_STRUCTURES_TL_B0Landing target 
	ON	src.[application_id] = target.[application_id] AND
		src.[id_flex_code] = target.[id_flex_code] AND
		src.[id_flex_num] = target.[id_flex_num] AND
		src.[language] = target.[language];

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
141,Package\Landing - Data Load\SQL - Update RowHash Column,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [flex_value_id],
HASHBYTES('MD5',
(SELECT
	[flex_value_set_id],
	[flex_value_id],
	[flex_value],
	[enabled_flag],
	[summary_flag],
	[start_date_active],
	[end_date_active],
	[parent_flex_value_low],
	[parent_flex_value_high],
	[structured_hierarchy_level],
	[hierarchy_level],
	[compiled_value_attributes],
	[value_category],
	[attribute1],
	[attribute2],
	[attribute3],
	[attribute4],
	[attribute5],
	[attribute6],
	[attribute7],
	[attribute8],
	[attribute9],
	[attribute10],
	[attribute11],
	[attribute12],
	[attribute13],
	[attribute14],
	[attribute15],
	[attribute16],
	[attribute17],
	[attribute18],
	[attribute19],
	[attribute20],
	[attribute21],
	[attribute22],
	[attribute23],
	[attribute24],
	[attribute25],
	[attribute26],
	[attribute27],
	[attribute28],
	[attribute29],
	[attribute30],
	[attribute31],
	[attribute32],
	[attribute33],
	[attribute34],
	[attribute35],
	[attribute36],
	[attribute37],
	[attribute38],
	[attribute39],
	[attribute40],
	[attribute41],
	[attribute42],
	[attribute43],
	[attribute44],
	[attribute45],
	[attribute46],
	[attribute47],
	[attribute48],
	[attribute49],
	[attribute50],
	[attribute_sort_order]
	FOR XML RAW)) AS RowHash
FROM [dbo].FND_FLEX_VALUES_B0Landing l)src
JOIN [dbo].FND_FLEX_VALUES_B0Landing TARGET ON src.[flex_value_id] = TARGET.[flex_value_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
142,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE TARGET
SET TARGET.RowHash = SRC.RowHash
FROM 
(SELECT [lookup_type], 
[lookup_code], 
[view_application_id],
HASHBYTES('MD5',
(SELECT 
	[lookup_type],
	[language],
	[lookup_code],
	[meaning],
	[description],
	[enabled_flag],
	[start_date_active],
	[end_date_active],
	[source_lang],
	[security_group_id],
	[view_application_id],
	[territory_code],
	[attribute_category],
	[attribute1],
	[attribute2],
	[attribute3],
	[attribute4],
	[attribute5],
	[attribute6],
	[attribute7],
	[attribute8],
	[attribute9],
	[attribute10],
	[attribute11],
	[attribute12],
	[attribute13],
	[attribute14],
	[attribute15],
	[tag],
	[leaf_node],
	[zd_edition_name]
    FOR XML RAW)) AS RowHash
FROM [dbo].FND_LOOKUP_VALUES_B0Landing l) SRC
JOIN [dbo].FND_LOOKUP_VALUES_B0Landing TARGET 
	ON SRC.[lookup_type] COLLATE Latin1_General_CS_AS = TARGET.[lookup_type] COLLATE Latin1_General_CS_AS
	AND SRC.[lookup_code] COLLATE Latin1_General_CS_AS = TARGET.[lookup_code] COLLATE Latin1_General_CS_AS
	AND SRC.[view_application_id] = TARGET.[view_application_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
143,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE TARGET 
SET target.RowHash=SRC.RowHash
FROM 
(SELECT Job_id,
HASHBYTES('MD5',


(SELECT  [job_id]
      ,[business_group_id]
      ,[job_definition_id]
      ,[date_from]
      ,[date_to]
      ,[name]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[job_information_category]
      ,[job_information1]
      ,[job_information2]
      ,[job_information3]
      ,[job_information4]
      ,[job_information5]
      ,[job_information6]
      ,[job_information7]
      ,[job_information8]
      ,[job_information9]
      ,[job_information10]
      ,[job_information11]
      ,[job_information12]
      ,[job_information13]
      ,[job_information14]
      ,[job_information15]
      ,[object_version_number]
      ,[job_information16]
      ,[job_information17]
      ,[job_information18]
      ,[job_information19]
      ,[job_information20]
      ,[benchmark_job_flag]
      ,[benchmark_job_id]
      ,[emp_rights_flag]
      ,[job_group_id]
      ,[approval_authority]
      ,[comments] FOR XML RAW)) AS RowHash

  FROM [HR_Landing].[dbo].[PER_JOBS_B0Landing]) SRC
  JOIN [HR_Landing].[dbo].[PER_JOBS_B0Landing] Target ON SRC.Job_id=Target.Job_id


   SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
144,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE TARGET 
SET target.RowHash=SRC.RowHash
FROM 
(SELECT [org_structure_element_id],
HASHBYTES('MD5',
(SELECT [org_structure_element_id]
      ,[business_group_id]
      ,[organization_id_parent]
      ,[org_structure_version_id]
      ,[organization_id_child]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[last_update_date]
      ,[last_updated_by]
      ,[last_update_login]
      ,[created_by]
      ,[creation_date]
      ,[object_version_number]
      ,[position_control_enabled_flag]
      ,[party_id] FOR XML RAW)) AS RowHash
      
  FROM [dbo].[Per_Org_Structure_Elements_B0Landing]) SRC 
 JOIN [dbo].[Per_Org_Structure_Elements_B0Landing] TARGET ON SRC.[org_structure_element_id]=Target.[org_structure_element_id]

 SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
145,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE TARGET 
SET target.RowHash=SRC.RowHash
FROM 
(SELECT flex_value_id,
HASHBYTES('MD5',


(SELECT  flex_value_id
,language

,description
,source_lang
,flex_value_meaning
zd_edition_name
 FOR XML RAW)) AS RowHash

  FROM [HR_Landing].[dbo].[FND_FLEX_VALUES_TL_B0Landing]) SRC
  JOIN [HR_Landing].[dbo].[FND_FLEX_VALUES_TL_B0Landing] Target ON SRC.flex_value_id=Target.flex_value_id


   SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
146,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [address_id],
HASHBYTES('MD5',
(SELECT [address_id]
      ,[business_group_id]
      ,[person_id]
      ,[date_from]
      ,[primary_flag]
      ,[style]
      ,[address_line1]
      ,[address_line2]
      ,[address_line3]
      ,[address_type]
      ,[country]
      ,[date_to]
      ,[postal_code]
      ,[region_1]
      ,[region_2]
      ,[region_3]
      ,[telephone_number_1]
      ,[telephone_number_2]
      ,[telephone_number_3]
      ,[town_or_city]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[addr_attribute_category]
      ,[addr_attribute1]
      ,[addr_attribute2]
      ,[addr_attribute3]
      ,[addr_attribute4]
      ,[addr_attribute5]
      ,[addr_attribute6]
      ,[addr_attribute7]
      ,[addr_attribute8]
      ,[addr_attribute9]
      ,[addr_attribute10]
      ,[addr_attribute11]
      ,[addr_attribute12]
      ,[addr_attribute13]
      ,[addr_attribute14]
      ,[addr_attribute15]
      ,[addr_attribute16]
      ,[addr_attribute17]
      ,[addr_attribute18]
      ,[addr_attribute19]
      ,[addr_attribute20]
      ,[object_version_number]
      ,[add_information13]
      ,[add_information14]
      ,[add_information15]
      ,[add_information16]
      ,[add_information17]
      ,[add_information18]
      ,[add_information19]
      ,[add_information20]
      ,[party_id]
      ,[derived_locale]
      ,[geometry]
      ,[comments]
       FOR XML RAW)) AS RowHash
FROM [dbo].PER_ADDRESSES_B0Landing l)src
JOIN [dbo].PER_ADDRESSES_B0Landing TARGET ON src.[address_id] = TARGET.[address_id]


SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
147,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [analysis_criteria_id],
HASHBYTES('MD5',
(SELECT  [analysis_criteria_id]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
	 ,[id_flex_num]
	 ,[summary_flag]
	 ,[enabled_flag]
      ,[start_date_active]
      ,[end_date_active]
      ,[segment1]
      ,[segment2]
      ,[segment3]
      ,[segment4]
      ,[segment5]
      ,[segment6]
      ,[segment7]
      ,[segment8]
      ,[segment9]
      ,[segment10]
      ,[segment11]
      ,[segment12]
      ,[segment13]
      ,[segment14]
      ,[segment15]
      ,[segment16]
      ,[segment17]
      ,[segment18]
      ,[segment19]
      ,[segment20]
      ,[segment21]
      ,[segment22]
      ,[segment23]
      ,[segment24]
      ,[segment25]
      ,[segment26]
      ,[segment27]
      ,[segment28]
      ,[segment29]
      ,[segment30]
	 ,[object_version_number]
       FOR XML RAW)) AS RowHash
FROM [dbo].PER_ANALYSIS_CRITERIA_B0Landing l)src
JOIN [dbo].PER_ANALYSIS_CRITERIA_B0Landing TARGET ON src.[analysis_criteria_id] = TARGET.[analysis_criteria_id]


SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
148,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [assignment_status_type_id],
HASHBYTES('MD5',
(SELECT [assignment_status_type_id]
      ,[business_group_id]
      ,[legislation_code]
      ,[active_flag]
      ,[default_flag]
      ,[primary_flag]
      ,[user_status]
      ,[pay_system_status]
      ,[per_system_status]
      ,[zd_edition_name] FOR XML RAW)) AS RowHash
FROM [dbo].PER_ASSIGNMENT_STATUS_TYPES_B0Landing l)src
JOIN [dbo].PER_ASSIGNMENT_STATUS_TYPES_B0Landing TARGET ON src.[assignment_status_type_id] = TARGET.[assignment_status_type_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
149,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [flex_value_set_id],
HASHBYTES('MD5',
(SELECT [flex_value_set_id]
      ,[flex_value_set_name]
      ,[validation_type]
      ,[protected_flag]
      ,[security_enabled_flag]
      ,[longlist_flag]
      ,[format_type]
      ,[maximum_size]
      ,[alphanumeric_allowed_flag]
      ,[uppercase_only_flag]
      ,[numeric_mode_enabled_flag]
      ,[description]
      ,[dependant_default_value]
      ,[dependant_default_meaning]
      ,[parent_flex_value_set_id]
      ,[minimum_value]
      ,[maximum_value]
      ,[number_precision]
      ,[zd_edition_name] FOR XML RAW)) AS RowHash
FROM [dbo].FND_FLEX_VALUE_SETS_B0Landing l)src
JOIN [dbo].FND_FLEX_VALUE_SETS_B0Landing TARGET ON src.[flex_value_set_id] = TARGET.[flex_value_set_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
150,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [grade_rule_id],[effective_start_date],
	[effective_end_date],
HASHBYTES('MD5',
(SELECT [grade_rule_id],
	[effective_start_date],
	[effective_end_date],
	[business_group_id],
	[rate_id],
	[grade_or_spinal_point_id],
	[rate_type],
	[maximum],
	[mid_value],
	[minimum],
	[sequence],
	[value],
	[request_id],
	[program_application_id],
	[program_id],
	[program_update_date],
	[object_version_number],
	[currency_code] FOR XML RAW)) AS RowHash
FROM [dbo].PAY_GRADE_RULES_F_B0Landing l)src
JOIN [dbo].PAY_GRADE_RULES_F_B0Landing TARGET ON src.[grade_rule_id] = TARGET.[grade_rule_id]
AND src.[effective_start_date] = target.[effective_start_date] AND src.[effective_end_date] = target.[effective_end_date]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
151,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [job_group_id],
HASHBYTES('MD5',
(SELECT [job_group_id]
      ,[business_group_id]
      ,[legislation_code]
      ,[internal_name]
      ,[displayed_name]
      ,[id_flex_num]
      ,[master_flag]
      ,[object_version_number]
FOR XML RAW)) AS RowHash
FROM [dbo].PER_JOB_GROUPS_B0Landing l)src
JOIN [dbo].PER_JOB_GROUPS_B0Landing TARGET ON src.[job_group_id] = TARGET.[job_group_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
152,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [location_id],
HASHBYTES('MD5',
(SELECT [location_id]
       , [location_code]
       , [business_group_id]
       , [description]
       , [ship_to_location_id]
       , [ship_to_site_flag]
       , [receiving_site_flag]
       , [bill_to_site_flag]
       , [in_organization_flag]
       , [office_site_flag]
       , [designated_receiver_id]
       , [inventory_organization_id]
       , [inactive_date]
       , [style]
       , [address_line_1]
       , [address_line_2]
       , [address_line_3]
       , [town_or_city]
       , [country]
       , [postal_code]
       , [region_1]
       , [region_2]
       , [region_3]
       , [telephone_number_1]
       , [telephone_number_2]
       , [telephone_number_3]
       , [loc_information13]
       , [loc_information14]
       , [loc_information15]
       , [loc_information16]
       , [loc_information17]
       , [attribute_category]
       , [attribute1]
       , [attribute2]
       , [attribute3]
       , [attribute4]
       , [attribute5]
       , [attribute6]
       , [attribute7]
       , [attribute8]
       , [attribute9]
       , [attribute10]
       , [attribute11]
       , [attribute12]
       , [attribute13]
       , [attribute14]
       , [attribute15]
       , [attribute16]
       , [attribute17]
       , [attribute18]
       , [attribute19]
       , [attribute20]
       , [global_attribute_category]
       , [global_attribute1]
       , [global_attribute2]
       , [global_attribute3]
       , [global_attribute4]
       , [global_attribute5]
       , [global_attribute6]
       , [global_attribute7]
       , [global_attribute8]
       , [global_attribute9]
       , [global_attribute10]
       , [global_attribute11]
       , [global_attribute12]
       , [global_attribute13]
       , [global_attribute14]
       , [global_attribute15]
       , [global_attribute16]
       , [global_attribute17]
       , [global_attribute18]
       , [global_attribute19]
       , [global_attribute20]
       , [entered_by]
       , [tp_header_id]
       , [ece_tp_location_code]
       , [object_version_number]
       , [geometry]
       , [loc_information18]
       , [loc_information19]
       , [loc_information20]
       , [derived_locale]
       , [legal_address_flag]
       , [timezone_code]
       , [tax_name#1] FOR XML RAW)) AS RowHash
FROM [dbo].HR_LOCATIONS_ALL_B0Landing l)src
JOIN [dbo].HR_LOCATIONS_ALL_B0Landing TARGET ON src.[location_id] = TARGET.[location_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
153,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [organization_structure_id],
HASHBYTES('MD5',
(SELECT [organization_structure_id]
      ,[business_group_id]
      ,[name]
      ,[primary_structure_flag]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[position_control_structure_flg]
      ,[object_version_number]
      ,[comments] FOR XML RAW)) AS RowHash
FROM [dbo].PER_ORGANIZATION_STRUCTURES_B0Landing l)src
JOIN [dbo].PER_ORGANIZATION_STRUCTURES_B0Landing TARGET ON src.[organization_structure_id] = TARGET.[organization_structure_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
154,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [pay_basis_id],
HASHBYTES('MD5',
(SELECT  [pay_basis_id]				
       , [input_value_id]			
       , [rate_id]					
       , [business_group_id]			
       , [name]						
       , [pay_basis]					
       , [rate_basis]				
       , [annualized_hours]			
       , [pay_annualization_factor]	
       , [grade_annualization_factor]
       , [attribute_category]		
       , [attribute1]				
       , [attribute2]				
       , [attribute3]				
       , [attribute4]				
       , [attribute5]				
       , [attribute6]				
       , [attribute7]				
       , [attribute8]				
       , [attribute9]				
       , [attribute10]				
       , [attribute11]				
       , [attribute12]				
       , [attribute13]				
       , [attribute14]				
       , [attribute15]				
       , [attribute16]				
       , [attribute17]				
       , [attribute18]				
       , [attribute19]				
       , [attribute20]								
       , [information_category]		
       , [information1]				
       , [information2]				
       , [information3]				
       , [information4]				
       , [information5]				
       , [information6]				
       , [information7]				
       , [information8]				
       , [information9]				
       , [information10]				
       , [information11]				
       , [information12]				
       , [information13]				
       , [information14]				
       , [information15]				
       , [information16]				
       , [information17]				
       , [information18]				
       , [information19]				
       , [information20]				
       , [object_version_number]		
       , [comments] FOR XML RAW)) AS RowHash
FROM [dbo].PER_PAY_BASES_B0Landing l)src
JOIN [dbo].PER_PAY_BASES_B0Landing TARGET ON src.[pay_basis_id] = TARGET.[pay_basis_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
155,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [pay_proposal_id],
HASHBYTES('MD5',
(SELECT  [pay_proposal_id]
      ,[object_version_number]
      ,[assignment_id]
      ,[event_id]
      ,[business_group_id]
      ,[change_date]
      ,[last_change_date]
      ,[next_perf_review_date]
      ,[next_sal_review_date]
      ,[performance_rating]
      ,[proposal_reason]
      ,[proposed_salary_n]
      ,[review_date]
      ,[approved]
      ,[multiple_components]
      ,[forced_ranking]
      ,[performance_review_id]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[proposed_salary]
      ,[comments]
      ,[date_to]  FOR XML RAW)) AS RowHash
FROM [dbo].PER_PAY_PROPOSALS_B0Landing l)src
JOIN [dbo].PER_PAY_PROPOSALS_B0Landing TARGET ON src.[pay_proposal_id] = TARGET.pay_proposal_id

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
156,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [people_group_id],
HASHBYTES('MD5',
(SELECT  [people_group_id]
      ,[group_name]
      ,[id_flex_num]
      ,[summary_flag]
      ,[enabled_flag]
      ,[start_date_active]
      ,[end_date_active]
      ,[segment1]
      ,[segment2]
      ,[segment3]
      ,[segment4]
      ,[segment5]
      ,[segment6]
      ,[segment7]
      ,[segment8]
      ,[segment9]
      ,[segment10]
      ,[segment11]
      ,[segment12]
      ,[segment13]
      ,[segment14]
      ,[segment15]
      ,[segment16]
      ,[segment17]
      ,[segment18]
      ,[segment19]
      ,[segment20]
      ,[segment21]
      ,[segment22]
      ,[segment23]
      ,[segment24]
      ,[segment25]
      ,[segment26]
      ,[segment27]
      ,[segment28]
      ,[segment29]
      ,[segment30]
       FOR XML RAW)) AS RowHash
FROM [dbo].PAY_PEOPLE_GROUPS_B0Landing l)src
JOIN [dbo].PAY_PEOPLE_GROUPS_B0Landing TARGET ON src.[people_group_id] = TARGET.[people_group_id]


SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
157,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [performance_review_id],
HASHBYTES('MD5',
(SELECT [performance_review_id]
      ,[person_id]
      ,[event_id]
      ,[review_date]
      ,[performance_rating]
      ,[next_perf_review_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[attribute21]
      ,[attribute22]
      ,[attribute23]
      ,[attribute24]
      ,[attribute25]
      ,[attribute26]
      ,[attribute27]
      ,[attribute28]
      ,[attribute29]
      ,[attribute30]
      ,[object_version_number]
      FOR XML RAW)) AS RowHash
FROM [dbo].PER_PERFORMANCE_REVIEWS_B0Landing l)src
JOIN [dbo].PER_PERFORMANCE_REVIEWS_B0Landing TARGET ON src.[performance_review_id] = TARGET.[performance_review_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
158,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [period_of_placement_id],
HASHBYTES('MD5',
(SELECT [period_of_placement_id]
      ,[object_version_number]
      ,[business_group_id]
      ,[person_id]
      ,[date_start]
      ,[actual_termination_date]
      ,[projected_termination_date]
      ,[termination_reason]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[attribute21]
      ,[attribute22]
      ,[attribute23]
      ,[attribute24]
      ,[attribute25]
      ,[attribute26]
      ,[attribute27]
      ,[attribute28]
      ,[attribute29]
      ,[attribute30]
      ,[information_category]
      ,[information1]
      ,[information2]
      ,[information3]
      ,[information4]
      ,[information5]
      ,[information6]
      ,[information7]
      ,[information8]
      ,[information9]
      ,[information10]
      ,[information11]
      ,[information12]
      ,[information13]
      ,[information14]
      ,[information15]
      ,[information16]
      ,[information17]
      ,[information18]
      ,[information19]
      ,[information20]
      ,[information21]
      ,[information22]
      ,[information23]
      ,[information24]
      ,[information25]
      ,[information26]
      ,[information27]
      ,[information28]
      ,[information29]
      ,[information30]
      ,[final_process_date]
      ,[last_standard_process_date]
      FOR XML RAW)) AS RowHash
FROM [dbo].[PER_PERIODS_OF_PLACEMENT_B0Landing] l)src
JOIN [dbo].[PER_PERIODS_OF_PLACEMENT_B0Landing] TARGET ON src.[period_of_placement_id] = TARGET.[period_of_placement_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
159,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [period_of_service_id],
HASHBYTES('MD5',
(SELECT [period_of_service_id]
      ,[business_group_id]
      ,[termination_accepted_person_id]
      ,[person_id]
      ,[date_start]
      ,[accepted_termination_date]
      ,[actual_termination_date]
      ,[final_process_date]
      ,[last_standard_process_date]
      ,[leaving_reason]
      ,[notified_termination_date]
      ,[projected_termination_date]
      ,[adjusted_svc_date]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[object_version_number]
      ,[prior_employment_ssp_paid_to]
      ,[prior_employment_ssp_weeks]
      ,[pds_information_category]
      ,[pds_information1]
      ,[pds_information2]
      ,[pds_information3]
      ,[pds_information4]
      ,[pds_information5]
      ,[pds_information6]
      ,[pds_information7]
      ,[pds_information8]
      ,[pds_information9]
      ,[pds_information10]
      ,[pds_information11]
      ,[pds_information12]
      ,[pds_information13]
      ,[pds_information14]
      ,[pds_information15]
      ,[pds_information16]
      ,[pds_information17]
      ,[pds_information18]
      ,[pds_information19]
      ,[pds_information20]
      ,[pds_information21]
      ,[pds_information22]
      ,[pds_information23]
      ,[pds_information24]
      ,[pds_information25]
      ,[pds_information26]
      ,[pds_information27]
      ,[pds_information28]
      ,[pds_information29]
      ,[pds_information30]
      ,[comments]
      FOR XML RAW)) AS RowHash
FROM [dbo].PER_PERIODS_OF_SERVICE_B0Landing l)src
JOIN [dbo].PER_PERIODS_OF_SERVICE_B0Landing TARGET ON src.[period_of_service_id] = TARGET.[period_of_service_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
160,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [person_analysis_id],
HASHBYTES('MD5',
(SELECT [person_analysis_id]
      ,[business_group_id]
      ,[analysis_criteria_id]
      ,[person_id]
      ,[date_from]
      ,[date_to]
      ,[id_flex_num]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[object_version_number]
      ,[party_id]
      ,[comments]
  FOR XML RAW)) AS RowHash
FROM [dbo].PER_PERSON_ANALYSES_B0Landing l)src
JOIN [dbo].PER_PERSON_ANALYSES_B0Landing TARGET ON src.[person_analysis_id] = TARGET.[person_analysis_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
161,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [person_type_id],
HASHBYTES('MD5',
(SELECT [person_type_id]
      ,[business_group_id]
      ,[active_flag]
      ,[default_flag]
      ,[system_person_type]
      ,[user_person_type]
      ,[seeded_person_type_key]
      ,[zd_edition_name]
 FOR XML RAW)) AS RowHash
FROM [dbo].PER_PERSON_TYPES_B0Landing l)src
JOIN [dbo].PER_PERSON_TYPES_B0Landing TARGET ON src.[person_type_id] = TARGET.[person_type_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
162,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [phone_id],
HASHBYTES('MD5',
(SELECT  [phone_id]
		, [date_from]
		, [date_to]
		, [phone_type]
		, [phone_number]
		, [parent_id]
		, [parent_table]
		, [attribute_category]
		, [attribute1]
		, [attribute2]
		, [attribute3]
		, [attribute4]
		, [attribute5]
		, [attribute6]
		, [attribute7]
		, [attribute8]
		, [attribute9]
		, [attribute10]
		, [attribute11]
		, [attribute12]
		, [attribute13]
		, [attribute14]
		, [attribute15]
		, [attribute16]
		, [attribute17]
		, [attribute18]
		, [attribute19]
		, [attribute20]
		, [attribute21]
		, [attribute22]
		, [attribute23]
		, [attribute24]
		, [attribute25]
		, [attribute26]
		, [attribute27]
		, [attribute28]
		, [attribute29]
		, [attribute30]
		, [object_version_number]
		, [party_id]
		, [validity] FOR XML RAW)) AS RowHash
FROM [dbo].PER_PHONES_B0Landing l)src
JOIN [dbo].PER_PHONES_B0Landing TARGET ON src.[phone_id] = TARGET.[phone_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
163,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [position_id], [effective_start_date], [effective_end_date],
HASHBYTES('MD5',
(SELECT [position_id]
      ,[effective_start_date]
      ,[effective_end_date]
      ,[availability_status_id]
      ,[business_group_id]
      ,[entry_grade_id]
      ,[entry_grade_rule_id]
      ,[entry_step_id]
      ,[job_id]
      ,[location_id]
      ,[organization_id]
      ,[pay_basis_id]
      ,[pay_freq_payroll_id]
      ,[position_definition_id]
      ,[position_transaction_id]
      ,[prior_position_id]
      ,[relief_position_id]
      ,[successor_position_id]
      ,[supervisor_id]
      ,[supervisor_position_id]
      ,[amendment_date]
      ,[amendment_recommendation]
      ,[amendment_ref_number]
      ,[avail_status_prop_end_date]
      ,[bargaining_unit_cd]
      ,[copied_to_old_table_flag]
      ,[current_job_prop_end_date]
      ,[current_org_prop_end_date]
      ,[date_effective]
      ,[date_end]
      ,[earliest_hire_date]
      ,[fill_by_date]
      ,[frequency]
      ,[fte]
      ,[max_persons]
      ,[name]
      ,[overlap_period]
      ,[overlap_unit_cd]
      ,[pay_term_end_day_cd]
      ,[pay_term_end_month_cd]
      ,[permanent_temporary_flag]
      ,[permit_recruitment_flag]
      ,[position_type]
      ,[posting_description]
      ,[probation_period]
      ,[probation_period_unit_cd]
      ,[proposed_fte_for_layoff]
      ,[proposed_date_for_layoff]
      ,[replacement_required_flag]
      ,[review_flag]
      ,[seasonal_flag]
      ,[security_requirements]
      ,[status]
      ,[term_start_day_cd]
      ,[term_start_month_cd]
      ,[time_normal_finish]
      ,[time_normal_start]
      ,[update_source_cd]
      ,[working_hours]
      ,[works_council_approval_flag]
      ,[work_period_type_cd]
      ,[work_term_end_day_cd]
      ,[work_term_end_month_cd]
      ,[information1]
      ,[information2]
      ,[information3]
      ,[information4]
      ,[information5]
      ,[information6]
      ,[information7]
      ,[information8]
      ,[information9]
      ,[information10]
      ,[information11]
      ,[information12]
      ,[information13]
      ,[information14]
      ,[information15]
      ,[information16]
      ,[information17]
      ,[information18]
      ,[information19]
      ,[information20]
      ,[information21]
      ,[information22]
      ,[information23]
      ,[information24]
      ,[information25]
      ,[information26]
      ,[information27]
      ,[information28]
      ,[information29]
      ,[information30]
      ,[information_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[attribute21]
      ,[attribute22]
      ,[attribute23]
      ,[attribute24]
      ,[attribute25]
      ,[attribute26]
      ,[attribute27]
      ,[attribute28]
      ,[attribute29]
      ,[attribute30]
      ,[attribute_category]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[object_version_number]
      ,[comments] FOR XML RAW)) AS RowHash
FROM [dbo].HR_ALL_POSITIONS_F_B0Landing l)src
JOIN [dbo].HR_ALL_POSITIONS_F_B0Landing TARGET ON src.[position_id] = TARGET.[position_id]
AND src.[effective_start_date] = target.[effective_start_date] AND src.[effective_end_date] = target.[effective_end_date]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
164,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [qualification_id],
HASHBYTES('MD5',
(SELECT [qualification_id]
      ,[business_group_id]
      ,[object_version_number]
      ,[person_id]
      ,[title]
      ,[grade_attained]
      ,[status]
      ,[awarded_date]
      ,[fee]
      ,[fee_currency]
      ,[training_completed_amount]
      ,[reimbursement_arrangements]
      ,[training_completed_units]
      ,[total_training_amount]
      ,[start_date]
      ,[end_date]
      ,[license_number]
      ,[expiry_date]
      ,[license_restrictions]
      ,[projected_completion_date]
      ,[awarding_body]
      ,[tuition_method]
      ,[group_ranking]
      ,[comments]
      ,[qualification_type_id]
      ,[attendance_id]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[last_update_date]
      ,[last_updated_by]
      ,[last_update_login]
      ,[created_by]
      ,[creation_date]
      ,[party_id]
      ,[professional_body_name]
      ,[membership_number]
      ,[membership_category]
      ,[subscription_payment_method]
      ,[qua_information_category]
      ,[qua_information1]
      ,[qua_information2]
      ,[qua_information3]
      ,[qua_information4]
      ,[qua_information5]
      ,[qua_information6]
      ,[qua_information7]
      ,[qua_information8]
      ,[qua_information9]
      ,[qua_information10]
      ,[qua_information11]
      ,[qua_information12]
      ,[qua_information13]
      ,[qua_information14]
      ,[qua_information15]
      ,[qua_information16]
      ,[qua_information17]
      ,[qua_information18]
      ,[qua_information19]
      ,[qua_information20] FOR XML RAW)) AS RowHash
FROM [dbo].PER_QUALIFICATIONS_B0Landing l)src
JOIN [dbo].PER_QUALIFICATIONS_B0Landing TARGET ON src.[qualification_id] = TARGET.[qualification_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
165,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [qualification_type_id],
HASHBYTES('MD5',
(SELECT [qualification_type_id]
      ,[name]
      ,[category]
      ,[rank]
      ,[object_version_number]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[information1]
      ,[information2]
      ,[information3]
      ,[information4]
      ,[information5]
      ,[information6]
      ,[information7]
      ,[information8]
      ,[information9]
      ,[information10]
      ,[information11]
      ,[information12]
      ,[information13]
      ,[information14]
      ,[information15]
      ,[information16]
      ,[information17]
      ,[information18]
      ,[information19]
      ,[information20]
      ,[information21]
      ,[information22]
      ,[information23]
      ,[information24]
      ,[information25]
      ,[information26]
      ,[information27]
      ,[information28]
      ,[information29]
      ,[information30]
      ,[information_category]
      ,[qual_framework_id]
      ,[qualification_type]
      ,[credit_type]
      ,[credits]
      ,[level_type]
      ,[level_number]
      ,[field]
      ,[sub_field]
      ,[provider]
      ,[qa_organization]
      ,[zd_edition_name]
      FOR XML RAW)) AS RowHash
FROM [dbo].PER_QUALIFICATION_TYPES_B0Landing l)src
JOIN [dbo].PER_QUALIFICATION_TYPES_B0Landing TARGET ON src.[qualification_type_id] = TARGET.[qualification_type_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
166,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	location_extra_info_id,
	HASHBYTES('MD5',
(SELECT
	[location_extra_info_id]
      ,[information_type]
      ,[location_id]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[lei_attribute_category]
      ,[lei_attribute1]
      ,[lei_attribute2]
      ,[lei_attribute3]
      ,[lei_attribute4]
      ,[lei_attribute5]
      ,[lei_attribute6]
      ,[lei_attribute7]
      ,[lei_attribute8]
      ,[lei_attribute9]
      ,[lei_attribute10]
      ,[lei_attribute11]
      ,[lei_attribute12]
      ,[lei_attribute13]
      ,[lei_attribute14]
      ,[lei_attribute15]
      ,[lei_attribute16]
      ,[lei_attribute17]
      ,[lei_attribute18]
      ,[lei_attribute19]
      ,[lei_attribute20]
      ,[lei_information_category]
      ,[lei_information1]
      ,[lei_information2]
      ,[lei_information3]
      ,[lei_information4]
      ,[lei_information5]
      ,[lei_information6]
      ,[lei_information7]
      ,[lei_information8]
      ,[lei_information9]
      ,[lei_information10]
      ,[lei_information11]
      ,[lei_information12]
      ,[lei_information13]
      ,[lei_information14]
      ,[lei_information15]
      ,[lei_information16]
      ,[lei_information17]
      ,[lei_information18]
      ,[lei_information19]
      ,[lei_information20]
      ,[lei_information21]
      ,[lei_information22]
      ,[lei_information23]
      ,[lei_information24]
      ,[lei_information25]
      ,[lei_information26]
      ,[lei_information27]
      ,[lei_information28]
      ,[lei_information29]
      ,[lei_information30]
      ,[object_version_number]
	FOR XML RAW)) AS RowHash
FROM dbo.HR_LOCATION_EXTRA_INFO_B0Landing l) src
JOIN dbo.HR_LOCATION_EXTRA_INFO_B0Landing target ON src.[location_extra_info_id] = target.[location_extra_info_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
167,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	org_structure_version_id,
	HASHBYTES('MD5',
(SELECT
	   [org_structure_version_id]
      ,[business_group_id]
      ,[organization_structure_id]
      ,[date_from]
      ,[version_number]
      ,[copy_structure_version_id]
      ,[date_to]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[object_version_number]
      ,[topnode_pos_ctrl_enabled_flag]
	FOR XML RAW)) AS RowHash
FROM dbo.PER_ORG_STRUCTURE_VERSIONS_B0Landing l) src
JOIN dbo.PER_ORG_STRUCTURE_VERSIONS_B0Landing target ON src.[org_structure_version_id] = target.[org_structure_version_id]

SELECT @@ROWCOUNT AS UpdateCount;",1,1,0,0,0,0,1
168,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Anniversary';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
169,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeAnniversaryEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",1,1,0,0,0,0,1
170,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",1,1,0,0,0,0,1
171,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Anniversary'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",1,1,0,0,0,0,1
172,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Anniversary';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Anniversary'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Anniversary';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",1,1,0,0,0,0,1
173,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeAnniversaryEvent', ?,@BatchSplitByName, @FiscalDate;
GO",1,1,0,0,0,0,1
174,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",1,1,0,0,0,0,1
175,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Anniversary';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",1,1,0,0,0,0,1
176,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,"With 
PersonID
AS 
(
select person_id from  hr_base..PER_PERIODS_OF_SERVICE_B0History with (nolock) 
 WHERE  CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? as date)  and  adjusted_svc_date is not null
),
OldDates
AS
(
select left((FullDate),4) [Year],right((FullDate),5)[Month],personid
from hr_base..BaseEmployeeEventBN with (nolock) 
where EventName='Anniversary'
 and personid in 
 (select person_id from  PersonID)

),

NewDates
AS
(
select left((b.FullDate),4) [Year],right((p.adjusted_svc_date),5)[Month],personid
from hr_base..BaseEmployeeEventBN b with (nolock)  join 
hr_base..PER_PERIODS_OF_SERVICE_B0 p with (nolock) on  b.PersonID=p.person_id
where EventName='Anniversary'
 and personid in 
 (select person_id from  PersonID)
 )
select cast([year]+'-'+[Month] as date)  FullUpdateDate from OldDates  where [year] is not null and [Month] is not null  AND [Month]<>'02-29' AND  [Year]>=format(GETDATE(), 'yyyy')-7
Union
select cast([year]+'-'+[Month]  as date) FullUpdateDate from NewDates  where [year] is not null and [Month] is not null  AND [Month]<>'02-29' AND  [Year]>=format(GETDATE(), 'yyyy')-7",1,1,0,0,0,0,1
177,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Anniversary');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeAnniversaryEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
  ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
    END AS LastProcessedFiscalDate;  ",1,1,0,0,0,0,1
178,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeAnniversaryEvent') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",1,1,0,0,0,0,1
179,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get List of Days to Process for override,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

END",1,1,0,0,0,0,1
3016,Package\Sequence Container\Seq - Incremental NetRev\SQL - Get List Of Weeks to Process,"SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber


IF (@LastProcessedFiscalDate IS NULL) 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate

 END
ELSE 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
  AND FullDate > @LastProcessedFiscalDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate
 END",1,1,0,0,0,0,1
181,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeAnniversaryEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeeAnniversaryEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeAnniversaryEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Anniversary') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",1,1,0,0,0,0,1
182,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeeAnniversaryEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",1,1,0,0,0,0,1
183,Package\SEQ - Anniversay Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeeAnniversaryEventBN'
AND IsActive = 1",1,1,0,0,0,0,1
184,Package\SEQ - Anniversay Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeeAnniversaryEventBN';",1,1,0,0,0,0,1
185,Package\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);
DECLARE @Day VARCHAR(20) = (SELECT DATENAME(WEEKDAY, @FiscalDate ) );

IF @Day = 'Sunday' 
	BEGIN
		SET @BatchSplitByName = 'FiscalWeekDate'
	END
ELSE 
	SET @BatchSplitByName = 'FiscalDate'

EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?,@BatchSplitByName, @FiscalDate;
GO",1,1,0,0,0,0,1
186,Package\SEQ - Base Data Load\Foreach Loop Container\SQL - Delete Previous Day Records or Delete if exists,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?
DECLARE @PreviousWeek DATE = (SELECT DATEADD(week, (DATEDIFF(week,-1,@FiscalDate)),-1));
DECLARE @ReloadDate DATE = (SELECT DATEADD(DAY, -365, @CurrentDate));
DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
	BEGIN
		DELETE FROM dbo.BaseEmployeeCensusBN WHERE FullDate =  @FiscalDate;

		SET @DeleteCount = (SELECT @@ROWCOUNT );
		SELECT @DeleteCount AS DeleteCount;
	END 
ELSE 
	BEGIN
    
		/* Delete records more than one year */
		
		DELETE FROM dbo.BaseEmployeeCensusBN WHERE FullDate < @ReloadDate;
		
		SET @DeleteCount = (SELECT @@ROWCOUNT);
		
		
		/* Delete previous day record */
		
		IF @FiscalDate = @CurrentDate
			BEGIN 
					IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeCensusBN ))
						BEGIN
							DELETE FROM dbo.BaseEmployeeCensusBN WHERE FullDate > @PreviousWeek;
					
							SET @DeleteCount = (SELECT @@ROWCOUNT + @DeleteCount );
						END
			END
		ELSE 
			SET @DeleteCount = (SELECT 0 + @DeleteCount) ;
		
			   	 
		/* Delete if data exists before loading during the reload */
		
		IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeCensusBN WHERE FullDate = @FiscalDate))
			BEGIN
				DELETE FROM dbo.BaseEmployeeCensusBN WHERE FullDate =  @FiscalDate;
		
				SET @DeleteCount = (SELECT @@ROWCOUNT + @DeleteCount);
			END
		ELSE 
				SET @DeleteCount = (SELECT 0 + @DeleteCount);
		
		SELECT @DeleteCount AS DeleteCount;
	END",1,1,0,0,0,0,1
187,Package\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",1,1,0,0,0,0,1
188,Package\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeCensusBN
WHERE InsertAuditID = ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",1,1,0,0,0,0,1
189,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Birthday';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
190,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeBirthdayEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",1,1,0,0,0,0,1
191,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",1,1,0,0,0,0,1
192,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Birthday'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",1,1,0,0,0,0,1
193,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Birthday';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Birthday'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Birthday';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",1,1,0,0,0,0,1
194,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeBirthdayEvent', ?,@BatchSplitByName, @FiscalDate;
GO",1,1,0,0,0,0,1
195,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",1,1,0,0,0,0,1
196,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Birthday';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",1,1,0,0,0,0,1
197,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,"With 
PersonID
AS 
(
select person_id from  hr_base..PER_ALL_PEOPLE_F_B0History with (nolock) 
 WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? as date)  and  date_of_birth is not null
),
OldDates
AS
(
select left((FullDate),4) [Year],right((FullDate),5)[Month],personid
from hr_base..BaseEmployeeEventBN with (nolock)  
where EventName='Birthday'
 and personid in 
 (select person_id from  PersonID)

),

NewDates
AS
(
select left((b.FullDate),4) [Year],right((p.date_of_birth),5)[Month],personid
from hr_base..BaseEmployeeEventBN b with (nolock) join 
hr_base..PER_ALL_PEOPLE_F_B0 p with (nolock) on  b.PersonID=p.person_id
where EventName='Birthday'
 and personid in 
 (select person_id from  PersonID)
 )
select cast([year]+'-'+[Month] as date)  FullUpdateDate from OldDates  where [year] is not null and [Month] is not null   AND [Month]<>'02-29'  AND  [Year]>=format(GETDATE(), 'yyyy')-7
Union
select cast([year]+'-'+[Month]  as date) FullUpdateDate from NewDates  where [year] is not null and [Month] is not null  AND [Month]<>'02-29'  AND  [Year]>=format(GETDATE(), 'yyyy')-7",1,1,0,0,0,0,1
198,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Birthday');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeBirthdayEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
  ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
    END AS LastProcessedFiscalDate;  ",1,1,0,0,0,0,1
199,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeBirthdayEventBN') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",1,1,0,0,0,0,1
200,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get List of Days to Process for override,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",1,1,0,0,0,0,1
201,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
            ELSE FiscalWeekStartDate 
          END AS FiscalWeekStartDate
         FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate

 END
ELSE 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
  AND FullDate > @LastProcessedFiscalDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate
 END",1,1,0,0,0,0,1
202,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeBirthdayEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeeBirthdayEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeBirthdayEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Birthday') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",1,1,0,0,0,0,1
203,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeeBirthdayEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",1,1,0,0,0,0,1
204,Package\SEQ - Birthday Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeeBirthdayEventBN'
AND IsActive = 1",1,1,0,0,0,0,1
205,Package\SEQ - Birthday Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeeBirthdayEventBN';",1,1,0,0,0,0,1
206,Package\SEQ - Get List of FiscalDates to process\SQL - Begin Base Load Audit Log,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",1,1,0,0,0,0,1
207,Package\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeCensusBN(NOLOCK));

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?) AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
		ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
	   END AS LastProcessedFiscalDate;	 ",1,1,0,0,0,0,1
208,Package\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
	INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
	INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = ?) AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",1,1,0,0,0,0,1
209,Package\SEQ - Get List of FiscalDates to process\SQL - Get List of Weeks to Process,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
									   ELSE FiscalWeekStartDate 
								  END AS FiscalWeekStartDate
						   FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
	BEGIN
		SELECT DISTINCT FiscalWeekStartDate
		FROM dbo.DimDate
		WHERE FiscalWeekStartDate BETWEEN  @StartDate AND @CurrentDate
		UNION 
		SELECT @CurrentDate AS FiscalWeekStartDate
		ORDER BY FiscalWeekStartDate

	END
ELSE 
	BEGIN
		SELECT DISTINCT FiscalWeekStartDate
		FROM dbo.DimDate
		WHERE (FiscalWeekStartDate BETWEEN  @StartDate AND @CurrentDate)
		AND FiscalWeekStartDate > @LastProcessedFiscalDate
		UNION 
		SELECT @CurrentDate AS FiscalWeekStartDate
		ORDER BY FiscalWeekStartDate
	END",1,1,0,0,0,0,1
210,Package\SEQ - Get List of FiscalDates to process\SQL - Get List of Weeks to Process for override,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
	BEGIN
		IF (@LastProcessedFiscalDate IS NULL)
			BEGIN
				SELECT DISTINCT FiscalWeekStartDate
				FROM dbo.DimDate
				WHERE FiscalWeekStartDate BETWEEN @OverrideStartDate AND @OverrideEndDate
				UNION 
				SELECT @CurrentDate AS FiscalWeekStartDate
				ORDER BY FiscalWeekStartDate
			END
		ELSE 
			BEGIN
				SELECT DISTINCT FiscalWeekStartDate
				FROM dbo.DimDate
				WHERE (FiscalWeekStartDate BETWEEN @OverrideStartDate AND @OverrideEndDate)
				AND FiscalWeekStartDate > @LastProcessedFiscalDate
				UNION 
				SELECT @CurrentDate AS FiscalWeekStartDate
				ORDER BY FiscalWeekStartDate
			END
	END 
ELSE 
	BEGIN
		IF (@LastProcessedFiscalDate IS NULL)
			BEGIN
				SELECT DISTINCT FiscalWeekStartDate
				FROM dbo.DimDate
				WHERE FiscalWeekStartDate BETWEEN @OverrideStartDate AND @OverrideEndDate
			END
		ELSE 
			BEGIN
				SELECT DISTINCT FiscalWeekStartDate
				FROM dbo.DimDate
				WHERE (FiscalWeekStartDate BETWEEN @OverrideStartDate AND @OverrideEndDate)
				AND FiscalWeekStartDate > @LastProcessedFiscalDate
				ORDER BY FiscalWeekStartDate
			END
	END ",1,1,0,0,0,0,1
211,Package\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,"DECLARE @PackageName VARCHAR(MAX) = ?;
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @ReloadDate DATE = (SELECT DATEADD(DAY, -365, @CurrentDate));


IF (NOT EXISTS ( SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @PackageName ))
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName, LastProcessedDate) VALUES (@PackageName, @ReloadDate);
	END
ELSE IF (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @PackageName) = NULL
	BEGIN
		UPDATE dbo.ETLBatchControl
		SET LastProcessedDate = @ReloadDate
		WHERE TableName = @PackageName
	END
ELSE IF (NOT EXISTS (SELECT 1 FROM dbo.BaseEmployeeCensusBN ))
	BEGIN
		UPDATE dbo.ETLBatchControl
		SET LastProcessedDate = @ReloadDate
		WHERE TableName = @PackageName
	END

SELECT CAST(LastProcessedDate AS DATE) AS LoadStartDate 
FROM dbo.ETLBatchControl WHERE TableName = @PackageName;
	 ",1,1,0,0,0,0,1
212,Package\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = ?;

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",1,1,0,0,0,0,1
213,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Hire';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",1,1,0,0,0,0,1
214,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeHireEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",1,1,0,0,0,0,1
215,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",1,1,0,0,0,0,1
216,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Hire'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",1,1,0,0,0,0,1
217,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Hire';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Hire'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Hire';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",1,1,0,0,0,0,1
218,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeHireEvent', ?,@BatchSplitByName, @FiscalDate;
GO",1,1,0,0,0,0,1
219,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",1,1,0,0,0,0,1
220,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Hire';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",1,1,0,0,0,0,1
221,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,"SELECT DISTINCT  date_start  FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0 s with (nolock)
JOIN HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0 a with (nolock) ON s.period_of_service_id = a.period_of_service_id 
WHERE s.person_id IN (
SELECT DISTINCT s.person_id  FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0History s with (nolock)
JOIN HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History a with (nolock) on s.period_of_service_id=a.period_of_service_id 
WHERE CONVERT(date, SWITCHOFFSET(s.BaseUTCEndDate, DATEPART(TZOFFSET, 
s.BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? AS DATE)
 AND  date_start IS NOT NULL AND assignment_number  NOT  LIKE '%-%'   AND date_start>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy')))
AND  date_start IS NOT NULL AND assignment_number NOT  LIKE '%-%' AND date_start>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy'))
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ?
AND [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate",1,1,0,0,0,0,1
3017,Package\Truncate DimMeasureLanding,Truncate table DimMeasureLanding,1,1,0,0,0,0,1
3018,Package\Truncate DimRetentionBaseWeek,Truncate table DimRetentionBaseWeek,1,1,0,0,0,0,1
3019,Package\Truncate PartnerVerified Landing,TRUNCATE TABLE dbo.FactPartnerVerifiedSponsorLanding,1,1,0,0,0,0,1
3020,Package\Truncate Table Support Table,TRUNCATE TABLE  BING_EDW..SupportDailyMeasureFTE,1,1,0,0,0,0,1
3021,Package\Truncate Table Support Table,TRUNCATE TABLE  BING_EDW..SupportDailyMeasureRev,1,1,0,0,0,0,1
3022,Package\truncate staging,truncate table dbo.DimMartCostcenterLanding,1,1,0,0,0,0,1
