SqlTaskData
""
"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;"
"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;"
"Execute spEndAuditLog ?,?,?,?,?,?,?;"
"Execute spBeginAuditLog ? OUTPUT, ?, ?;"
"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"Execute spEndAuditLog ?, ?, ?, ?, ?;"
"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
"
"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;"
"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target'
SELECT @@ROWCOUNT AS DeleteCount;"
"   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]


  Union

  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber
"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]


  Union

  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
  Union
  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION

   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"
 SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber
"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   UNION 
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM CMS_Staging.dbo.enrlScheduleDay AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.EffectiveDate = d.FullDate
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].StgModifiedDate > ?
   AND f.EffectiveDate BETWEEN '2011-01-01' AND GETDATE()
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
     ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
  Union

  SELECT	  d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactCenterStatSnapshot (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
ON f.[FiscalWeekEndDateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]

UNION

SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactCenterStatSnapshot (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
	ON f.[FiscalWeekEndDateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
	ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
	AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
	AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [d].[FiscalWeekNumber] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]
ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber"
EXEC [dbo].[SpPopulateNSESupport]   @DebugMode =1
"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount; "
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT	  d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(WEEK, DATEDIFF(WEEK, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]


UNION

SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
	ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
	ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
	AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
	AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [d].[FiscalWeekNumber] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]
ORDER BY DataScenarioFiscalWeekNumber"
"SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
    , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
    , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
    , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(WEEK, DATEDIFF(WEEK, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber]
      , d.[FiscalWeekEndDate]
      , d.[FiscalYearEndDate]
      , d.[FiscalWeekOfYearNumber]
      , d_nyr.[FiscalWeekNumber]
      , d_nyr.[FiscalWeekEndDate]


UNION

SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
    , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
    , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
    , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
 ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
 ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
 AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
 AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [d].[FiscalWeekNumber] > ?
GROUP BY d.[FiscalWeekNumber]
      , d.[FiscalWeekEndDate]
      , d.[FiscalYearEndDate]
      , d.[FiscalWeekOfYearNumber]
      , d_nyr.[FiscalWeekNumber]
      , d_nyr.[FiscalWeekEndDate]
ORDER BY DataScenarioFiscalWeekNumber"
"DELETE FROM DW_Base.dbo.BaseDailyMeasureFTE WHERE FiscalWeekEndDate =?


Select @@Rowcount as DC"
"DECLARE @QueryTable TABLE
(
    SQLQUERY VARCHAR(MAX) NULL
);

DECLARE @Measurename VARCHAR(100);
DECLARE csr_fact_rabalance_fisc_weekend CURSOR FOR
SELECT MeasureName
FROM GL_Staging..MartASALookup
WHERE GLMetricTypeCode = 'Stat';

OPEN csr_fact_rabalance_fisc_weekend;
FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN

 
    IF
    (
        SELECT TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
		DELETE FROM @Field
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1)PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + '''' +
	  @MeasureName +'''' + '  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( '
             +  '''' + CONVERT(VARCHAR, ?, 23) + '''' +' )'
                 + N' AND Acct.AccountSubaccountKey IN (' + N'SELECT AccountSubaccountKey '
              + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
       Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
		DELETE FROM @Field2
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1)PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + '''' +
	  @MeasureName +'''' + '  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( '
             +  '''' + CONVERT(VARCHAR, ?, 23) + '''' +' )' + N' AND Acct.AccountSubaccountKey IN (' + N'SELECT AccountSubaccountKey '
              + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
    INTO @Measurename;
END;

CLOSE csr_fact_rabalance_fisc_weekend;
DEALLOCATE csr_fact_rabalance_fisc_weekend;

SELECT CAST( Replace ((SELECT STUFF(( SELECT  N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')),1,6,N'')) , '&#x0D;', '') AS VARCHAR(MAX) )"
"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate DATETIME, @LastsuccessfulDate DATETIME;
IF (SELECT Top 1 AuditId
           FROM dbo.AuditLog WHERE TaskName= ?) IS NULL 
BEGIN
    WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName ='NewFTE' )
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;

WITH LatestJobAuditBySuccessfulRun AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditBySuccessfulRun AS lja ON lja.LatestJobAudit = ja.AuditId;

SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate,
ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate
END
ELSE 
BEGIN

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;

WITH LatestJobAuditBySuccessfulRun AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditBySuccessfulRun AS lja ON lja.LatestJobAudit = ja.AuditId;

SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate,
ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate;

END"
"SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ? AND [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate"
"DECLARE @QueryTable TABLE
(
    SQLQUERY VARCHAR(MAX) NULL
);

DECLARE @Measurename VARCHAR(100);
DECLARE csr_fact_rabalance_fisc_weekend CURSOR FOR
SELECT MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT DISTINCT MeasureName FROM BING_EDW..SupportDailyMeasureFTE
      )
      AND GLMetricTypeCode = 'Stat';
--
-- Use cursor to loop through the values we have chosen to split this batch by
--
OPEN csr_fact_rabalance_fisc_weekend;
FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN


    IF
    (
        SELECT TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
        DELETE FROM @Field;
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
       Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
        DELETE FROM @Field2;
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
    INTO @Measurename;
END;

CLOSE csr_fact_rabalance_fisc_weekend;
DEALLOCATE csr_fact_rabalance_fisc_weekend;




SELECT CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX));"
"DECLARE @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessDate,GETDATE()) AS LastProcessDate"
"SELECT  201101 AS LastProcessFiscalWeekNumber, '01-08-2011' AS LastProcessDate"
"IF (SELECT TOP 1 MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT DISTINCT MeasureName FROM BING_EDW..SupportDailyMeasureFTE
      )
      AND GLMetricTypeCode = 'Stat' ) IS NULL 
	  BEGIN 
	  SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE[f].EDWCreatedDate  BETWEEN '01-01-1900' AND  '01-01-1900'
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
   END 
   ELSE 
   BEGIN

SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].Fulldate  BETWEEN ? AND ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ? AND [d].[Fulldate]<= ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate

END "
TRUNCATE TABLE  BING_EDW..SupportDailyMeasureFTE
"DELETE FROM DW_Base.dbo.BaseDailyMeasureNetRevenue WHERE FiscalWeekEndDate =?


Select @@Rowcount as DC"
"DECLARE @QueryTable TABLE
(
    SQLQUERY VARCHAR(MAX) NULL
);

DECLARE @Measurename VARCHAR(100);
DECLARE csr_BaseRevenue CURSOR FOR
SELECT   MeasureName
FROM GL_Staging..MartASALookup

      WHERE  GLMetricTypeCode = 'USD' and MeasureName<>'Payroll';
--
-- Use cursor to loop through the values we have chosen to split this batch by
--
OPEN csr_BaseRevenue;
FETCH NEXT FROM csr_BaseRevenue
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN


    IF
    (
        SELECT  TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
        DELETE FROM @Field;
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR,?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
        Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
        DELETE FROM @Field2;
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
         Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_BaseRevenue
    INTO @Measurename;
END;

CLOSE csr_BaseRevenue;
DEALLOCATE csr_BaseRevenue;




SELECT CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX));"
"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate DATETIME , @LastsuccessfulDate DateTime;
IF (SELECT Top 1 AuditId
           FROM dbo.AuditLog WHERE TaskName= ?) IS NULL 
BEGIN
    WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName ='NewNetRev' )
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
	    WITH CTE AS (	  SELECT TaskName,MAX(AuditId) AS e FROM dbo.AuditLog WHERE Statuscode=1 AND TaskName =?   GROUP BY TaskName)
	  
	  SELECT  @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN CTE AS lja ON lja.e = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate, ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate
END
ELSE 
BEGIN

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
	  
	  WITH CTE AS (	  SELECT TaskName,MAX(AuditId) AS e FROM dbo.AuditLog WHERE Statuscode=1 AND TaskName =?   GROUP BY TaskName)
	  
	  SELECT  @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN CTE AS lja ON lja.e = ja.AuditId;

SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate,ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate

END"
"SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ?
AND [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate"
"DECLARE @QueryTable TABLE
(
    SQLQUERY VARCHAR(MAX) NULL
);

DECLARE @Measurename VARCHAR(100);
DECLARE csr_BaseRevenue CURSOR FOR
SELECT Distinct  MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT DISTINCT MeasureName FROM BING_EDW..SupportDailyMeasureRev
      )
	  AND MeasureName <> 'Payroll'
      AND GLMetricTypeCode = 'USD';
--
-- Use cursor to loop through the values we have chosen to split this batch by
--
OPEN csr_BaseRevenue;
FETCH NEXT FROM csr_BaseRevenue
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN


    IF
    (
        SELECT  TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
        DELETE FROM @Field;
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	  COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR,?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
        Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
        DELETE FROM @Field2;
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
         Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_BaseRevenue
    INTO @Measurename;
END;

CLOSE csr_BaseRevenue;
DEALLOCATE csr_BaseRevenue;




SELECT CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX))
	WHERE CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX)) IS NOT NULL;"
"IF (SELECT TOP 1 MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT MeasureName FROM BING_EDW..SupportDailyMeasureRev
      )
      AND GLMetricTypeCode = 'USD' ) IS  NULL
	  BEGIN 
	  SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [f].[EDWCreatedDate]  BETWEEN '01-01-1900' AND  '01-01-1900'
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
   END 
   ELSE 
   BEGIN

SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].FullDate  BETWEEN  ? AND  ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ? AND [d].FullDate<=?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate

END"
TRUNCATE TABLE  BING_EDW..SupportDailyMeasureRev
"DELETE 
    FROM dbo.BaseDailyMeasureFTE
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;"
 Exec [dbo].[SpPopulateNSESupportSD]   @DebugMode =1
"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201901) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '2019-01-04') AS LastProcessDate"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   UNION 
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM CMS_Staging.dbo.enrlScheduleDay AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.EffectiveDate = d.FullDate
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].StgModifiedDate > ?
   AND f.EffectiveDate BETWEEN '2019-01-04' AND GETDATE()
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
     ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"IF EXISTS
(SELECT 1
FROM BaseETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM BaseETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO BaseETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END"
"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber"
"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;"
"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount "
"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours'
AND DataScenarioName = ('Plan')"
"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours'
AND DataScenarioName = ('Plan')"
"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Childcare'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount "
"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Childcare'
AND DataScenarioName = ('Plan')"
"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Childcare'
AND DataScenarioName = ('Plan')"
"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Operating'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount "
"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Operating'
AND DataScenarioName = ('Plan')"
"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Operating'
AND DataScenarioName = ('Plan')"
"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Overtime'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount "
"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Overtime'
AND DataScenarioName = ('Plan')"
"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Overtime'
AND DataScenarioName = ('Plan')"
"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Special Programs (Memo)'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount "
"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Special Programs (Memo)'
AND DataScenarioName = ('Plan')"
"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Special Programs (Memo)'
AND DataScenarioName = ('Plan')"
"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Training'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount "
"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Training'
AND DataScenarioName = ('Plan')"
"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Training'
AND DataScenarioName = ('Plan')"
"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Total Labor Hours'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount "
"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Total Labor Hours'
AND DataScenarioName = ('Plan')"
"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Total Labor Hours'
AND DataScenarioName = ('Plan')"
"UPDATE BaseETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = 'GLPlanAllocation_LaborHours'"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber"
