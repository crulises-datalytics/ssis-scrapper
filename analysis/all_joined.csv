,RefId,ExecutableType,ObjectName,componentClassID,contactInfo,description,name,SqlTaskData,File_path
0,Package,Microsoft.Package,ARBalanceMeasure,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
1,Package\Seq - ARBalance Measures,STOCK:SEQUENCE,Seq - ARBalance Measures,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
2,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual,STOCK:SEQUENCE,Seq - ARParent0to7Days_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
3,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
4,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
5,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
6,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
7,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARParent0to7Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
8,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARParent0to7Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
9,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
10,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
11,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
12,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARParent0to7Days_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARParent0to7Days_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
13,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARParent0to7Days_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARParent0to7Days_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
14,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
15,Package\Seq - ARBalance Measures\Seq - ARParent0to7Days_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
16,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual,STOCK:SEQUENCE,Seq - ARParent8to14Days_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
17,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
18,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
19,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
20,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
21,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARParent8to14Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
22,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARParent8to14Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
23,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
24,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
25,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
26,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARParent8to14Days_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARParent8to14Days_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
27,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARParent8to14Days_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARParent8to14Days_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
28,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
29,Package\Seq - ARBalance Measures\Seq - ARParent8to14Days_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
30,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual,STOCK:SEQUENCE,Seq - ARParentover30Days_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
31,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
32,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
33,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
34,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
35,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARParentover30Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
36,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARParentover30Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
37,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
38,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
39,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
40,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARParentover30Days_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARParentover30Days_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
41,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARParentover30Days_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARParentover30Days_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
42,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
43,Package\Seq - ARBalance Measures\Seq - ARParentover30Days_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
44,Package\Seq - ARBalance Measures\Seq - ARParent_Actual,STOCK:SEQUENCE,Seq - ARParent_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
45,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
46,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
47,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
48,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
49,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARParent_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
50,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARParent_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
51,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
52,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
53,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
54,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARParent_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARParent_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
55,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARParent_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARParent_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
56,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
57,Package\Seq - ARBalance Measures\Seq - ARParent_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
58,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual,STOCK:SEQUENCE,Seq - ARPrepay_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
59,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
60,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
61,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
62,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
63,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARPrepay_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
64,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARPrepay_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
65,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
66,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
67,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
68,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARPrepay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARPrepay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
69,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARPrepay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARPrepay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
70,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
71,Package\Seq - ARBalance Measures\Seq - ARPrepay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
72,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual,STOCK:SEQUENCE,Seq - ARStaff_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
73,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
74,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
75,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
76,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
77,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARStaff_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
78,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARStaff_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
79,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
80,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
81,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
82,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARStaff_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARStaff_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
83,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARStaff_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARStaff_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
84,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
85,Package\Seq - ARBalance Measures\Seq - ARStaff_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
86,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual,STOCK:SEQUENCE,Seq - ARSubsidyOver90DayswARParent_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
87,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
88,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
89,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
90,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
91,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARSubsidyOver90DayswARParent_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
92,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARSubsidyOver90DayswARParent_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
93,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
94,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
95,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
96,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARSubsidyOver90DayswARParent_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARSubsidyOver90DayswARParent_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
97,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARSubsidyOver90DayswARParent_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARSubsidyOver90DayswARParent_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
98,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
99,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90DayswARParent_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
100,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual,STOCK:SEQUENCE,Seq - ARSubsidyOver90Days_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
101,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
102,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
103,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
104,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
105,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARSubsidyOver90Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
106,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARSubsidyOver90Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
107,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
108,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
109,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
110,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARSubsidyOver90Days_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARSubsidyOver90Days_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
111,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARSubsidyOver90Days_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARSubsidyOver90Days_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
112,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
113,Package\Seq - ARBalance Measures\Seq - ARSubsidyOver90Days_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
114,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual,STOCK:SEQUENCE,Seq - ARSubsidyUnder90Days_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
115,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
116,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
117,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
118,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
119,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARSubsidyUnder90Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
120,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARSubsidyUnder90Days_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
121,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
122,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
123,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
124,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARSubsidyUnder90Days_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARSubsidyUnder90Days_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
125,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARSubsidyUnder90Days_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARSubsidyUnder90Days_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
126,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
127,Package\Seq - ARBalance Measures\Seq - ARSubsidyUnder90Days_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
128,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual,STOCK:SEQUENCE,Seq - ARSubsidy_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
129,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
130,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
131,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
132,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
133,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ARSubsidy_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
134,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ARSubsidy_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
135,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
136,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
137,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
138,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End ARSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
139,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ARSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
140,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
141,Package\Seq - ARBalance Measures\Seq - ARSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
142,Package\Seq - ARBalance Measures\Seq - AR_Actual,STOCK:SEQUENCE,Seq - AR_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
143,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
144,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
145,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
146,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
147,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for AR_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
148,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_AR_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
149,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
150,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
151,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
152,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\SQL - End AR_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End AR_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
153,Package\Seq - ARBalance Measures\Seq - AR_Actual\Foreach - New or Updated Fiscal Week\SQL - Start AR_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start AR_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
154,Package\Seq - ARBalance Measures\Seq - AR_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
155,Package\Seq - ARBalance Measures\Seq - AR_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
156,Package\Seq - ARBalance Measures\Seq - NetAR_Actual,STOCK:SEQUENCE,Seq - NetAR_Actual,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
157,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
158,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_ARBalanceMeasure
159,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_ARBalanceMeasure
160,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_ARBalanceMeasure
161,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetAR_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
162,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetAR_Actual,,DWBaseIncrementalLoad_ARBalanceMeasure
163,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_ARBalanceMeasure
164,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
165,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_ARBalanceMeasure
166,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAR_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAR_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_ARBalanceMeasure
167,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAR_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAR_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
168,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_ARBalanceMeasure
169,Package\Seq - ARBalance Measures\Seq - NetAR_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactARBalanceSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.AsOfDateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_ARBalanceMeasure
170,Package\SQL - End ARBalanceMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End ARBalanceMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
171,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_ARBalanceMeasure
172,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_ARBalanceMeasure
173,Package,Microsoft.Package,CalculatedMeasure,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
174,Package\Seq - Calculated Measures,STOCK:SEQUENCE,Seq - Calculated Measures,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
175,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE,STOCK:SEQUENCE,Reported_Labor_Hour__Per_FTE,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
176,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
177,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
178,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
179,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
180,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Hour__Per_FTE,,DWBaseIncrementalLoad_CalculatedMeasure
181,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Hour__Per_FTE,,DWBaseIncrementalLoad_CalculatedMeasure
182,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
183,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
184,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
185,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHours_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
186,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildCare Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursChildCare Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
187,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
188,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",DWBaseIncrementalLoad_CalculatedMeasure
189,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan,STOCK:SEQUENCE,Reported_Labor_Hour__Per_FTE_Plan,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
190,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
191,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
192,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
193,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
194,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Hour__Per_FTE_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
195,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Hour__Per_FTE_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
196,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
197,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
198,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursPerFTEPlan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursPerFTEPlan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
199,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursPerFTEPlan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursPerFTEPlan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
200,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
201,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",DWBaseIncrementalLoad_CalculatedMeasure
202,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target,STOCK:SEQUENCE,Reported_Labor_Hour__Per_FTE_Target,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
203,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
204,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
205,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
206,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
207,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Hour__Per_FTE_Target,,DWBaseIncrementalLoad_CalculatedMeasure
208,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Hour__Per_FTE_Target,,DWBaseIncrementalLoad_CalculatedMeasure
209,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
210,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target'
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
211,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursPerFTETarget Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursPerFTETarget Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
212,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursPerFTETarget Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursPerFTETarget Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
213,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
214,Package\Seq - Calculated Measures\Reported_Labor_Hour__Per_FTE_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",DWBaseIncrementalLoad_CalculatedMeasure
215,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue,STOCK:SEQUENCE,Reported_Labor_Salary_Pct_Net_Revenue,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
216,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
217,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
218,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
219,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
220,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Salary_Pct_Net_Revenue,,DWBaseIncrementalLoad_CalculatedMeasure
221,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Salary_Pct_Net_Revenue,,DWBaseIncrementalLoad_CalculatedMeasure
222,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
223,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
224,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
225,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHours_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
226,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildCare Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursChildCare Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
227,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
228,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]


  Union

  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber
",DWBaseIncrementalLoad_CalculatedMeasure
229,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan,STOCK:SEQUENCE,Reported_Labor_Salary_Pct_Net_Revenue_Plan,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
230,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
231,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
232,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
233,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
234,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Salary_Pct_Net_Revenue_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
235,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Salary_Pct_Net_Revenue_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
236,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
237,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
238,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryPctNetRevenuePlan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryPctNetRevenuePlan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
239,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryPctNetRevenuePlan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryPctNetRevenuePlan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
240,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
241,Package\Seq - Calculated Measures\Reported_Labor_Salary_Pct_Net_Revenue_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]


  Union

  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
242,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan,STOCK:SEQUENCE,Reported_WageRateBase_Plan,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
243,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
244,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
245,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
246,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
247,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedWageRateBase_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
248,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_WageRateBase_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
249,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
250,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
251,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedWageRateBase_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedWageRateBase_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
252,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedWageRateBase_plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedWageRateBase_plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
253,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
254,Package\Seq - Calculated Measures\Reported_WageRateBase_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",DWBaseIncrementalLoad_CalculatedMeasure
255,Package\Seq - Calculated Measures\Reported_WageRateBase_Target,STOCK:SEQUENCE,Reported_WageRateBase_Target,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
256,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
257,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
258,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
259,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
260,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedWageRateBase_Target,,DWBaseIncrementalLoad_CalculatedMeasure
261,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedWageRateBase_Target,,DWBaseIncrementalLoad_CalculatedMeasure
262,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
263,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target'
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
264,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedWageRateBase_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedWageRateBase_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
265,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedWageRateBaseTarget Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedWageRateBaseTarget Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
266,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
267,Package\Seq - Calculated Measures\Reported_WageRateBase_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",DWBaseIncrementalLoad_CalculatedMeasure
268,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual,STOCK:SEQUENCE,Seq - BaseWeekStudents_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
269,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
270,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
271,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
272,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
273,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for BaseWeekStudents_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
274,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_BaseWeekStudents_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
275,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
276,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
277,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
278,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\SQL - End BaseWeekStudents_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End BaseWeekStudents_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
279,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\Foreach - New or Updated Fiscal Week\SQL - Start BaseWeekStudents_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start BaseWeekStudents_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
280,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
281,Package\Seq - Calculated Measures\Seq - BaseWeekStudents_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
282,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual,STOCK:SEQUENCE,Seq - InquirytoNSE_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
283,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
284,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
285,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
286,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
287,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for InquirytoEnrollment_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
288,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_InquirytoEnrollment_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
289,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
290,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
291,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
292,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\SQL - End InquirytoNSE_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End InquirytoNSE_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
293,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start InquirytoNSE_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start InquirytoNSE_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
294,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
295,Package\Seq - Calculated Measures\Seq - InquirytoNSE_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",DWBaseIncrementalLoad_CalculatedMeasure
296,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual,STOCK:SEQUENCE,Seq - LaborHourPerFTE_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
297,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
298,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
299,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
300,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
301,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHourPerFTE_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
302,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHourPerFTE_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
303,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
304,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
305,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
306,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHourPerFTE_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
307,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourperFTE_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHourperFTE_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
308,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
309,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber
",DWBaseIncrementalLoad_CalculatedMeasure
310,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan,STOCK:SEQUENCE,Seq - LaborHourPerFTE_Plan,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
311,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
312,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
313,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
314,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
315,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHourPerFTE_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
316,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHourPerFTE_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
317,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
318,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
319,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHourPerFTE_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
320,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourPerFTE_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHourPerFTE_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
321,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
322,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
  Union
  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
323,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target,STOCK:SEQUENCE,Seq - LaborHourPerFTE_Target,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
324,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
325,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
326,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
327,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
328,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHourPerFTE_Target,,DWBaseIncrementalLoad_CalculatedMeasure
329,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHourPerFTE_Target,,DWBaseIncrementalLoad_CalculatedMeasure
330,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
331,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
332,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHourPerFTE_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
333,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourPerFTE_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHourPerFTE_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
334,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
335,Package\Seq - Calculated Measures\Seq - LaborHourPerFTE_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION

   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
336,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual,STOCK:SEQUENCE,Seq - LaborSalaryPctNetRevenue_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
337,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
338,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
339,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
340,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
341,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryPctNetRevenue_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
342,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_LaborSalaryPctNetRevenue_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
343,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
344,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
345,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
346,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPctNetRevenue_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryPctNetRevenue_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
347,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryPctNetRevenue_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryPctNetRevenue_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
348,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
349,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]


  Union

  SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
350,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan,STOCK:SEQUENCE,Seq - LaborSalaryPctNetRevenue_Plan,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
351,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
352,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
353,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
354,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
355,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
356,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryPctNetRevenue_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
357,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
358,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
359,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPctNetRevenue_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryPctNetRevenue_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
360,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Labor Salary Pct Net Revenue_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Labor Salary Pct Net Revenue_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
361,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
362,Package\Seq - Calculated Measures\Seq - LaborSalaryPctNetRevenue_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"
 SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber
",DWBaseIncrementalLoad_CalculatedMeasure
363,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual,STOCK:SEQUENCE,Seq - NetAverageRatePrivatePay_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
364,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
365,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
366,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
367,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
368,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetAverageRatePrivatePay_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
369,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_NetAverageRatePrivatePay_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
370,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
371,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
372,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
373,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRatePrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRatePrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
374,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRatePrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRatePrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
375,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
376,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
377,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan,STOCK:SEQUENCE,Seq - NetAverageRatePrivatePay_Plan,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
378,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
379,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
380,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
381,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
382,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
383,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
384,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
385,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
386,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRatePrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRatePrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
387,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRatePrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRatePrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
388,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
389,Package\Seq - Calculated Measures\Seq - NetAverageRatePrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
390,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual,STOCK:SEQUENCE,Seq - NetAverageRateSubsidy_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
391,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
392,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
393,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
394,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
395,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetAverageRateSubsidy_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
396,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_NetAverageRateSubsidy_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
397,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
398,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
399,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
400,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRateSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRateSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
401,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRateSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRateSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
402,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
403,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
404,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan,STOCK:SEQUENCE,Seq - NetAverageRateSubsidy_Plan,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
405,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
406,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
407,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
408,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
409,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
410,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetAverageSubsidy_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
411,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
412,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
413,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRateSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRateSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
414,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRateSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRateSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
415,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
416,Package\Seq - Calculated Measures\Seq - NetAverageRateSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
417,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual,STOCK:SEQUENCE,Seq - NetAverageRate_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
418,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
419,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
420,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
421,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
422,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetAverageRate_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
423,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_NetAverageRate_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
424,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
425,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
426,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
427,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRate_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRate_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
428,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRate_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRate_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
429,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
430,Package\Seq - Calculated Measures\Seq - NetAverageRate_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
431,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan,STOCK:SEQUENCE,Seq - NetAverageRate_Plan,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
432,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
433,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
434,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
435,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
436,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetAverageRate_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
437,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetAverageRate_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
438,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
439,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
440,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRate_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRate_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
441,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRate_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRate_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
442,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
443,Package\Seq - Calculated Measures\Seq - NetAverageRate_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
444,Package\Seq - Calculated Measures\Seq - NSE_Actual,STOCK:SEQUENCE,Seq - NSE_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
445,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
446,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
447,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
448,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
449,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NSE_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
450,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NSE_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
451,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
452,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
453,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
454,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\SQL - End NSE_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NSE_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
455,Package\Seq - Calculated Measures\Seq - NSE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NSE_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NSE_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
456,Package\Seq - Calculated Measures\Seq - NSE_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
457,Package\Seq - Calculated Measures\Seq - NSE_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   UNION 
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM CMS_Staging.dbo.enrlScheduleDay AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.EffectiveDate = d.FullDate
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].StgModifiedDate > ?
   AND f.EffectiveDate BETWEEN '2011-01-01' AND GETDATE()
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
     ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
458,Package\Seq - Calculated Measures\Seq - Occupancy_Actual,STOCK:SEQUENCE,Seq - Occupancy_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
459,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
460,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
461,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
462,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
463,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Occupancy_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
464,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Occupancy_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
465,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
466,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
467,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
468,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\SQL - End Occupancy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End Occupancy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
469,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Occupancy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Occupancy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
470,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
471,Package\Seq - Calculated Measures\Seq - Occupancy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   Union
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
472,Package\Seq - Calculated Measures\Seq - Occupancy_Plan,STOCK:SEQUENCE,Seq - Occupancy_Plan,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
473,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
474,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
475,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
476,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
477,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Occupancy_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
478,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Occupancy_Plan,,DWBaseIncrementalLoad_CalculatedMeasure
479,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
480,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
481,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\SQL - End Occupancy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End Occupancy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
482,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start Occupancy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Occupancy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
483,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
484,Package\Seq - Calculated Measures\Seq - Occupancy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
  Union

  SELECT	  d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactCenterStatSnapshot (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
ON f.[FiscalWeekEndDateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]

UNION

SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactCenterStatSnapshot (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
	ON f.[FiscalWeekEndDateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
	ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
	AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
	AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [d].[FiscalWeekNumber] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]
ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
485,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual,STOCK:SEQUENCE,Seq - StudentRetention_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
486,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
487,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
488,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
489,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
490,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for StudentRetention_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
491,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_StudentRetention_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
492,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
493,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
494,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
495,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\SQL - End StudentRetention_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End StudentRetention_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
496,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\Foreach - New or Updated Fiscal Week\SQL - Start StudentRetention_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start StudentRetention_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
497,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
498,Package\Seq - Calculated Measures\Seq - StudentRetention_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
499,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual,STOCK:SEQUENCE,Seq - TourstoNSE_Actual,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
500,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
501,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CalculatedMeasure
502,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CalculatedMeasure
503,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CalculatedMeasure
504,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TourstoEnrollment_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
505,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TourstoEnrollment_Actual,,DWBaseIncrementalLoad_CalculatedMeasure
506,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CalculatedMeasure
507,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
508,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CalculatedMeasure
509,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\SQL - End TourstoNSE_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TourstoNSE_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CalculatedMeasure
510,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TourstoNSE_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TourstoNSE_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CalculatedMeasure
511,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CalculatedMeasure
512,Package\Seq - Calculated Measures\Seq - TourstoNSE_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CalculatedMeasure
513,Package\Seq - Calculated Measures\SpPopulateNSESupport,Microsoft.ExecuteSQLTask,SpPopulateNSESupport,,,,,EXEC [dbo].[SpPopulateNSESupport]   @DebugMode =1,DWBaseIncrementalLoad_CalculatedMeasure
514,Package,Microsoft.Package,CenterStatusSnapshot,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
515,Package\Licensed Capacity Measures,STOCK:SEQUENCE,Licensed Capacity Measures,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
516,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual,STOCK:SEQUENCE,Seq - BuidlingCapacity_Actual,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
517,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
518,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
519,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
520,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CenterStatusSnapshot
521,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for BuildingCapacity_Actual,,DWBaseIncrementalLoad_CenterStatusSnapshot
522,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_BuildingCapacity_Actual,,DWBaseIncrementalLoad_CenterStatusSnapshot
523,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
524,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CenterStatusSnapshot
525,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount; ",DWBaseIncrementalLoad_CenterStatusSnapshot
526,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - End LicensedCapacity_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LicensedCapacity_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CenterStatusSnapshot
527,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - Start BuidlingCapacity_Actual AuditLog,Microsoft.ExecuteSQLTask,SQL - Start BuidlingCapacity_Actual AuditLog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CenterStatusSnapshot
528,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CenterStatusSnapshot
529,Package\Licensed Capacity Measures\Seq - BuidlingCapacity_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CenterStatusSnapshot
530,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual,STOCK:SEQUENCE,Seq - LicensedCapacity_Actual,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
531,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
532,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
533,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
534,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CenterStatusSnapshot
535,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LicensedCapacity_Actual,,DWBaseIncrementalLoad_CenterStatusSnapshot
536,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LicensedCapacity_Actual,,DWBaseIncrementalLoad_CenterStatusSnapshot
537,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
538,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CenterStatusSnapshot
539,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CenterStatusSnapshot
540,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - End LicensedCapacity_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LicensedCapacity_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CenterStatusSnapshot
541,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LicensedCapacity_Actual AuditLog,Microsoft.ExecuteSQLTask,SQL - Start LicensedCapacity_Actual AuditLog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CenterStatusSnapshot
542,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CenterStatusSnapshot
543,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CenterStatusSnapshot
544,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan,STOCK:SEQUENCE,Seq - LicensedCapacity_Plan,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
545,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
546,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
547,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
548,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CenterStatusSnapshot
549,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LicensedCapacity_Plan,,DWBaseIncrementalLoad_CenterStatusSnapshot
550,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LicensedCapacity_Plan,,DWBaseIncrementalLoad_CenterStatusSnapshot
551,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
552,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CenterStatusSnapshot
553,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CenterStatusSnapshot
554,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\SQL - End LicensedCapacity_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LicensedCapacity_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CenterStatusSnapshot
555,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LicensedCapacity_Plan AuditLog,Microsoft.ExecuteSQLTask,SQL - Start LicensedCapacity_Plan AuditLog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CenterStatusSnapshot
556,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CenterStatusSnapshot
557,Package\Licensed Capacity Measures\Seq - LicensedCapacity_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT	  d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(WEEK, DATEDIFF(WEEK, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]


UNION

SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
				, d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
				, ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
				, ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
	ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
	ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
	AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
	AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [d].[FiscalWeekNumber] > ?
GROUP BY d.[FiscalWeekNumber]
				  , d.[FiscalWeekEndDate]
				  , d.[FiscalYearEndDate]
				  , d.[FiscalWeekOfYearNumber]
				  , d_nyr.[FiscalWeekNumber]
				  , d_nyr.[FiscalWeekEndDate]
ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CenterStatusSnapshot
558,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual,STOCK:SEQUENCE,Seq - OperationalCapacity_Actual,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
559,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
560,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
561,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
562,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CenterStatusSnapshot
563,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for OperationalCapacity_Actual,,DWBaseIncrementalLoad_CenterStatusSnapshot
564,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_OperationalCapacity_Actual,,DWBaseIncrementalLoad_CenterStatusSnapshot
565,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
566,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CenterStatusSnapshot
567,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CenterStatusSnapshot
568,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - End OperationalCapacity_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End OperationalCapacity_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CenterStatusSnapshot
569,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LicensedCapacity_Actual AuditLog,Microsoft.ExecuteSQLTask,SQL - Start LicensedCapacity_Actual AuditLog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CenterStatusSnapshot
570,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CenterStatusSnapshot
571,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   AND d.FiscalYearNumber >= 2011
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

UNION

SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactCenterStatSnapshot (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.[FiscalWeekEndDateKey] = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
    AND d.FiscalYearNumber >= 2011
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CenterStatusSnapshot
572,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan,STOCK:SEQUENCE,Seq - OperationalCapacity_Plan,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
573,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
574,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
575,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_CenterStatusSnapshot
576,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_CenterStatusSnapshot
577,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for OperationalCapacity_Plan,,DWBaseIncrementalLoad_CenterStatusSnapshot
578,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_OperationalCapacity_Plan,,DWBaseIncrementalLoad_CenterStatusSnapshot
579,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_CenterStatusSnapshot
580,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CenterStatusSnapshot
581,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_CenterStatusSnapshot
582,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\SQL - End LicensedCapacity_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LicensedCapacity_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_CenterStatusSnapshot
583,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LicensedCapacity_Plan AuditLog,Microsoft.ExecuteSQLTask,SQL - Start LicensedCapacity_Plan AuditLog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CenterStatusSnapshot
584,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_CenterStatusSnapshot
585,Package\Licensed Capacity Measures\Seq - OperationalCapacity_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
    , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
    , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
    , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(WEEK, DATEDIFF(WEEK, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber]
      , d.[FiscalWeekEndDate]
      , d.[FiscalYearEndDate]
      , d.[FiscalWeekOfYearNumber]
      , d_nyr.[FiscalWeekNumber]
      , d_nyr.[FiscalWeekEndDate]


UNION

SELECT   d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
    , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
    , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
    , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
FROM FactGLBalancePlanAllocation (NOLOCK) AS f
JOIN DimDate(NOLOCK) AS d
 ON f.[DateKey] = d.DateKey
LEFT JOIN DimDate(NOLOCK) AS d_nyr 
 ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
 AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
 AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
WHERE [d].[FiscalWeekNumber] > ?
GROUP BY d.[FiscalWeekNumber]
      , d.[FiscalWeekEndDate]
      , d.[FiscalYearEndDate]
      , d.[FiscalWeekOfYearNumber]
      , d_nyr.[FiscalWeekNumber]
      , d_nyr.[FiscalWeekEndDate]
ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_CenterStatusSnapshot
586,Package\SQL - End LicenseCapacity Measure Auditlog,Microsoft.ExecuteSQLTask,SQL - End LicenseCapacity Measure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_CenterStatusSnapshot
587,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_CenterStatusSnapshot
588,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_CenterStatusSnapshot
589,Package,Microsoft.Package,DailyMeasureFTE,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
590,Package\DFT - GetMeasure From Base,Microsoft.Pipeline,DFT - GetMeasure From Base,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - SupportFTETable,,DWBaseIncrementalLoad_DailyMeasureFTE
591,Package\DFT - GetMeasure From Base,Microsoft.Pipeline,DFT - GetMeasure From Base,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - BaseDailyMeasureFTE,,DWBaseIncrementalLoad_DailyMeasureFTE
592,Package\Execute NSE,Microsoft.ExecutePackageTask,Execute NSE,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
593,Package\Sequence Container,STOCK:SEQUENCE,Sequence Container,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
594,Package\Sequence Container\Seq - Incremental FTE,STOCK:SEQUENCE,Seq - Incremental FTE,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
595,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
596,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
597,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_DailyMeasureFTE
598,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_DailyMeasureFTE
599,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_DailyMeasureFTE
600,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseDailyMeasureFTE,,DWBaseIncrementalLoad_DailyMeasureFTE
601,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC- FactFTESnapshot,,DWBaseIncrementalLoad_DailyMeasureFTE
602,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\SQL - End IncremenalFTE Auditlog,Microsoft.ExecuteSQLTask,SQL - End IncremenalFTE Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_DailyMeasureFTE
603,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\SQL - Delete DailyMeasureFTE,Microsoft.ExecuteSQLTask,SQL - Delete DailyMeasureFTE,,,,,"DELETE FROM DW_Base.dbo.BaseDailyMeasureFTE WHERE FiscalWeekEndDate =?


Select @@Rowcount as DC",DWBaseIncrementalLoad_DailyMeasureFTE
604,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\SQL - Start IncrementalFTE_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start IncrementalFTE_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_DailyMeasureFTE
605,Package\Sequence Container\Seq - Incremental FTE\Foreach - New or Updated Fiscal Week\SQL- Assigning SRC query to Variable,Microsoft.ExecuteSQLTask,SQL- Assigning SRC query to Variable,,,,,"DECLARE @QueryTable TABLE
(
    SQLQUERY VARCHAR(MAX) NULL
);

DECLARE @Measurename VARCHAR(100);
DECLARE csr_fact_rabalance_fisc_weekend CURSOR FOR
SELECT MeasureName
FROM GL_Staging..MartASALookup
WHERE GLMetricTypeCode = 'Stat';

OPEN csr_fact_rabalance_fisc_weekend;
FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN

 
    IF
    (
        SELECT TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
		DELETE FROM @Field
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1)PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + '''' +
	  @MeasureName +'''' + '  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( '
             +  '''' + CONVERT(VARCHAR, ?, 23) + '''' +' )'
                 + N' AND Acct.AccountSubaccountKey IN (' + N'SELECT AccountSubaccountKey '
              + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
       Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
		DELETE FROM @Field2
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1)PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + '''' +
	  @MeasureName +'''' + '  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( '
             +  '''' + CONVERT(VARCHAR, ?, 23) + '''' +' )' + N' AND Acct.AccountSubaccountKey IN (' + N'SELECT AccountSubaccountKey '
              + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
    INTO @Measurename;
END;

CLOSE csr_fact_rabalance_fisc_weekend;
DEALLOCATE csr_fact_rabalance_fisc_weekend;

SELECT CAST( Replace ((SELECT STUFF(( SELECT  N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')),1,6,N'')) , '&#x0D;', '') AS VARCHAR(MAX) )",DWBaseIncrementalLoad_DailyMeasureFTE
606,Package\Sequence Container\Seq - Incremental FTE\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate DATETIME, @LastsuccessfulDate DATETIME;
IF (SELECT Top 1 AuditId
           FROM dbo.AuditLog WHERE TaskName= ?) IS NULL 
BEGIN
    WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName ='NewFTE' )
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;

WITH LatestJobAuditBySuccessfulRun AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditBySuccessfulRun AS lja ON lja.LatestJobAudit = ja.AuditId;

SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate,
ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate
END
ELSE 
BEGIN

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;

WITH LatestJobAuditBySuccessfulRun AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditBySuccessfulRun AS lja ON lja.LatestJobAudit = ja.AuditId;

SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate,
ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate;

END",DWBaseIncrementalLoad_DailyMeasureFTE
607,Package\Sequence Container\Seq - Incremental FTE\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ? AND [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate",DWBaseIncrementalLoad_DailyMeasureFTE
608,Package\Sequence Container 1,STOCK:SEQUENCE,Sequence Container 1,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
609,Package\Sequence Container 1\Seq - New FTE,STOCK:SEQUENCE,Seq - New FTE,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
610,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
611,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DWBaseIncrementalLoad_DailyMeasureFTE
612,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_DailyMeasureFTE
613,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_DailyMeasureFTE
614,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_DailyMeasureFTE
615,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseDailyMeasureFTE,,DWBaseIncrementalLoad_DailyMeasureFTE
616,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureFTE,Microsoft.Pipeline,DFT - Load BaseDailyMeasureFTE,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC- FactFTESnapshot,,DWBaseIncrementalLoad_DailyMeasureFTE
617,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\Foreach Loop Container\SQL - End NewFTE Auditlog,Microsoft.ExecuteSQLTask,SQL - End NewFTE Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_DailyMeasureFTE
618,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\SQL - Start NewFTE_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NewFTE_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_DailyMeasureFTE
619,Package\Sequence Container 1\Seq - New FTE\Foreach - New or Updated Fiscal Week\SQL- Assigning SRC query to Variable,Microsoft.ExecuteSQLTask,SQL- Assigning SRC query to Variable,,,,,"DECLARE @QueryTable TABLE
(
    SQLQUERY VARCHAR(MAX) NULL
);

DECLARE @Measurename VARCHAR(100);
DECLARE csr_fact_rabalance_fisc_weekend CURSOR FOR
SELECT MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT DISTINCT MeasureName FROM BING_EDW..SupportDailyMeasureFTE
      )
      AND GLMetricTypeCode = 'Stat';
--
-- Use cursor to loop through the values we have chosen to split this batch by
--
OPEN csr_fact_rabalance_fisc_weekend;
FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN


    IF
    (
        SELECT TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
        DELETE FROM @Field;
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
       Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
        DELETE FROM @Field2;
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
       SUM(FTE.FTE) AS Value1,
       FTE.SourceSystem AS SourceSystem,
      Std.CSSStudentNumber ,
      Spn.CSSCenterNumber  ,
      Spn.CSSFamilyNumber  ,
      Tr.CSSTierNumber	   ,
      Pgm.ProgramName	   ,
      SS.SessionName
FROM dbo.FactFTESnapshot FTE
    INNER JOIN dbo.DimDate DD
        ON FTE.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON FTE.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON FTE.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON FTE.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON FTE.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON FTE.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON FTE.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON FTE.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON FTE.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON FTE.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON FTE.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
         FTE.SourceSystem,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_fact_rabalance_fisc_weekend
    INTO @Measurename;
END;

CLOSE csr_fact_rabalance_fisc_weekend;
DEALLOCATE csr_fact_rabalance_fisc_weekend;




SELECT CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX));",DWBaseIncrementalLoad_DailyMeasureFTE
620,Package\Sequence Container 1\Seq - New FTE\Get Processed Date to End,Microsoft.ExecuteSQLTask,Get Processed Date to End,,,,,"DECLARE @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessDate,GETDATE()) AS LastProcessDate",DWBaseIncrementalLoad_DailyMeasureFTE
621,Package\Sequence Container 1\Seq - New FTE\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"SELECT  201101 AS LastProcessFiscalWeekNumber, '01-08-2011' AS LastProcessDate",DWBaseIncrementalLoad_DailyMeasureFTE
622,Package\Sequence Container 1\Seq - New FTE\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"IF (SELECT TOP 1 MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT DISTINCT MeasureName FROM BING_EDW..SupportDailyMeasureFTE
      )
      AND GLMetricTypeCode = 'Stat' ) IS NULL 
	  BEGIN 
	  SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE[f].EDWCreatedDate  BETWEEN '01-01-1900' AND  '01-01-1900'
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
   END 
   ELSE 
   BEGIN

SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].Fulldate  BETWEEN ? AND ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactFTESnapshot (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ? AND [d].[Fulldate]<= ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate

END ",DWBaseIncrementalLoad_DailyMeasureFTE
623,Package\SQL - End Package Auditlog,Microsoft.ExecuteSQLTask,SQL - End Package Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_DailyMeasureFTE
624,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_DailyMeasureFTE
625,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_DailyMeasureFTE
626,Package\Truncate Table Support Table,Microsoft.ExecuteSQLTask,Truncate Table Support Table,,,,,TRUNCATE TABLE  BING_EDW..SupportDailyMeasureFTE,DWBaseIncrementalLoad_DailyMeasureFTE
627,Package,Microsoft.Package,DailyMeasureNetRevenue,,,,,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
628,Package\DFT - GetMeasure From Base,Microsoft.Pipeline,DFT - GetMeasure From Base,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - SupportRevenueTable,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
629,Package\DFT - GetMeasure From Base,Microsoft.Pipeline,DFT - GetMeasure From Base,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - BaseDailyMeasureRev,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
630,Package\Sequence Container,STOCK:SEQUENCE,Sequence Container,,,,,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
631,Package\Sequence Container\Seq - Incremental NetRev,STOCK:SEQUENCE,Seq - Incremental NetRev,,,,,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
632,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
633,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
634,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
635,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
636,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
637,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseDailyMeasureNetRevenue,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
638,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC- FactNetRevenue,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
639,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\SQL - End IncremenalNetRev Auditlog,Microsoft.ExecuteSQLTask,SQL - End IncremenalNetRev Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_DailyMeasureNetRevenue
640,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\SQL - Delete DailyMeasureNetRevenue,Microsoft.ExecuteSQLTask,SQL - Delete DailyMeasureNetRevenue,,,,,"DELETE FROM DW_Base.dbo.BaseDailyMeasureNetRevenue WHERE FiscalWeekEndDate =?


Select @@Rowcount as DC",DWBaseIncrementalLoad_DailyMeasureNetRevenue
641,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\SQL - Start IncrementalNet_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start IncrementalNet_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_DailyMeasureNetRevenue
642,Package\Sequence Container\Seq - Incremental NetRev\Foreach - New or Updated Fiscal Week\SQL- Assigning SRC query to Variable,Microsoft.ExecuteSQLTask,SQL- Assigning SRC query to Variable,,,,,"DECLARE @QueryTable TABLE
(
    SQLQUERY VARCHAR(MAX) NULL
);

DECLARE @Measurename VARCHAR(100);
DECLARE csr_BaseRevenue CURSOR FOR
SELECT   MeasureName
FROM GL_Staging..MartASALookup

      WHERE  GLMetricTypeCode = 'USD' and MeasureName<>'Payroll';
--
-- Use cursor to loop through the values we have chosen to split this batch by
--
OPEN csr_BaseRevenue;
FETCH NEXT FROM csr_BaseRevenue
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN


    IF
    (
        SELECT  TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
        DELETE FROM @Field;
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR,?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
        Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
        DELETE FROM @Field2;
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
         Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_BaseRevenue
    INTO @Measurename;
END;

CLOSE csr_BaseRevenue;
DEALLOCATE csr_BaseRevenue;




SELECT CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX));",DWBaseIncrementalLoad_DailyMeasureNetRevenue
643,Package\Sequence Container\Seq - Incremental NetRev\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate DATETIME , @LastsuccessfulDate DateTime;
IF (SELECT Top 1 AuditId
           FROM dbo.AuditLog WHERE TaskName= ?) IS NULL 
BEGIN
    WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName ='NewNetRev' )
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
	    WITH CTE AS (	  SELECT TaskName,MAX(AuditId) AS e FROM dbo.AuditLog WHERE Statuscode=1 AND TaskName =?   GROUP BY TaskName)
	  
	  SELECT  @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN CTE AS lja ON lja.e = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate, ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate
END
ELSE 
BEGIN

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
	  
	  WITH CTE AS (	  SELECT TaskName,MAX(AuditId) AS e FROM dbo.AuditLog WHERE Statuscode=1 AND TaskName =?   GROUP BY TaskName)
	  
	  SELECT  @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN CTE AS lja ON lja.e = ja.AuditId;

SELECT ISNULL(@LastProcessFiscalWeekNumber, 201101) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate,ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate

END",DWBaseIncrementalLoad_DailyMeasureNetRevenue
644,Package\Sequence Container\Seq - Incremental NetRev\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ?
AND [f].[EDWCreatedDate] > ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate",DWBaseIncrementalLoad_DailyMeasureNetRevenue
645,Package\Sequence Container 1,STOCK:SEQUENCE,Sequence Container 1,,,,,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
646,Package\Sequence Container 1\Seq - New NetRev,STOCK:SEQUENCE,Seq - New NetRev,,,,,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
647,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
648,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
649,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
650,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
651,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
652,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseDailyMeasureNetRevenue,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
653,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\DFT - Load BaseDailyMeasureNetRevenue,Microsoft.Pipeline,DFT - Load BaseDailyMeasureNetRevenue,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactNetRevenue,,DWBaseIncrementalLoad_DailyMeasureNetRevenue
654,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\Foreach Loop Container\SQL - End NewNetRev Auditlog,Microsoft.ExecuteSQLTask,SQL - End NewNetRev Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_DailyMeasureNetRevenue
655,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\SQL - Start NewNetRev_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NewNetRev_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_DailyMeasureNetRevenue
656,Package\Sequence Container 1\Seq - New NetRev\Foreach - New or Updated Fiscal Week\SQL- Assigning SRC query to Variable,Microsoft.ExecuteSQLTask,SQL- Assigning SRC query to Variable,,,,,"DECLARE @QueryTable TABLE
(
    SQLQUERY VARCHAR(MAX) NULL
);

DECLARE @Measurename VARCHAR(100);
DECLARE csr_BaseRevenue CURSOR FOR
SELECT Distinct  MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT DISTINCT MeasureName FROM BING_EDW..SupportDailyMeasureRev
      )
	  AND MeasureName <> 'Payroll'
      AND GLMetricTypeCode = 'USD';
--
-- Use cursor to loop through the values we have chosen to split this batch by
--
OPEN csr_BaseRevenue;
FETCH NEXT FROM csr_BaseRevenue
INTO @Measurename;
WHILE @@FETCH_STATUS = 0
BEGIN


    IF
    (
        SELECT  TuitionType
        FROM GL_Staging..MartASALookup
        WHERE MeasureName = @Measurename
    ) NOT LIKE '%[A-Z]%'
    BEGIN
        DECLARE @Field AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL
        );
        DELETE FROM @Field;
        INSERT INTO @Field
        (
            FieldPath
        )
        (SELECT FieldPath
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);
        DECLARE @SQL NVARCHAR(MAX);

        SET @SQL
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	  COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR,?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + N')'
              + +N'
GROUP BY DD.FullDate,
         DD.FiscalWeekEndDate,
		 Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
        Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL AS VARCHAR(MAX));
    END;

    ELSE
    BEGIN
        DECLARE @Field2 AS TABLE
        (
            FieldPath VARCHAR(MAX) NOT NULL,
            TuitionType VARCHAR(50) NULL
        );
        DELETE FROM @Field2;
        INSERT INTO @Field2
        (
            FieldPath,
            TuitionType
        )
        (SELECT FieldPath,
                TuitionType
         FROM GL_Staging.dbo.MartASALookup
         WHERE MeasureName = @Measurename);


        DECLARE @SQL2 NVARCHAR(MAX);

        SET @SQL2
            = N'SELECT 
       DD.FullDate,
	   DD.FiscalWeekEndDate,
       Std.StudentID,
       Spn.SponsorID,
	   COALESCE(Spn.PartnerID, -1) PartnerID,
       Tsp.TuitionAssistanceProviderID,
       CC.CostCenterNumber, ' + N'''' + @Measurename + N''''
              + N'  AS Measurename,
       Acct.AccountSubaccountID,
       Tr.TierID,
       Pgm.ProgramID,
       SS.SessionID,
       Schd.ScheduleWeekName,
       Lcs.LifecycleStatusName,
        Net.TransactionNumber,
       SUM(Net.NetRevenueAmount) AS Value1,
       Net.SourceSystem AS SourceSystem,
       Std.CSSStudentNumber,
       Spn.CSSCenterNumber,
       Spn.CSSFamilyNumber,
	   Tsp.CSSCustomerCode,
       Tr.CSSTierNumber,
       Pgm.ProgramName,
       SS.SessionName
FROM dbo.FactNetRevenue Net
    INNER JOIN dbo.DimDate DD
        ON Net.DateKey = DD.DateKey
    INNER JOIN dbo.DimStudent Std
        ON Net.StudentKey = Std.StudentKey
    INNER JOIN dbo.DimSponsor Spn
        ON Net.SponsorKey = Spn.SponsorKey
    INNER JOIN dbo.DimTuitionAssistanceProvider Tsp
        ON Net.TuitionAssistanceProviderKey = Tsp.TuitionAssistanceProviderKey
    INNER JOIN dbo.DimCostCenter CC
        ON Net.CostCenterKey = CC.CostCenterKey
    INNER JOIN dbo.DimAccountSubaccount Acct
        ON Net.AccountSubaccountKey = Acct.AccountSubaccountKey
    INNER JOIN dbo.DimTier Tr
        ON Net.TierKey = Tr.TierKey
    INNER JOIN dbo.DimProgram Pgm
        ON Net.ProgramKey = Pgm.ProgramKey
    INNER JOIN dbo.DimSession SS
        ON Net.SessionKey = SS.SessionKey
    INNER JOIN dbo.DimScheduleWeek Schd
        ON Net.ScheduleWeekKey = Schd.ScheduleWeekKey
    INNER JOIN dbo.DimLifecycleStatus Lcs
        ON Net.LifecycleStatusKey = Lcs.LifecycleStatusKey' + N' WHERE DD.FiscalWeekEndDate IN ( ' + N''''
              + CONVERT(VARCHAR, ?, 23) + N'''' + N' )' + N' AND Acct.AccountSubaccountKey IN ('
              + N'SELECT AccountSubaccountKey ' + N' FROM model.vAccountSubAccount '
              + ISNULL(
                          NCHAR(10) + N'WHERE '
                          + STUFF(
                            (
                                SELECT NCHAR(10) + N'  OR ' + (f.FieldPath)
                                FROM @Field2 f
                                FOR XML PATH(N'')
                            ),
                            1,
                            6,
                            N''
                                 ),
                          N''
                      ) + +N'AND' + N'[Tuition ' + N'Type]= ' + N''''
              + STUFF(
                (
                    SELECT ',' + TuitionType FROM @Field2 FOR XML PATH('')
                ),
                1,
                1,
                ''
                     ) + N'''' + N')'
              + N'
GROUP BY DD.FullDate,
		 DD.FiscalWeekEndDate,
         Std.StudentID,
         Spn.SponsorID,
		 Spn.PartnerID,
         Tsp.TuitionAssistanceProviderID,
         CC.CostCenterNumber,
         Acct.AccountSubaccountID,
         Tr.TierID,
         Pgm.ProgramID,
         SS.SessionID,
         Schd.ScheduleWeekName,
         Lcs.LifecycleStatusName,
		 Net.SourceSystem,
         Net.TransactionNumber,
         Std.CSSStudentNumber,
         Spn.CSSCenterNumber,
         Spn.CSSFamilyNumber,
		 Tsp.CSSCustomerCode,
         Tr.CSSTierNumber,
         Pgm.ProgramName,
         SS.SessionName';
        INSERT INTO @QueryTable
        (
            SQLQUERY
        )
        SELECT CAST(@SQL2 AS VARCHAR(MAX));

    END;

    FETCH NEXT FROM csr_BaseRevenue
    INTO @Measurename;
END;

CLOSE csr_BaseRevenue;
DEALLOCATE csr_BaseRevenue;




SELECT CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX))
	WHERE CAST(REPLACE(
            (
                SELECT STUFF(
                       (
                           SELECT N' UNION ' + (SQLQUERY) FROM @QueryTable FOR XML PATH(N'')
                       ),
                       1,
                       6,
                       N''
                            )
            ),
            '&#x0D;',
            ''
                   ) AS VARCHAR(MAX)) IS NOT NULL;",DWBaseIncrementalLoad_DailyMeasureNetRevenue
657,Package\Sequence Container 1\Seq - New NetRev\Get Processed Date to End,Microsoft.ExecuteSQLTask,Get Processed Date to End,,,,,"DECLARE @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessDate,GETDATE()) AS LastProcessDate",DWBaseIncrementalLoad_DailyMeasureNetRevenue
658,Package\Sequence Container 1\Seq - New NetRev\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"SELECT  201101 AS LastProcessFiscalWeekNumber, '01-08-2011' AS LastProcessDate",DWBaseIncrementalLoad_DailyMeasureNetRevenue
659,Package\Sequence Container 1\Seq - New NetRev\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"IF (SELECT TOP 1 MeasureName
FROM GL_Staging..MartASALookup
WHERE MeasureName NOT IN
      (
          SELECT MeasureName FROM BING_EDW..SupportDailyMeasureRev
      )
      AND GLMetricTypeCode = 'USD' ) IS  NULL
	  BEGIN 
	  SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [f].[EDWCreatedDate]  BETWEEN '01-01-1900' AND  '01-01-1900'
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
   END 
   ELSE 
   BEGIN

SELECT d.[FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber

FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].FullDate  BETWEEN  ? AND  ?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
UNION
SELECT [FiscalWeekStartDate] AS DataScenarioFiscalWeekStartDate,
       d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate,
    d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
FROM dbo.FactNetRevenue (NOLOCK) AS f
    JOIN dbo.DimDate (NOLOCK) AS d
        ON f.DateKey = d.DateKey
WHERE [d].[FiscalWeekNumber] > ? AND [d].FullDate<=?
GROUP BY d.[FiscalWeekNumber],
         d.[FiscalWeekEndDate],
         d.[FiscalYearEndDate],
         d.[FiscalWeekOfYearNumber],
   d.[FiscalWeekStartDate]
ORDER BY  DataScenarioFiscalWeekStartDate

END",DWBaseIncrementalLoad_DailyMeasureNetRevenue
660,Package\SQL - End Package Auditlog,Microsoft.ExecuteSQLTask,SQL - End Package Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_DailyMeasureNetRevenue
661,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_DailyMeasureNetRevenue
662,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_DailyMeasureNetRevenue
663,Package\Truncate Table Support Table,Microsoft.ExecuteSQLTask,Truncate Table Support Table,,,,,TRUNCATE TABLE  BING_EDW..SupportDailyMeasureRev,DWBaseIncrementalLoad_DailyMeasureNetRevenue
664,Package,Microsoft.Package,DailyMeasureNSE,,,,,,DWBaseIncrementalLoad_DailyMeasureNSE
665,Package\Seq - NSESD,STOCK:SEQUENCE,Seq - NSESD,,,,,,DWBaseIncrementalLoad_DailyMeasureNSE
666,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_DailyMeasureNSE
667,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_DailyMeasureNSE
668,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_DailyMeasureNSE
669,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_DailyMeasureNSE
670,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NSE_Actual,,DWBaseIncrementalLoad_DailyMeasureNSE
671,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - vNSESupportSD,,DWBaseIncrementalLoad_DailyMeasureNSE
672,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_DailyMeasureNSE
673,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseDailyMeasureFTE
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_DailyMeasureNSE
674,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\SQL - End NSE_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NSE_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_DailyMeasureNSE
675,Package\Seq - NSESD\Foreach - New or Updated Fiscal Week\SQL - Start NSE_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NSE_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_DailyMeasureNSE
676,Package\Seq - NSESD\SpPopulateNSESupportSD,Microsoft.ExecuteSQLTask,SpPopulateNSESupportSD,,,,, Exec [dbo].[SpPopulateNSESupportSD]   @DebugMode =1,DWBaseIncrementalLoad_DailyMeasureNSE
677,Package\Seq - NSESD\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 201901) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '2019-01-04') AS LastProcessDate",DWBaseIncrementalLoad_DailyMeasureNSE
678,Package\Seq - NSESD\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM dbo.FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]

   UNION 
   SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM CMS_Staging.dbo.enrlScheduleDay AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.EffectiveDate = d.FullDate
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].StgModifiedDate > ?
   AND f.EffectiveDate BETWEEN '2019-01-04' AND GETDATE()
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
     ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_DailyMeasureNSE
679,Package,Microsoft.Package,DWBaseParentPackage,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
680,"Package\AR,LaborSalary,LaborHours, Lead Event and Life Cycle (Actual, Plan and Last Year)",STOCK:SEQUENCE,"AR,LaborSalary,LaborHours, Lead Event and Life Cycle (Actual, Plan and Last Year)",,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
681,"Package\AR,LaborSalary,LaborHours, Lead Event and Life Cycle (Actual, Plan and Last Year)\Execute ARBalanceMeasure",Microsoft.ExecutePackageTask,Execute ARBalanceMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
682,"Package\AR,LaborSalary,LaborHours, Lead Event and Life Cycle (Actual, Plan and Last Year)\Execute GLBalancePlanAllocation_LaborHoursMeasure",Microsoft.ExecutePackageTask,Execute GLBalancePlanAllocation_LaborHoursMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
683,"Package\AR,LaborSalary,LaborHours, Lead Event and Life Cycle (Actual, Plan and Last Year)\Execute GLBalancePlanAllocation_LaborSalaryMeasure",Microsoft.ExecutePackageTask,Execute GLBalancePlanAllocation_LaborSalaryMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
684,"Package\AR,LaborSalary,LaborHours, Lead Event and Life Cycle (Actual, Plan and Last Year)\Execute LaborHoursMeasure",Microsoft.ExecutePackageTask,Execute LaborHoursMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
685,"Package\AR,LaborSalary,LaborHours, Lead Event and Life Cycle (Actual, Plan and Last Year)\Execute LaborSalaryMeasure",Microsoft.ExecutePackageTask,Execute LaborSalaryMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
686,"Package\AR,LaborSalary,LaborHours, Lead Event and Life Cycle (Actual, Plan and Last Year)\Execute LeadEventMeasure",Microsoft.ExecutePackageTask,Execute LeadEventMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
687,"Package\AR,LaborSalary,LaborHours, Lead Event and Life Cycle (Actual, Plan and Last Year)\Execute LifeCycleStatusMeasure",Microsoft.ExecutePackageTask,Execute LifeCycleStatusMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
688,Package\Change History - DW_BaseParentPackage,STOCK:SEQUENCE,Change History - DW_BaseParentPackage,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
689,"Package\FTE (Actual, Last Year and Plan)",STOCK:SEQUENCE,"FTE (Actual, Last Year and Plan)",,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
690,"Package\FTE (Actual, Last Year and Plan)\Execute FTESnapshotMeasure",Microsoft.ExecutePackageTask,Execute FTESnapshotMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
691,"Package\FTE (Actual, Last Year and Plan)\Execute GLBalancePlanAllocation_FTEMeasure",Microsoft.ExecutePackageTask,Execute GLBalancePlanAllocation_FTEMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
692,"Package\Net Revenue (Actual, Last Year and Plan)",STOCK:SEQUENCE,"Net Revenue (Actual, Last Year and Plan)",,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
693,"Package\Net Revenue (Actual, Last Year and Plan)\Execute GLBalancePlanAllocation_NetRevenueMeasure",Microsoft.ExecutePackageTask,Execute GLBalancePlanAllocation_NetRevenueMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
694,"Package\Net Revenue (Actual, Last Year and Plan)\Execute NetRevenueMeasure",Microsoft.ExecutePackageTask,Execute NetRevenueMeasure,,,,,,DWBaseIncrementalLoad_DWBaseParentPackage
695,Package,Microsoft.Package,FTESnapshotMeasure,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
696,Package\Seq - FTESnapshot Measures,STOCK:SEQUENCE,Seq - FTESnapshot Measures,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
697,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual,STOCK:SEQUENCE,Seq - FTESumFivesPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
698,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
699,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
700,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
701,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
702,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFivesPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
703,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFivesPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
704,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
705,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
706,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
707,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFivesPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFivesPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
708,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFivesPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFivesPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
709,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
710,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
711,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumFivesSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
712,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
713,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
714,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
715,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
716,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFivesSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
717,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFivesSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
718,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
719,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
720,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
721,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFivesSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFivesSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
722,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFivesSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFivesSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
723,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
724,Package\Seq - FTESnapshot Measures\Seq - FTESumFivesSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
725,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual,STOCK:SEQUENCE,Seq - FTESumFives_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
726,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
727,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
728,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
729,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
730,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFives_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
731,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFives_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
732,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
733,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
734,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
735,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFives_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFives_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
736,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFives_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFives_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
737,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
738,Package\Seq - FTESnapshot Measures\Seq - FTESumFives_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
739,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual,STOCK:SEQUENCE,Seq - FTESumFoursPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
740,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
741,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
742,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
743,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
744,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFoursPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
745,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFoursPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
746,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
747,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
748,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
749,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFoursPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFoursPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
750,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFoursPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFoursPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
751,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
752,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
753,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumFoursSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
754,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
755,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
756,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
757,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
758,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFoursSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
759,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFoursSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
760,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
761,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
762,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
763,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFoursSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFoursSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
764,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFoursSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFoursSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
765,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
766,Package\Seq - FTESnapshot Measures\Seq - FTESumFoursSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
767,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual,STOCK:SEQUENCE,Seq - FTESumFours_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
768,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
769,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
770,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
771,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
772,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFours_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
773,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFours_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
774,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
775,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
776,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
777,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumFours_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFours_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
778,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFours_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFours_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
779,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
780,Package\Seq - FTESnapshot Measures\Seq - FTESumFours_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
781,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual,STOCK:SEQUENCE,Seq - FTESumHourlyDropInPP_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
782,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
783,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
784,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
785,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
786,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumHourlyDropInPP_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
787,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumHourlyDropInPP_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
788,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
789,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
790,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
791,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropInPP_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumHourlyDropInPP_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
792,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropInPP_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumHourlyDropInPP_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
793,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
794,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInPP_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
795,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumHourlyDropInSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
796,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
797,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
798,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
799,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
800,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumHourlyDropInSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
801,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumHourlyDropInSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
802,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
803,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
804,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
805,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropInSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumHourlyDropInSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
806,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropInSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumHourlyDropInSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
807,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
808,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropInSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
809,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual,STOCK:SEQUENCE,Seq - FTESumHourlyDropIn_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
810,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
811,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
812,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
813,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
814,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumHourlyDropIn_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
815,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumHourlyDropIn_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
816,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
817,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
818,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
819,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropIn_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumHourlyDropIn_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
820,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropIn_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumHourlyDropIn_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
821,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
822,Package\Seq - FTESnapshot Measures\Seq - FTESumHourlyDropIn_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
823,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual,STOCK:SEQUENCE,Seq - FTESumInfantPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
824,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
825,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
826,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
827,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
828,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumInfantPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
829,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumInfantPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
830,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
831,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
832,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
833,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfantPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumInfantPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
834,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfantPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumInfantPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
835,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
836,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
837,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumInfantSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
838,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
839,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
840,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
841,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
842,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumInfantSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
843,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumInfantSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
844,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
845,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
846,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
847,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfantSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumInfantSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
848,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfantSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumInfantSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
849,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
850,Package\Seq - FTESnapshot Measures\Seq - FTESumInfantSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
851,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual,STOCK:SEQUENCE,Seq - FTESumInfant_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
852,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
853,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
854,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
855,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
856,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumInfant_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
857,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumInfant_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
858,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
859,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
860,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
861,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfant_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumInfant_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
862,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfant_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumInfant_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
863,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
864,Package\Seq - FTESnapshot Measures\Seq - FTESumInfant_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
865,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual,STOCK:SEQUENCE,Seq - FTESumKindergartenPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
866,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
867,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
868,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
869,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
870,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumKindergartenPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
871,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumKindergartenPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
872,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
873,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
874,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
875,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergartenPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumKindergartenPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
876,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergartenPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumKindergartenPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
877,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
878,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
879,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumKindergartenSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
880,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
881,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
882,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
883,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
884,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumKindergartenSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
885,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumKindergartenSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
886,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
887,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
888,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
889,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergartenSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumKindergartenSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
890,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergartenSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumKindergartenSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
891,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
892,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergartenSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
893,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual,STOCK:SEQUENCE,Seq - FTESumKindergarten_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
894,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
895,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
896,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
897,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
898,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumKindergarten_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
899,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumKindergarten_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
900,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
901,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
902,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
903,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergarten_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumKindergarten_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
904,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergarten_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumKindergarten_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
905,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
906,Package\Seq - FTESnapshot Measures\Seq - FTESumKindergarten_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
907,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual,STOCK:SEQUENCE,Seq - FTESumMultiagePrivatePay_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
908,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
909,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
910,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
911,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
912,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumMultiagePrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
913,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumMultiagePrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
914,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
915,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
916,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
917,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiagePrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumMultiagePrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
918,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiagePrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumMultiagePrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
919,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
920,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiagePrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
921,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumMultiageSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
922,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
923,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
924,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
925,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
926,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumMultiageSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
927,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumMultiageSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
928,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
929,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
930,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
931,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiageSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumMultiageSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
932,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiageSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumMultiageSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
933,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
934,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiageSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
935,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual,STOCK:SEQUENCE,Seq - FTESumMultiage_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
936,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
937,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
938,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
939,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
940,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumMultiage_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
941,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumMultiage_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
942,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
943,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
944,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
945,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiage_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumMultiage_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
946,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiage_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumMultiage_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
947,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
948,Package\Seq - FTESnapshot Measures\Seq - FTESumMultiage_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
949,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual,STOCK:SEQUENCE,Seq - FTESumPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
950,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
951,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
952,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
953,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
954,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
955,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
956,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
957,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
958,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
959,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
960,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
961,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
962,Package\Seq - FTESnapshot Measures\Seq - FTESumPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
963,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual,STOCK:SEQUENCE,Seq - FTESumSchoolAgePP_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
964,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
965,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
966,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
967,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
968,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumSchoolAgePP_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
969,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumSchoolAgePP_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
970,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
971,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
972,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
973,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAgePP_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumSchoolAgePP_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
974,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAgePP_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumSchoolAgePP_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
975,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
976,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgePP_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
977,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumSchoolAgeSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
978,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
979,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
980,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
981,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
982,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumSchoolAgeSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
983,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumSchoolAgeSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
984,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
985,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
986,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
987,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAgeSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumSchoolAgeSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
988,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAgeSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumSchoolAgeSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
989,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
990,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAgeSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
991,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual,STOCK:SEQUENCE,Seq - FTESumSchoolAge_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
992,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
993,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
994,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
995,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
996,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumSchoolAge_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
997,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumSchoolAge_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
998,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
999,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1000,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1001,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAge_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumSchoolAge_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1002,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAge_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumSchoolAge_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1003,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1004,Package\Seq - FTESnapshot Measures\Seq - FTESumSchoolAge_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1005,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1006,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1007,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1008,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1009,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1010,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1011,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1012,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1013,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1014,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1015,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1016,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1017,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1018,Package\Seq - FTESnapshot Measures\Seq - FTESumSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1019,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual,STOCK:SEQUENCE,Seq - FTESumThreesPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1020,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1021,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1022,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1023,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1024,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumThreesPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1025,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumThreesPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1026,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1027,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1028,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1029,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumThreesPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumThreesPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1030,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThreesPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumThreesPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1031,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1032,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1033,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumThreesSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1034,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1035,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1036,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1037,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1038,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumThreesSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1039,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumThreesSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1040,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1041,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1042,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1043,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumThreesSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumThreesSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1044,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThreesSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumThreesSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1045,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1046,Package\Seq - FTESnapshot Measures\Seq - FTESumThreesSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1047,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual,STOCK:SEQUENCE,Seq - FTESumThrees_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1048,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1049,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1050,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1051,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1052,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumThrees_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1053,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumThrees_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1054,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1055,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1056,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1057,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumThrees_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumThrees_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1058,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThrees_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumThrees_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1059,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1060,Package\Seq - FTESnapshot Measures\Seq - FTESumThrees_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1061,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual,STOCK:SEQUENCE,Seq - FTESumToddlerPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1062,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1063,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1064,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1065,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1066,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumToddlerPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1067,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumToddlerPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1068,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1069,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1070,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1071,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddlerPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumToddlerPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1072,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddlerPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumToddlerPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1073,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1074,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1075,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumToddlerSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1076,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1077,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1078,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1079,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1080,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumToddlerSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1081,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumToddlerSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1082,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1083,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1084,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1085,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddlerSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumToddlerSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1086,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddlerSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumToddlerSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1087,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1088,Package\Seq - FTESnapshot Measures\Seq - FTESumToddlerSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1089,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual,STOCK:SEQUENCE,Seq - FTESumToddler_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1090,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1091,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1092,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1093,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1094,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumToddler_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1095,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumToddler_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1096,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1097,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1098,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1099,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddler_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumToddler_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1100,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddler_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumToddler_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1101,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1102,Package\Seq - FTESnapshot Measures\Seq - FTESumToddler_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1103,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual,STOCK:SEQUENCE,Seq - FTESumTwosPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1104,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1105,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1106,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1107,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1108,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumTwosPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1109,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumTwosPrivatePay_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1110,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1111,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1112,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1113,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwosPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumTwosPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1114,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwosPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumTwosPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1115,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1116,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1117,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual,STOCK:SEQUENCE,Seq - FTESumTwosSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1118,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1119,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1120,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1121,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1122,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumTwosSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1123,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumTwosSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1124,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1125,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1126,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1127,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwosSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumTwosSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1128,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwosSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumTwosSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1129,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1130,Package\Seq - FTESnapshot Measures\Seq - FTESumTwosSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1131,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual,STOCK:SEQUENCE,Seq - FTESumTwos_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1132,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1133,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1134,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1135,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1136,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumTwos_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1137,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumTwos_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1138,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1139,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1140,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1141,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwos_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumTwos_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1142,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwos_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumTwos_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1143,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1144,Package\Seq - FTESnapshot Measures\Seq - FTESumTwos_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1145,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual,STOCK:SEQUENCE,Seq - FTESum_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1146,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1147,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1148,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1149,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1150,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESum_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1151,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESum_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1152,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1153,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1154,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1155,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESum_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESum_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1156,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTESum_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESum_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1157,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1158,Package\Seq - FTESnapshot Measures\Seq - FTESum_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1159,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual,STOCK:SEQUENCE,Seq - FTEWeeklyAvgPP_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1160,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1161,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1162,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1163,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1164,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTEWeeklyAvgPP_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1165,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTEWeeklyAvgPP_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1166,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1167,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1168,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1169,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTESumPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1170,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvgPP_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTEWeeklyAvgPP_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1171,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1172,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgPP_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1173,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual,STOCK:SEQUENCE,Seq - FTEWeeklyAvgSubsidy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1174,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1175,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1176,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1177,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1178,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTEWeeklyAvgSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1179,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTEWeeklyAvgSubsidy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1180,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1181,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1182,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1183,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTEWeeklyAvgSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTEWeeklyAvgSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1184,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvgSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTEWeeklyAvgSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1185,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1186,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvgSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1187,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual,STOCK:SEQUENCE,Seq - FTEWeeklyAvg_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1188,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1189,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1190,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1191,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1192,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESum_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1193,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - tfn_Measure_FTEWeeklyAvg_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1194,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1195,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1196,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1197,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\SQL - End FTEWeeklyAvg_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTEWeeklyAvg_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1198,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeekly_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTEWeekly_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1199,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1200,Package\Seq - FTESnapshot Measures\Seq - FTEWeeklyAvg_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1201,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual,STOCK:SEQUENCE,Seq - LaborHourPerFTE_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1202,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1203,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1204,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1205,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1206,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHourPerFTE_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1207,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHourPerFTE_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1208,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1209,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1210,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1211,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHourPerFTE_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1212,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourperFTE_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHourperFTE_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1213,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1214,Package\Seq - FTESnapshot Measures\Seq - LaborHourPerFTE_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1215,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual,STOCK:SEQUENCE,Seq - Occupancy_Actual,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1216,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1217,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1218,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_FTESnapshotMeasure
1219,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_FTESnapshotMeasure
1220,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Occupancy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1221,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Occupancy_Actual,,DWBaseIncrementalLoad_FTESnapshotMeasure
1222,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_FTESnapshotMeasure
1223,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1224,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_FTESnapshotMeasure
1225,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\SQL - End Occupancy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End Occupancy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1226,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Occupancy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Occupancy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1227,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_FTESnapshotMeasure
1228,Package\Seq - FTESnapshot Measures\Seq - Occupancy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactFTESnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_FTESnapshotMeasure
1229,Package\SQL - End FTESnapshotMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESnapshotMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1230,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_FTESnapshotMeasure
1231,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_FTESnapshotMeasure
1232,Package,Microsoft.Package,GLBalancePlanAllocation_FTEMeasure,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1233,Package\Seq - GLBalancePlanAllocation_FTE Measures,STOCK:SEQUENCE,Seq - GLBalancePlanAllocation_FTE Measures,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1234,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan,STOCK:SEQUENCE,Seq - FTESumFivesPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1235,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1236,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1237,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1238,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1239,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFivesPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1240,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFivesPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1241,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1242,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1243,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFivesPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFivesPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1244,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFivesPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFivesPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1245,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1246,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1247,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumFivesSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1248,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1249,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1250,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1251,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1252,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFivesSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1253,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFivesSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1254,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1255,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1256,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFivesSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFivesSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1257,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFivesSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFivesSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1258,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1259,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFivesSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1260,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan,STOCK:SEQUENCE,Seq - FTESumFives_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1261,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1262,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1263,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1264,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1265,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFives_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1266,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFives_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1267,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1268,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1269,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFives_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFives_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1270,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFives_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFives_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1271,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1272,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFives_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1273,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan,STOCK:SEQUENCE,Seq - FTESumFoursPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1274,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1275,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1276,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1277,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1278,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFoursPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1279,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFoursPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1280,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1281,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1282,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFoursPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFoursPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1283,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFoursPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFoursPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1284,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1285,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1286,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumFoursSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1287,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1288,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1289,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1290,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1291,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFoursSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1292,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFoursSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1293,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1294,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1295,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFoursSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFoursSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1296,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFoursSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFoursSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1297,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1298,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFoursSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1299,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan,STOCK:SEQUENCE,Seq - FTESumFours_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1300,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1301,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1302,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1303,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1304,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumFours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1305,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumFours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1306,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1307,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1308,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumFours_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumFours_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1309,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumFours_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumFours_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1310,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1311,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumFours_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1312,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan,STOCK:SEQUENCE,Seq - FTESumHourlyDropInPP_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1313,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1314,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1315,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1316,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1317,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumHourlyDropInPP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1318,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumHourlyDropInPP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1319,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1320,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1321,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropInPP_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumHourlyDropInPP_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1322,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropInPP_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumHourlyDropInPP_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1323,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1324,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInPP_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1325,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumHourlyDropInSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1326,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1327,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1328,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1329,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1330,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumHourlyDropInSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1331,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumHourlyDropInSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1332,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1333,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1334,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropInSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumHourlyDropInSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1335,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropInSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumHourlyDropInSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1336,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1337,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropInSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1338,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan,STOCK:SEQUENCE,Seq - FTESumHourlyDropIn_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1339,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1340,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1341,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1342,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1343,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumHourlyDropIn_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1344,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumHourlyDropIn_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1345,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1346,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1347,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumHourlyDropIn_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumHourlyDropIn_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1348,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumHourlyDropIn_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumHourlyDropIn_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1349,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1350,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumHourlyDropIn_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1351,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan,STOCK:SEQUENCE,Seq - FTESumInfantPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1352,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1353,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1354,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1355,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1356,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumInfantPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1357,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumInfantPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1358,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1359,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1360,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfantPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumInfantPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1361,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfantPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumInfantPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1362,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1363,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1364,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumInfantSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1365,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1366,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1367,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1368,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1369,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumInfantSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1370,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumInfantSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1371,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1372,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1373,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfantSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumInfantSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1374,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfantSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumInfantSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1375,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1376,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfantSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1377,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan,STOCK:SEQUENCE,Seq - FTESumInfant_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1378,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1379,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1380,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1381,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1382,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumInfant_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1383,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumInfant_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1384,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1385,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1386,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumInfant_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumInfant_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1387,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumInfant_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumInfant_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1388,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1389,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumInfant_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1390,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan,STOCK:SEQUENCE,Seq - FTESumKindergartenPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1391,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1392,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1393,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1394,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1395,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumKindergartenPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1396,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumKindergartenPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1397,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1398,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1399,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergartenPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumKindergartenPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1400,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergartenPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumKindergartenPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1401,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1402,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1403,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumKindergartenSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1404,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1405,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1406,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1407,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1408,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumKindergartenSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1409,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumKindergartenSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1410,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1411,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1412,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergartenSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumKindergartenSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1413,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergartenSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumKindergartenSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1414,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1415,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergartenSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1416,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan,STOCK:SEQUENCE,Seq - FTESumKindergarten_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1417,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1418,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1419,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1420,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1421,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumKindergarten_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1422,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumKindergarten_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1423,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1424,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1425,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumKindergarten_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumKindergarten_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1426,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumKindergarten_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumKindergarten_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1427,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1428,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumKindergarten_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1429,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan,STOCK:SEQUENCE,Seq - FTESumMultiagePrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1430,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1431,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1432,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1433,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1434,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumMultiagePrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1435,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumMultiagePrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1436,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1437,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1438,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiagePrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumMultiagePrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1439,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiagePrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumMultiagePrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1440,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1441,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiagePrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1442,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumMultiageSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1443,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1444,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1445,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1446,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1447,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumMultiageSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1448,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumMultiageSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1449,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1450,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1451,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiageSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumMultiageSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1452,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiageSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumMultiageSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1453,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1454,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiageSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1455,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan,STOCK:SEQUENCE,Seq - FTESumMultiage_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1456,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1457,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1458,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1459,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1460,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumMultiage_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1461,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumMultiage_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1462,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1463,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1464,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumMultiage_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumMultiage_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1465,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumMultiage_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumMultiage_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1466,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1467,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumMultiage_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1468,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan,STOCK:SEQUENCE,Seq - FTESumPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1469,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1470,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1471,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1472,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1473,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1474,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1475,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1476,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1477,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1478,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1479,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1480,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1481,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan,STOCK:SEQUENCE,Seq - FTESumSchoolAgePP_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1482,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1483,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1484,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1485,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1486,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumSchoolAgePP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1487,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumSchoolAgePP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1488,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1489,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1490,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAgePP_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumSchoolAgePP_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1491,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAgePP_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumSchoolAgePP_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1492,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1493,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgePP_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1494,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumSchoolAgeSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1495,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1496,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1497,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1498,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1499,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumSchoolAgeSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1500,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumSchoolAgeSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1501,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1502,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1503,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAgeSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumSchoolAgeSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1504,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAgeSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumSchoolAgeSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1505,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1506,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAgeSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1507,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan,STOCK:SEQUENCE,Seq - FTESumSchoolAge_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1508,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1509,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1510,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1511,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1512,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumSchoolAge_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1513,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumSchoolAge_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1514,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1515,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1516,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumSchoolAge_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumSchoolAge_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1517,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSchoolAge_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumSchoolAge_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1518,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1519,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSchoolAge_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1520,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1521,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1522,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1523,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1524,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1525,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1526,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1527,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1528,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1529,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1530,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1531,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1532,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1533,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan,STOCK:SEQUENCE,Seq - FTESumThreesPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1534,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1535,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1536,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1537,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1538,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumThreesPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1539,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumThreesPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1540,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1541,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1542,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumThreesPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumThreesPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1543,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThreesPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumThreesPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1544,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1545,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1546,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumThreesSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1547,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1548,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1549,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1550,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1551,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumThreesSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1552,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumThreesSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1553,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1554,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1555,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumThreesSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumThreesSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1556,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThreesSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumThreesSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1557,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1558,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThreesSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1559,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan,STOCK:SEQUENCE,Seq - FTESumThrees_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1560,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1561,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1562,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1563,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1564,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumThrees_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1565,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumThrees_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1566,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1567,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1568,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumThrees_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumThrees_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1569,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumThrees_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumThrees_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1570,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1571,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumThrees_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1572,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan,STOCK:SEQUENCE,Seq - FTESumToddlerPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1573,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1574,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1575,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1576,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1577,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumToddlerPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1578,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumToddlerPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1579,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1580,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1581,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddlerPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumToddlerPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1582,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddlerPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumToddlerPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1583,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1584,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1585,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumToddlerSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1586,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1587,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1588,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1589,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1590,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumToddlerSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1591,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumToddlerSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1592,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1593,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1594,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddlerSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumToddlerSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1595,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddlerSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumToddlerSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1596,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1597,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddlerSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1598,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan,STOCK:SEQUENCE,Seq - FTESumToddler_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1599,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1600,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1601,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1602,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1603,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumToddler_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1604,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumToddler_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1605,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1606,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1607,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumToddler_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumToddler_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1608,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumToddler_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumToddler_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1609,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1610,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumToddler_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1611,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan,STOCK:SEQUENCE,Seq - FTESumTwosPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1612,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1613,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1614,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1615,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1616,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumTwosPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1617,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumTwosPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1618,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1619,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1620,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwosPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumTwosPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1621,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwosPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumTwosPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1622,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1623,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1624,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan,STOCK:SEQUENCE,Seq - FTESumTwosSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1625,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1626,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1627,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1628,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1629,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumTwosSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1630,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumTwosSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1631,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1632,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1633,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwosSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumTwosSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1634,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwosSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumTwosSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1635,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1636,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwosSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1637,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan,STOCK:SEQUENCE,Seq - FTESumTwos_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1638,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1639,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1640,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1641,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1642,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumTwos_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1643,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumTwos_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1644,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1645,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1646,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESumTwos_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESumTwos_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1647,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESumTwos_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESumTwos_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1648,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1649,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESumTwos_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1650,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan,STOCK:SEQUENCE,Seq - FTESum_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1651,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1652,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1653,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1654,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1655,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESum_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1656,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESum_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1657,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1658,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1659,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESum_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESum_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1660,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTESum_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESum_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1661,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1662,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTESum_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1663,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan,STOCK:SEQUENCE,Seq - FTEWeeklyAvgPP_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1664,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1665,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1666,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1667,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1668,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1669,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTEWeeklyAvgPP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1670,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1671,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1672,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTEWeeklyAvgPP_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTEWeeklyAvgPP_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1673,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvgPP_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTEWeeklyAvgPP_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1674,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1675,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgPP_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1676,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan,STOCK:SEQUENCE,Seq - FTEWeeklyAvgSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1677,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1678,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1679,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1680,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1681,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESumSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1682,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESumSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1683,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1684,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1685,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTEWeeklyAvgSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTEWeeklyAvgSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1686,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvgSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTEWeeklyAvgSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1687,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1688,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvgSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1689,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan,STOCK:SEQUENCE,Seq - FTEWeeklyAvg_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1690,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1691,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1692,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1693,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1694,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FTESum_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1695,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FTESum_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1696,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1697,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1698,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\SQL - End FTESum_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FTESum_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1699,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FTEWeeklyAvg_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTEWeeklyAvg_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1700,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1701,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - FTEWeeklyAvg_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1702,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan,STOCK:SEQUENCE,Seq - LaborHourPerFTE_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1703,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1704,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1705,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1706,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1707,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHourPerFTE_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1708,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHourPerFTE_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1709,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1710,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1711,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHourPerFTE_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1712,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourPerFTE_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHourPerFTE_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1713,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1714,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1715,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target,STOCK:SEQUENCE,Seq - LaborHourPerFTE_Target,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1716,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1717,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1718,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1719,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1720,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHourPerFTE_Target,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1721,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHourPerFTE_Target,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1722,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1723,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1724,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHourPerFTE_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHourPerFTE_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1725,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHourPerFTE_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHourPerFTE_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1726,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1727,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - LaborHourPerFTE_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1728,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan,STOCK:SEQUENCE,Seq - Occupancy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1729,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1730,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1731,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1732,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1733,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Occupancy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1734,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Occupancy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1735,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1736,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1737,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\SQL - End Occupancy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End Occupancy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1738,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start Occupancy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Occupancy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1739,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1740,Package\Seq - GLBalancePlanAllocation_FTE Measures\Seq - Occupancy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2 
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000100%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2 
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1741,Package\SQL - End GLBalancePlanAllocation_FTEMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_FTEMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1742,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1743,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_FTEMeasure
1744,Package,Microsoft.Package,GLBalancePlanAllocation_LaborHoursMeasure,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1745,Package\Seq - GLBalancePlanAllocation_LaborHours Measures,STOCK:SEQUENCE,Seq - GLBalancePlanAllocation_LaborHours Measures,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1746,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan,STOCK:SEQUENCE,Seq - LaborHoursChildcare_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1747,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1748,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1749,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1750,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1751,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursChildcare_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1752,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursChildcare_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1753,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1754,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1755,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcare_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursChildcare_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1756,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcare_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursChildcare_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1757,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1758,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursChildcare_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1759,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan,STOCK:SEQUENCE,Seq - LaborHoursManagementAndAdmin_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1760,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1761,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1762,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1763,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1764,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursManagementAndAdmin_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1765,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursManagementAndAdmin_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1766,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1767,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1768,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursManagementAndAdmin_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursManagementAndAdmin_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1769,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursManagementAndAdmin_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursManagementAndAdmin_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1770,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1771,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1772,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan,STOCK:SEQUENCE,Seq - LaborHoursOperating_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1773,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1774,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1775,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1776,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1777,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOperating_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1778,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOperating_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1779,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1780,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1781,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperating_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOperating_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1782,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperating_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOperating_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1783,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1784,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOperating_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1785,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan,STOCK:SEQUENCE,Seq - LaborHoursOvertime_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1786,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1787,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1788,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1789,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1790,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1791,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1792,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1793,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1794,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOvertime_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOvertime_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1795,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOvertime_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOvertime_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1796,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1797,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursOvertime_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1798,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan,STOCK:SEQUENCE,Seq - LaborHoursRegular_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1799,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1800,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1801,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1802,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1803,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1804,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1805,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1806,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1807,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursRegulare_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursRegulare_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1808,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursRegular_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursRegular_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1809,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1810,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursRegular_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1811,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan,STOCK:SEQUENCE,Seq - LaborHoursSpecialProgramsMemo_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1812,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1813,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1814,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1815,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1816,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1817,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursSpecialProgramsMemo_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1818,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1819,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1820,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsMemo_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursSpecialProgramsMemo_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1821,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsMemo_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursSpecialProgramsMemo_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1822,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1823,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1824,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan,STOCK:SEQUENCE,Seq - LaborHoursTotalDirect_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1825,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1826,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1827,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1828,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1829,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTotalDirect_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1830,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTotalDirect_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1831,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1832,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1833,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalDirect_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTotalDirect_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1834,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalDirect_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTotalDirect_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1835,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1836,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalDirect_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1837,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan,STOCK:SEQUENCE,Seq - LaborHoursTotalFringeBenefits_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1838,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1839,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1840,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1841,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1842,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTotalFringeBenefits_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1843,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTotalFringeBenefits_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1844,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1845,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1846,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalFringeBenefits_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTotalFringeBenefits_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1847,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalFringeBenefits_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTotalFringeBenefits_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1848,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1849,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1850,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan,STOCK:SEQUENCE,Seq - LaborHoursTotalSalariesandFringeBenefits_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1851,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1852,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1853,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1854,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1855,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTotalSalariesandFringeBenefits_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1856,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTotalSalariesandFringeBenefits_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1857,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1858,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1859,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalSalariesandFringeBenefits_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTotalSalariesandFringeBenefits_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1860,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalSalariesandFringeBenefits_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTotalSalariesandFringeBenefits_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1861,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1862,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1863,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan,STOCK:SEQUENCE,Seq - LaborHoursTraining_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1864,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1865,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1866,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1867,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1868,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTraining_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1869,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTraining_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1870,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1871,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1872,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTraining_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTraining_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1873,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTraining_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTraining_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1874,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1875,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHoursTraining_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1876,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan,STOCK:SEQUENCE,Seq - LaborHours_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1877,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1878,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1879,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1880,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1881,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1882,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1883,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1884,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1885,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHours_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1886,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborHours_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHours_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1887,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1888,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - LaborHours_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1889,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan,STOCK:SEQUENCE,Seq - ReportedLaborHoursChildcare_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1890,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1891,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1892,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1893,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1894,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHoursChildcare_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1895,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursChildcare_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1896,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1897,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1898,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildcare_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursChildcare_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1899,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildcare_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursChildcare_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1900,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1901,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursChildcare_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1902,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan,STOCK:SEQUENCE,Seq - ReportedLaborHoursRegular_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1903,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1904,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1905,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1906,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1907,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHoursOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1908,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1909,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1910,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1911,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursRegulare_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursRegulare_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1912,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursRegular_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursRegular_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1913,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1914,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHoursRegular_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1915,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan,STOCK:SEQUENCE,Seq - ReportedLaborHours_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1916,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1917,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1918,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1919,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1920,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1921,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1922,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1923,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1924,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHours_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHours_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1925,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHours_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHours_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1926,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1927,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - ReportedLaborHours_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1928,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan,STOCK:SEQUENCE,Seq - TotalLaborHours_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1929,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1930,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1931,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1932,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1933,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalLaborHours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1934,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalLaborHours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1935,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1936,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1937,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborHours_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalLaborHours_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1938,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborHours_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalLaborHours_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1939,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1940,Package\Seq - GLBalancePlanAllocation_LaborHours Measures\Seq - TotalLaborHours_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 2
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 2
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1941,Package\SQL - End GLBalancePlanAllocation_LaborHoursMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_LaborHoursMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1942,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1943,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborHoursMeasure
1944,Package,Microsoft.Package,GLBalancePlanAllocation_LaborSalaryMeasure,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1945,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures,STOCK:SEQUENCE,Seq - GLBalancePlanAllocation_LaborSalary Measures,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1946,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan,STOCK:SEQUENCE,Seq - LaborSalaryChildcareOvertime_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1947,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1948,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1949,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1950,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1951,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryChildcareOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1952,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryChildcareOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1953,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1954,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1955,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcareOvertime_Plan  Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryChildcareOvertime_Plan  Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1956,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcareOvertime_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryChildcareOvertime_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1957,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1958,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1959,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan,STOCK:SEQUENCE,Seq - LaborSalaryChildcareRegular_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1960,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1961,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1962,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1963,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1964,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryChildcareRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1965,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryChildcareRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1966,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1967,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1968,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcareRegular_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryChildcareRegular_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1969,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcareRegular_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryChildcareRegular_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1970,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1971,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcareRegular_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1972,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan,STOCK:SEQUENCE,Seq - LaborSalaryChildcare_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1973,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1974,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1975,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1976,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1977,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryChildcare_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1978,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryChildcare_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1979,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1980,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1981,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcare_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryChildcare_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1982,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcare_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryChildcare_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1983,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1984,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryChildcare_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1985,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan,STOCK:SEQUENCE,Seq - LaborSalaryManagementAndAdmin_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1986,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1987,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1988,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1989,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1990,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryManagementAndAdmin_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1991,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryManagementAndAdmin_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1992,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1993,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1994,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryManagementAndAdmin_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryManagementAndAdmin_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1995,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryManagementAndAdmin_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryManagementAndAdmin_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1996,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1997,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1998,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan,STOCK:SEQUENCE,Seq - LaborSalaryOperatingOvertime_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
1999,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2000,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2001,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2002,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2003,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOperatingOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2004,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOperatingOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2005,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2006,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2007,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingOvertime_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOperatingOvertime_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2008,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingOvertime_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOperatingOvertime_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2009,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2010,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2011,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan,STOCK:SEQUENCE,Seq - LaborSalaryOperatingRegular_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2012,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2013,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2014,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2015,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2016,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOperatingRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2017,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOperatingRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2018,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2019,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2020,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingRegular_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOperatingRegular_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2021,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingRegular_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOperatingRegular_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2022,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2023,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2024,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan,STOCK:SEQUENCE,Seq - LaborSalaryOperating_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2025,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2026,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2027,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2028,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2029,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOperating_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2030,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOperating_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2031,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2032,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2033,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperating_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOperating_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2034,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperating_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOperating_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2035,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2036,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOperating_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2037,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan,STOCK:SEQUENCE,Seq - LaborSalaryOvertime_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2038,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2039,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2040,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2041,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2042,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2043,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2044,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2045,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2046,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOvertime_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOvertime_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2047,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOvertime_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOvertime_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2048,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2049,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryOvertime_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2050,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan,STOCK:SEQUENCE,Seq - LaborSalaryPaidTimeOff_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2051,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2052,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2053,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2054,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2055,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryPaidTimeOff_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2056,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryPaidTimeOff_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2057,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2058,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2059,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPaidTimeOff_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryPaidTimeOff_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2060,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryPaidTimeOff_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryPaidTimeOff_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2061,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2062,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2063,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan,STOCK:SEQUENCE,Seq - LaborSalaryRegular_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2064,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2065,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2066,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2067,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2068,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2069,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2070,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2071,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2072,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryRegular_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryRegular_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2073,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryRegular_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryRegular_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2074,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2075,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryRegular_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2076,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan,STOCK:SEQUENCE,Seq - LaborSalarySpecialProgramsOvertime_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2077,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2078,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2079,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2080,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2081,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalarySpecialProgramsOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2082,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalarySpecialProgramsOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2083,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2084,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2085,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsOvertime_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalarySpecialProgramsOvertime_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2086,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsOvertime_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalarySpecialProgramsOvertime_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2087,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2088,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2089,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan,STOCK:SEQUENCE,Seq - LaborSalarySpecialProgramsRegular_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2090,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2091,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2092,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2093,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2094,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalarySpecialProgramsRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2095,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalarySpecialProgramsRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2096,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2097,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2098,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsRegular_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalarySpecialProgramsRegular_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2099,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsRegular_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalarySpecialProgramsRegular_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2100,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2101,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2102,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan,STOCK:SEQUENCE,Seq - LaborSalarySpecialPrograms_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2103,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2104,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2105,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2106,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2107,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalarySpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2108,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalarySpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2109,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2110,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2111,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialPrograms_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalarySpecialPrograms_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2112,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialPrograms_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalarySpecialPrograms_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2113,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2114,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2115,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan,STOCK:SEQUENCE,Seq - LaborSalaryTotalDirect_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2116,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2117,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2118,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2119,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2120,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTotalDirect_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2121,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTotalDirect_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2122,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2123,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2124,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalDirect_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTotalDirect_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2125,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalDirect_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTotalDirect_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2126,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2127,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalDirect_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000700%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2128,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan,STOCK:SEQUENCE,Seq - LaborSalaryTotalFringeBenefits_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2129,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2130,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2131,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2132,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2133,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTotalFringeBenefits_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2134,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTotalFringeBenefits_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2135,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2136,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2137,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalFringeBenefits_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTotalFringeBenefits_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2138,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalFringeBenefits_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTotalFringeBenefits_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2139,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2140,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalFringeBenefits_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9200.000800%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2141,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan,STOCK:SEQUENCE,Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2142,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2143,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2144,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2145,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2146,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTotalSalariesandFringeBenefits_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2147,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTotalSalariesandFringeBenefits_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2148,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2149,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2150,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalSalariesandFringeBenefits_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTotalSalariesandFringeBenefits_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2151,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalSalariesandFringeBenefits_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTotalSalariesandFringeBenefits_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2152,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2153,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2154,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan,STOCK:SEQUENCE,Seq - LaborSalaryTrainingOvertime_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2155,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2156,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2157,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2158,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2159,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTrainingOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2160,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTrainingOvertime_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2161,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2162,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2163,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingOvertime_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTrainingOvertime_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2164,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingOvertime_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTrainingOvertime_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2165,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2166,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2167,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan,STOCK:SEQUENCE,Seq - LaborSalaryTrainingRegular_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2168,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2169,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2170,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2171,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2172,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTrainingRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2173,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTrainingRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2174,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2175,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2176,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingRegular_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTrainingRegular_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2177,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingRegular_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTrainingRegular_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2178,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2179,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2180,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan,STOCK:SEQUENCE,Seq - LaborSalaryTraining_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2181,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2182,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2183,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2184,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2185,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTraining_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2186,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTraining_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2187,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2188,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2189,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTraining_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTraining_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2190,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTraining_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTraining_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2191,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2192,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalaryTraining_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2193,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan,STOCK:SEQUENCE,Seq - LaborSalary_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2194,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2195,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2196,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2197,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2198,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2199,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2200,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2201,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2202,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalary_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalary_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2203,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalary_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalary_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2204,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2205,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - LaborSalary_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2206,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan,STOCK:SEQUENCE,Seq - ReportedLaborSalariesOvertimePremium_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2207,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2208,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2209,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2210,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2211,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalariesOvertimePremium_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2212,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalariesOvertimePremium_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2213,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2214,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2215,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalariesOvertimePremium_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalariesOvertimePremium_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2216,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalariesOvertimePremium_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalariesOvertimePremium_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2217,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2218,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalariesOvertimePremium_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2219,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan,STOCK:SEQUENCE,Seq - ReportedLaborSalaryChildcare_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2220,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2221,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2222,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2223,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2224,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalaryChildcare_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2225,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalaryChildcare_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2226,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2227,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2228,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryChildcare_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryChildcare_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2229,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryChildcare_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryChildcare_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2230,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2231,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryChildcare_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2232,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan,STOCK:SEQUENCE,Seq - ReportedLaborSalaryOperating_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2233,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2234,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2235,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2236,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2237,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalaryOperating_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2238,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalaryOperating_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2239,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2240,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2241,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryOperating_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryOperating_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2242,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryOperating_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryOperating_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2243,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2244,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryOperating_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2245,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan,STOCK:SEQUENCE,Seq - ReportedLaborSalaryRegular_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2246,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2247,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2248,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2249,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2250,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalaryRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2251,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalaryRegular_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2252,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2253,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2254,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryRegular_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryRegular_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2255,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryRegular_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryRegular_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2256,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2257,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryRegular_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2258,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan,STOCK:SEQUENCE,Seq - ReportedLaborSalarySpecialPrograms_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2259,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2260,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2261,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2262,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2263,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalarySpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2264,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalarySpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2265,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2266,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2267,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalarySpecialPrograms_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalarySpecialPrograms_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2268,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalarySpecialPrograms_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalarySpecialPrograms_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2269,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2270,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalarySpecialPrograms_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2271,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan,STOCK:SEQUENCE,Seq - ReportedLaborSalaryTraining_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2272,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2273,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2274,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2275,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2276,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalaryTraining_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2277,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalaryTraining_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2278,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2279,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2280,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryTraining_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryTraining_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2281,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryTraining_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryTraining_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2282,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2283,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalaryTraining_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2284,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan,STOCK:SEQUENCE,Seq - ReportedLaborSalary_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2285,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2286,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2287,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2288,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2289,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2290,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2291,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2292,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2293,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalary_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalary_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2294,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalary_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalary_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2295,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2296,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - ReportedLaborSalary_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2297,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan,STOCK:SEQUENCE,Seq - TotalLaborSalaries_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2298,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2299,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2300,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2301,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2302,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalLaborSalaries_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2303,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalLaborSalaries_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2304,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2305,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2306,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborSalaries_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalLaborSalaries_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2307,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborSalaries_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalLaborSalaries_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2308,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2309,Package\Seq - GLBalancePlanAllocation_LaborSalary Measures\Seq - TotalLaborSalaries_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN [model].vAccountSubaccount (NOLOCK) asa
        ON asa.AccountSubaccountKey = f.AccountSubAccountKey
           AND asa.[Field Path] LIKE '%9300.000300%'
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2310,Package\SQL - End GLBalancePlanAllocation_LaborSalaryMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_LaborSalaryMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2311,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2312,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_LaborSalaryMeasure
2313,Package,Microsoft.Package,GLBalancePlanAllocation_NetRevenueMeasure,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2314,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures,STOCK:SEQUENCE,Seq - GLBalancePlanAllocation_NetRevenue Measures,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2315,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan,STOCK:SEQUENCE,Seq - BadDebt_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2316,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2317,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2318,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2319,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2320,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for BadDebt_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2321,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_BadDebt_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2322,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2323,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2324,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\SQL - End BadDebt_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End BadDebt_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2325,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\Foreach - New or Updated Fiscal Week\SQL - Start BadDebt_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start BadDebt_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2326,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2327,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - BadDebt_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2328,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan,STOCK:SEQUENCE,Seq - ChargeOffAverage_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2329,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2330,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2331,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2332,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2333,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ChargeOffAverage_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2334,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ChargeOffAverage_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2335,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2336,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2337,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\SQL - End ChargeOffAverage_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ChargeOffAverage_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2338,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ChargeOffAverage_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ChargeOffAverage_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2339,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2340,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOffAverage_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2341,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan,STOCK:SEQUENCE,Seq - ChargeOff_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2342,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2343,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2344,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2345,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2346,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ChargeOff_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2347,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ChargeOff_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2348,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2349,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2350,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\SQL - End ChargeOff_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End ChargeOff_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2351,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\Foreach - New or Updated Fiscal Week\SQL - Start ChargeOff_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ChargeOff_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2352,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2353,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - ChargeOff_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2354,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan,STOCK:SEQUENCE,Seq - DiscountCareSelect_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2355,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2356,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2357,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2358,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2359,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Discount_Care_Select_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2360,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Discount_Care_Select_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2361,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2362,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2363,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountCareSelect_Plan,Microsoft.ExecuteSQLTask,SQL - End DiscountCareSelect_Plan,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2364,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountCareSelect_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountCareSelect_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2365,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2366,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountCareSelect_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2367,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan,STOCK:SEQUENCE,Seq - DiscountClosedCenterPriceMatch_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2368,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2369,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2370,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2371,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2372,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountClosedCenterPriceMatch_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2373,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountClosedCenterPriceMatch_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2374,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2375,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2376,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountClosedCenterPriceMatch_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountClosedCenterPriceMatch_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2377,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountClosedCenterPriceMatch_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountClosedCenterPriceMatch_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2378,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2379,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2380,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan,STOCK:SEQUENCE,Seq - DiscountDiscretionaryPctTuitionPP_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2381,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2382,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2383,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2384,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2385,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountDiscretionaryPctTuitionPP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2386,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountDiscretionaryPctTuitionPP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2387,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2388,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2389,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionaryPctTuitionPP_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountDiscretionaryPctTuitionPP_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2390,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionaryPctTuitionPP_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountDiscretionaryPctTuitionPP_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2391,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2392,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2393,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan,STOCK:SEQUENCE,Seq - DiscountDiscretionaryPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2394,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2395,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2396,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2397,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2398,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountDiscretionaryPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2399,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountDiscretionaryPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2400,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2401,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2402,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionaryPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountDiscretionaryPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2403,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionaryPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountDiscretionaryPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2404,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2405,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2406,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan,STOCK:SEQUENCE,Seq - DiscountDiscretionary_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2407,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2408,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2409,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2410,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2411,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountDiscretionary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2412,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountDiscretionary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2413,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2414,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2415,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionary_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountDiscretionary_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2416,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionary_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountDiscretionary_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2417,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2418,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDiscretionary_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2419,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan,STOCK:SEQUENCE,Seq - DiscountDMApproved_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2420,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2421,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2422,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2423,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2424,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountDMApproved_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2425,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountDMApproved_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2426,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2427,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2428,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountDMApproved_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountDMApproved_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2429,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDMApproved_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountDMApproved_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2430,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2431,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountDMApproved_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2432,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan,STOCK:SEQUENCE,Seq - DiscountFamily_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2433,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2434,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2435,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2436,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2437,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountFamily_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2438,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountFamily_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2439,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2440,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2441,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountFamily_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountFamily_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2442,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFamily_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountFamily_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2443,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2444,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFamily_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2445,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan,STOCK:SEQUENCE,Seq - DiscountFees_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2446,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2447,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2448,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2449,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2450,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountFees_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2451,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountFees_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2452,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2453,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2454,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountFees_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountFees_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2455,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFees_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountFees_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2456,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2457,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFees_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2458,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan,STOCK:SEQUENCE,Seq - DiscountFreeDay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2459,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2460,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2461,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2462,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2463,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountFreeDay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2464,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountFreeDay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2465,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2466,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2467,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountFreeDay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountFreeDay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2468,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFreeDay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountFreeDay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2469,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2470,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountFreeDay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2471,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan,STOCK:SEQUENCE,Seq - DiscountGiftOfEducation_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2472,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2473,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2474,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2475,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2476,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountGiftOfEducation_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2477,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountGiftOfEducation_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2478,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2479,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2480,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountGiftOfEducation_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountGiftOfEducation_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2481,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountGiftOfEducation_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountGiftOfEducation_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2482,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2483,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountGiftOfEducation_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2484,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan,STOCK:SEQUENCE,Seq - DiscountNationalMarketing_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2485,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2486,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2487,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2488,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2489,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountNationalMarketing_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2490,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountNationalMarketing_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2491,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2492,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2493,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountNationalMarketing_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountNationalMarketing_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2494,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountNationalMarketing_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountNationalMarketing_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2495,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2496,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalMarketing_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2497,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan,STOCK:SEQUENCE,Seq - DiscountNationalTuition_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2498,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2499,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2500,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2501,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2502,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountNationalTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2503,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountNationalTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2504,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2505,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2506,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountNationalTuition_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountNationalTuition_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2507,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountNationalTuition_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountNationalTuition_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2508,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2509,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountNationalTuition_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2510,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan,STOCK:SEQUENCE,Seq - DiscountOther_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2511,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2512,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2513,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2514,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2515,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountOther_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2516,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountOther_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2517,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2518,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2519,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountOther_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountOther_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2520,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountOther_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountOther_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2521,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2522,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountOther_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2523,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan,STOCK:SEQUENCE,Seq - DiscountPPPctTuitionPP_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2524,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2525,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2526,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2527,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2528,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountPPPctTuitionPP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2529,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountPPPctTuitionPP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2530,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2531,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2532,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountPPPctTuitionPP_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountPPPctTuitionPP_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2533,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPPPctTuitionPP_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountPPPctTuitionPP_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2534,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2535,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2536,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan,STOCK:SEQUENCE,Seq - DiscountPrimary_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2537,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2538,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2539,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2540,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2541,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountPrimary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2542,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountPrimary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2543,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2544,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2545,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountPrimary_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountPrimary_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2546,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPrimary_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountPrimary_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2547,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2548,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrimary_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2549,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan,STOCK:SEQUENCE,Seq - DiscountPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2550,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2551,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2552,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2553,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2554,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2555,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2556,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2557,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2558,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2559,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2560,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2561,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2562,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan,STOCK:SEQUENCE,Seq - DiscountPromotion_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2563,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2564,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2565,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2566,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2567,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountPromotion_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2568,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountPromotion_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2569,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2570,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2571,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountPromotion_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountPromotion_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2572,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPromotion_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountPromotion_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2573,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2574,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountPromotion_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2575,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan,STOCK:SEQUENCE,Seq - DiscountReferral_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2576,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2577,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2578,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2579,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2580,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountReferral_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2581,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountReferral_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2582,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2583,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2584,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountReferral_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountReferral_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2585,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountReferral_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountReferral_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2586,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2587,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountReferral_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2588,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan,STOCK:SEQUENCE,Seq - DiscountSpecialPrograms_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2589,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2590,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2591,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2592,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2593,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountSpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2594,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountSpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2595,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2596,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2597,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountSpecialPrograms_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountSpecialPrograms_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2598,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSpecialPrograms_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountSpecialPrograms_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2599,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2600,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSpecialPrograms_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2601,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan,STOCK:SEQUENCE,Seq - DiscountStaff_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2602,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2603,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2604,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2605,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2606,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountStaff_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2607,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountStaff_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2608,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2609,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2610,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountStaff_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountStaff_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2611,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountStaff_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountStaff_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2612,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2613,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountStaff_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2614,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan,STOCK:SEQUENCE,Seq - DiscountSubsidyPctTuitionSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2615,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2616,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2617,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2618,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2619,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountSubsidyPctTuitionSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2620,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountSubsidyPctTuitionSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2621,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2622,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2623,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountSubsidyPctTuitionSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountSubsidyPctTuitionSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2624,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSubsidyPctTuitionSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountSubsidyPctTuitionSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2625,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2626,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2627,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan,STOCK:SEQUENCE,Seq - DiscountSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2628,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2629,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2630,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2631,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2632,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2633,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2634,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2635,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2636,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2637,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2638,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2639,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2640,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan,STOCK:SEQUENCE,Seq - DiscountTieredTuition_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2641,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2642,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2643,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2644,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2645,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountTieredTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2646,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountTieredTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2647,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2648,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2649,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountTieredTuition_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountTieredTuition_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2650,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTieredTuition_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountTieredTuition_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2651,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2652,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTieredTuition_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2653,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan,STOCK:SEQUENCE,Seq - DiscountTotalTuitionPctTuition_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2654,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2655,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2656,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2657,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2658,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountTotalTuitionPctTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2659,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountTotalTuitionPctTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2660,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2661,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2662,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotalTuitionPctTuition_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountTotalTuitionPctTuition_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2663,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotalTuitionPctTuition_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountTotalTuitionPctTuition_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2664,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2665,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2666,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan,STOCK:SEQUENCE,Seq - DiscountTotalTuition_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2667,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2668,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2669,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2670,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2671,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountTotalTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2672,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountTotalTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2673,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2674,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2675,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotalTuition_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountTotalTuition_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2676,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotalTuition_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountTotalTuition_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2677,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2678,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotalTuition_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2679,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan,STOCK:SEQUENCE,Seq - DiscountTotal_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2680,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2681,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2682,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2683,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2684,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountTotal_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2685,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountTotal_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2686,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2687,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2688,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotal_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountTotal_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2689,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotal_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountTotal_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2690,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2691,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - DiscountTotal_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2692,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan,STOCK:SEQUENCE,Seq - FeesEducation_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2693,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2694,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2695,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2696,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2697,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FeesEducation_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2698,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FeesEducation_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2699,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2700,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2701,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\SQL - End FeesEducation_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FeesEducation_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2702,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FeesEducation_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FeesEducation_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2703,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2704,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesEducation_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2705,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan,STOCK:SEQUENCE,Seq - FeesRegistration_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2706,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2707,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2708,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2709,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2710,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FeesRegistration_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2711,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FeesRegistration_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2712,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2713,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2714,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\SQL - End FeesRegistration_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FeesRegistration_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2715,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FeesRegistration_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FeesRegistration_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2716,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2717,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRegistration_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2718,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan,STOCK:SEQUENCE,Seq - FeesReservation_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2719,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2720,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2721,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2722,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2723,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FeesReservation_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2724,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FeesReservation_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2725,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2726,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2727,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\SQL - End FeesReservation_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FeesReservation_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2728,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FeesReservation_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FeesReservation_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2729,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2730,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesReservation_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2731,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan,STOCK:SEQUENCE,Seq - FeesRevenue_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2732,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2733,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2734,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2735,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2736,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FeesRevenue_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2737,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FeesRevenue_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2738,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2739,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2740,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End FeesRevenue_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End FeesRevenue_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2741,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Start FeesRevenue_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FeesRevenue_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2742,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2743,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - FeesRevenue_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2744,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan,STOCK:SEQUENCE,Seq - LaborSalaryPctNetRevenue_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2745,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2746,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2747,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2748,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2749,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2750,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryPctNetRevenue_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2751,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2752,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2753,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPctNetRevenue_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryPctNetRevenue_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2754,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Labor Salary Pct Net Revenue_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Labor Salary Pct Net Revenue_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2755,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2756,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2757,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan,STOCK:SEQUENCE,Seq - NetAverageRatePrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2758,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2759,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2760,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2761,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2762,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2763,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2764,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2765,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2766,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRatePrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRatePrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2767,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRatePrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRatePrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2768,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2769,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRatePrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2770,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan,STOCK:SEQUENCE,Seq - NetAverageRateSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2771,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2772,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2773,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2774,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2775,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2776,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetAverageSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2777,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2778,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2779,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRateSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRateSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2780,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRateSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRateSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2781,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2782,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRateSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2783,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan,STOCK:SEQUENCE,Seq - NetAverageRate_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2784,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2785,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2786,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2787,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2788,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetAverageRate_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2789,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetAverageRate_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2790,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2791,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2792,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRate_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRate_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2793,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRate_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRate_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2794,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2795,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetAverageRate_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2796,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan,STOCK:SEQUENCE,Seq - NetFees_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2797,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2798,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2799,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2800,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2801,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetFees_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2802,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetFees_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2803,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2804,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2805,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetFees_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetFees_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2806,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetFees_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetFees_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2807,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2808,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetFees_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2809,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan,STOCK:SEQUENCE,Seq - NetRevenue_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2810,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2811,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2812,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2813,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2814,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetRevenue_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2815,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetRevenue_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2816,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2817,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2818,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetRevenue_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetRevenue_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2819,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetRevenue_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetRevenue_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2820,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2821,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetRevenue_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2822,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan,STOCK:SEQUENCE,Seq - NetSpecialPrograms_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2823,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2824,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2825,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2826,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2827,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetSpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2828,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetSpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2829,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2830,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2831,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetSpecialPrograms_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetSpecialPrograms_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2832,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetSpecialPrograms_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetSpecialPrograms_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2833,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2834,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetSpecialPrograms_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2835,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan,STOCK:SEQUENCE,Seq - NetTuitionPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2836,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2837,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2838,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2839,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2840,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTUitionPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2841,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetTuitionPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2842,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2843,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2844,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetTuitionPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetTuitionPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2845,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetTuitionPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetTuitionPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2846,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2847,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2848,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan,STOCK:SEQUENCE,Seq - NetTuitionSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2849,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2850,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2851,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2852,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2853,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2854,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetTuitionSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2855,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2856,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2857,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetTuitionSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetTuitionSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2858,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetTuitionSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetTuitionSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2859,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2860,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuitionSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2861,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan,STOCK:SEQUENCE,Seq - NetTuition_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2862,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2863,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2864,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2865,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2866,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2867,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetTuition_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2868,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2869,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2870,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - End NetTuition_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetTuition_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2871,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\Foreach - New or Updated Fiscal Week\SQL - Start NetTuition_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetTuition_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2872,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2873,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - NetTuition_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2874,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan,STOCK:SEQUENCE,Seq - Recovery_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2875,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2876,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2877,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2878,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2879,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Recovery_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2880,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Recovery_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2881,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2882,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2883,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\SQL - End Recovery_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End Recovery_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2884,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\Foreach - New or Updated Fiscal Week\SQL - Start Recovery_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Recovery_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2885,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2886,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - Recovery_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2887,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan,STOCK:SEQUENCE,Seq - RevenueActivities_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2888,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2889,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2890,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2891,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2892,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueActivities_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2893,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueActivities_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2894,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2895,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2896,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueActivities_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueActivities_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2897,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueActivities_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueActivities_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2898,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2899,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueActivities_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2900,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan,STOCK:SEQUENCE,Seq - RevenueEPManagementFee_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2901,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2902,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2903,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2904,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2905,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueEPManagementFee_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2906,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueEPManagementFee_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2907,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2908,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2909,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueEPManagementFee_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueEPManagementFee_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2910,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueEPManagementFee_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueEPManagementFee_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2911,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2912,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueEPManagementFee_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2913,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan,STOCK:SEQUENCE,Seq - RevenueFieldTrips_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2914,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2915,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2916,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2917,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2918,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueFieldTrips_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2919,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueFieldTrips_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2920,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2921,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2922,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueFieldTrips_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueFieldTrips_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2923,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueFieldTrips_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueFieldTrips_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2924,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2925,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueFieldTrips_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2926,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan,STOCK:SEQUENCE,Seq - RevenueHeadStart_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2927,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2928,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2929,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2930,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2931,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueHeadStart_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2932,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueHeadStart_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2933,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2934,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2935,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueHeadStart_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueHeadStart_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2936,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueHeadStart_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueHeadStart_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2937,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2938,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueHeadStart_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2939,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan,STOCK:SEQUENCE,Seq - RevenueKLCStore_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2940,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2941,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2942,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2943,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2944,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueKLCStore_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2945,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueKLCStore_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2946,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2947,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2948,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueKLCStore_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueKLCStore_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2949,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueKLCStore_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueKLCStore_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2950,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2951,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueKLCStore_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2952,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan,STOCK:SEQUENCE,Seq - RevenueLatePayment_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2953,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2954,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2955,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2956,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2957,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueLatePayment_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2958,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueLatePayment_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2959,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2960,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2961,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueLatePayment_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueLatePayment_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2962,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueLatePayment_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueLatePayment_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2963,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2964,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePayment_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2965,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan,STOCK:SEQUENCE,Seq - RevenueLatePickup_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2966,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2967,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2968,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2969,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2970,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueLatePickup_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2971,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueLatePickup_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2972,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2973,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2974,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueLatePickup_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueLatePickup_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2975,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueLatePickup_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueLatePickup_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2976,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2977,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueLatePickup_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2978,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan,STOCK:SEQUENCE,Seq - RevenueMiscandOther_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2979,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2980,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2981,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2982,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2983,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueMiscandOther_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2984,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueMiscandOther_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2985,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2986,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2987,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueMiscandOther_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueMiscandOther_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2988,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueMiscandOther_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueMiscandOther_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2989,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2990,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueMiscandOther_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2991,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan,STOCK:SEQUENCE,Seq - RevenueNationalAccounts_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2992,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2993,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2994,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2995,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2996,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueNationalAccounts_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2997,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueNationalAccounts_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2998,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
2999,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3000,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueNationalAccounts_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueNationalAccounts_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3001,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueNationalAccounts_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueNationalAccounts_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3002,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3003,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueNationalAccounts_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3004,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan,STOCK:SEQUENCE,Seq - RevenueOther_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3005,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3006,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3007,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3008,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3009,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueOther_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3010,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueOther_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3011,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3012,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3013,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueOther_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueOther_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3014,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueOther_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueOther_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3015,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3016,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueOther_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3017,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan,STOCK:SEQUENCE,Seq - RevenuePrimary_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3018,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3019,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3020,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3021,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3022,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenuePrimary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3023,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenuePrimary_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3024,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3025,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3026,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenuePrimary_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenuePrimary_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3027,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenuePrimary_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenuePrimary_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3028,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3029,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenuePrimary_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3030,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan,STOCK:SEQUENCE,Seq - RevenueSpecialServices_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3031,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3032,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3033,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3034,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3035,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueSpecialServices_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3036,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueSpecialServices_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3037,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3038,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3039,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\SQL - End RevenueSpecialServices_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueSpecialServices_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3040,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\Foreach - New or Updated Fiscal Week\SQL - Start RevenueSpecialServices_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueSpecialServices_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3041,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3042,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - RevenueSpecialServices_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3043,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan,STOCK:SEQUENCE,Seq - TotalMiscellaneousIncome_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3044,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3045,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3046,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3047,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3048,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalMiscellaneousIncome_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3049,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalMiscellaneousIncome_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3050,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3051,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3052,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\SQL - End TotalMiscellaneousIncome_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalMiscellaneousIncome_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3053,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TotalMiscellaneousIncome_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalMiscellaneousIncome_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3054,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3055,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalMiscellaneousIncome_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3056,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan,STOCK:SEQUENCE,Seq - TotalNetMiscAndOtherRevenues_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3057,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3058,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3059,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3060,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3061,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalNetMiscAndOtherRevenues_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3062,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalNetMiscAndOtherRevenues_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3063,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3064,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3065,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\SQL - End TotalNetMiscAndOtherRevenues_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalNetMiscAndOtherRevenues_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3066,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TotalNetMiscAndOtherRevenues_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalNetMiscAndOtherRevenues_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3067,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3068,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3069,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionAdjustmentsPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3070,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3071,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3072,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3073,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3074,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionAdjustmentsPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3075,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionAdjustmentsPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3076,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3077,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3078,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustmentsPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionAdjustmentsPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3079,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustmentsPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionAdjustmentsPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3080,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3081,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3082,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionAdjustmentsSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3083,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3084,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3085,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3086,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3087,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionAdjustmentsSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3088,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionAdjustmentsSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3089,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3090,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3091,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustmentsSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionAdjustmentsSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3092,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustmentsSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionAdjustmentsSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3093,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3094,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3095,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan,STOCK:SEQUENCE,Seq - TuitionAdjustments_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3096,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3097,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3098,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3099,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3100,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionAdjustments_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3101,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionAdjustments_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3102,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3103,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3104,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustments_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionAdjustments_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3105,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustments_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionAdjustments_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3106,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3107,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionAdjustments_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3108,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan,STOCK:SEQUENCE,Seq - TuitionDiscount_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3109,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3110,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3111,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3112,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3113,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionDiscount_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3114,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionDiscount_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3115,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3116,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3117,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionDiscount_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionDiscount_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3118,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionDiscount_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionDiscount_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3119,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3120,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionDiscount_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3121,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionFivesPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3122,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3123,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3124,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3125,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3126,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFivesPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3127,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFivesPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3128,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3129,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3130,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFivesPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFivesPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3131,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFivesPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFivesPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3132,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3133,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3134,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionFivesSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3135,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3136,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3137,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3138,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3139,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFivesSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3140,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFivesSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3141,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3142,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3143,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFivesSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFivesSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3144,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFivesSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFivesSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3145,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3146,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFivesSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3147,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan,STOCK:SEQUENCE,Seq - TuitionFives_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3148,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3149,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3150,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3151,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3152,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFives_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3153,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFives_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3154,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3155,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3156,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFives_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFives_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3157,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFives_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFives_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3158,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3159,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFives_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3160,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionFoursPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3161,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3162,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3163,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3164,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3165,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFoursPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3166,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFoursPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3167,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3168,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3169,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFoursPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFoursPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3170,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFoursPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFoursPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3171,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3172,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3173,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionFoursSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3174,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3175,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3176,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3177,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3178,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFoursSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3179,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFoursSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3180,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3181,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3182,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFoursSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFoursSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3183,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFoursSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFoursSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3184,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3185,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFoursSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3186,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan,STOCK:SEQUENCE,Seq - TuitionFours_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3187,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3188,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3189,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3190,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3191,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3192,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFours_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3193,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3194,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3195,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionFours_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFours_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3196,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFours_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFours_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3197,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3198,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionFours_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3199,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan,STOCK:SEQUENCE,Seq - TuitionHourlyDropInPP_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3200,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3201,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3202,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3203,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3204,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionHourlyDropInPP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3205,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionHourlyDropInPP_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3206,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3207,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3208,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropInPP_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionHourlyDropInPP_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3209,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropInPP_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionHourlyDropInPP_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3210,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3211,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInPP_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3212,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionHourlyDropInSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3213,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3214,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3215,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3216,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3217,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionHourlyDropInSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3218,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionHourlyDropInSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3219,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3220,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3221,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropInSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionHourlyDropInSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3222,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropInSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionHourlyDropInSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3223,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3224,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3225,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan,STOCK:SEQUENCE,Seq - TuitionHourlyDropIn_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3226,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3227,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3228,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3229,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3230,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionHourlyDropIn_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3231,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionHourlyDropIn_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3232,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3233,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3234,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropIn_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionHourlyDropIn_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3235,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropIn_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionHourlyDropIn_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3236,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3237,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionHourlyDropIn_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3238,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionInfantPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3239,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3240,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3241,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3242,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3243,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionInfantPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3244,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionInfantPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3245,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3246,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3247,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfantPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionInfantPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3248,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfantPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionInfantPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3249,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3250,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3251,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionInfantSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3252,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3253,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3254,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3255,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3256,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionInfantSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3257,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionInfantSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3258,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3259,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3260,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfantSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionInfantSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3261,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfantSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionInfantSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3262,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3263,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfantSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3264,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan,STOCK:SEQUENCE,Seq - TuitionInfant_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3265,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3266,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3267,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3268,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3269,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionInfant_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3270,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionInfant_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3271,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3272,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3273,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfant_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionInfant_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3274,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfant_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionInfant_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3275,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3276,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionInfant_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3277,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionKindergartenPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3278,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3279,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3280,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3281,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3282,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionKindergartenPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3283,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionKindergartenPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3284,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3285,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3286,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergartenPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionKindergartenPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3287,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergartenPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionKindergartenPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3288,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3289,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3290,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionKindergartenSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3291,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3292,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3293,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3294,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3295,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionKindergartenSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3296,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionKindergartenSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3297,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3298,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3299,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergartenSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionKindergartenSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3300,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergartenSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionKindergartenSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3301,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3302,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3303,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan,STOCK:SEQUENCE,Seq - TuitionKindergarten_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3304,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3305,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3306,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3307,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3308,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionKindergarten_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3309,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionKindergarten_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3310,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3311,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3312,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergarten_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionKindergarten_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3313,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergarten_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionKindergarten_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3314,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3315,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionKindergarten_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3316,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionMultiagePrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3317,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3318,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3319,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3320,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3321,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionMultiagePrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3322,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionMultiagePrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3323,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3324,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3325,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiagePrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionMultiagePrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3326,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiagePrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionMultiagePrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3327,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3328,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3329,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionMultiageSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3330,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3331,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3332,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3333,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3334,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionMultiageSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3335,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionMultiageSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3336,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3337,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3338,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiageSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionMultiageSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3339,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiageSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionMultiageSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3340,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3341,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiageSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3342,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan,STOCK:SEQUENCE,Seq - TuitionMultiage_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3343,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3344,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3345,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3346,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3347,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionMultiage_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3348,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionMultiage_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3349,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3350,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3351,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiage_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionMultiage_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3352,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiage_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionMultiage_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3353,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3354,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionMultiage_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3355,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionSchoolagePrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3356,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3357,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3358,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3359,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3360,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionSchoolagePrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3361,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionSchoolagePrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3362,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3363,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3364,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolagePrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionSchoolagePrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3365,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolagePrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionSchoolagePrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3366,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3367,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3368,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionSchoolageSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3369,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3370,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3371,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3372,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3373,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionSchoolageSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3374,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionSchoolageSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3375,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3376,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3377,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolageSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionSchoolageSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3378,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolageSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionSchoolageSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3379,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3380,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3381,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan,STOCK:SEQUENCE,Seq - TuitionSchoolage_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3382,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3383,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3384,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3385,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3386,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionSchoolage_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3387,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionSchoolage_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3388,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3389,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3390,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolage_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionSchoolage_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3391,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolage_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionSchoolage_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3392,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3393,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSchoolage_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3394,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan,STOCK:SEQUENCE,Seq - TuitionSpecialPrograms_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3395,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3396,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3397,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3398,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3399,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionSpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3400,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionSpecialPrograms_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3401,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3402,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3403,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionSpecialPrograms_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionSpecialPrograms_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3404,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSpecialPrograms_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionSpecialPrograms_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3405,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3406,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionSpecialPrograms_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3407,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionThreesPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3408,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3409,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3410,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3411,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3412,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionThreesPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3413,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionThreesPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3414,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3415,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3416,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionThreesPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionThreesPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3417,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThreesPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionThreesPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3418,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3419,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3420,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionThreesSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3421,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3422,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3423,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3424,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3425,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionThreesSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3426,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionThreesSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3427,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3428,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3429,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionThreesSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionThreesSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3430,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThreesSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionThreesSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3431,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3432,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThreesSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3433,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan,STOCK:SEQUENCE,Seq - TuitionThrees_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3434,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3435,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3436,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3437,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3438,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionThrees_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3439,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionThrees_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3440,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3441,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3442,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionThrees_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionThrees_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3443,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThrees_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionThrees_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3444,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3445,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionThrees_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3446,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionToddlerPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3447,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3448,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3449,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3450,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3451,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionToddlerPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3452,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionToddlerPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3453,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3454,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3455,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddlerPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionToddlerPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3456,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddlerPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionToddlerPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3457,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3458,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3459,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionToddlerSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3460,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3461,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3462,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3463,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3464,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionToddlerSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3465,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionToddlerSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3466,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3467,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3468,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddlerSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionToddlerSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3469,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddlerSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionToddlerSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3470,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3471,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddlerSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3472,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan,STOCK:SEQUENCE,Seq - TuitionToddler_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3473,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3474,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3475,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3476,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3477,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionToddler_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3478,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionToddler_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3479,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3480,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3481,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddler_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionToddler_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3482,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddler_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionToddler_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3483,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3484,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionToddler_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3485,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionTotalPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3486,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3487,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3488,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3489,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3490,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTotalPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3491,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTotalPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3492,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3493,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3494,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotalPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTotalPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3495,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotalPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTotalPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3496,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3497,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3498,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionTotalSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3499,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3500,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3501,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3502,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3503,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTotalSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3504,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTotalSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3505,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3506,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3507,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotalSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTotalSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3508,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotalSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTotalSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3509,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3510,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotalSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3511,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan,STOCK:SEQUENCE,Seq - TuitionTotal_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3512,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3513,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3514,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3515,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3516,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTotal_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3517,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTotal_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3518,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3519,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3520,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotal_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTotal_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3521,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotal_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTotal_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3522,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3523,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTotal_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3524,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan,STOCK:SEQUENCE,Seq - TuitionTwosPrivatePay_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3525,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3526,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3527,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3528,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3529,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTwosPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3530,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTwosPrivatePay_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3531,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3532,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3533,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwosPrivatePay_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTwosPrivatePay_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3534,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwosPrivatePay_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTwosPrivatePay_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3535,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3536,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosPrivatePay_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3537,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan,STOCK:SEQUENCE,Seq - TuitionTwosSubsidy_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3538,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3539,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3540,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3541,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3542,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTwosSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3543,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTwosSubsidy_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3544,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3545,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3546,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwosSubsidy_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTwosSubsidy_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3547,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwosSubsidy_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTwosSubsidy_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3548,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3549,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwosSubsidy_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3550,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan,STOCK:SEQUENCE,Seq - TuitionTwos_Plan,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3551,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3552,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3553,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3554,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3555,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTwos_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3556,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTwos_Plan,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3557,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3558,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Plan';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3559,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwos_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTwos_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3560,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwos_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTwos_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3561,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3562,Package\Seq - GLBalancePlanAllocation_NetRevenue Measures\Seq - TuitionTwos_Plan\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
      AND f.GlMetricTypeKey = 1
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactGLBalancePlanAllocation(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
         AND f.GlMetricTypeKey = 1
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3563,Package\SQL - End GLBalancePlanAllocation_NetRevenueMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_NetRevenueMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3564,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3565,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLBalancePlanAllocation_NetRevenueMeasure
3566,Package,Microsoft.Package,GLPlanAllocation_LaborHoursMeasure,,,,,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3567,Package\SQL - Start GLPlanAllocation_LaborHoursMeasure Audit Log,Microsoft.ExecuteSQLTask,SQL - Start GLPlanAllocation_LaborHoursMeasure Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3568,Package\SQL - Get Last Processed Date from BaseETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from BaseETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM BaseETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM BaseETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO BaseETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3569,Package\SEQ - GLPlanAllocation_LaborHours Measures,STOCK:SEQUENCE,SEQ - GLPlanAllocation_LaborHours Measures,,,,,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3570,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHours_Plan,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers for LaborHours_Plan,,,,,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3571,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan,STOCK:FOREACHLOOP,Foreach Loop Container - LaborHours_Plan,,,,,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3572,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - Start LaborHours_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHours_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3573,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,,,,,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3574,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHours_Plan present,Microsoft.ExecuteSQLTask,SQL - Delete from BaseWeeklyMeasure if LaborHours_Plan present,,,,,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3575,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHours_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Pre Count for LaborHours_Plan,,,,,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3576,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\DFT - Load BaseWeeklyMeasure for LaborHours_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHours_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHours_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3577,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\DFT - Load BaseWeeklyMeasure for LaborHours_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHours_Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3578,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\DFT - Load BaseWeeklyMeasure for LaborHours_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHours_Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3579,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\DFT - Load BaseWeeklyMeasure for LaborHours_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHours_Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHours_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3580,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHours_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Post Count for LaborHours_Plan,,,,,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3581,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHours_Plan\SQL - End LaborHours_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHours_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3582,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursChildcare_Plan,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers for LaborHoursChildcare_Plan,,,,,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3583,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan,STOCK:FOREACHLOOP,Foreach Loop Container - LaborHoursChildcare_Plan,,,,,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3584,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - Start LaborHoursChildcare_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursChildcare_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3585,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,,,,,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3586,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursChildcare_Plan present,Microsoft.ExecuteSQLTask,SQL - Delete from BaseWeeklyMeasure if LaborHoursChildcare_Plan present,,,,,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Childcare'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3587,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursChildcare_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Pre Count for LaborHoursChildcare_Plan,,,,,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Childcare'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3588,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursChildcare_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursChildcare_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursChildcare_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3589,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursChildcare_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursChildcare_Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3590,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursChildcare_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursChildcare_Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3591,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursChildcare_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursChildcare_Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursChildcare_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3592,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursChildcare_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Post Count for LaborHoursChildcare_Plan,,,,,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Childcare'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3593,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursChildcare_Plan\SQL - End LaborHoursChildcare_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursChildcare_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3594,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursOperating_Plan,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers for LaborHoursOperating_Plan,,,,,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3595,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan,STOCK:FOREACHLOOP,Foreach Loop Container - LaborHoursOperating_Plan,,,,,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3596,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - Start LaborHoursOperating_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOperating_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3597,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,,,,,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3598,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursOperating_Plan present,Microsoft.ExecuteSQLTask,SQL - Delete from BaseWeeklyMeasure if LaborHoursOperating_Plan present,,,,,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Operating'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3599,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursOperating_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Pre Count for LaborHoursOperating_Plan,,,,,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Operating'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3600,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursOperating_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursOperating_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOperating_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3601,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursOperating_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursOperating_Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3602,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursOperating_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursOperating_Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3603,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursOperating_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursOperating_Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOperating_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3604,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursOperating_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Post Count for LaborHoursOperating_Plan,,,,,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Operating'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3605,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOperating_Plan\SQL - End LaborHoursOperating_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOperating_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3606,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursOvertime_Plan,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers for LaborHoursOvertime_Plan,,,,,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3607,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan,STOCK:FOREACHLOOP,Foreach Loop Container - LaborHoursOvertime_Plan,,,,,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3608,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - Start LaborHoursOvertime_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOvertime_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3609,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,,,,,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3610,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursOvertime_Plan present,Microsoft.ExecuteSQLTask,SQL - Delete from BaseWeeklyMeasure if LaborHoursOvertime_Plan present,,,,,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Overtime'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3611,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursOvertime_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Pre Count for LaborHoursOvertime_Plan,,,,,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Overtime'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3612,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursOvertime_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursOvertime_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOvertime_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3613,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursOvertime_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursOvertime_Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3614,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursOvertime_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursOvertime_Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3615,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursOvertime_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursOvertime_Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOvertime_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3616,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursOvertime_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Post Count for LaborHoursOvertime_Plan,,,,,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Overtime'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3617,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursOvertime_Plan\SQL - End LaborHoursOvertime_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOvertime_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3618,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursSpecialProgramsMemo_Plan,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers for LaborHoursSpecialProgramsMemo_Plan,,,,,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3619,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan,STOCK:FOREACHLOOP,Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan,,,,,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3620,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - Start LaborHoursSpecialProgramsMemo_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursSpecialProgramsMemo_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3621,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,,,,,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3622,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursSpecialProgramsMemo_Plan present,Microsoft.ExecuteSQLTask,SQL - Delete from BaseWeeklyMeasure if LaborHoursSpecialProgramsMemo_Plan present,,,,,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Special Programs (Memo)'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3623,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursSpecialProgramsMemo_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Pre Count for LaborHoursSpecialProgramsMemo_Plan,,,,,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Special Programs (Memo)'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3624,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursSpecialProgramsMemo_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3625,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3626,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3627,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3628,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursSpecialProgramsMemo_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Post Count for LaborHoursSpecialProgramsMemo_Plan,,,,,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Special Programs (Memo)'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3629,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursSpecialProgramsMemo_Plan\SQL - End LaborHoursSpecialProgramsMemo_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursSpecialProgramsMemo_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3630,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for LaborHoursTraining_Plan,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers for LaborHoursTraining_Plan,,,,,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3631,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan,STOCK:FOREACHLOOP,Foreach Loop Container - LaborHoursTraining_Plan,,,,,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3632,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - Start LaborHoursTraining_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTraining_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3633,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,,,,,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3634,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - Delete from BaseWeeklyMeasure if LaborHoursTraining_Plan present,Microsoft.ExecuteSQLTask,SQL - Delete from BaseWeeklyMeasure if LaborHoursTraining_Plan present,,,,,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Labor Hours Training'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3635,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - BaseWeeklyMeasure Pre Count for LaborHoursTraining_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Pre Count for LaborHoursTraining_Plan,,,,,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Training'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3636,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursTraining_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursTraining_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTraining_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3637,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursTraining_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursTraining_Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3638,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursTraining_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursTraining_Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3639,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\DFT - Load BaseWeeklyMeasure for LaborHoursTraining_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for LaborHoursTraining_Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTraining_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3640,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - BaseWeeklyMeasure Post Count for LaborHoursTraining_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Post Count for LaborHoursTraining_Plan,,,,,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Labor Hours Training'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3641,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - LaborHoursTraining_Plan\SQL - End LaborHoursTraining_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTraining_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3642,Package\SEQ - GLPlanAllocation_LaborHours Measures\SQL - Get FiscalWeekNumbers for TotalLaborHours_Plan,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers for TotalLaborHours_Plan,,,,,"SELECT FiscalWeekNumber FROM FactGLBalancePlanAllocation(NOLOCK)f
JOIN DimDate(NOLOCK)d ON f.DateKey = d.DateKey
JOIN BING_EDW.model.vAccountSubaccount(NOLOCK)a ON f.AccountSubaccountKey = a.AccountSubaccountKey
WHERE GLMetricTypeKey = 2 AND [Field Path] LIKE '%9300.000300%'
AND f.EDWCreatedDate > ?
GROUP BY FiscalWeekNumber
ORDER BY FiscalWeekNumber",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3643,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan,STOCK:FOREACHLOOP,Foreach Loop Container - TotalLaborHours_Plan,,,,,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3644,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - Start TotalLaborHours_Plan Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalLaborHours_Plan Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3645,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDate for Actual from DimDate for the FiscalWeekNumber,,,,,"SELECT DISTINCT FiscalWeekEndDate AS FiscalWeekEndDate 
FROM DimDate(NOLOCK) 
WHERE FiscalWeekNumber = ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3646,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - Delete from BaseWeeklyMeasure if TotalLaborHours_Plan present,Microsoft.ExecuteSQLTask,SQL - Delete from BaseWeeklyMeasure if TotalLaborHours_Plan present,,,,,"DELETE FROM BaseWeeklyMeasure
WHERE MeasureName = 'Total Labor Hours'
AND DataScenarioName = ('Plan')
AND FiscalWeekEndDate = ?

Select @@ROWCOUNT as DeleteCount ",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3647,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - BaseWeeklyMeasure Pre Count for TotalLaborHours_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Pre Count for TotalLaborHours_Plan,,,,,"SELECT COUNT(1) AS vPreCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Total Labor Hours'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3648,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\DFT - Load BaseWeeklyMeasure for TotalLaborHours_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for TotalLaborHours_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalLaborHours_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3649,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\DFT - Load BaseWeeklyMeasure for TotalLaborHours_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for TotalLaborHours_Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3650,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\DFT - Load BaseWeeklyMeasure for TotalLaborHours_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for TotalLaborHours_Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3651,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\DFT - Load BaseWeeklyMeasure for TotalLaborHours_Plan,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure for TotalLaborHours_Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalLaborHours_Plan,,DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3652,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - BaseWeeklyMeasure Post Count for TotalLaborHours_Plan,Microsoft.ExecuteSQLTask,SQL - BaseWeeklyMeasure Post Count for TotalLaborHours_Plan,,,,,"SELECT COUNT(1) AS vPostCount FROM BaseWeeklyMeasure(NOLOCK)
WHERE MeasureName = 'Total Labor Hours'
AND DataScenarioName = ('Plan')",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3653,Package\SEQ - GLPlanAllocation_LaborHours Measures\Foreach Loop Container - TotalLaborHours_Plan\SQL - End TotalLaborHours_Plan Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalLaborHours_Plan Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3654,Package\SQL - Update Last Processed Date in BaseETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in BaseETLBatchControl,,,,,"UPDATE BaseETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = 'GLPlanAllocation_LaborHours'",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3655,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3656,Package\SQL - End GLPlanAllocation_LaborHoursMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End GLPlanAllocation_LaborHoursMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_GLPlanAllocation_LaborHoursMeasure
3657,Package,Microsoft.Package,LaborHoursMeasure,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3658,Package\Seq - LaborHours Measures,STOCK:SEQUENCE,Seq - LaborHours Measures,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3659,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual,STOCK:SEQUENCE,Reported_LaborHoursRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3660,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3661,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3662,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3663,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3664,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHoursRegular,,DWBaseIncrementalLoad_LaborHoursMeasure
3665,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3666,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3667,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3668,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3669,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursRegular Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursRegular Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3670,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursRegular Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursRegular Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3671,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3672,Package\Seq - LaborHours Measures\Reported_LaborHoursRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3673,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual,STOCK:SEQUENCE,Reported_LaborSalaryRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3674,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3675,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3676,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3677,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3678,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalaryRegular,,DWBaseIncrementalLoad_LaborHoursMeasure
3679,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalaryRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3680,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3681,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3682,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3683,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryRegular Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryRegular Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3684,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryRegular Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryRegular Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3685,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3686,Package\Seq - LaborHours Measures\Reported_LaborSalaryRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3687,Package\Seq - LaborHours Measures\Reported_Labor_Hours,STOCK:SEQUENCE,Reported_Labor_Hours,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3688,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3689,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3690,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3691,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3692,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Hours,,DWBaseIncrementalLoad_LaborHoursMeasure
3693,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Hours,,DWBaseIncrementalLoad_LaborHoursMeasure
3694,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3695,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3696,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3697,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHours Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHours Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3698,Package\Seq - LaborHours Measures\Reported_Labor_Hours\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHours Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHours Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3699,Package\Seq - LaborHours Measures\Reported_Labor_Hours\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3700,Package\Seq - LaborHours Measures\Reported_Labor_Hours\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3701,Package\Seq - LaborHours Measures\Reported_Labor_Salary,STOCK:SEQUENCE,Reported_Labor_Salary,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3702,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3703,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3704,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3705,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3706,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Salary,,DWBaseIncrementalLoad_LaborHoursMeasure
3707,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Salary,,DWBaseIncrementalLoad_LaborHoursMeasure
3708,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3709,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3710,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3711,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalary Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalary Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3712,Package\Seq - LaborHours Measures\Reported_Labor_Salary\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalary Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalary Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3713,Package\Seq - LaborHours Measures\Reported_Labor_Salary\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3714,Package\Seq - LaborHours Measures\Reported_Labor_Salary\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3715,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare,STOCK:SEQUENCE,Reported_Labor_Salary_Childcare,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3716,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3717,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3718,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3719,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3720,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Salary_Childcare,,DWBaseIncrementalLoad_LaborHoursMeasure
3721,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Salary_Childcare,,DWBaseIncrementalLoad_LaborHoursMeasure
3722,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3723,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3724,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3725,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryChildCare Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryChildCare Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3726,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryChildCare Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryChildCare Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3727,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3728,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Childcare\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3729,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating,STOCK:SEQUENCE,Reported_Labor_Salary_Operating,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3730,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3731,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3732,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3733,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3734,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Salary_Operating,,DWBaseIncrementalLoad_LaborHoursMeasure
3735,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Salary_Operating,,DWBaseIncrementalLoad_LaborHoursMeasure
3736,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3737,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3738,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3739,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryOperating Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryOperating Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3740,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryOperating Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryOperating Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3741,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3742,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Operating\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3743,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program,STOCK:SEQUENCE,Reported_Labor_Salary_Special_Program,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3744,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3745,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3746,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3747,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3748,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Salary_Special_Program,,DWBaseIncrementalLoad_LaborHoursMeasure
3749,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Salary_Special_Program,,DWBaseIncrementalLoad_LaborHoursMeasure
3750,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3751,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3752,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3753,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalarySpecialProgram Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalarySpecialProgram Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3754,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalarySpecialProgram Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalarySpecialProgram Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3755,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3756,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Special_Program\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3757,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training,STOCK:SEQUENCE,Reported_Labor_Salary_Training,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3758,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3759,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3760,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3761,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3762,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Salary_Training,,DWBaseIncrementalLoad_LaborHoursMeasure
3763,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Labor_Salary_Training,,DWBaseIncrementalLoad_LaborHoursMeasure
3764,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3765,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3766,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3767,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryTraining Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryTraining Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3768,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryTraining Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryTraining Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3769,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3770,Package\Seq - LaborHours Measures\Reported_Labor_Salary_Training\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3771,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium,STOCK:SEQUENCE,Reported_Salaries_Overtime_Premium,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3772,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3773,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3774,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3775,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3776,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Salaries_Overtime_Premium,,DWBaseIncrementalLoad_LaborHoursMeasure
3777,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Salaries_Overtime_Premium,,DWBaseIncrementalLoad_LaborHoursMeasure
3778,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3779,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3780,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3781,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\SQL - End ReportedSalariesOvertimePremium Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedSalariesOvertimePremium Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3782,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\Foreach - New or Updated Fiscal Week\SQL - Start ReportedSalariesOvertimePremium Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedSalariesOvertimePremium Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3783,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3784,Package\Seq - LaborHours Measures\Reported_Salaries_Overtime_Premium\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3785,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base,STOCK:SEQUENCE,Reported_Wage_Rate_Base,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3786,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3787,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3788,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3789,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3790,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Wage_Rate_Base,,DWBaseIncrementalLoad_LaborHoursMeasure
3791,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Wage_Rate_Base,,DWBaseIncrementalLoad_LaborHoursMeasure
3792,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3793,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3794,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3795,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\SQL - End ReportedWageRateBase Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedWageRateBase Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3796,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\Foreach - New or Updated Fiscal Week\SQL - Start ReportedWageRateBase Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedWageRateBase Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3797,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3798,Package\Seq - LaborHours Measures\Reported_Wage_Rate_Base\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3799,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual,STOCK:SEQUENCE,Seq - LaborHoursChildcareOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3800,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3801,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3802,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3803,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3804,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursChildcare_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3805,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursChildcare_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3806,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3807,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3808,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3809,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcareOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursChildcareOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3810,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcareOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursChildcareOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3811,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3812,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3813,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target,STOCK:SEQUENCE,Seq - LaborHoursChildcareOvertime_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3814,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3815,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3816,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3817,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3818,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursManagementAndAdmin_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3819,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_tfn_Measure_LaborHoursChildcareOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3820,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3821,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3822,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcareOvertime_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursChildcareOvertime_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3823,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcareOvertime_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursChildcareOvertime_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3824,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3825,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareOvertime_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3826,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual,STOCK:SEQUENCE,Seq - LaborHoursChildcareRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3827,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3828,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3829,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3830,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3831,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursChildcareRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3832,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursChildcareRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3833,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3834,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3835,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3836,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcareRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursChildcareRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3837,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcareRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursChildcareRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3838,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3839,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3840,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target,STOCK:SEQUENCE,Seq - LaborHoursChildcareRegular_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3841,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3842,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3843,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3844,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3845,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursChildcareRegular_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3846,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursChildcareRegular_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3847,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3848,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3849,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcareRegular_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursChildcareRegular_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3850,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcareRegular_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursChildcareRegular_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3851,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3852,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcareRegular_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3853,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual,STOCK:SEQUENCE,Seq - LaborHoursChildcare_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3854,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3855,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3856,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3857,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3858,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursChildcare_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3859,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursChildcare_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3860,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3861,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3862,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3863,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcare_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursChildcare_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3864,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcare_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursChildcare_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3865,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3866,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3867,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target,STOCK:SEQUENCE,Seq - LaborHoursChildcare_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3868,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3869,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3870,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3871,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3872,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursChildcare_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3873,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursChildcare_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3874,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3875,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3876,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursChildcare_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursChildcare_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3877,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursChildcare_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursChildcare_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3878,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3879,Package\Seq - LaborHours Measures\Seq - LaborHoursChildcare_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3880,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual,STOCK:SEQUENCE,Seq - LaborHoursManagementAndAdmin_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3881,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3882,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3883,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3884,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3885,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursManagementAndAdmin_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3886,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursManagementAndAdmin_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3887,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3888,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3889,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3890,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursManagementAndAdmin_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursManagementAndAdmin_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3891,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursManagementAndAdmin_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursManagementAndAdmin_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3892,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3893,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3894,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target,STOCK:SEQUENCE,Seq - LaborHoursManagementAndAdmin_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3895,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3896,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3897,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3898,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3899,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursManagementAndAdmin_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3900,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_tfn_Measure_LaborHoursManagementAndAdmin_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3901,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3902,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3903,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursManagementAndAdmin_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursManagementAndAdmin_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3904,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursManagementAndAdmin_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursManagementAndAdmin_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3905,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3906,Package\Seq - LaborHours Measures\Seq - LaborHoursManagementAndAdmin_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3907,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual,STOCK:SEQUENCE,Seq - LaborHoursOperatingOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3908,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3909,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3910,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3911,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3912,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOperatingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3913,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOperatingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3914,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3915,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3916,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3917,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperatingOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOperatingOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3918,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperatingOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOperatingOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3919,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3920,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3921,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target,STOCK:SEQUENCE,Seq - LaborHoursOperatingOvertime_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3922,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3923,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3924,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3925,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3926,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOperatingOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3927,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOperatingOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3928,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3929,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3930,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperatingOvertime_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOperatingOvertime_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3931,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperatingOvertime_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOperatingOvertime_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3932,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3933,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingOvertime_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3934,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual,STOCK:SEQUENCE,Seq - LaborHoursOperatingRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3935,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3936,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3937,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3938,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3939,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOperatingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3940,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOperatingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3941,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3942,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3943,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3944,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperatingRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOperatingRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3945,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperatingRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOperatingRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3946,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3947,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3948,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target,STOCK:SEQUENCE,Seq - LaborHoursOperatingRegular_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3949,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3950,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3951,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3952,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3953,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOperatingRegular_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3954,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOperatingRegular_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3955,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3956,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3957,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperatingRegular_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOperatingRegular_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3958,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperatingRegular_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOperatingRegular_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3959,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3960,Package\Seq - LaborHours Measures\Seq - LaborHoursOperatingRegular_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3961,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual,STOCK:SEQUENCE,Seq - LaborHoursOperating_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3962,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3963,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3964,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3965,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3966,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOperating_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3967,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOperating_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3968,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3969,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3970,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3971,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperating_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOperating_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3972,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperating_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOperating_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3973,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3974,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3975,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target,STOCK:SEQUENCE,Seq - LaborHoursOperating_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3976,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3977,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3978,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3979,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3980,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOperating_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3981,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOperating_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
3982,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3983,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3984,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOperating_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOperating_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3985,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOperating_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOperating_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
3986,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
3987,Package\Seq - LaborHours Measures\Seq - LaborHoursOperating_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
3988,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual,STOCK:SEQUENCE,Seq - LaborHoursOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3989,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3990,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3991,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
3992,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
3993,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3994,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
3995,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
3996,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3997,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
3998,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
3999,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4000,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4001,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4002,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target,STOCK:SEQUENCE,Seq - LaborHoursOvertime_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4003,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4004,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4005,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4006,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4007,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4008,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4009,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4010,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4011,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursOvertime_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursOvertime_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4012,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursOvertime_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursOvertime_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4013,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4014,Package\Seq - LaborHours Measures\Seq - LaborHoursOvertime_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4015,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual,STOCK:SEQUENCE,Seq - LaborHoursPaidTimeOff_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4016,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4017,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4018,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4019,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4020,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursPaidTimeOff_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4021,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursPaidTimeOff_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4022,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4023,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4024,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4025,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursPaidTimeOff_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursPaidTimeOff_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4026,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursPaidTimeOff_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursPaidTimeOff_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4027,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4028,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4029,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target,STOCK:SEQUENCE,Seq - LaborHoursPaidTimeOff_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4030,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4031,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4032,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4033,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4034,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursPaidTimeOff_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4035,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursPaidTimeOff_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4036,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4037,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4038,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursPaidTimeOff_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursPaidTimeOff_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4039,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursPaidTimeOff_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursPaidTimeOff_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4040,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4041,Package\Seq - LaborHours Measures\Seq - LaborHoursPaidTimeOff_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4042,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual,STOCK:SEQUENCE,Seq - LaborHoursRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4043,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4044,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4045,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4046,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4047,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4048,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4049,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4050,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4051,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4052,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4053,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4054,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4055,Package\Seq - LaborHours Measures\Seq - LaborHoursRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4056,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual,STOCK:SEQUENCE,Seq - LaborHoursSpecialProgramsMemo_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4057,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4058,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4059,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4060,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4061,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4062,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursSpecialProgramsMemo_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4063,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4064,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4065,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4066,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsMemo_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursSpecialProgramsMemo_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4067,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsMemo_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursSpecialProgramsMemo_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4068,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4069,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4070,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target,STOCK:SEQUENCE,Seq - LaborHoursSpecialProgramsMemo_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4071,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4072,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4073,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4074,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4075,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursSpecialProgramsMemo_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4076,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursSpecialProgramsMemo_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4077,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4078,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4079,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsMemo_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursSpecialProgramsMemo_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4080,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsMemo_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursSpecialProgramsMemo_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4081,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4082,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsMemo_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4083,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual,STOCK:SEQUENCE,Seq - LaborHoursSpecialProgramsOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4084,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4085,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4086,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4087,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4088,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursSpecialProgramsOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4089,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursSpecialProgramsOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4090,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4091,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4092,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4093,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursSpecialProgramsOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4094,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursSpecialProgramsOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4095,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4096,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4097,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target,STOCK:SEQUENCE,Seq - LaborHoursSpecialProgramsOvertime_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4098,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4099,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4100,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4101,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4102,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursSpecialProgramsOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4103,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursSpecialProgramsOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4104,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4105,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4106,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsOvertime_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursSpecialProgramsOvertime_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4107,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsOvertime_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursSpecialProgramsOvertime_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4108,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4109,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsOvertime_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4110,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual,STOCK:SEQUENCE,Seq - LaborHoursSpecialProgramsRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4111,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4112,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4113,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4114,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4115,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursSpecialProgramsRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4116,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursSpecialProgramsRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4117,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4118,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4119,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4120,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursSpecialProgramsRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4121,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursSpecialProgramsRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4122,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4123,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4124,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target,STOCK:SEQUENCE,Seq - LaborHoursSpecialProgramsRegular_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4125,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4126,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4127,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4128,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4129,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursSpecialProgramsRegular_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4130,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursSpecialProgramsRegular_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4131,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4132,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4133,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursSpecialProgramsRegular_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursSpecialProgramsRegular_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4134,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursSpecialProgramsRegular_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursSpecialProgramsRegular_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4135,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4136,Package\Seq - LaborHours Measures\Seq - LaborHoursSpecialProgramsRegular_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4137,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual,STOCK:SEQUENCE,Seq - LaborHoursTotalDirect_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4138,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4139,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4140,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4141,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4142,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTotalDirect_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4143,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTotalDirect_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4144,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4145,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4146,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4147,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalDirect_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTotalDirect_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4148,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalDirect_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTotalDirect_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4149,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4150,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4151,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target,STOCK:SEQUENCE,Seq - LaborHoursTotalDirect_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4152,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4153,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4154,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4155,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4156,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTotalDirect_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4157,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTotalDirect_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4158,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4159,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4160,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalDirect_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTotalDirect_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4161,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalDirect_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTotalDirect_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4162,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4163,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalDirect_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4164,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual,STOCK:SEQUENCE,Seq - LaborHoursTotalFringeBenefits_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4165,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4166,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4167,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4168,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4169,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTotalFringeBenefits_Actual_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4170,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTotalFringeBenefits_Actual_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4171,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4172,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4173,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4174,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalFringeBenefits_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTotalFringeBenefits_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4175,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalFringeBenefits_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTotalFringeBenefits_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4176,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4177,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4178,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target,STOCK:SEQUENCE,Seq - LaborHoursTotalFringeBenefits_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4179,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4180,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4181,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4182,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4183,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTotalFringeBenefits_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4184,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTotalFringeBenefits_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4185,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4186,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4187,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalFringeBenefits_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTotalFringeBenefits_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4188,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalFringeBenefits_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTotalFringeBenefits_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4189,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4190,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalFringeBenefits_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4191,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual,STOCK:SEQUENCE,Seq - LaborHoursTotalSalariesandFringeBenefits_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4192,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4193,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4194,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4195,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4196,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTotalSalariesandFringeBenefits_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4197,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTotalSalariesandFringeBenefits_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4198,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4199,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4200,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4201,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalSalariesandFringeBenefits_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTotalSalariesandFringeBenefits_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4202,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalSalariesandFringeBenefits_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTotalSalariesandFringeBenefits_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4203,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4204,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4205,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target,STOCK:SEQUENCE,Seq - LaborHoursTotalSalariesandFringeBenefits_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4206,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4207,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4208,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4209,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4210,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTotalSalariesandFringeBenefits_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4211,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTotalSalariesandFringeBenefits_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4212,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4213,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4214,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTotalSalariesandFringeBenefits_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTotalSalariesandFringeBenefits_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4215,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTotalSalariesandFringeBenefits_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTotalSalariesandFringeBenefits_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4216,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4217,Package\Seq - LaborHours Measures\Seq - LaborHoursTotalSalariesandFringeBenefits_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4218,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual,STOCK:SEQUENCE,Seq - LaborHoursTrainingOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4219,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4220,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4221,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4222,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4223,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTrainingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4224,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTrainingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4225,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4226,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4227,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4228,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTrainingOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTrainingOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4229,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursvOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursvOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4230,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4231,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4232,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target,STOCK:SEQUENCE,Seq - LaborHoursTrainingOvertime_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4233,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4234,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4235,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4236,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4237,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTrainingOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4238,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTrainingOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4239,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4240,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4241,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTrainingOvertime_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTrainingOvertime_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4242,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTrainingOvertime_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTrainingOvertime_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4243,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4244,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingOvertime_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4245,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual,STOCK:SEQUENCE,Seq - LaborHoursTrainingRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4246,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4247,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4248,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4249,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4250,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTrainingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4251,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTrainingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4252,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4253,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4254,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4255,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTrainingRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTrainingRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4256,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTrainingRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTrainingRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4257,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4258,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4259,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target,STOCK:SEQUENCE,Seq - LaborHoursTrainingRegular_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4260,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4261,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4262,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4263,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4264,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTrainingRegular_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4265,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTrainingRegular_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4266,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4267,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4268,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTrainingRegular_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTrainingRegular_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4269,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTrainingRegular_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTrainingRegular_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4270,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4271,Package\Seq - LaborHours Measures\Seq - LaborHoursTrainingRegular_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4272,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual,STOCK:SEQUENCE,Seq - LaborHoursTraining_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4273,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4274,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4275,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4276,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4277,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTraining_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4278,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTraining_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4279,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4280,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4281,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4282,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTraining_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTraining_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4283,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTraining_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTraining_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4284,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4285,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4286,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target,STOCK:SEQUENCE,Seq - LaborHoursTraining_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4287,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4288,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4289,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4290,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4291,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursTraining_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4292,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHoursTraining_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4293,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4294,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4295,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHoursTraining_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursTraining_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4296,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHoursTraining_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHoursTraining_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4297,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4298,Package\Seq - LaborHours Measures\Seq - LaborHoursTraining_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4299,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual,STOCK:SEQUENCE,Seq - LaborHours_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4300,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4301,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4302,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4303,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4304,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHours_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4305,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHours_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4306,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4307,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4308,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4309,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHours_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4310,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborHours_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHours_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4311,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4312,Package\Seq - LaborHours Measures\Seq - LaborHours_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4313,Package\Seq - LaborHours Measures\Seq - LaborHours_Target,STOCK:SEQUENCE,Seq - LaborHours_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4314,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4315,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4316,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4317,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4318,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHours_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4319,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborHours_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4320,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4321,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4322,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - End LaborHours_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHours_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4323,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - Start LaborHours_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHours_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4324,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4325,Package\Seq - LaborHours Measures\Seq - LaborHours_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4326,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual,STOCK:SEQUENCE,Seq - LaborSalaryChildcareOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4327,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4328,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4329,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4330,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4331,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryChildcareOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4332,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryChildcareOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4333,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4334,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4335,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4336,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcareOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryChildcareOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4337,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcareOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryChildcareOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4338,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4339,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcareOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4340,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual,STOCK:SEQUENCE,Seq - LaborSalaryChildcare_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4341,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4342,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4343,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4344,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4345,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryChildcare_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4346,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryChildcare_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4347,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4348,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4349,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4350,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcare_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryChildcare_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4351,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcare_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryChildcare_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4352,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4353,Package\Seq - LaborHours Measures\Seq - LaborSalaryChildcare_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4354,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual,STOCK:SEQUENCE,Seq - LaborSalaryManagementAndAdmin_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4355,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4356,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4357,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4358,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4359,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryManagementAndAdmin_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4360,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryManagementAndAdmin_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4361,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4362,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4363,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4364,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryManagementAndAdmin_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryManagementAndAdmin_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4365,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryManagementAndAdmin_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryManagementAndAdmin_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4366,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4367,Package\Seq - LaborHours Measures\Seq - LaborSalaryManagementAndAdmin_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4368,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual,STOCK:SEQUENCE,Seq - LaborSalaryOperatingOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4369,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4370,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4371,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4372,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4373,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOperatingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4374,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOperatingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4375,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4376,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4377,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4378,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOperatingOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4379,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOperatingOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4380,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4381,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4382,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual,STOCK:SEQUENCE,Seq - LaborSalaryOperatingRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4383,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4384,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4385,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4386,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4387,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOperatingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4388,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOperatingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4389,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4390,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4391,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4392,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOperatingRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4393,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOperatingRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4394,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4395,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperatingRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4396,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual,STOCK:SEQUENCE,Seq - LaborSalaryOperating_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4397,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4398,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4399,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4400,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4401,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOperating_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4402,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOperating_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4403,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4404,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4405,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4406,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperating_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOperating_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4407,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperating_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOperating_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4408,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4409,Package\Seq - LaborHours Measures\Seq - LaborSalaryOperating_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4410,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual,STOCK:SEQUENCE,Seq - LaborSalarySpecialProgramsOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4411,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4412,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4413,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4414,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4415,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalarySpecialProgramsOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4416,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalarySpecialProgramsOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4417,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4418,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4419,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4420,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalarySpecialProgramsOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4421,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalarySpecialProgramsOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4422,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4423,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4424,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual,STOCK:SEQUENCE,Seq - LaborSalarySpecialProgramsRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4425,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4426,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4427,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4428,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4429,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalarySpecialProgramsRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4430,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalarySpecialProgramsRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4431,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4432,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4433,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4434,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalarySpecialProgramsRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4435,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalarySpecialProgramsRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4436,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4437,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4438,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual,STOCK:SEQUENCE,Seq - LaborSalarySpecialPrograms_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4439,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4440,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4441,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4442,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4443,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalarySpecialPrograms_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4444,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalarySpecialPrograms_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4445,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4446,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4447,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4448,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialPrograms_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalarySpecialPrograms_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4449,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialPrograms_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalarySpecialPrograms_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4450,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4451,Package\Seq - LaborHours Measures\Seq - LaborSalarySpecialPrograms_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4452,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual,STOCK:SEQUENCE,Seq - LaborSalaryTotalDirect_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4453,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4454,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4455,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4456,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4457,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTotalDirect_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4458,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTotalDirect_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4459,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4460,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4461,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4462,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalDirect_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTotalDirect_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4463,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalDirect_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTotalDirect_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4464,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4465,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalDirect_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4466,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual,STOCK:SEQUENCE,Seq - LaborSalaryTotalFringeBenefits_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4467,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4468,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4469,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4470,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4471,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTotalFringeBenefits_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4472,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTotalFringeBenefits_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4473,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4474,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4475,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4476,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalFringeBenefits_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTotalFringeBenefits_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4477,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalFringeBenefits_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTotalFringeBenefits_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4478,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4479,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalFringeBenefits_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4480,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual,STOCK:SEQUENCE,Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4481,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4482,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4483,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4484,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4485,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTotalSalariesandFringeBenefits_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4486,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTotalSalariesandFringeBenefits_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4487,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4488,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4489,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4490,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTotalSalariesandFringeBenefits_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTotalSalariesandFringeBenefits_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4491,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTotalSalariesandFringeBenefits_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTotalSalariesandFringeBenefits_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4492,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4493,Package\Seq - LaborHours Measures\Seq - LaborSalaryTotalSalariesandFringeBenefits_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4494,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual,STOCK:SEQUENCE,Seq - LaborSalaryTrainingOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4495,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4496,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4497,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4498,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4499,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTrainingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4500,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTrainingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4501,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4502,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4503,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4504,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTrainingOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4505,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTrainingOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4506,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4507,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4508,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual,STOCK:SEQUENCE,Seq - LaborSalaryTrainingRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4509,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4510,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4511,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4512,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4513,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTrainingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4514,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTrainingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4515,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4516,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4517,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4518,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTrainingRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4519,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTrainingRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4520,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4521,Package\Seq - LaborHours Measures\Seq - LaborSalaryTrainingRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4522,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual,STOCK:SEQUENCE,Seq - LaborSalaryTraining_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4523,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4524,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4525,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4526,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4527,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTraining_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4528,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTraining_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4529,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4530,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4531,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4532,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTraining_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTraining_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4533,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTraining_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTraining_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4534,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4535,Package\Seq - LaborHours Measures\Seq - LaborSalaryTraining_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4536,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual,STOCK:SEQUENCE,Seq - ReportedLaborHoursChildcareOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4537,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4538,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4539,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4540,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4541,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHoursChildcareOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4542,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursChildcareOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4543,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4544,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4545,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4546,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildcareOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursChildcareOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4547,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildcareOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursChildcareOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4548,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4549,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4550,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual,STOCK:SEQUENCE,Seq - ReportedLaborHoursChildcareRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4551,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4552,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4553,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4554,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4555,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHoursChildcareRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4556,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursChildcareRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4557,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4558,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4559,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4560,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildcareRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursChildcareRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4561,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildcareRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursChildcareRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4562,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4563,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcareRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4564,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target,STOCK:SEQUENCE,Seq - ReportedLaborHoursChildcare_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4565,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4566,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4567,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4568,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4569,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborHoursChildcare_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4570,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursChildcare_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4571,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4572,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4573,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildcare_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursChildcare_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4574,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildcare_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursChildcare_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4575,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4576,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursChildcare_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4577,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual,STOCK:SEQUENCE,Seq - ReportedLaborHoursOperatingOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4578,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4579,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4580,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4581,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4582,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHoursOperatingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4583,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursOperatingOvertime_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4584,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4585,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4586,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4587,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursOperatingOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursOperatingOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4588,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursOperatingOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursOperatingOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4589,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4590,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4591,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual,STOCK:SEQUENCE,Seq - ReportedLaborHoursOperatingRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4592,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4593,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4594,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4595,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4596,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHoursOperatingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4597,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursOperatingRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4598,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4599,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4600,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4601,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursOperatingRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursOperatingRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4602,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursOperatingRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursOperatingRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4603,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4604,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperatingRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4605,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual,STOCK:SEQUENCE,Seq - ReportedLaborHoursOperating_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4606,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4607,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4608,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4609,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4610,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHoursOperating_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4611,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursOperating_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4612,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4613,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4614,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4615,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursOperating_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursOperating_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4616,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursOperating_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursOperating_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4617,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4618,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursOperating_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4619,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target,STOCK:SEQUENCE,Seq - ReportedLaborHoursRegular_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4620,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4621,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4622,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4623,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4624,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHoursOvertime_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4625,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHoursRegular_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4626,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4627,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4628,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursRegular_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursRegular_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4629,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursRegular_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursRegular_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4630,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4631,Package\Seq - LaborHours Measures\Seq - ReportedLaborHoursRegular_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4632,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target,STOCK:SEQUENCE,Seq - ReportedLaborHours_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4633,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4634,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4635,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4636,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4637,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborHours_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4638,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborHours_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4639,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4640,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4641,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHours_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHours_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4642,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHours_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHours_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4643,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4644,Package\Seq - LaborHours Measures\Seq - ReportedLaborHours_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4645,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual,STOCK:SEQUENCE,Seq - ReportedLaborSalaryChildcareRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4646,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4647,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4648,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4649,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4650,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalaryChildcareRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4651,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalaryChildcareRegular_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4652,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4653,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4654,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4655,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryChildcareRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryChildcareRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4656,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryChildcareRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryChildcareRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4657,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4658,Package\Seq - LaborHours Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4659,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare,STOCK:SEQUENCE,Seq - Reported_Labor_Hours_Childcare,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4660,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4661,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4662,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4663,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4664,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Reported_Labor_Hours_Childcare,,DWBaseIncrementalLoad_LaborHoursMeasure
4665,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Reported_Labor_Hours_Childcare,,DWBaseIncrementalLoad_LaborHoursMeasure
4666,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4667,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4668,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4669,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborHoursChildCare Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborHoursChildCare Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4670,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborHoursChildCare Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborHoursChildCare Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4671,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4672,Package\Seq - LaborHours Measures\Seq - Reported_Labor_Hours_Childcare\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4673,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual,STOCK:SEQUENCE,Seq - TargetStaffEfficiencyFactor_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4674,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4675,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4676,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4677,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4678,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TargetStaffEfficiencyFactor_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4679,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TargetStaffEfficiencyFactor_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4680,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4681,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4682,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4683,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\SQL - End TargetStaffEfficiencyFactor_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TargetStaffEfficiencyFactor_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4684,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TargetStaffEfficiencyFactor_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TargetStaffEfficiencyFactor_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4685,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4686,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4687,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target,STOCK:SEQUENCE,Seq - TargetStaffEfficiencyFactor_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4688,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4689,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4690,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4691,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4692,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TargetStaffEfficiencyFactor_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4693,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TargetStaffEfficiencyFactor_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4694,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4695,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4696,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\SQL - End TargetStaffEfficiencyFactor_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End TargetStaffEfficiencyFactor_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4697,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\Foreach - New or Updated Fiscal Week\SQL - Start TargetStaffEfficiencyFactor_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TargetStaffEfficiencyFactor_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4698,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4699,Package\Seq - LaborHours Measures\Seq - TargetStaffEfficiencyFactor_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4700,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual,STOCK:SEQUENCE,Seq - TotalLaborHours_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4701,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4702,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4703,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4704,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4705,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalLaborHours_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4706,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalLaborHours_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4707,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4708,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4709,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4710,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborHours_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalLaborHours_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4711,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborHours_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalLaborHours_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4712,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4713,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4714,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target,STOCK:SEQUENCE,Seq - TotalLaborHours_Target,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4715,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4716,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4717,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4718,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4719,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalLaborHours_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4720,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalLaborHours_Target,,DWBaseIncrementalLoad_LaborHoursMeasure
4721,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4722,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Target';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4723,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborHours_Target Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalLaborHours_Target Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4724,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborHours_Target Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalLaborHours_Target Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4725,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4726,Package\Seq - LaborHours Measures\Seq - TotalLaborHours_Target\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4727,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual,STOCK:SEQUENCE,Seq - TotalLaborSalaries_Actual,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4728,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4729,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4730,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborHoursMeasure
4731,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborHoursMeasure
4732,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalLaborSalaries_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4733,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalLaborSalaries_Actual,,DWBaseIncrementalLoad_LaborHoursMeasure
4734,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborHoursMeasure
4735,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4736,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborHoursMeasure
4737,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborSalaries_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalLaborSalaries_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborHoursMeasure
4738,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborSalaries_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalLaborSalaries_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4739,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborHoursMeasure
4740,Package\Seq - LaborHours Measures\Seq - TotalLaborSalaries_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborHour(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborHoursMeasure
4741,Package\SQL - End LaborHoursMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborHoursMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4742,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_LaborHoursMeasure
4743,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborHoursMeasure
4744,Package,Microsoft.Package,LaborSalaryMeasure,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4745,Package\Seq - LaborSalary Measures,STOCK:SEQUENCE,Seq - LaborSalary Measures,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4746,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual,STOCK:SEQUENCE,Seq - LaborSalaryChildcareOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4747,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4748,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4749,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4750,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4751,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryChildcareOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4752,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryChildcareOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4753,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4754,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4755,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4756,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcareOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryChildcareOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4757,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcareOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryChildcareOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4758,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4759,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcareOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4760,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual,STOCK:SEQUENCE,Seq - LaborSalaryChildcare_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4761,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4762,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4763,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4764,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4765,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryChildcare_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4766,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryChildcare_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4767,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4768,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4769,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4770,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryChildcare_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryChildcare_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4771,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryChildcare_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryChildcare_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4772,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4773,Package\Seq - LaborSalary Measures\Seq - LaborSalaryChildcare_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4774,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual,STOCK:SEQUENCE,Seq - LaborSalaryManagementAndAdmin_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4775,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4776,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4777,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4778,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4779,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryManagementAndAdmin_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4780,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryManagementAndAdmin_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4781,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4782,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4783,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4784,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryManagementAndAdmin_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryManagementAndAdmin_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4785,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryManagementAndAdmin_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryManagementAndAdmin_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4786,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4787,Package\Seq - LaborSalary Measures\Seq - LaborSalaryManagementAndAdmin_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4788,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual,STOCK:SEQUENCE,Seq - LaborSalaryOperatingOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4789,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4790,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4791,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4792,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4793,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOperatingOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4794,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOperatingOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4795,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4796,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4797,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4798,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOperatingOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4799,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOperatingOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4800,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4801,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4802,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual,STOCK:SEQUENCE,Seq - LaborSalaryOperatingRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4803,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4804,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4805,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4806,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4807,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOperatingRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4808,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOperatingRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4809,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4810,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4811,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4812,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperatingRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOperatingRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4813,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperatingRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOperatingRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4814,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4815,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperatingRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4816,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual,STOCK:SEQUENCE,Seq - LaborSalaryOperating_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4817,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4818,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4819,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4820,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4821,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOperating_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4822,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOperating_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4823,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4824,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4825,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4826,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOperating_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOperating_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4827,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOperating_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOperating_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4828,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4829,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOperating_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4830,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual,STOCK:SEQUENCE,Seq - LaborSalaryOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4831,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4832,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4833,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4834,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4835,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4836,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4837,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4838,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4839,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4840,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4841,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4842,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4843,Package\Seq - LaborSalary Measures\Seq - LaborSalaryOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4844,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual,STOCK:SEQUENCE,Seq - LaborSalaryPaidTimeOff_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4845,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4846,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4847,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4848,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4849,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryPaidTimeOff_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4850,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryPaidTimeOff_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4851,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4852,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4853,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4854,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPaidTimeOff_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryPaidTimeOff_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4855,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryPaidTimeOff_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryPaidTimeOff_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4856,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4857,Package\Seq - LaborSalary Measures\Seq - LaborSalaryPaidTimeOff_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4858,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual,STOCK:SEQUENCE,Seq - LaborSalaryRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4859,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4860,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4861,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4862,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4863,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4864,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4865,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4866,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4867,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4868,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4869,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4870,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4871,Package\Seq - LaborSalary Measures\Seq - LaborSalaryRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4872,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual,STOCK:SEQUENCE,Seq - LaborSalarySpecialProgramsOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4873,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4874,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4875,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4876,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4877,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalarySpecialProgramsOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4878,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalarySpecialProgramsOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4879,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4880,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4881,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4882,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalarySpecialProgramsOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4883,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalarySpecialProgramsOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4884,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4885,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4886,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual,STOCK:SEQUENCE,Seq - LaborSalarySpecialProgramsRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4887,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4888,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4889,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4890,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4891,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalarySpecialProgramsRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4892,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalarySpecialProgramsRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4893,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4894,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4895,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4896,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialProgramsRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalarySpecialProgramsRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4897,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialProgramsRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalarySpecialProgramsRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4898,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4899,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialProgramsRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4900,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual,STOCK:SEQUENCE,Seq - LaborSalarySpecialPrograms_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4901,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4902,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4903,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4904,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4905,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalarySpecialPrograms_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4906,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalarySpecialPrograms_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4907,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4908,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4909,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4910,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalarySpecialPrograms_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalarySpecialPrograms_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4911,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalarySpecialPrograms_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalarySpecialPrograms_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4912,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4913,Package\Seq - LaborSalary Measures\Seq - LaborSalarySpecialPrograms_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4914,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual,STOCK:SEQUENCE,Seq - LaborSalaryTrainingOvertime_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4915,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4916,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4917,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4918,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4919,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTrainingOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4920,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTrainingOvertime_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4921,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4922,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4923,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4924,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingOvertime_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTrainingOvertime_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4925,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingOvertime_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTrainingOvertime_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4926,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4927,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingOvertime_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4928,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual,STOCK:SEQUENCE,Seq - LaborSalaryTrainingRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4929,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4930,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4931,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4932,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4933,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTrainingRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4934,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTrainingRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4935,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4936,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4937,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4938,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTrainingRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTrainingRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4939,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTrainingRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTrainingRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4940,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4941,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTrainingRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4942,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual,STOCK:SEQUENCE,Seq - LaborSalaryTraining_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4943,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4944,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4945,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4946,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4947,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryTraining_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4948,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalaryTraining_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4949,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4950,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4951,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4952,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryTraining_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryTraining_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4953,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryTraining_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryTraining_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4954,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4955,Package\Seq - LaborSalary Measures\Seq - LaborSalaryTraining_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4956,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual,STOCK:SEQUENCE,Seq - LaborSalary_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4957,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4958,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4959,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4960,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4961,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalary_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4962,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LaborSalary_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4963,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4964,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4965,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4966,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalary_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalary_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4967,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalary_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalary_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4968,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4969,Package\Seq - LaborSalary Measures\Seq - LaborSalary_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4970,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual,STOCK:SEQUENCE,Seq - ReportedLaborSalaryChildcareRegular_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4971,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4972,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4973,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4974,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4975,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReportedLaborSalaryChildcareRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4976,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReportedLaborSalaryChildcareRegular_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4977,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4978,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4979,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4980,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReportedLaborSalaryChildcareRegular_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportedLaborSalaryChildcareRegular_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4981,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReportedLaborSalaryChildcareRegular_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReportedLaborSalaryChildcareRegular_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4982,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4983,Package\Seq - LaborSalary Measures\Seq - ReportedLaborSalaryChildcareRegular_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4984,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual,STOCK:SEQUENCE,Seq - TotalLaborSalaries_Actual,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4985,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4986,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4987,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LaborSalaryMeasure
4988,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LaborSalaryMeasure
4989,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalLaborSalaries_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4990,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalLaborSalaries_Actual,,DWBaseIncrementalLoad_LaborSalaryMeasure
4991,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LaborSalaryMeasure
4992,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4993,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LaborSalaryMeasure
4994,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalLaborSalaries_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalLaborSalaries_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4995,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalLaborSalaries_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalLaborSalaries_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4996,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LaborSalaryMeasure
4997,Package\Seq - LaborSalary Measures\Seq - TotalLaborSalaries_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLaborSalary(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LaborSalaryMeasure
4998,Package\SQL - End LaborSalaryMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
4999,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_LaborSalaryMeasure
5000,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LaborSalaryMeasure
5001,Package,Microsoft.Package,LeadEventMeasure,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5002,Package\Seq - LeadEvent Measures,STOCK:SEQUENCE,Seq - LeadEvent Measures,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5003,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual,STOCK:SEQUENCE,Seq - Enrollment_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5004,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5005,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5006,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5007,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5008,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Enrollment_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5009,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Enrollment_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5010,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5011,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5012,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5013,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - End Enrollment_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End Enrollment_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5014,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Enrollment_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Enrollment_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5015,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5016,Package\Seq - LeadEvent Measures\Seq - Enrollment_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5017,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual,STOCK:SEQUENCE,Seq - InquirytoEnrollment_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5018,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5019,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5020,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5021,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5022,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for InquirytoEnrollment_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5023,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_InquirytoEnrollment_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5024,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5025,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5026,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5027,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - End InquirytoEnrollment_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End InquirytoEnrollment_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5028,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - Start InquirytoEnrollment_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start InquirytoEnrollment_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5029,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5030,Package\Seq - LeadEvent Measures\Seq - InquirytoEnrollment_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5031,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual,STOCK:SEQUENCE,Seq - InquirytoTours_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5032,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5033,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5034,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5035,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5036,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for InquirytoTours_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5037,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_InquirytoTours_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5038,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5039,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5040,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5041,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\SQL - End InquirytoTours_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End InquirytoTours_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5042,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start InquirytoTours_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start InquirytoTours_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5043,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5044,Package\Seq - LeadEvent Measures\Seq - InquirytoTours_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5045,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual,STOCK:SEQUENCE,Seq - Inquiry_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5046,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5047,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5048,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5049,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5050,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Inquiry_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5051,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Inquiry_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5052,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5053,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5054,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5055,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\SQL - End Inquiry_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End Inquiry_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5056,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Inquiry_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Inquiry_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5057,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5058,Package\Seq - LeadEvent Measures\Seq - Inquiry_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5059,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual,STOCK:SEQUENCE,Seq - NoResponse_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5060,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5061,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5062,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5063,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5064,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NoResponse_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5065,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NoResponse_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5066,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5067,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5068,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5069,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\SQL - End NoResponse_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NoResponse_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5070,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NoResponse_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NoResponse_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5071,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5072,Package\Seq - LeadEvent Measures\Seq - NoResponse_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5073,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual,STOCK:SEQUENCE,Seq - SpeedOfResponseLessthan24_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5074,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5075,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5076,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5077,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5078,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for SpeedOfResponseLessthan24_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5079,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_SpeedOfResponseLessthan24_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5080,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5081,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5082,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5083,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\SQL - End SpeedOfResponseLessthan24_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End SpeedOfResponseLessthan24_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5084,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\Foreach - New or Updated Fiscal Week\SQL - Start SpeedOfResponseLessthan24_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start SpeedOfResponseLessthan24_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5085,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5086,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseLessthan24_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5087,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual,STOCK:SEQUENCE,Seq - SpeedOfResponseMorethan24_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5088,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5089,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5090,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5091,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5092,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for SpeedOfResponseMorethan24_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5093,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_SpeedOfResponseMorethan24_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5094,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5095,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5096,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5097,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\SQL - End SpeedOfResponseMorethan24_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End SpeedOfResponseMorethan24_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5098,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\Foreach - New or Updated Fiscal Week\SQL - Start SpeedOfResponseMorethan24_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start SpeedOfResponseMorethan24_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5099,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5100,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseMorethan24_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5101,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual,STOCK:SEQUENCE,Seq - SpeedOfResponseWebInquiries_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5102,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5103,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5104,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5105,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5106,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for SpeedOfResponseWebInquiries_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5107,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_SpeedOfResponseWebInquiries_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5108,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5109,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5110,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5111,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - End SpeedOfResponseWebInquiries_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End SpeedOfResponseWebInquiries_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5112,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start SpeedOfResponseWebInquiries_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start SpeedOfResponseWebInquiries_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5113,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5114,Package\Seq - LeadEvent Measures\Seq - SpeedOfResponseWebInquiries_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5115,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual,STOCK:SEQUENCE,Seq - TotalInquiries_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5116,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5117,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5118,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5119,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5120,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalInquiries_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5121,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalInquiries_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5122,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5123,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5124,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5125,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalInquiries_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalInquiries_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5126,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalInquiries_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalInquiries_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5127,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5128,Package\Seq - LeadEvent Measures\Seq - TotalInquiries_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5129,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual,STOCK:SEQUENCE,Seq - TotalWebInquiries_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5130,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5131,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5132,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5133,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5134,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalInquiries_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5135,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalWebInquiries_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5136,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5137,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5138,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5139,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalInquiries_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalInquiries_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5140,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalInquiries_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalInquiries_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5141,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5142,Package\Seq - LeadEvent Measures\Seq - TotalWebInquiries_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent (NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5143,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual,STOCK:SEQUENCE,Seq - TourstoEnrollment_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5144,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5145,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5146,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5147,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5148,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TourstoEnrollment_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5149,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TourstoEnrollment_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5150,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5151,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5152,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5153,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - End TourstoEnrollment_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TourstoEnrollment_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5154,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TourstoEnrollment_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TourstoEnrollment_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5155,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5156,Package\Seq - LeadEvent Measures\Seq - TourstoEnrollment_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5157,Package\Seq - LeadEvent Measures\Seq - Tour_Actual,STOCK:SEQUENCE,Seq - Tour_Actual,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5158,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5159,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LeadEventMeasure
5160,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LeadEventMeasure
5161,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LeadEventMeasure
5162,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Tour_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5163,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Tour_Actual,,DWBaseIncrementalLoad_LeadEventMeasure
5164,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LeadEventMeasure
5165,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5166,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LeadEventMeasure
5167,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\SQL - End Tour_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End Tour_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LeadEventMeasure
5168,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Tour_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Tour_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5169,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LeadEventMeasure
5170,Package\Seq - LeadEvent Measures\Seq - Tour_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLeadEvent(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LeadEventMeasure
5171,Package\SQL - End LeadEventMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End LeadEventMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5172,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_LeadEventMeasure
5173,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LeadEventMeasure
5174,Package,Microsoft.Package,LifeCycleStatusMeasure,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5175,Package\Seq - LifeCycleStatus Measures,STOCK:SEQUENCE,Seq - LifeCycleStatus Measures,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5176,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual,STOCK:SEQUENCE,Seq - LifeCycleStatusSnapshot_Actual,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5177,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5178,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5179,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5180,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5181,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LifeCycleStatusSnapshot_Actual,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5182,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_LifeCycleStatusSnapshot_Actual,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5183,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5184,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5185,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5186,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\SQL - End LifeCycleStatusSnapshot_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatusSnapshot_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5187,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LifeCycleStatusSnapshot_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LifeCycleStatusSnapshot_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5188,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5189,Package\Seq - LifeCycleStatus Measures\Seq - LifeCycleStatusSnapshot_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5190,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual,STOCK:SEQUENCE,Seq - NSEBTSLost_Actual,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5191,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5192,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5193,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5194,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5195,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NSEBTSLost_Actual,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5196,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NSEBTSLost_Actual,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5197,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5198,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5199,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5200,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\SQL - End NSEBTSLost_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NSEBTSLost_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5201,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NSEBTSLost_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NSEBTSLost_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5202,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5203,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTSLost_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5204,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual,STOCK:SEQUENCE,Seq - NSEBTS_Actual,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5205,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5206,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5207,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5208,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5209,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NSEBTS_Actual,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5210,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NSEBTS_Actual,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5211,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5212,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5213,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5214,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\SQL - End NSEBTS_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NSEBTS_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5215,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NSEBTS_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NSEBTS_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5216,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5217,Package\Seq - LifeCycleStatus Measures\Seq - NSEBTS_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5218,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual,STOCK:SEQUENCE,Seq - Withdrawn_Actual,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5219,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5220,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5221,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5222,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5223,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Withdrawn_Actual,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5224,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Withdrawn_Actual,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5225,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_LifeCycleStatusMeasure
5226,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5227,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5228,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\SQL - End Withdrawn_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End Withdrawn_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5229,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Withdrawn_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Withdrawn_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5230,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5231,Package\Seq - LifeCycleStatus Measures\Seq - Withdrawn_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactLifeCycleStatusSnapshot(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5232,Package\SQL - End LifeCycleStatusMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatusMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5233,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5234,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_LifeCycleStatusMeasure
5235,Package,Microsoft.Package,NetRevenueMeasure,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5236,Package\Seq - NetRevenue Measures,STOCK:SEQUENCE,Seq - NetRevenue Measures,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5237,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual,STOCK:SEQUENCE,Seq - BadDebt_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5238,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5239,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5240,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5241,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5242,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for BadDebt_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5243,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_BadDebt_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5244,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5245,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5246,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5247,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\SQL - End BadDebt_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End BadDebt_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5248,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\Foreach - New or Updated Fiscal Week\SQL - Start BadDebt_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start BadDebt_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5249,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5250,Package\Seq - NetRevenue Measures\Seq - BadDebt_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5251,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual,STOCK:SEQUENCE,Seq - ChargeOffAverage_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5252,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5253,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5254,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5255,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5256,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ChargeOffAverage_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5257,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ChargeOffAverage_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5258,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5259,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5260,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5261,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\SQL - End ChargeOffAverage_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ChargeOffAverage_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5262,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ChargeOffAverage_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ChargeOffAverage_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5263,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5264,Package\Seq - NetRevenue Measures\Seq - ChargeOffAverage_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5265,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual,STOCK:SEQUENCE,Seq - ChargeOff_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5266,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5267,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5268,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5269,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5270,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ChargeOff_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5271,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ChargeOff_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5272,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5273,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5274,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5275,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - End ChargeOff_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ChargeOff_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5276,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ChargeOff_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ChargeOff_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5277,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5278,Package\Seq - NetRevenue Measures\Seq - ChargeOff_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5279,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual,STOCK:SEQUENCE,Seq - DiscountCareSelect_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5280,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5281,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5282,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5283,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5284,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountCareSelect_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5285,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_Discount_Care_Select_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5286,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5287,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5288,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5289,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountCareSelect_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountCareSelect_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5290,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountCareSelect_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountCareSelect_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5291,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5292,Package\Seq - NetRevenue Measures\Seq - DiscountCareSelect_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5293,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual,STOCK:SEQUENCE,Seq - DiscountClosedCenterPriceMatch_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5294,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5295,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5296,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5297,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5298,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountClosedCenterPriceMatch_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5299,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountClosedCenterPriceMatch_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5300,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5301,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5302,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5303,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountClosedCenterPriceMatch_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountClosedCenterPriceMatch_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5304,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountClosedCenterPriceMatch_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountClosedCenterPriceMatch_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5305,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5306,Package\Seq - NetRevenue Measures\Seq - DiscountClosedCenterPriceMatch_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5307,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual,STOCK:SEQUENCE,Seq - DiscountDiscretionaryPctTuitionPP_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5308,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5309,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5310,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5311,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5312,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountDiscretionaryPctTuitionPP_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5313,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountDiscretionaryPctTuitionPP_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5314,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5315,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5316,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5317,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionaryPctTuitionPP_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountDiscretionaryPctTuitionPP_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5318,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionaryPctTuitionPP_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountDiscretionaryPctTuitionPP_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5319,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5320,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPctTuitionPP_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5321,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual,STOCK:SEQUENCE,Seq - DiscountDiscretionaryPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5322,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5323,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5324,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5325,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5326,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountDiscretionaryPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5327,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_DiscountDiscretionaryPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5328,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5329,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5330,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5331,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionaryPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountDiscretionaryPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5332,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionaryPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountDiscretionaryPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5333,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5334,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionaryPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5335,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual,STOCK:SEQUENCE,Seq - DiscountDiscretionary_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5336,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5337,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5338,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5339,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5340,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountDiscretionary_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5341,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountDiscretionary_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5342,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5343,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5344,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5345,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountDiscretionary_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountDiscretionary_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5346,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDiscretionary_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountDiscretionary_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5347,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5348,Package\Seq - NetRevenue Measures\Seq - DiscountDiscretionary_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5349,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual,STOCK:SEQUENCE,Seq - DiscountDMApproved_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5350,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5351,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5352,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5353,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5354,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountDMApproved_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5355,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountDMApproved_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5356,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5357,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5358,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5359,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountDMApproved_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountDMApproved_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5360,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountDMApproved_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountDMApproved_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5361,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5362,Package\Seq - NetRevenue Measures\Seq - DiscountDMApproved_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5363,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual,STOCK:SEQUENCE,Seq - DiscountFamily_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5364,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5365,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5366,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5367,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5368,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountFamily_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5369,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountFamily_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5370,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5371,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5372,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5373,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountFamily_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountFamily_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5374,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFamily_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountFamily_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5375,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5376,Package\Seq - NetRevenue Measures\Seq - DiscountFamily_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5377,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual,STOCK:SEQUENCE,Seq - DiscountFees_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5378,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5379,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5380,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5381,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5382,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountFees_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5383,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountFees_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5384,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5385,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5386,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5387,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountFees_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountFees_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5388,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFees_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountFees_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5389,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5390,Package\Seq - NetRevenue Measures\Seq - DiscountFees_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5391,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual,STOCK:SEQUENCE,Seq - DiscountFreeDay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5392,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5393,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5394,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5395,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5396,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountFreeDay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5397,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_DiscountFreeDay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5398,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5399,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5400,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5401,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountFreeDay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountFreeDay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5402,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountFreeDay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountFreeDay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5403,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5404,Package\Seq - NetRevenue Measures\Seq - DiscountFreeDay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5405,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual,STOCK:SEQUENCE,Seq - DiscountGiftOfEducation_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5406,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5407,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5408,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5409,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5410,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountGiftOfEducation_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5411,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountGiftOfEducation_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5412,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5413,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5414,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5415,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountGiftOfEducation_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountGiftOfEducation_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5416,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountGiftOfEducation_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountGiftOfEducation_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5417,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5418,Package\Seq - NetRevenue Measures\Seq - DiscountGiftOfEducation_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5419,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual,STOCK:SEQUENCE,Seq - DiscountNationalMarketing_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5420,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5421,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5422,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5423,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5424,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountNationalMarketing_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5425,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountNationalMarketing_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5426,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5427,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5428,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5429,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountNationalMarketing_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountNationalMarketing_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5430,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountNationalMarketing_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountNationalMarketing_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5431,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5432,Package\Seq - NetRevenue Measures\Seq - DiscountNationalMarketing_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5433,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual,STOCK:SEQUENCE,Seq - DiscountNationalTuition_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5434,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5435,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5436,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5437,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5438,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountNationalTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5439,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountNationalTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5440,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5441,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5442,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5443,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountNationalTuition_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountNationalTuition_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5444,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountNationalTuition_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountNationalTuition_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5445,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5446,Package\Seq - NetRevenue Measures\Seq - DiscountNationalTuition_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5447,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual,STOCK:SEQUENCE,Seq - DiscountOther_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5448,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5449,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5450,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5451,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5452,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountOther_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5453,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountOther_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5454,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5455,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5456,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5457,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountOther_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountOther_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5458,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountOther_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountOther_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5459,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5460,Package\Seq - NetRevenue Measures\Seq - DiscountOther_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5461,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual,STOCK:SEQUENCE,Seq - DiscountPPPctTuitionPP_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5462,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5463,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5464,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5465,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5466,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountPPPctTuitionPP_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5467,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountPPPctTuitionPP_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5468,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5469,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5470,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5471,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountPPPctTuitionPP_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountPPPctTuitionPP_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5472,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPPPctTuitionPP_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountPPPctTuitionPP_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5473,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5474,Package\Seq - NetRevenue Measures\Seq - DiscountPPPctTuitionPP_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5475,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual,STOCK:SEQUENCE,Seq - DiscountPrimary_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5476,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5477,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5478,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5479,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5480,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountPrimary_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5481,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountPrimary_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5482,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5483,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5484,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5485,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountPrimary_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountPrimary_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5486,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPrimary_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountPrimary_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5487,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5488,Package\Seq - NetRevenue Measures\Seq - DiscountPrimary_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5489,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual,STOCK:SEQUENCE,Seq - DiscountPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5490,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5491,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5492,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5493,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5494,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5495,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5496,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5497,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5498,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5499,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5500,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5501,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5502,Package\Seq - NetRevenue Measures\Seq - DiscountPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5503,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual,STOCK:SEQUENCE,Seq - DiscountPromotion_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5504,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5505,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5506,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5507,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5508,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountPromotion_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5509,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountPromotion_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5510,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5511,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5512,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5513,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountPromotion_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountPromotion_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5514,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountPromotion_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountPromotion_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5515,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5516,Package\Seq - NetRevenue Measures\Seq - DiscountPromotion_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5517,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual,STOCK:SEQUENCE,Seq - DiscountReferral_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5518,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5519,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5520,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5521,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5522,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountReferral_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5523,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountReferral_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5524,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5525,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5526,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5527,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountReferral_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountReferral_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5528,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountReferral_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountReferral_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5529,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5530,Package\Seq - NetRevenue Measures\Seq - DiscountReferral_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5531,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual,STOCK:SEQUENCE,Seq - DiscountSpecialPrograms_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5532,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5533,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5534,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5535,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5536,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountSpecialPrograms_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5537,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountSpecialPrograms_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5538,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5539,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5540,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5541,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountSpecialPrograms_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountSpecialPrograms_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5542,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSpecialPrograms_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountSpecialPrograms_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5543,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5544,Package\Seq - NetRevenue Measures\Seq - DiscountSpecialPrograms_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5545,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual,STOCK:SEQUENCE,Seq - DiscountStaff_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5546,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5547,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5548,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5549,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5550,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountStaff_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5551,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountStaff_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5552,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5553,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5554,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5555,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountStaff_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountStaff_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5556,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountStaff_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountStaff_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5557,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5558,Package\Seq - NetRevenue Measures\Seq - DiscountStaff_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5559,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual,STOCK:SEQUENCE,Seq - DiscountSubsidyPctTuitionSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5560,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5561,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5562,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5563,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5564,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountSubsidyPctTuitionSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5565,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountSubsidyPctTuitionSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5566,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5567,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5568,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5569,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountSubsidyPctTuitionSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountSubsidyPctTuitionSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5570,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSubsidyPctTuitionSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountSubsidyPctTuitionSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5571,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5572,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidyPctTuitionSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5573,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual,STOCK:SEQUENCE,Seq - DiscountSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5574,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5575,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5576,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5577,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5578,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5579,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5580,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5581,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5582,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5583,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5584,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5585,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5586,Package\Seq - NetRevenue Measures\Seq - DiscountSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5587,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual,STOCK:SEQUENCE,Seq - DiscountTieredTuition_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5588,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5589,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5590,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5591,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5592,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountTieredTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5593,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountTieredTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5594,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5595,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5596,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5597,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountTieredTuition_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountTieredTuition_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5598,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTieredTuition_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountTieredTuition_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5599,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5600,Package\Seq - NetRevenue Measures\Seq - DiscountTieredTuition_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5601,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual,STOCK:SEQUENCE,Seq - DiscountTotalTuitionPctTuition_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5602,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5603,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5604,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5605,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5606,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountTotalTuitionPctTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5607,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountTotalTuitionPctTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5608,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5609,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5610,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5611,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotalTuitionPctTuition_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountTotalTuitionPctTuition_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5612,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotalTuitionPctTuition_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountTotalTuitionPctTuition_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5613,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5614,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuitionPctTuition_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5615,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual,STOCK:SEQUENCE,Seq - DiscountTotalTuition_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5616,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5617,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5618,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5619,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5620,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountTotalTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5621,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountTotalTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5622,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5623,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5624,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5625,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotalTuition_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountTotalTuition_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5626,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotalTuition_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountTotalTuition_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5627,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5628,Package\Seq - NetRevenue Measures\Seq - DiscountTotalTuition_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5629,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual,STOCK:SEQUENCE,Seq - DiscountTotal_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5630,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5631,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5632,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5633,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5634,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for DiscountTotal_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5635,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_DiscountTotal_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5636,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5637,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5638,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5639,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\SQL - End DiscountTotal_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End DiscountTotal_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5640,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\Foreach - New or Updated Fiscal Week\SQL - Start DiscountTotal_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DiscountTotal_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5641,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5642,Package\Seq - NetRevenue Measures\Seq - DiscountTotal_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5643,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual,STOCK:SEQUENCE,Seq - FeesEducation_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5644,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5645,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5646,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5647,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5648,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FeesEducation_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5649,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FeesEducation_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5650,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5651,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5652,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5653,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\SQL - End FeesEducation_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FeesEducation_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5654,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FeesEducation_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FeesEducation_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5655,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5656,Package\Seq - NetRevenue Measures\Seq - FeesEducation_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5657,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual,STOCK:SEQUENCE,Seq - FeesRegistration_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5658,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5659,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5660,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5661,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5662,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FeesRegistration_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5663,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FeesRegistration_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5664,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5665,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5666,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5667,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\SQL - End FeesRegistration_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FeesRegistration_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5668,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FeesRegistration_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FeesRegistration_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5669,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5670,Package\Seq - NetRevenue Measures\Seq - FeesRegistration_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5671,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual,STOCK:SEQUENCE,Seq - FeesReservation_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5672,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5673,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5674,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5675,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5676,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FeesReservation_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5677,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FeesReservation_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5678,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5679,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5680,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5681,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\SQL - End FeesReservation_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FeesReservation_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5682,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FeesReservation_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FeesReservation_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5683,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5684,Package\Seq - NetRevenue Measures\Seq - FeesReservation_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5685,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual,STOCK:SEQUENCE,Seq - FeesRevenue_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5686,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5687,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5688,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5689,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5690,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for FeesRevenue_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5691,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_FeesRevenue_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5692,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5693,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5694,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5695,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - End FeesRevenue_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End FeesRevenue_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5696,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - Start FeesRevenue_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FeesRevenue_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5697,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5698,Package\Seq - NetRevenue Measures\Seq - FeesRevenue_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5699,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual,STOCK:SEQUENCE,Seq - LaborSalaryPctNetRevenue_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5700,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5701,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5702,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5703,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5704,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for LaborSalaryPctNetRevenue_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5705,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_LaborSalaryPctNetRevenue_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5706,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5707,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5708,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5709,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - End LaborSalaryPctNetRevenue_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End LaborSalaryPctNetRevenue_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5710,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - Start LaborSalaryPctNetRevenue_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalaryPctNetRevenue_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5711,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5712,Package\Seq - NetRevenue Measures\Seq - LaborSalaryPctNetRevenue_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5713,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual,STOCK:SEQUENCE,Seq - NetAverageRatePrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5714,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5715,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5716,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5717,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5718,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetAverageRatePrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5719,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_NetAverageRatePrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5720,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5721,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5722,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5723,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRatePrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRatePrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5724,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRatePrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRatePrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5725,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5726,Package\Seq - NetRevenue Measures\Seq - NetAverageRatePrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5727,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual,STOCK:SEQUENCE,Seq - NetAverageRateSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5728,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5729,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5730,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5731,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5732,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetAverageRateSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5733,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_NetAverageRateSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5734,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5735,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5736,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5737,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRateSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRateSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5738,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRateSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRateSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5739,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5740,Package\Seq - NetRevenue Measures\Seq - NetAverageRateSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5741,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual,STOCK:SEQUENCE,Seq - NetAverageRate_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5742,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5743,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5744,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5745,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5746,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetAverageRate_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5747,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC -  tfn_Measure_NetAverageRate_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5748,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5749,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5750,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5751,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetAverageRate_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetAverageRate_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5752,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetAverageRate_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetAverageRate_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5753,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5754,Package\Seq - NetRevenue Measures\Seq - NetAverageRate_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5755,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual,STOCK:SEQUENCE,Seq - NetFees_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5756,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5757,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5758,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5759,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5760,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetFees_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5761,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetFees_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5762,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5763,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5764,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5765,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetFees_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetFees_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5766,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetFees_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetFees_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5767,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5768,Package\Seq - NetRevenue Measures\Seq - NetFees_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5769,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual,STOCK:SEQUENCE,Seq - NetRevenue_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5770,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5771,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5772,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5773,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5774,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetRevenue_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5775,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetRevenue_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5776,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5777,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5778,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5779,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetRevenue_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetRevenue_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5780,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetRevenue_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetRevenue_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5781,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5782,Package\Seq - NetRevenue Measures\Seq - NetRevenue_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5783,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual,STOCK:SEQUENCE,Seq - NetSpecialPrograms_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5784,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5785,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5786,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5787,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5788,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetSpecialPrograms_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5789,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetSpecialPrograms_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5790,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5791,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5792,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5793,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetSpecialPrograms_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetSpecialPrograms_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5794,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetSpecialPrograms_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetSpecialPrograms_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5795,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5796,Package\Seq - NetRevenue Measures\Seq - NetSpecialPrograms_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5797,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual,STOCK:SEQUENCE,Seq - NetTuitionPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5798,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5799,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5800,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5801,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5802,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuitionPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5803,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetTuitionPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5804,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5805,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5806,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5807,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetTuitionPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetTuitionPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5808,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetTuitionPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetTuitionPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5809,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5810,Package\Seq - NetRevenue Measures\Seq - NetTuitionPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5811,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual,STOCK:SEQUENCE,Seq - NetTuitionSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5812,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5813,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5814,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5815,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5816,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuitionSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5817,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetTuitionSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5818,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5819,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5820,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5821,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetTuitionSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetTuitionSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5822,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetTuitionSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetTuitionSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5823,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5824,Package\Seq - NetRevenue Measures\Seq - NetTuitionSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5825,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual,STOCK:SEQUENCE,Seq - NetTuition_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5826,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5827,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5828,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5829,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5830,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for NetTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5831,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_NetTuition_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5832,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5833,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5834,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5835,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - End NetTuition_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetTuition_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5836,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\Foreach - New or Updated Fiscal Week\SQL - Start NetTuition_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetTuition_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5837,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5838,Package\Seq - NetRevenue Measures\Seq - NetTuition_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5839,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual,STOCK:SEQUENCE,Seq - Recovery_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5840,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5841,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5842,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5843,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5844,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for Recovery_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5845,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_Recovery_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5846,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5847,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5848,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5849,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\SQL - End Recovery_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End Recovery_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5850,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\Foreach - New or Updated Fiscal Week\SQL - Start Recovery_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Recovery_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5851,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5852,Package\Seq - NetRevenue Measures\Seq - Recovery_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5853,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual,STOCK:SEQUENCE,Seq - RevenueActivities_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5854,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5855,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5856,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5857,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5858,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueActivities_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5859,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueActivities_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5860,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5861,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5862,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5863,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueActivities_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueActivities_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5864,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueActivities_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueActivities_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5865,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5866,Package\Seq - NetRevenue Measures\Seq - RevenueActivities_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5867,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual,STOCK:SEQUENCE,Seq - RevenueEPManagementFee_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5868,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5869,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5870,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5871,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5872,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueEPManagementFee_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5873,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueEPManagementFee_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5874,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5875,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5876,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5877,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueEPManagementFee_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueEPManagementFee_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5878,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueEPManagementFee_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueEPManagementFee_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5879,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5880,Package\Seq - NetRevenue Measures\Seq - RevenueEPManagementFee_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5881,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual,STOCK:SEQUENCE,Seq - RevenueFieldTrips_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5882,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5883,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5884,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5885,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5886,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueFieldTrips_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5887,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueFieldTrips_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5888,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5889,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5890,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5891,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueFieldTrips_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueFieldTrips_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5892,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueFieldTrips_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueFieldTrips_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5893,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5894,Package\Seq - NetRevenue Measures\Seq - RevenueFieldTrips_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5895,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual,STOCK:SEQUENCE,Seq - RevenueHeadStart_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5896,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5897,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5898,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5899,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5900,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueHeadStart_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5901,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueHeadStart_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5902,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5903,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5904,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5905,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueHeadStart_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueHeadStart_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5906,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueHeadStart_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueHeadStart_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5907,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5908,Package\Seq - NetRevenue Measures\Seq - RevenueHeadStart_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5909,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual,STOCK:SEQUENCE,Seq - RevenueKLCStore_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5910,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5911,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5912,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5913,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5914,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueKLCStore_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5915,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueKLCStore_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5916,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5917,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5918,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5919,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueKLCStore_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueKLCStore_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5920,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueKLCStore_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueKLCStore_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5921,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5922,Package\Seq - NetRevenue Measures\Seq - RevenueKLCStore_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5923,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual,STOCK:SEQUENCE,Seq - RevenueLatePayment_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5924,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5925,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5926,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5927,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5928,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueLatePayment_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5929,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueLatePayment_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5930,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5931,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5932,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5933,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueLatePayment_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueLatePayment_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5934,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueLatePayment_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueLatePayment_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5935,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5936,Package\Seq - NetRevenue Measures\Seq - RevenueLatePayment_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5937,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual,STOCK:SEQUENCE,Seq - RevenueLatePickup_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5938,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5939,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5940,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5941,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5942,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueLatePickup_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5943,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueLatePickup_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5944,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5945,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5946,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5947,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueLatePickup_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueLatePickup_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5948,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueLatePickup_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueLatePickup_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5949,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5950,Package\Seq - NetRevenue Measures\Seq - RevenueLatePickup_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5951,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual,STOCK:SEQUENCE,Seq - RevenueMiscandOther_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5952,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5953,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5954,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5955,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5956,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueMiscandOther_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5957,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueMiscandOther_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5958,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5959,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5960,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5961,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueMiscandOther_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueMiscandOther_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5962,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueMiscandOther_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueMiscandOther_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5963,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5964,Package\Seq - NetRevenue Measures\Seq - RevenueMiscandOther_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5965,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual,STOCK:SEQUENCE,Seq - RevenueNationalAccounts_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5966,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5967,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5968,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5969,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5970,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueNationalAccounts_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5971,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueNationalAccounts_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5972,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5973,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5974,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5975,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueNationalAccounts_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueNationalAccounts_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5976,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueNationalAccounts_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueNationalAccounts_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5977,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5978,Package\Seq - NetRevenue Measures\Seq - RevenueNationalAccounts_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5979,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual,STOCK:SEQUENCE,Seq - RevenueOther_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5980,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5981,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5982,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5983,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5984,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueOther_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5985,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueOther_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5986,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5987,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5988,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
5989,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueOther_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueOther_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
5990,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueOther_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueOther_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
5991,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
5992,Package\Seq - NetRevenue Measures\Seq - RevenueOther_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
5993,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual,STOCK:SEQUENCE,Seq - RevenuePrimary_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5994,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
5995,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5996,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
5997,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
5998,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenuePrimary_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
5999,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenuePrimary_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6000,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6001,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6002,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6003,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenuePrimary_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenuePrimary_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6004,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenuePrimary_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenuePrimary_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6005,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6006,Package\Seq - NetRevenue Measures\Seq - RevenuePrimary_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6007,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual,STOCK:SEQUENCE,Seq - RevenueSpecialServices_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6008,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6009,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6010,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6011,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6012,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for RevenueSpecialServices_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6013,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_RevenueSpecialServices_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6014,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6015,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6016,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6017,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\SQL - End RevenueSpecialServices_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End RevenueSpecialServices_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6018,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\Foreach - New or Updated Fiscal Week\SQL - Start RevenueSpecialServices_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start RevenueSpecialServices_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6019,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6020,Package\Seq - NetRevenue Measures\Seq - RevenueSpecialServices_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6021,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual,STOCK:SEQUENCE,Seq - ReverseChargesMemo_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6022,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6023,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6024,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6025,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6026,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for ReverseChargesMemo_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6027,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_ReverseChargesMemo_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6028,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6029,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6030,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6031,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\SQL - End ReverseChargesMemo_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReverseChargesMemo_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6032,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\Foreach - New or Updated Fiscal Week\SQL - Start ReverseChargesMemo_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ReverseChargesMemo_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6033,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6034,Package\Seq - NetRevenue Measures\Seq - ReverseChargesMemo_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6035,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual,STOCK:SEQUENCE,Seq - TotalMiscellaneousIncome_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6036,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6037,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6038,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6039,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6040,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalMiscellaneousIncome_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6041,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalMiscellaneousIncome_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6042,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6043,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6044,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6045,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalMiscellaneousIncome_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalMiscellaneousIncome_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6046,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalMiscellaneousIncome_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalMiscellaneousIncome_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6047,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6048,Package\Seq - NetRevenue Measures\Seq - TotalMiscellaneousIncome_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6049,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual,STOCK:SEQUENCE,Seq - TotalNetMiscAndOtherRevenues_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6050,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6051,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6052,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6053,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6054,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TotalNetMiscAndOtherRevenues_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6055,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TotalNetMiscAndOtherRevenues_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6056,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6057,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6058,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6059,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\SQL - End TotalNetMiscAndOtherRevenues_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TotalNetMiscAndOtherRevenues_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6060,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TotalNetMiscAndOtherRevenues_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TotalNetMiscAndOtherRevenues_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6061,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6062,Package\Seq - NetRevenue Measures\Seq - TotalNetMiscAndOtherRevenues_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6063,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionAdjustmentsPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6064,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6065,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6066,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6067,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6068,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionAdjustmentsPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6069,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionAdjustmentsPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6070,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6071,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6072,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6073,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustmentsPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionAdjustmentsPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6074,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustmentsPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionAdjustmentsPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6075,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6076,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6077,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionAdjustmentsSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6078,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6079,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6080,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6081,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6082,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionAdjustmentsSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6083,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionAdjustmentsSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6084,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6085,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6086,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6087,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustmentsSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionAdjustmentsSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6088,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustmentsSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionAdjustmentsSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6089,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6090,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustmentsSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6091,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual,STOCK:SEQUENCE,Seq - TuitionAdjustments_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6092,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6093,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6094,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6095,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6096,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionAdjustments_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6097,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionAdjustments_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6098,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6099,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6100,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6101,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionAdjustments_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionAdjustments_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6102,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionAdjustments_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionAdjustments_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6103,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6104,Package\Seq - NetRevenue Measures\Seq - TuitionAdjustments_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6105,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual,STOCK:SEQUENCE,Seq - TuitionDiscount_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6106,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6107,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6108,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6109,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6110,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionDiscount_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6111,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionDiscount_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6112,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6113,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6114,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6115,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionDiscount_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionDiscount_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6116,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionDiscount_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionDiscount_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6117,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6118,Package\Seq - NetRevenue Measures\Seq - TuitionDiscount_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6119,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionFivesPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6120,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6121,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6122,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6123,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6124,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFivesPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6125,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFivesPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6126,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6127,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6128,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6129,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFivesPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFivesPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6130,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFivesPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFivesPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6131,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6132,Package\Seq - NetRevenue Measures\Seq - TuitionFivesPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6133,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionFivesSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6134,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6135,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6136,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6137,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6138,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFivesSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6139,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFivesSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6140,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6141,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6142,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6143,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFivesSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFivesSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6144,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFivesSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFivesSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6145,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6146,Package\Seq - NetRevenue Measures\Seq - TuitionFivesSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6147,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual,STOCK:SEQUENCE,Seq - TuitionFives_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6148,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6149,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6150,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6151,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6152,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFives_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6153,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFives_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6154,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6155,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6156,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6157,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFives_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFives_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6158,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFives_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFives_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6159,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6160,Package\Seq - NetRevenue Measures\Seq - TuitionFives_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6161,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionFoursPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6162,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6163,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6164,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6165,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6166,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFoursPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6167,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFoursPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6168,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6169,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6170,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6171,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFoursPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFoursPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6172,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFoursPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFoursPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6173,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6174,Package\Seq - NetRevenue Measures\Seq - TuitionFoursPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6175,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionFoursSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6176,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6177,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6178,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6179,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6180,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFoursSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6181,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFoursSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6182,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6183,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6184,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6185,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFoursSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFoursSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6186,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFoursSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFoursSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6187,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6188,Package\Seq - NetRevenue Measures\Seq - TuitionFoursSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6189,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual,STOCK:SEQUENCE,Seq - TuitionFours_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6190,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6191,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6192,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6193,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6194,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionFours_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6195,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionFours_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6196,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6197,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6198,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6199,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionFours_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionFours_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6200,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionFours_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionFours_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6201,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6202,Package\Seq - NetRevenue Measures\Seq - TuitionFours_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6203,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual,STOCK:SEQUENCE,Seq - TuitionHourlyDropInPP_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6204,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6205,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6206,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6207,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6208,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionHourlyDropInPP_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6209,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionHourlyDropInPP_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6210,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6211,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6212,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6213,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropInPP_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionHourlyDropInPP_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6214,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropInPP_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionHourlyDropInPP_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6215,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6216,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInPP_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6217,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionHourlyDropInSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6218,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6219,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6220,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6221,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6222,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionHourlyDropInSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6223,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionHourlyDropInSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6224,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6225,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6226,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6227,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropInSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionHourlyDropInSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6228,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropInSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionHourlyDropInSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6229,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6230,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropInSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6231,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual,STOCK:SEQUENCE,Seq - TuitionHourlyDropIn_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6232,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6233,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6234,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6235,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6236,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionHourlyDropIn_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6237,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionHourlyDropIn_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6238,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6239,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6240,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6241,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionHourlyDropIn_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionHourlyDropIn_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6242,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionHourlyDropIn_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionHourlyDropIn_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6243,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6244,Package\Seq - NetRevenue Measures\Seq - TuitionHourlyDropIn_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6245,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionInfantPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6246,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6247,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6248,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6249,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6250,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionInfantPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6251,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionInfantPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6252,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6253,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6254,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6255,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfantPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionInfantPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6256,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfantPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionInfantPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6257,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6258,Package\Seq - NetRevenue Measures\Seq - TuitionInfantPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6259,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionInfantSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6260,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6261,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6262,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6263,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6264,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionInfantSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6265,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionInfantSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6266,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6267,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6268,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6269,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfantSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionInfantSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6270,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfantSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionInfantSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6271,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6272,Package\Seq - NetRevenue Measures\Seq - TuitionInfantSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6273,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual,STOCK:SEQUENCE,Seq - TuitionInfant_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6274,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6275,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6276,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6277,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6278,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionInfant_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6279,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionInfant_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6280,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6281,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6282,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6283,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionInfant_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionInfant_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6284,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionInfant_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionInfant_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6285,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6286,Package\Seq - NetRevenue Measures\Seq - TuitionInfant_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6287,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionKindergartenPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6288,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6289,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6290,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6291,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6292,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionKindergartenPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6293,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionKindergartenPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6294,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6295,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6296,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6297,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergartenPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionKindergartenPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6298,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergartenPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionKindergartenPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6299,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6300,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6301,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionKindergartenSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6302,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6303,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6304,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6305,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6306,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionKindergartenSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6307,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionKindergartenSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6308,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6309,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6310,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6311,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergartenSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionKindergartenSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6312,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergartenSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionKindergartenSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6313,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6314,Package\Seq - NetRevenue Measures\Seq - TuitionKindergartenSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6315,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual,STOCK:SEQUENCE,Seq - TuitionKindergarten_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6316,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6317,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6318,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6319,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6320,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionKindergarten_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6321,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionKindergarten_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6322,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6323,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6324,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6325,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionKindergarten_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionKindergarten_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6326,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionKindergarten_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionKindergarten_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6327,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6328,Package\Seq - NetRevenue Measures\Seq - TuitionKindergarten_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6329,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionMultiagePrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6330,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6331,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6332,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6333,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6334,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionMultiagePrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6335,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionMultiagePrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6336,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6337,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6338,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6339,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiagePrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionMultiagePrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6340,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiagePrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionMultiagePrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6341,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6342,Package\Seq - NetRevenue Measures\Seq - TuitionMultiagePrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6343,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionMultiageSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6344,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6345,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6346,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6347,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6348,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionMultiageSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6349,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionMultiageSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6350,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6351,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6352,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6353,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiageSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionMultiageSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6354,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiageSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionMultiageSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6355,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6356,Package\Seq - NetRevenue Measures\Seq - TuitionMultiageSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6357,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual,STOCK:SEQUENCE,Seq - TuitionMultiage_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6358,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6359,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6360,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6361,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6362,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionMultiage_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6363,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionMultiage_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6364,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6365,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6366,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6367,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionMultiage_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionMultiage_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6368,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionMultiage_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionMultiage_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6369,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6370,Package\Seq - NetRevenue Measures\Seq - TuitionMultiage_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6371,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionSchoolagePrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6372,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6373,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6374,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6375,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6376,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionSchoolagePrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6377,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionSchoolagePrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6378,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6379,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6380,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6381,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolagePrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionSchoolagePrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6382,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolagePrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionSchoolagePrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6383,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6384,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolagePrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6385,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionSchoolageSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6386,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6387,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6388,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6389,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6390,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionSchoolageSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6391,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionSchoolageSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6392,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6393,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6394,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6395,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolageSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionSchoolageSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6396,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolageSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionSchoolageSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6397,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6398,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolageSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6399,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual,STOCK:SEQUENCE,Seq - TuitionSchoolage_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6400,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6401,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6402,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6403,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6404,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionSchoolage_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6405,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionSchoolage_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6406,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6407,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6408,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6409,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionSchoolage_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionSchoolage_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6410,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSchoolage_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionSchoolage_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6411,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6412,Package\Seq - NetRevenue Measures\Seq - TuitionSchoolage_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6413,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual,STOCK:SEQUENCE,Seq - TuitionSpecialPrograms_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6414,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6415,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6416,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6417,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6418,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionSpecialPrograms_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6419,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionSpecialPrograms_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6420,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6421,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6422,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6423,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionSpecialPrograms_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionSpecialPrograms_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6424,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionSpecialPrograms_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionSpecialPrograms_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6425,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6426,Package\Seq - NetRevenue Measures\Seq - TuitionSpecialPrograms_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6427,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionThreesPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6428,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6429,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6430,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6431,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6432,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionThreesPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6433,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionThreesPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6434,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6435,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6436,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6437,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionThreesPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionThreesPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6438,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThreesPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionThreesPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6439,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6440,Package\Seq - NetRevenue Measures\Seq - TuitionThreesPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6441,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionThreesSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6442,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6443,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6444,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6445,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6446,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionThreesSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6447,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionThreesSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6448,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6449,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6450,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6451,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionThreesSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionThreesSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6452,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThreesSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionThreesSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6453,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6454,Package\Seq - NetRevenue Measures\Seq - TuitionThreesSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6455,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual,STOCK:SEQUENCE,Seq - TuitionThrees_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6456,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6457,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6458,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6459,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6460,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionThrees_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6461,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionThrees_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6462,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6463,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6464,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6465,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionThrees_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionThrees_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6466,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionThrees_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionThrees_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6467,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6468,Package\Seq - NetRevenue Measures\Seq - TuitionThrees_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6469,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionToddlerPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6470,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6471,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6472,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6473,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6474,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionToddlerPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6475,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionToddlerPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6476,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6477,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6478,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6479,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddlerPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionToddlerPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6480,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddlerPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionToddlerPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6481,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6482,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6483,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionToddlerSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6484,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6485,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6486,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6487,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6488,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionToddlerSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6489,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionToddlerSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6490,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6491,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6492,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6493,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddlerSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionToddlerSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6494,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddlerSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionToddlerSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6495,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6496,Package\Seq - NetRevenue Measures\Seq - TuitionToddlerSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6497,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual,STOCK:SEQUENCE,Seq - TuitionToddler_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6498,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6499,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6500,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6501,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6502,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionToddler_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6503,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionToddler_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6504,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6505,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6506,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6507,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionToddler_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionToddler_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6508,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionToddler_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionToddler_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6509,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6510,Package\Seq - NetRevenue Measures\Seq - TuitionToddler_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6511,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionTotalPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6512,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6513,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6514,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6515,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6516,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTotalPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6517,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTotalPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6518,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6519,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6520,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6521,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotalPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTotalPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6522,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotalPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTotalPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6523,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6524,Package\Seq - NetRevenue Measures\Seq - TuitionTotalPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6525,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionTotalSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6526,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6527,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6528,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6529,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6530,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTotalSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6531,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTotalSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6532,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6533,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6534,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6535,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotalSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTotalSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6536,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotalSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTotalSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6537,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6538,Package\Seq - NetRevenue Measures\Seq - TuitionTotalSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6539,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual,STOCK:SEQUENCE,Seq - TuitionTotal_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6540,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6541,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6542,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6543,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6544,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTotal_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6545,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTotal_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6546,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6547,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6548,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6549,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTotal_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTotal_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6550,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTotal_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTotal_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6551,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6552,Package\Seq - NetRevenue Measures\Seq - TuitionTotal_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6553,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual,STOCK:SEQUENCE,Seq - TuitionTwosPrivatePay_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6554,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6555,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6556,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6557,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6558,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTwosPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6559,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTwosPrivatePay_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6560,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6561,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6562,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6563,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwosPrivatePay_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTwosPrivatePay_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6564,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwosPrivatePay_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTwosPrivatePay_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6565,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6566,Package\Seq - NetRevenue Measures\Seq - TuitionTwosPrivatePay_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6567,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual,STOCK:SEQUENCE,Seq - TuitionTwosSubsidy_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6568,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6569,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6570,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6571,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6572,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTwosSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6573,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTwosSubsidy_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6574,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6575,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6576,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6577,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwosSubsidy_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTwosSubsidy_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6578,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwosSubsidy_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTwosSubsidy_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6579,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6580,Package\Seq - NetRevenue Measures\Seq - TuitionTwosSubsidy_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6581,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual,STOCK:SEQUENCE,Seq - TuitionTwos_Actual,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6582,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6583,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Insert Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6584,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,CNT - Source Count,,DWBaseIncrementalLoad_NetRevenueMeasure
6585,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,,Derived Column,,DWBaseIncrementalLoad_NetRevenueMeasure
6586,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,,DST - BaseWeeklyMeasure for TuitionTwos_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6587,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\DFT - Load BaseWeeklyMeasure,Microsoft.Pipeline,DFT - Load BaseWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,,SRC - tfn_Measure_TuitionTwos_Actual,,DWBaseIncrementalLoad_NetRevenueMeasure
6588,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data,STOCK:SEQUENCE,Seq - Delete Existing Data,,,,,,DWBaseIncrementalLoad_NetRevenueMeasure
6589,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete Data Scenario Data,Microsoft.ExecuteSQLTask,SQL - Delete Data Scenario Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'Actual';
SELECT @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6590,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\Seq - Delete Existing Data\SQL - Delete LY Data,Microsoft.ExecuteSQLTask,SQL - Delete LY Data,,,,,"DELETE 
    FROM dbo.BaseWeeklyMeasure
    WHERE MeasureName = ?
        AND FiscalWeekEndDate = ?
        AND DataScenarioName = 'LY';
SELECT ? + @@ROWCOUNT AS DeleteCount;",DWBaseIncrementalLoad_NetRevenueMeasure
6591,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\SQL - End TuitionTwos_Actual Auditlog,Microsoft.ExecuteSQLTask,SQL - End TuitionTwos_Actual Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?,?,?;",DWBaseIncrementalLoad_NetRevenueMeasure
6592,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\Foreach - New or Updated Fiscal Week\SQL - Start TuitionTwos_Actual Audit Log,Microsoft.ExecuteSQLTask,SQL - Start TuitionTwos_Actual Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6593,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\SQL - Get Last Processed Dates,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Dates,,,,,"DECLARE @LastProcessFiscalWeekNumber int, @LastProcessDate datetime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekNumber = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekNumber, 200001) AS LastProcessFiscalWeekNumber, ISNULL(@LastProcessDate, '1900-01-01') AS LastProcessDate",DWBaseIncrementalLoad_NetRevenueMeasure
6594,Package\Seq - NetRevenue Measures\Seq - TuitionTwos_Actual\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
      JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [f].[EDWCreatedDate] > ?
   GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
UNION
SELECT d.[FiscalWeekNumber] AS DataScenarioFiscalWeekNumber
     , d.[FiscalWeekEndDate] AS DataScenarioFiscalWeekEndDate
     , ISNULL(d_nyr.[FiscalWeekNumber], d.[FiscalWeekNumber] + 100) AS LYFiscalWeekNumber
     , ISNULL(d_nyr.[FiscalWeekEndDate], DATEADD(week, DATEDIFF(week, d.FiscalWeekEndDate, d.FiscalYearEndDate) + d.FiscalWeekOfYearNumber, d.[FiscalWeekEndDate])) AS LYFiscalWeekEndDate
   FROM FactNetRevenue(NOLOCK) AS f
         JOIN DimDate(NOLOCK) AS d
        ON f.DateKey = d.DateKey
      LEFT JOIN DimDate(NOLOCK) AS d_nyr 
        ON d.FiscalWeekOfYearNumber = d_nyr.FiscalWeekOfYearNumber
           AND d.FiscalYearNumber = d_nyr.FiscalYearNumber - 1
           AND d_nyr.FullDate = d_nyr.FiscalWeekEndDate
   WHERE [d].[FiscalWeekNumber] > ?
      GROUP BY d.[FiscalWeekNumber]
     , d.[FiscalWeekEndDate]
  , d.[FiscalYearEndDate]
  , d.[FiscalWeekOfYearNumber]
     , d_nyr.[FiscalWeekNumber]
     , d_nyr.[FiscalWeekEndDate]
   ORDER BY DataScenarioFiscalWeekNumber",DWBaseIncrementalLoad_NetRevenueMeasure
6595,Package\SQL - End NetRevenueMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End NetRevenueMeasure Auditlog,,,,,"Execute spEndAuditLog ?, ?, ?, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6596,"Package\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWBaseIncrementalLoad_NetRevenueMeasure
6597,Package\SQL - Start Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWBaseIncrementalLoad_NetRevenueMeasure
6598,Package,Microsoft.Package,DimARAgencyTypeCSS,,,,,,StagingtoEDWCSS_DimARAgencyTypeCSS
6599,Package\Excecute CSS_Staging to EDW DimARAgencyType load,STOCK:SEQUENCE,Excecute CSS_Staging to EDW DimARAgencyType load,,,,,,StagingtoEDWCSS_DimARAgencyTypeCSS
6600,Package\Excecute CSS_Staging to EDW DimARAgencyType load\Execute spCSS_StagingToEDW_DimARAgencyType,Microsoft.ExecuteSQLTask,Execute spCSS_StagingToEDW_DimARAgencyType,,,,,EXEC dbo.spCSS_StagingToEDW_DimARAgencyType,StagingtoEDWCSS_DimARAgencyTypeCSS
6601,Package,Microsoft.Package,DimDiscountTypeCSS,,,,,,StagingtoEDWCSS_DimDiscountTypeCSS
6602,Package\Execute CSS_Staging To EDW DimDiscountType,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimDiscountType,,,,,,StagingtoEDWCSS_DimDiscountTypeCSS
6603,Package\Execute CSS_Staging To EDW DimDiscountType\SQL - spCSS_StagingTransform_DimDiscountType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingTransform_DimDiscountType,,,,,EXEC dbo.spCSS_StagingTransform_DimDiscountType;,StagingtoEDWCSS_DimDiscountTypeCSS
6604,Package,Microsoft.Package,DimFeeTypeCSS,,,,,,StagingtoEDWCSS_DimFeeTypeCSS
6605,Package\Execute spCSS_StagingToEDW_DimFeeType,STOCK:SEQUENCE,Execute spCSS_StagingToEDW_DimFeeType,,,,,,StagingtoEDWCSS_DimFeeTypeCSS
6606,Package\Execute spCSS_StagingToEDW_DimFeeType\SQL - spCSS_StagingToEDW_DimFeeType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimFeeType,,,,,EXEC dbo.spCSS_StagingToEDW_DimFeeType;,StagingtoEDWCSS_DimFeeTypeCSS
6607,Package,Microsoft.Package,DimMartSponsorCSS,,,,,,StagingtoEDWCSS_DimMartSponsorCSS
6608,Package\DFT - DimStponsorSS,Microsoft.Pipeline,DFT - DimStponsorSS,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingtoEDWCSS_DimMartSponsorCSS
6609,Package\DFT - DimStponsorSS,Microsoft.Pipeline,DFT - DimStponsorSS,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimSponsor,,StagingtoEDWCSS_DimMartSponsorCSS
6610,Package\DFT - DimStponsorSS,Microsoft.Pipeline,DFT - DimStponsorSS,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingtoEDWCSS_DimMartSponsorCSS
6611,Package\DFT - DimStponsorSS,Microsoft.Pipeline,DFT - DimStponsorSS,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - CSS Sponsor,,StagingtoEDWCSS_DimMartSponsorCSS
6612,Package\SQL - Begin DimSponsorCSS ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimSponsorCSS ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingtoEDWCSS_DimMartSponsorCSS
6613,Package\SQL - End DimSponsor ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimSponsor ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingtoEDWCSS_DimMartSponsorCSS
6614,Package\SQL - InsertCount,Microsoft.ExecuteSQLTask,SQL - InsertCount,,,,,"SELECT COUNT(*) AS vInsertCount
FROM dbo.DimSponsor
WHERE ETLJobID = ?",StagingtoEDWCSS_DimMartSponsorCSS
6615,Package,Microsoft.Package,DimMartStudentCSS,,,,,,StagingtoEDWCSS_DimMartStudentCSS
6616,Package\DFT - DimStudentCSS,Microsoft.Pipeline,DFT - DimStudentCSS,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingtoEDWCSS_DimMartStudentCSS
6617,Package\DFT - DimStudentCSS,Microsoft.Pipeline,DFT - DimStudentCSS,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimStudent,,StagingtoEDWCSS_DimMartStudentCSS
6618,Package\DFT - DimStudentCSS,Microsoft.Pipeline,DFT - DimStudentCSS,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingtoEDWCSS_DimMartStudentCSS
6619,Package\DFT - DimStudentCSS,Microsoft.Pipeline,DFT - DimStudentCSS,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Csxstudr,,StagingtoEDWCSS_DimMartStudentCSS
6620,Package\SQL - Begin DimStudentCSS ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimStudentCSS ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingtoEDWCSS_DimMartStudentCSS
6621,Package\SQL - End DimStudent ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimStudent ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingtoEDWCSS_DimMartStudentCSS
6622,Package\SQL - InsertCount,Microsoft.ExecuteSQLTask,SQL - InsertCount,,,,,"SELECT COUNT(*) AS vInsertCount
FROM dbo.DimStudent 
WHERE ETLJobID = ?",StagingtoEDWCSS_DimMartStudentCSS
6623,Package,Microsoft.Package,DimMartTuitionAssistanceProviderCSS,,,,,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
6624,Package\DFT - Insert CSS data,Microsoft.Pipeline,DFT - Insert CSS data,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
6625,Package\DFT - Insert CSS data,Microsoft.Pipeline,DFT - Insert CSS data,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimTuitionAssistanceProvider,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
6626,Package\DFT - Insert CSS data,Microsoft.Pipeline,DFT - Insert CSS data,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
6627,Package\DFT - Insert CSS data,Microsoft.Pipeline,DFT - Insert CSS data,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC- CSS DimTuitionAssistanceProvider,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
6628,Package\SQL - Begin DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimProgram ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
6629,Package\SQL - CSS Insert Count,Microsoft.ExecuteSQLTask,SQL - CSS Insert Count,,,,,SELECT COUNT(1) AS IC FROM  [dbo].[DimTuitionAssistanceProvider] WHERE SourceSystem ='CSS',StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
6630,Package\SQL - End DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimProgram ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
6631,Package,Microsoft.Package,DimPaymentType,,,,,,StagingtoEDWCSS_DimPaymentTypeCSS
6632,Package\Execute CSS_Staging To EDW DimPaymentType load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimPaymentType load,,,,,,StagingtoEDWCSS_DimPaymentTypeCSS
6633,Package\Execute CSS_Staging To EDW DimPaymentType load\SQL - spCSS_StagingToEDW_DimPaymentType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimPaymentType,,,,,EXEC DBO.spCSS_StagingToEDW_DimPaymentType;,StagingtoEDWCSS_DimPaymentTypeCSS
6634,Package,Microsoft.Package,DimProgramCSS,,,,,,StagingtoEDWCSS_DimProgramCSS
6635,Package\Execute CSS_Staging To EDW DimProgram,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimProgram,,,,,,StagingtoEDWCSS_DimProgramCSS
6636,Package\Execute CSS_Staging To EDW DimProgram\SQL - spCSS_StagingTransform_DimProgram,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingTransform_DimProgram,,,,,EXEC dbo.spCSS_StagingTransform_DimProgram;,StagingtoEDWCSS_DimProgramCSS
6637,Package,Microsoft.Package,DimSessionCSS,,,,,,StagingtoEDWCSS_DimSessionCSS
6638,Package\Excecute CSS_staging to EDW DimSession,STOCK:SEQUENCE,Excecute CSS_staging to EDW DimSession,,,,,,StagingtoEDWCSS_DimSessionCSS
6639,Package\Excecute CSS_staging to EDW DimSession\Execute spCSS_StagingToEDW_DimSession,Microsoft.ExecuteSQLTask,Execute spCSS_StagingToEDW_DimSession,,,,,EXEC dbo.spCSS_StagingToEDW_DimSession,StagingtoEDWCSS_DimSessionCSS
6640,Package,Microsoft.Package,DimSponsorCSS,,,,,,StagingtoEDWCSS_DimSponsorCSS
6641,Package\Executes spCSS_StagingToEDW_DimSponsor,STOCK:SEQUENCE,Executes spCSS_StagingToEDW_DimSponsor,,,,,,StagingtoEDWCSS_DimSponsorCSS
6642,Package\Executes spCSS_StagingToEDW_DimSponsor\SQL_spCSS_StagingToEDW_DimSponsor,Microsoft.ExecuteSQLTask,SQL_spCSS_StagingToEDW_DimSponsor,,,,,Execute [dbo].[spCSS_StagingToEDW_DimSponsor],StagingtoEDWCSS_DimSponsorCSS
6643,Package,Microsoft.Package,DimStudentCSS,,,,,,StagingtoEDWCSS_DimStudentCSS
6644,Package\Execute CSS DimStudent EDW load,STOCK:SEQUENCE,Execute CSS DimStudent EDW load,,,,,,StagingtoEDWCSS_DimStudentCSS
6645,Package\Execute CSS DimStudent EDW load\SQL - spCSS_StagingToEDW_DimStudent,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimStudent,,,,,EXEC dbo.spCSS_StagingToEDW_DimStudent,StagingtoEDWCSS_DimStudentCSS
6646,Package,Microsoft.Package,DimTierCSS,,,,,,StagingtoEDWCSS_DimTierCSS
6647,Package\Execute DimTier CCS load to EDW,STOCK:SEQUENCE,Execute DimTier CCS load to EDW,,,,,,StagingtoEDWCSS_DimTierCSS
6648,Package\Execute DimTier CCS load to EDW\SQL - spCSS_StagingToEDW_DimTier,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTier,,,,,EXEC dbo.spCSS_StagingToEDW_DimTier,StagingtoEDWCSS_DimTierCSS
6649,Package,Microsoft.Package,DimTransactionCodeCSS,,,,,,StagingtoEDWCSS_DimTransactionCodeCSS
6650,Package\Execute CSS_Staging To EDW DimTransactionCode load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimTransactionCode load,,,,,,StagingtoEDWCSS_DimTransactionCodeCSS
6651,Package\Execute CSS_Staging To EDW DimTransactionCode load\SQL - spCSS_StagingToEDW_DimTransactionCode,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTransactionCode,,,,,EXEC dbo.spCSS_StagingToEDW_DimTransactionCode;,StagingtoEDWCSS_DimTransactionCodeCSS
6652,Package,Microsoft.Package,DimTuitionAssistanceProviderCSS,,,,,,StagingtoEDWCSS_DimTuitionAssistanceProviderCSS
6653,Package\Execute spCSS_StagingToEDW_DimTuitionAssistanceProvider,STOCK:SEQUENCE,Execute spCSS_StagingToEDW_DimTuitionAssistanceProvider,,,,,,StagingtoEDWCSS_DimTuitionAssistanceProviderCSS
6654,Package\Execute spCSS_StagingToEDW_DimTuitionAssistanceProvider\SRC - spCSS_StagingToEDW_DimTuitionAssistanceProvider,Microsoft.ExecuteSQLTask,SRC - spCSS_StagingToEDW_DimTuitionAssistanceProvider,,,,,EXEC dbo.spCSS_StagingToEDW_DimTuitionAssistanceProvider;,StagingtoEDWCSS_DimTuitionAssistanceProviderCSS
6655,Package,Microsoft.Package,FactFTESnapshotCSS,,,,,,StagingtoEDWCSS_FactFTESnapshotCSS
6656,Package\Execute CSS_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactFTESnapshot load,,,,,,StagingtoEDWCSS_FactFTESnapshotCSS
6657,Package\Execute CSS_Staging To EDW FactFTESnapshot load\Execute spCSS_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo].[spCSS_BatchLoad_StagingToEDW_FactFTESnapshot],StagingtoEDWCSS_FactFTESnapshotCSS
6658,Package,Microsoft.Package,FactLaborHourActual,,,,,,StagingtoEDWCSS_FactLaborHourTarget
6659,Package\Execute CSS_Staging To EDW FactLaborHourTarget,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactLaborHourTarget,,,,,,StagingtoEDWCSS_FactLaborHourTarget
6660,Package\Execute CSS_Staging To EDW FactLaborHourTarget\Execute spCSS_BatchLoad_StagingToEDW_FactLaborHourTarget,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactLaborHourTarget,,,,,EXEC spCSS_BatchLoad_StagingToEDW_FactLaborHourTarget,StagingtoEDWCSS_FactLaborHourTarget
6661,Package,Microsoft.Package,FactLifeCycleStatusSnapshot,,,,,,StagingtoEDWCSS_FactLifeCycleStatusSnapshot
6662,Package\Execute CSS_Staging To EDW FactLifeCycleStatusSnapshot,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactLifeCycleStatusSnapshot,,,,,,StagingtoEDWCSS_FactLifeCycleStatusSnapshot
6663,Package\Execute CSS_Staging To EDW FactLifeCycleStatusSnapshot\Execute spCSS_BatchLoad_StagingToEDW_FactLifeCycleStatusSnapshot,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactLifeCycleStatusSnapshot,,,,,EXEC spCSS_BatchLoad_StagingToEDW_FactLifeCycleStatusSnapshot,StagingtoEDWCSS_FactLifeCycleStatusSnapshot
6664,Package,Microsoft.Package,FactNetRevenueCSS,,,,,,StagingtoEDWCSS_FactNetRevenueCSS
6665,Package\Execute CSS_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute CSS_Staging to EDW FactNetRevenue load,,,,,,StagingtoEDWCSS_FactNetRevenueCSS
6666,Package\Execute CSS_Staging to EDW FactNetRevenue load\Execute spCSS_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC spCSS_BatchLoad_StagingToEDW_FactNetRevenue,StagingtoEDWCSS_FactNetRevenueCSS
6667,Package,Microsoft.Package,BridgeCompanyRollup,,,,,,StagingToEDW_BridgeCompanyRollup
6668,Package\Executes GL_Staging to Staging EDW BRidge Company Rollup,STOCK:SEQUENCE,Executes GL_Staging to Staging EDW BRidge Company Rollup,,,,,,StagingToEDW_BridgeCompanyRollup
6669,Package\Executes GL_Staging to Staging EDW BRidge Company Rollup\SQL_spGL_StagingToEDW_BridgeCompanyRollup,Microsoft.ExecuteSQLTask,SQL_spGL_StagingToEDW_BridgeCompanyRollup,,,,,Execute [dbo].[spGL_StagingToEDW_BridgeCompanyRollup],StagingToEDW_BridgeCompanyRollup
6670,Package,Microsoft.Package,BridgeSecurityPersonHRISGroup,,,,,,StagingToEDW_BridgeSecurityPersonHRISGroup
6671,Package\Executes HR_Staging to Staging EDW BridgeSecurityPersonHRISGroup,STOCK:SEQUENCE,Executes HR_Staging to Staging EDW BridgeSecurityPersonHRISGroup,,,,,,StagingToEDW_BridgeSecurityPersonHRISGroup
6672,Package\Executes HR_Staging to Staging EDW BridgeSecurityPersonHRISGroup\SQL_spHR_StagingToEDW_BridgeSecurityPersonHRISGroup,Microsoft.ExecuteSQLTask,SQL_spHR_StagingToEDW_BridgeSecurityPersonHRISGroup,,,,,Execute [dbo].[spHR_StagingToEDW_BridgeSecurityPersonHRISGroup],StagingToEDW_BridgeSecurityPersonHRISGroup
6673,Package,Microsoft.Package,BridgeSecurityPersonOrg,,,,,,StagingToEDW_BridgeSecurityPersonOrg
6674,Package\Executes HR_Staging to EDW BridgeSecurityPersonOrg,STOCK:SEQUENCE,Executes HR_Staging to EDW BridgeSecurityPersonOrg,,,,,,StagingToEDW_BridgeSecurityPersonOrg
6675,Package\Executes HR_Staging to EDW BridgeSecurityPersonOrg\SQL - Exec spHR_StagingToEDW_BridgeSecurityPersonOrg,Microsoft.ExecuteSQLTask,SQL - Exec spHR_StagingToEDW_BridgeSecurityPersonOrg,,,,,Execute [dbo].[spHR_StagingToEDW_BridgeSecurityPersonOrg],StagingToEDW_BridgeSecurityPersonOrg
6676,Package,Microsoft.Package,CompNonCompStatus,,,,,,StagingToEDW_CompNonCompStatus
6677,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,StagingToEDW_CompNonCompStatus
6678,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,StagingToEDW_CompNonCompStatus
6679,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingToEDW_CompNonCompStatus
6680,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - CompNonCompStatus,,StagingToEDW_CompNonCompStatus
6681,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - vCostCenterCurrent & Date Dim,,StagingToEDW_CompNonCompStatus
6682,Package\SQL - Begin CompNonComp ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin CompNonComp ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",StagingToEDW_CompNonCompStatus
6683,Package\SQL - Delete last 180 days from DW_Mart CompNonCompStatus table,Microsoft.ExecuteSQLTask,SQL - Delete last 180 days from DW_Mart CompNonCompStatus table,,,,,"DELETE FROM CompNonCompStatus
WHERE FiscalWeekEndDate >= ?

Select @@Rowcount as DeleteCount",StagingToEDW_CompNonCompStatus
6684,Package\SQL - End CompNonComp ETL Audit,Microsoft.ExecuteSQLTask,SQL - End CompNonComp ETL Audit,,,,,"Execute spEndAuditLog ?,0,?,?,?;",StagingToEDW_CompNonCompStatus
6685,Package\SQL - Get the FiscalWeekEndDate,Microsoft.ExecuteSQLTask,SQL - Get the FiscalWeekEndDate,,,,,"IF ? ='01/01/1900'  
SELECT MIN(d.FiscalWeekEndDate) AS FiscalWeekEndDate
FROM DimDate d
WHERE ( d.FullDate >= DATEADD( dd, -180, CAST( GETDATE() AS DATE ) ) ) AND ( d.FullDate <= GETDATE() )
ELSE
SELECT MIN(d.FiscalWeekEndDate) AS FiscalWeekEndDate
FROM DimDate d
WHERE ( d.FullDate >= DATEADD(dd, -180, CAST( ? AS DATE) ) ) AND ( d.FullDate <= GETDATE() )",StagingToEDW_CompNonCompStatus
6686,Package,Microsoft.Package,DimAccountSubAccount,,,,,,StagingToEDW_DimAccountSubAccount
6687,Package\Excecute GL_Staging to EDW DimAccountSubAccount load,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimAccountSubAccount load,,,,,,StagingToEDW_DimAccountSubAccount
6688,Package\Excecute GL_Staging to EDW DimAccountSubAccount load\Execute spGL_StagingToEDW_DimAccountSubAccount,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimAccountSubAccount,,,,,EXEC dbo.spGL_StagingToEDW_DimAccountSubAccount,StagingToEDW_DimAccountSubAccount
6689,Package,Microsoft.Package,DimAdjustmentReason,,,,,,StagingToEDW_DimAdjustmentReason
6690,Package\Execute CMS_Staging to EDW DimAdjustmentReason load,STOCK:SEQUENCE,Execute CMS_Staging to EDW DimAdjustmentReason load,,,,,,StagingToEDW_DimAdjustmentReason
6691,Package\Execute CMS_Staging to EDW DimAdjustmentReason load\Execute spCMS_StagingToEDW_DimAdjustmentReason,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimAdjustmentReason,,,,,EXEC dbo.spCMS_StagingToEDW_DimAdjustmentReason,StagingToEDW_DimAdjustmentReason
6692,Package,Microsoft.Package,DimARAgencyType,,,,,,StagingToEDW_DimARAgencyType
6693,Package\Excecute CMS_Staging to EDW DimARAgencyType load,STOCK:SEQUENCE,Excecute CMS_Staging to EDW DimARAgencyType load,,,,,,StagingToEDW_DimARAgencyType
6694,Package\Excecute CMS_Staging to EDW DimARAgencyType load\Execute spCMS_StagingToEDW_DimARAgencyType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimARAgencyType,,,,,EXEC dbo.spCMS_StagingToEDW_DimARAgencyType,StagingToEDW_DimARAgencyType
6695,Package,Microsoft.Package,DimAssessmentType,,,,,,StagingToEDW_DimAssessmentType
6696,Package\Execute HR_Staging to EDW DimAssessmentType load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimAssessmentType load,,,,,,StagingToEDW_DimAssessmentType
6697,Package\Execute HR_Staging to EDW DimAssessmentType load\Execute spHR_StagingToEDW_DimAssessmentType,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimAssessmentType,,,,,EXEC dbo.spHR_StagingToEDW_DimAssessmentType,StagingToEDW_DimAssessmentType
6698,Package,Microsoft.Package,DimAssignmentType,,,,,,StagingToEDW_DimAssignmentType
6699,Package\Execute HR_Staging to EDW DimAssignmentType load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimAssignmentType load,,,,,,StagingToEDW_DimAssignmentType
6700,Package\Execute HR_Staging to EDW DimAssignmentType load\Execute spHR_StagingToEDW_DimAssignmentType,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimAssignmentType,,,,,EXEC dbo.spHR_StagingToEDW_DimAssignmentType,StagingToEDW_DimAssignmentType
6701,Package,Microsoft.Package,DimClassroom,,,,,,StagingToEDW_DimClassroom
6702,Package\Execute CMS_Staging to EDW DimClassroom load,STOCK:SEQUENCE,Execute CMS_Staging to EDW DimClassroom load,,,,,,StagingToEDW_DimClassroom
6703,Package\Execute CMS_Staging to EDW DimClassroom load\Execute spCMS_StagingToEDW_DimClassroom,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimClassroom,,,,,EXEC dbo.spCMS_StagingToEDW_DimClassroom,StagingToEDW_DimClassroom
6704,Package\Execute CSS_Staging to EDW DimClassroom load 1,STOCK:SEQUENCE,Execute CSS_Staging to EDW DimClassroom load 1,,,,,,StagingToEDW_DimClassroom
6705,Package\Execute CSS_Staging to EDW DimClassroom load 1\Execute spCSS_StagingToEDW_DimClassroom,Microsoft.ExecuteSQLTask,Execute spCSS_StagingToEDW_DimClassroom,,,,,EXEC dbo.spCSS_StagingToEDW_DimClassroom,StagingToEDW_DimClassroom
6706,Package,Microsoft.Package,DimCompany,,,,,,StagingToEDW_DimCompany
6707,Package\Excecute GL_Staging to EDW DimCompany load,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimCompany load,,,,,,StagingToEDW_DimCompany
6708,Package\Excecute GL_Staging to EDW DimCompany load\Execute spGL_StagingToEDW_DimCompany,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimCompany,,,,,EXEC spGL_StagingToEDW_DimCompany,StagingToEDW_DimCompany
6709,Package,Microsoft.Package,DimCompanyRollup,,,,,,StagingToEDW_DimCompanyRollup
6710,Package\Executes spGL_StagingToEDW_DimCompanyRollup,STOCK:SEQUENCE,Executes spGL_StagingToEDW_DimCompanyRollup,,,,,,StagingToEDW_DimCompanyRollup
6711,Package\Executes spGL_StagingToEDW_DimCompanyRollup\SQL_spGL_StagingToEDW_DimCompanyRollup,Microsoft.ExecuteSQLTask,SQL_spGL_StagingToEDW_DimCompanyRollup,,,,,Execute [dbo].[spGL_StagingToEDW_DimCompanyRollup],StagingToEDW_DimCompanyRollup
6712,Package,Microsoft.Package,DimComplianceItem,,,,,,StagingToEDW_DimComplianceItem
6713,Package\Execute HR_Staging to EDW DimComplianceItem load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimComplianceItem load,,,,,,StagingToEDW_DimComplianceItem
6714,Package\Execute HR_Staging to EDW DimComplianceItem load\Execute spHR_StagingToEDW_DimComplianceItem,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimComplianceItem,,,,,EXEC [dbo].[spHR_StagingToEDW_DimComplianceItem],StagingToEDW_DimComplianceItem
6715,Package,Microsoft.Package,DimComplianceRating,,,,,,StagingToEDW_DimComplianceRating
6716,Package\Execute HR_Staging to EDW DimComplianceRating load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimComplianceRating load,,,,,,StagingToEDW_DimComplianceRating
6717,Package\Execute HR_Staging to EDW DimComplianceRating load\Execute spHR_StagingToEDW_DimComplianceRating,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimComplianceRating,,,,,EXEC dbo.spHR_StagingToEDW_DimComplianceRating,StagingToEDW_DimComplianceRating
6718,Package,Microsoft.Package,DimCostCenter,,,,,,StagingToEDW_DimCostCenter
6719,Package\Excecute GL_Staging to EDW DimCostCenter load,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimCostCenter load,,,,,,StagingToEDW_DimCostCenter
6720,Package\Excecute GL_Staging to EDW DimCostCenter load\Execute spGL_StagingToEDW_DimCostCenter,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimCostCenter,,,,,EXEC dbo.spGL_StagingToEDW_DimCostCenter,StagingToEDW_DimCostCenter
6721,Package,Microsoft.Package,DimCostCenterType,,,,,,StagingToEDW_DimCostCenterType
6722,Package\Excecute GL_staging to EDW DimCostCenterType load,STOCK:SEQUENCE,Excecute GL_staging to EDW DimCostCenterType load,,,,,,StagingToEDW_DimCostCenterType
6723,Package\Excecute GL_staging to EDW DimCostCenterType load\Execute spGL_StagingToEDW_DimCostCenterType,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimCostCenterType,,,,,EXEC dbo.spGL_StagingToEDW_DimCostCenterType,StagingToEDW_DimCostCenterType
6724,Package,Microsoft.Package,DimCreditmemoType,,,,,,StagingToEDW_DimCreditmemoType
6725,Package\Chnage History,STOCK:SEQUENCE,Chnage History,,,,,,StagingToEDW_DimCreditmemoType
6726,Package\SQL - Execute Staging To EDW DimCreditMemoType load,STOCK:SEQUENCE,SQL - Execute Staging To EDW DimCreditMemoType load,,,,,,StagingToEDW_DimCreditmemoType
6727,Package\SQL - Execute Staging To EDW DimCreditMemoType load\Execute spCMS_StagingToEDW_DimCreditMemoType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimCreditMemoType,,,,,EXEC dbo.spCMS_StagingToEDW_DimCreditMemoType,StagingToEDW_DimCreditmemoType
6728,Package,Microsoft.Package,DimDataScenario,,,,,,StagingToEDW_DimDataScenario
6729,Package\SQL - End DimDataScenario Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimDataScenario Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimDataScenario
6730,Package\SQL - Get Deleted Count,Microsoft.ExecuteSQLTask,SQL - Get Deleted Count,,,,," SELECT COUNT(1) AS DeleteCount 
From dbo.DimDataScenario",StagingToEDW_DimDataScenario
6731,Package\SQL - Insert data into DimDtaScenario,Microsoft.ExecuteSQLTask,SQL - Insert data into DimDtaScenario,,,,,"WITH DataScenario
     AS (
     SELECT 1 AS Id,
            'Actual' AS DataScenarioName,
            'Actual' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'A' AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 2 AS Id,
            'Plan' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'B' AS GLActualFlag,
            1101 AS GLBudgetVersionID
     UNION
     SELECT 3 AS Id,
            'Plan Var' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 4 AS Id,
            'Plan Var %' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 5 AS Id,
            'Forecast' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'B' AS GLActualFlag,
            1181 AS GLBudgetVersionID
     UNION
     SELECT 6 AS Id,
            'Forecast Var' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 7 AS Id,
            'Forecast Var %' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 8 AS Id,
            'Target' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 9 AS Id,
            'Target Var' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 10 AS Id,
            'Target Var %' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionIDUNION
     UNION
     SELECT 11 AS Id,
            'LY' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 12 AS Id,
            'LY Var' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 13 AS Id,
            'LY Var %' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID)
     INSERT INTO [dbo].[DimDataScenario]
     ([DataScenarioName],
      [DataScenarioType],
      [DataScenarioSubtype],
      [GLActualFlag],
      [GLBudgetVersionID],
      [EffectiveFrom],
      [EffectiveTo],
      [ETLJobID]
     )
            SELECT COALESCE(DataScenarioName, 'Unknown Scenario') AS DataScenarioName,
                   COALESCE(DataScenarioType, 'Unknown Scenario Type') AS DataScenarioType,
                   COALESCE(DataScenarioSubtype, 'Unknown Scenario Subtype') AS DataScenarioSubtype,
                   GLActualFlag,
                   GLBudgetVersionID,
                   '1900-01-01',
                   '12/31/9999 23:59:59.999',
                   ?
            FROM DataScenario
            ORDER BY Id;
SELECT @@ROWCOUNT + 1 AS SourceCount;
",StagingToEDW_DimDataScenario
6732,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"DBCC CHECKIDENT('[DimDataScenario]', RESEED, 1);
SET IDENTITY_INSERT dbo.DimDataScenario ON;
INSERT INTO [dbo].[DimDataScenario]
([DataScenarioKey],
 [DataScenarioName],
 [DataScenarioType],
 [DataScenarioSubtype],
 [GLActualFlag],
 [GLBudgetVersionID],
 [Deleted],
 [EffectiveFrom],
 [EffectiveTo],
 [ETLJobID]
)
       SELECT-1,
             'Unknown Scenario',
             'Unknown Scenario Type',
             'Unknown Scenario Subtype',
             NULL,
             NULL,
             NULL,
             '1900-01-01',
             '12/31/9999 23:59:59.999',
             ?
       UNION
       SELECT-2,
             'Not Applicable Scenario',
             'Not Applicable Scenario Type',
             'Not Applicable Scenario Subtype',
             NULL,
             NULL,
             NULL,
             '1900-01-01',
             '12/31/9999 23:59:59.999',
             ?;
SET IDENTITY_INSERT dbo.DimDataScenario OFF;",StagingToEDW_DimDataScenario
6733,Package\SQL - Start DimDataScenario Auditlog,Microsoft.ExecuteSQLTask,SQL - Start DimDataScenario Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimDataScenario
6734,Package\SQL - Truncate DimDataScenario,Microsoft.ExecuteSQLTask,SQL - Truncate DimDataScenario,,,,, TRUNCATE TABLE dbo.DimDataScenario,StagingToEDW_DimDataScenario
6735,Package,Microsoft.Package,DimDate,,,,,,StagingToEDW_DimDate
6736,Package\Excecute GL_staging to EDW DimDate load,STOCK:SEQUENCE,Excecute GL_staging to EDW DimDate load,,,,,,StagingToEDW_DimDate
6737,Package\Excecute GL_staging to EDW DimDate load\Execute spGL_StagingToEDW_DimDate,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimDate,,,,,EXEC dbo.spGL_StagingToEDW_DimDate,StagingToEDW_DimDate
6738,Package,Microsoft.Package,DimDate_DM,,,,,,StagingToEDW_DimDate_DM
6739,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimDate,,StagingToEDW_DimDate_DM
6740,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,StagingToEDW_DimDate_DM
6741,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,StagingToEDW_DimDate_DM
6742,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_DimDate_DM
6743,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - SQL Command,,StagingToEDW_DimDate_DM
6744,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,," 

DELETE FROM [dbo].[DimDate]
             WHERE [DateKey] < 0;


             INSERT INTO [dbo].[DimDate]
             ([DateKey],
              [FullDate],
		    [FiscalWeekNumber],
		    [FiscalWeekName],
		    [FiscalWeekStartDateKey],
              [FiscalWeekEndDateKey],
              [HolidayName],
              [HolidayFiscalWeekFlag],
             [FiscalDayNumber],
             [FiscalDayOfWeekNumber],
            [FiscalDayOfPeriodNumber],
            [FiscalDayOfQuarterNumber],
            [FiscalDayOfYearNumber],
              [FiscalWeekOfPeriodNumber],
              [FiscalWeekOfPeriodName],
              [FiscalWeekOfQuarterNumber],
              [FiscalWeekOfQuarterName],
              [FiscalWeekOfYearNumber],
              [FiscalWeekOfYearName],
              [FiscalWeekSequenceNumber],
              [FiscalWeekStartDate],
              [FiscalWeekEndDate],
              [FiscalPeriodNumber],
              [FiscalPeriodName],
              [FiscalPeriodType],
              [FiscalPeriodOfYearNumber],
              [FiscalPeriodOfYearName],
              [FiscalPeriodSequenceNumber],
              [FiscalPeriodStartDate],
              [FiscalPeriodEndDate],
              [FiscalQuarterNumber],
              [FiscalQuarterName],
              [FiscalQuarterOfYearNumber],
              [FiscalQuarterOfYearName],
              [FiscalQuarterSequenceNumber],
              [FiscalQuarterStartDate],
              [FiscalQuarterEndDate],
              [FiscalYearNumber],
              [FiscalYearName],
              [FiscalYearStartDate],
		    [FiscalYearEndDate],
		    [EffectiveFrom],
		    [EffectiveTo],
		    [RowStatus],
		    [ETLJobID]
              )
                    SELECT-1, --[DateKey]
                          '19000101', --[FullDate]
					 -1, --[FiscalWeekNumber]
                          'Unknown Fiscal Week', --[FiscalWeekName]
					 -1,   ---[FiscalWeekStartDateKey]
					 -1,   ---[FiscalWeekEndDateKey]
                          'Unknown Holiday', --[HolidayName]
                          'Unknown Holiday Fiscal Week', --[HolidayFiscalWeekFlag]
						  -1,--- [FiscalDayNumber] 
	                      -1, ---[FiscalDayOfWeekNumber] 
	                      -1, ----[FiscalDayOfPeriodNumber] 
	                      -1, ---[FiscalDayOfQuarterNumber] 
	                      -1, ---[FiscalDayOfYearNumber] 
                          -1, --[FiscalWeekOfPeriodNumber]
                          'Unknown Fiscal Week of Period', --[FiscalWeekOfPeriodName]
                          -1, --[FiscalWeekOfQuarterNumber]
                          'Unknown Fiscal Week of Quarter', --[FiscalWeekOfQuarterName]
                          -1, --[FiscalWeekOfYearNumber]
                          'Unknown Fiscal Week of Year', --[FiscalWeekOfYearName]
                          -1, --[FiscalWeekSequenceNumber]
                          '19000101', --[FiscalWeekStartDate]
                          '19000101', --[FiscalWeekEndDate]
                          -1, --[FiscalPeriodNumber]
                          'Unknown Fiscal Period', --[FiscalPeriodName]
                          'Unknown', --[FiscalPeriodType]
                          -1, --[FiscalPeriodOfYearNumber]
                          'Unknown Fiscal Period of Year', --[FiscalPeriodOfYearName]
                          -1, --[FiscalPeriodSequenceNumber]
                          '19000101', --[FiscalPeriodStartDate]
                          '19000101', --[FiscalPeriodEndDate]
                          -1, --[FiscalQuarterNumber]
                          'Unknown Fiscal Quarter', --[FiscalQuarterName]
                          -1, --[FiscalQuarterOfYearNumber]
                          'Unknown Fiscal Quarter of Year', --[FiscalQuarterOfYearName]
                          -1, --[FiscalQuarterSequenceNumber]
                          '19000101', --[FiscalQuarterStartDate]
                          '19000101', --[FiscalQuarterEndDate]
                          -1, --[FiscalYearNumber]
                          'Unknown Fiscal Year', --[FiscalYearName]
                          '19000101', --[FIscalYearStartDate]
                          '19000101', --[FiscalYearEndDate]
					 '1900-01-01' , --[EffectiveFrom]
					 '12/31/9999 23:59:59.999', ---- [EffectiveTo]
					 'Active', ---RowStatus
					 ?   ---ETLJobID
                          
                    UNION
                    SELECT-2, --[DateKey]
                          '19000102', --[FullDate]
                          -2, --[FiscalWeekNumber]
                          'Not Applicable Fiscal Week', --[FiscalWeekName]
					 -2, --- [FiscalWeekStartDateKey]
                          -2, --- [FiscalWeekEndDateKey]
                          'Not Applicable Holiday', --[HolidayName]
                          'Not Applicable Holiday Fiscal Week', --[HolidayFiscalWeekFlag]
						  -2,--- [FiscalDayNumber] 
	                      -2, ---[FiscalDayOfWeekNumber] 
	                      -2, ----[FiscalDayOfPeriodNumber] 
	                      -2, ---[FiscalDayOfQuarterNumber] 
	                      -2, ---[FiscalDayOfYearNumber] 
                          -2, --[FiscalWeekOfPeriodNumber]
                          'Not Applicable Fiscal Week of Period', --[FiscalWeekOfPeriodName]
                          -2, --[FiscalWeekOfQuarterNumber]
                          'Not Applicable Fiscal Week of Quarter', --[FiscalWeekOfQuarterName]
                          -2, --[FiscalWeekOfYearNumber]
                          'Not Applicable Fiscal Week of Year', --[FiscalWeekOfYearName]
                          -2, --[FiscalWeekSequenceNumber]
                          '19000102', --[FiscalWeekStartDate]
                          '19000102', --[FiscalWeekEndDate]
                          -2, --[FiscalPeriodNumber]
                          'Not Applicable Fiscal Period', --[FiscalPeriodName]
                          'N/A', --[FiscalPeriodType]
                          -2, --[FiscalPeriodOfYearNumber]
                          'Not Applicable Fiscal Period of Year', --[FiscalPeriodOfYearName]
                          -2, --[FiscalPeriodSequenceNumber]
                          '19000102', --[FiscalPeriodStartDate]
                          '19000102', --[FiscalPeriodEndDate]
                          -2, --[FiscalQuarterNumber]
                          'Not Applicable Fiscal Quarter', --[FiscalQuarterName]
                          -2, --[FiscalQuarterOfYearNumber]
                          'Not Applicable Fiscal Quarter of Year', --[FiscalQuarterOfYearName]
                          -2, --[FiscalQuarterSequenceNumber]
                          '19000102', --[FiscalQuarterStartDate]
                          '19000102', --[FiscalQuarterEndDate]
                          -2, --[FiscalYearNumber]
                          'Not Applicable Fiscal Year', --[FiscalYearName]
                          '19000102', --[FIscalYearStartDate]
                          '19000102', --[FiscalYearEndDate]
                           '1900-01-02', --[EffectiveFrom]
					  '12/31/9999 23:59:59.999', ---- [EffectiveTo]
					 'Active', ---RowStatus;
                           ? --ETLJobID
           ",StagingToEDW_DimDate_DM
6745,Package,Microsoft.Package,DimDiscountType,,,,,,StagingToEDW_DimDiscountType
6746,Package\Excecute CMS_staging to EDW DimDiscountType,STOCK:SEQUENCE,Excecute CMS_staging to EDW DimDiscountType,,,,,,StagingToEDW_DimDiscountType
6747,Package\Excecute CMS_staging to EDW DimDiscountType\Execute spCMS_StagingToEDW_DimDiscountType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimDiscountType,,,,,EXEC dbo.spCMS_StagingToEDW_DimDiscountType,StagingToEDW_DimDiscountType
6748,Package,Microsoft.Package,DimFeeType,,,,,,StagingToEDW_DimFeeType
6749,Package\Execute CMS_Staging to EDW DimFeeType load,STOCK:SEQUENCE,Execute CMS_Staging to EDW DimFeeType load,,,,,,StagingToEDW_DimFeeType
6750,Package\Execute CMS_Staging to EDW DimFeeType load\Execute spCMS_StagingToEDW_DimFeeType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimFeeType,,,,,EXEC dbo.spCMS_StagingToEDW_DimFeeType,StagingToEDW_DimFeeType
6751,Package,Microsoft.Package,DimHRUser,,,,,,StagingToEDW_DimHRUser
6752,Package\Executes spHR_StagingToEDW_DimHRUser,STOCK:SEQUENCE,Executes spHR_StagingToEDW_DimHRUser,,,,,,StagingToEDW_DimHRUser
6753,Package\Executes spHR_StagingToEDW_DimHRUser\SQL_spHR_StagingToEDW_DimHRUser,Microsoft.ExecuteSQLTask,SQL_spHR_StagingToEDW_DimHRUser,,,,,Exec [dbo].[spHR_StagingToEDW_DimHRUser],StagingToEDW_DimHRUser
6754,Package,Microsoft.Package,DimInvoiceType,,,,,,StagingToEDW_DimInvoiceType
6755,Package\Excecute CMS_staging to EDW DimInvoiceType,STOCK:SEQUENCE,Excecute CMS_staging to EDW DimInvoiceType,,,,,,StagingToEDW_DimInvoiceType
6756,Package\Excecute CMS_staging to EDW DimInvoiceType\Execute spCMS_StagingToEDW_DimInvoiceType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimInvoiceType,,,,,EXEC dbo.spCMS_StagingToEDW_DimInvoiceType,StagingToEDW_DimInvoiceType
6757,Package,Microsoft.Package,DimLead,,,,,,StagingToEDW_DimLead
6758,Package\Execute SalesForce_Staging to EDW DimLead load,STOCK:SEQUENCE,Execute SalesForce_Staging to EDW DimLead load,,,,,,StagingToEDW_DimLead
6759,Package\Execute SalesForce_Staging to EDW DimLead load\Execute spSalesForce_StagingToEDW_DimLead,Microsoft.ExecuteSQLTask,Execute spSalesForce_StagingToEDW_DimLead,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimLead,StagingToEDW_DimLead
6760,Package,Microsoft.Package,DimLeadEventType,,,,,,StagingToEDW_DimLeadEventType
6761,Package\Execute DimLeadEventType load,STOCK:SEQUENCE,Execute DimLeadEventType load,,,,,,StagingToEDW_DimLeadEventType
6762,Package\Execute DimLeadEventType load\SQL - spBING_EDW_Generate_DimLeadEventType,Microsoft.ExecuteSQLTask,SQL - spBING_EDW_Generate_DimLeadEventType,,,,,EXEC dbo.spBING_EDW_Generate_DimLeadEventType,StagingToEDW_DimLeadEventType
6763,Package,Microsoft.Package,DimLeadType,,,,,,StagingToEDW_DimLeadType
6764,Package\Execute SalesForce_Staging to EDW DimLeadType load,STOCK:SEQUENCE,Execute SalesForce_Staging to EDW DimLeadType load,,,,,,StagingToEDW_DimLeadType
6765,Package\Execute SalesForce_Staging to EDW DimLeadType load\Execute spSalesForce_StagingToEDW_DimLeadType,Microsoft.ExecuteSQLTask,Execute spSalesForce_StagingToEDW_DimLeadType,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimLeadType,StagingToEDW_DimLeadType
6766,Package,Microsoft.Package,DimLeaveReason,,,,,,StagingToEDW_DimLeaveReason
6767,Package\Execute HR_Staging to EDW DimLeaveReason load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimLeaveReason load,,,,,,StagingToEDW_DimLeaveReason
6768,Package\Execute HR_Staging to EDW DimLeaveReason load\Execute spHR_StagingToEDW_DimLeaveReason,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimLeaveReason,,,,,EXEC dbo.spHR_StagingToEDW_DimLeaveReason,StagingToEDW_DimLeaveReason
6769,Package,Microsoft.Package,DimLeaveType,,,,,,StagingToEDW_DimLeaveType
6770,Package\Execute HR_Staging to EDW DimLeaveType load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimLeaveType load,,,,,,StagingToEDW_DimLeaveType
6771,Package\Execute HR_Staging to EDW DimLeaveType load\Execute spHR_StagingToEDW_DimLeaveType,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimLeaveType,,,,,EXEC [dbo].[spHR_StagingToEDW_DimLeaveType] ,StagingToEDW_DimLeaveType
6772,Package,Microsoft.Package,DimLifecycleStatus,,,,,,StagingToEDW_DimLifecycleStatus
6773,Package\SQL - End DimLifecycleStatus Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimLifecycleStatus Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimLifecycleStatus
6774,Package\SQL - Get Deleted Count,Microsoft.ExecuteSQLTask,SQL - Get Deleted Count,,,,," SELECT COUNT(1) AS DeleteCount 
From dbo.DimLifecycleStatus",StagingToEDW_DimLifecycleStatus
6775,Package\SQL - Insert data into DimLifecycleStatus,Microsoft.ExecuteSQLTask,SQL - Insert data into DimLifecycleStatus,,,,,"SET IDENTITY_INSERT dbo.DimLifecycleStatus ON;

WITH LifecycleStatus
                  AS (
                  SELECT-1 AS LifecycleStatusKey,
                        'Unknown Lifecycle Status' AS LifecycleStatusName,
	        'A' AS RowStatus
                  UNION
                  SELECT-2 AS LifecycleStatusKey,
                        'Not Applicable Lifecycle Status' AS LifecycleStatusName,
	        'A' AS RowStatus
                  UNION
                  SELECT 1 AS LifecycleStatusKey,
                         'Pre-Enrolled (New)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 2 AS LifecycleStatusKey,
                         'Pre-Enrolled (Existing)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 3 AS LifecycleStatusKey,
                         'New' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 4 AS LifecycleStatusKey,
                         'Transferred' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 5 AS LifecycleStatusKey,
                         'Enrolled' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 6 AS LifecycleStatusKey,
                         'Reserved' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 7 AS LifecycleStatusKey,
                         'At-Risk (Disenrollment)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 8 AS LifecycleStatusKey,
                         'At-Risk (A/R)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 9 AS LifecycleStatusKey,
                         'Re-Enrolled (Short Term)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 10 AS LifecycleStatusKey,
                         'Re-Enrolled (Long Term)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 11 AS LifecycleStatusKey,
                         'Withdrawing' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 12 AS LifecycleStatusKey,
                         'Withdrawn' AS LifecycleStatusName,
	         'A' AS RowStatus)
                  INSERT INTO dbo.DimLifecycleStatus
                  ([LifecycleStatusKey],
                   [LifecycleStatusName],
	   [RowStatus],
                   [ETLJobID]
                  )
                         SELECT LifecycleStatusKey,
                                LifecycleStatusName,
                                RowStatus,
		?
                         FROM LifecycleStatus;

SELECT @@ROWCOUNT  AS SourceCount;

SET IDENTITY_INSERT dbo.DimLifecycleStatus OFF;",StagingToEDW_DimLifecycleStatus
6776,Package\SQL - Start DimLifecycleStatus Auditlog,Microsoft.ExecuteSQLTask,SQL - Start DimLifecycleStatus Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",StagingToEDW_DimLifecycleStatus
6777,Package\SQL - Truncate DimLifecycleStatus,Microsoft.ExecuteSQLTask,SQL - Truncate DimLifecycleStatus,,,,, TRUNCATE TABLE dbo.DimLifecycleStatus,StagingToEDW_DimLifecycleStatus
6778,Package,Microsoft.Package,DimLocation,,,,,,StagingToEDW_DimLocation
6779,Package\Excecute HR_Staging to EDW DimLocation load,STOCK:SEQUENCE,Excecute HR_Staging to EDW DimLocation load,,,,,,StagingToEDW_DimLocation
6780,Package\Excecute HR_Staging to EDW DimLocation load\Execute spHR_StagingToEDW_DimLocation,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimLocation,,,,,EXEC spHR_StagingToEDW_DimLocation,StagingToEDW_DimLocation
6781,Package,Microsoft.Package,DimMartAccountSubAccount,,,,,,StagingToEDW_DimMartAccountSubAccount
6782,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartAccountSubAccount
6783,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartAccountSubAccount
6784,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartAccountSubAccount
6785,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,StagingToEDW_DimMartAccountSubAccount
6786,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - SCD Columns,,StagingToEDW_DimMartAccountSubAccount
6787,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimAccountSubaccount,,StagingToEDW_DimMartAccountSubAccount
6788,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - ASA,,StagingToEDW_DimMartAccountSubAccount
6789,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartAccountSubAccount
6790,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartAccountSubAccount
6791,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartAccountSubAccount
6792,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartAccountSubAccount
6793,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartAccountSubAccount
6794,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartAccountSubAccount
6795,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartAccountSubAccount
6796,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimAccountSubaccount_DM_Data,,StagingToEDW_DimMartAccountSubAccount
6797,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartAccountSubAccount
6798,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Delete Count,,StagingToEDW_DimMartAccountSubAccount
6799,Package\SQL - Assigning value to the SQl Variable,Microsoft.ExecuteSQLTask,SQL - Assigning value to the SQl Variable,,,,,"DECLARE @Field MartLookup;
INSERT INTO @Field (FieldPath)
(SELECT FieldPath
FROM dbo.MartASALookup);

DECLARE @vSQL MartLookup;
INSERT @vSQL
EXEC dbo.spGL_Generate_ASA_SQLStatement @Field;

DECLARE @vSQLCommand VARCHAR(4000);
SET @vSQLCommand = (SELECT FieldPath FROM @vSQL)

SELECT @vSQLCommand AS vSQLCommand;",StagingToEDW_DimMartAccountSubAccount
6800,Package\SQL - Begin AccountSubaccountLanding Audit,Microsoft.ExecuteSQLTask,SQL - Begin AccountSubaccountLanding Audit,,,,,"Execute dbo.spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartAccountSubAccount
6801,Package\SQL - Begin DimAccountSubAccount ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimAccountSubAccount ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartAccountSubAccount
6802,Package\SQL - End AccountSubaccount Audit,Microsoft.ExecuteSQLTask,SQL - End AccountSubaccount Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartAccountSubAccount
6803,Package\SQL - End DimAccountSubAccount ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimAccountSubAccount ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartAccountSubAccount
6804,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
(
    SELECT 1
    FROM dbo.DimAccountSubaccount
    WHERE AccountSubaccountKey < 0
)
BEGIN
    PRINT 'No Insert';
END;
ELSE
BEGIN
    SET IDENTITY_INSERT dbo.DimAccountSubaccount ON;

    INSERT INTO [dbo].[DimAccountSubaccount]
    (
        [AccountSubaccountKey],
        [AccountSubaccountID],
        [AccountSubaccountName],
        [AccountID],
        [AccountName],
        [SubaccountID],
        [SubaccountName],
        [ASATuitionType],
        [ASAFieldDepth],
        [ASAFieldLevel1ID],
        [ASAFieldLevel1Name],
        [ASAFieldLevel1Unary],
        [ASAFieldLevel1Sort],
        [ASAFieldLevel2ID],
        [ASAFieldLevel2Name],
        [ASAFieldLevel2Unary],
        [ASAFieldLevel2Sort],
        [ASAFieldLevel3ID],
        [ASAFieldLevel3Name],
        [ASAFieldLevel3Unary],
        [ASAFieldLevel3Sort],
        [ASAFieldLevel4ID],
        [ASAFieldLevel4Name],
        [ASAFieldLevel4Unary],
        [ASAFieldLevel4Sort],
        [ASAFieldLevel5ID],
        [ASAFieldLevel5Name],
        [ASAFieldLevel5Unary],
        [ASAFieldLevel5Sort],
        [ASAFieldLevel6ID],
        [ASAFieldLevel6Name],
        [ASAFieldLevel6Unary],
        [ASAFieldLevel6Sort],
        [ASAFieldLevel7ID],
        [ASAFieldLevel7Name],
        [ASAFieldLevel7Unary],
        [ASAFieldLevel7Sort],
        [ASAFieldLevel8ID],
        [ASAFieldLevel8Name],
        [ASAFieldLevel8Unary],
        [ASAFieldLevel8Sort],
        [ASAFieldLevel9ID],
        [ASAFieldLevel9Name],
        [ASAFieldLevel9Unary],
        [ASAFieldLevel9Sort],
        [ASAFieldLevel10ID],
        [ASAFieldLevel10Name],
        [ASAFieldLevel10Unary],
        [ASAFieldLevel10Sort],
        [ASAFieldLevel11ID],
        [ASAFieldLevel11Name],
        [ASAFieldLevel11Unary],
        [ASAFieldLevel11Sort],
        [ASAFieldLevel12ID],
        [ASAFieldLevel12Name],
        [ASAFieldLevel12Unary],
        [ASAFieldLevel12Sort],
        [SourceSystem],
        [EffectiveFrom],
        [EffectiveTo],
        [CreatedDate],
        [ModifiedDate],
        [DeletedDate],
        [RowStatus],
        [ETLJobID]
    )
    SELECT -1,
           -1,
           'Unknown AccountSubaccountName',
           -1,
           'Unknown AccountName',
           -1,
           'Unknown SubaccountName',
           'Unknown ASATuitionType',
           -1,                           -- [ASAFieldDepth]
           '0000.000000',                -- [ASAFieldLevel1ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel1Name]	
           1,                            -- [ASAFieldLevel1Unary]	
           99999,                        -- [ASAFieldLevel1Sort]
           '0000.000000',                -- [ASAFieldLevel2ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel2Name]	
           1,                            -- [ASAFieldLevel2Unary]	
           99999,                        -- [ASAFieldLevel2Sort]
           '0000.000000',                -- [ASAFieldLevel3ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel3Name]	
           1,                            -- [ASAFieldLevel3Unary]	
           99999,                        -- [ASAFieldLevel3Sort]
           '0000.000000',                -- [ASAFieldLevel4ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel4Name]	
           1,                            -- [ASAFieldLevel4Unary]	
           99999,                        -- [ASAFieldLevel4Sort]
           '0000.000000',                -- [ASAFieldLevel5ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel5Name]	
           1,                            -- [ASAFieldLevel5Unary]	
           99999,                        -- [ASAFieldLevel5Sort]
           '0000.000000',                -- [ASAFieldLevel6ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel6Name]	
           1,                            -- [ASAFieldLevel6Unary]	
           99999,                        -- [ASAFieldLevel6Sort]
           '0000.000000',                -- [ASAFieldLevel7ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel7Name]	
           1,                            -- [ASAFieldLevel7Unary]	
           99999,                        -- [ASAFieldLevel7Sort]
           '0000.000000',                -- [ASAFieldLevel8ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel8Name]	
           1,                            -- [ASAFieldLevel8Unary]	
           99999,                        -- [ASAFieldLevel8Sort]
           '0000.000000',                -- [ASAFieldLevel9ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel9Name]	
           1,                            -- [ASAFieldLevel9Unary]	
           99999,                        -- [ASAFieldLevel9Sort]
           '0000.000000',                -- [ASAFieldLevel10ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
           1,                            -- [ASAFieldLevel10Unary]	
           99999,                        -- [ASAFieldLevel10Sort]
           '0000.000000',                -- [ASAFieldLevel11ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
           1,                            -- [ASAFieldLevel11Unary]	
           99999,                        -- [ASAFieldLevel11Sort]
           '0000.000000',                -- [ASAFieldLevel12ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
           1,                            -- [ASAFieldLevel12Unary]	
           99999,                        -- [ASAFieldLevel12Sort]
           'UNK',
           '1900-01-01',
           '9999-12-31 23:59:59.999',
           GETDATE(),
           GETDATE(),
           NULL,
           'A',
           ?
    UNION
    SELECT -2,
           -2,
           'Unknown AccountSubaccountName',
           -2,
           'Unknown AccountName',
           -2,
           'Unknown SubaccountName',
           'Unknown ASATuitionType',
           -1,                           -- [ASAFieldDepth]
           '0000.000000',                -- [ASAFieldLevel1ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel1Name]	
           1,                            -- [ASAFieldLevel1Unary]	
           99999,                        -- [ASAFieldLevel1Sort]
           '0000.000000',                -- [ASAFieldLevel2ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel2Name]	
           1,                            -- [ASAFieldLevel2Unary]	
           99999,                        -- [ASAFieldLevel2Sort]
           '0000.000000',                -- [ASAFieldLevel3ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel3Name]	
           1,                            -- [ASAFieldLevel3Unary]	
           99999,                        -- [ASAFieldLevel3Sort]
           '0000.000000',                -- [ASAFieldLevel4ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel4Name]	
           1,                            -- [ASAFieldLevel4Unary]	
           99999,                        -- [ASAFieldLevel4Sort]
           '0000.000000',                -- [ASAFieldLevel5ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel5Name]	
           1,                            -- [ASAFieldLevel5Unary]	
           99999,                        -- [ASAFieldLevel5Sort]
           '0000.000000',                -- [ASAFieldLevel6ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel6Name]	
           1,                            -- [ASAFieldLevel6Unary]	
           99999,                        -- [ASAFieldLevel6Sort]
           '0000.000000',                -- [ASAFieldLevel7ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel7Name]	
           1,                            -- [ASAFieldLevel7Unary]	
           99999,                        -- [ASAFieldLevel7Sort]
           '0000.000000',                -- [ASAFieldLevel8ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel8Name]	
           1,                            -- [ASAFieldLevel8Unary]	
           99999,                        -- [ASAFieldLevel8Sort]
           '0000.000000',                -- [ASAFieldLevel9ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel9Name]	
           1,                            -- [ASAFieldLevel9Unary]	
           99999,                        -- [ASAFieldLevel9Sort]
           '0000.000000',                -- [ASAFieldLevel10ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
           1,                            -- [ASAFieldLevel10Unary]	
           99999,                        -- [ASAFieldLevel10Sort]
           '0000.000000',                -- [ASAFieldLevel11ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
           1,                            -- [ASAFieldLevel11Unary]	
           99999,                        -- [ASAFieldLevel11Sort]
           '0000.000000',                -- [ASAFieldLevel12ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
           1,                            -- [ASAFieldLevel12Unary]	
           99999,                        -- [ASAFieldLevel12Sort]
           'UNK',
           '1900-01-01',
           '9999-12-31 23:59:59.999',
           GETDATE(),
           GETDATE(),
           NULL,
           'A',
           ?;

    SET IDENTITY_INSERT dbo.DimAccountSubaccount OFF;
END;",StagingToEDW_DimMartAccountSubAccount
6805,Package\SQL - Load AccountSubaccountLanding,Microsoft.ExecuteSQLTask,SQL - Load AccountSubaccountLanding,,,,,"EXECUTE [spGL_Staging_AccountSubAccountLanding] 
NULL, ? OUTPUT, ? OUTPUT
GO
",StagingToEDW_DimMartAccountSubAccount
6806,Package,Microsoft.Package,DimMartCostCenter,,,,,,StagingToEDW_DimMartCostCenter
6807,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartCostCenter
6808,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartCostCenter
6809,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartCostCenter
6810,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimCostCenter,,StagingToEDW_DimMartCostCenter
6811,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - tfnGL_StagingGenerate_CostCenter(),,StagingToEDW_DimMartCostCenter
6812,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartCostCenter
6813,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD1 Update Count,,StagingToEDW_DimMartCostCenter
6814,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartCostCenter
6815,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartCostCenter
6816,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartCostCenter
6817,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD1 Update,,StagingToEDW_DimMartCostCenter
6818,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartCostCenter
6819,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartCostCenter
6820,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLE DB Destination,,StagingToEDW_DimMartCostCenter
6821,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB - SRC DimCostCenter,,StagingToEDW_DimMartCostCenter
6822,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartCostCenter
6823,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartCostCenter
6824,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimCostCenter_DM_Data,,StagingToEDW_DimMartCostCenter
6825,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartCostCenter
6826,Package\EPT - Call CompNonCompStatus Package,Microsoft.ExecutePackageTask,EPT - Call CompNonCompStatus Package,,,,,,StagingToEDW_DimMartCostCenter
6827,Package\Insert Seed Records,Microsoft.ExecuteSQLTask,Insert Seed Records,,,,,"DECLARE @AuditID int = ?

SET IDENTITY_INSERT dbo.DimCostCenter ON 

IF NOT EXISTS (SELECT 1 FROM dbo.DimCostCenter WHERE CostCenterNumber = -1)
	BEGIN
		INSERT INTO dbo.DimCostCenter
		(
			CostCenterKey,
			CostCenterNumber,
			CostCenterName,
			CompanyID,
			CostCenterTypeID,
			CostCenterTypeName,
			BusinessUnitCode,
			BusinessUnitName,
			OrganizationLevelCode,
			OrganizationLevelName,
			FunctionCode,
			FunctionName,
			LineOfBusinessCode,
			LineOfBusinessName,
			LineOfBusinessCategoryCode,
			LineOfBusinessCategoryName,
			LineOfBusinessSubcategoryCode,
			LineOfBusinessSubcategoryName,
			CCHierarchyLevel1Name,
			CCHierarchyLevel2Name,
			CCHierarchyLevel3Name,
			CCHierarchyLevel4Name,
			CCHierarchyLevel5Name,
			CCHierarchyLevel6Name,
			CCHierarchyLevel7Name,
			CCHierarchyLevel8Name,
			CCHierarchyLevel9Name,
			CCHierarchyLevel10Name,
			CCHierarchyLevel11Name,
			CCOpenDate,
			CCClosedDate,
			CCReopenDate,
			CCReopenDateType,
			CCClassification,
			CCStatus,
			CCConsolidation,
			CCFlexAttribute1,
			CCFlexAttribute2,
			CCFlexAttribute3,
			CCFlexAttribute4,
			CCFlexAttribute5,
			OrgID,
			ParentOrgID,
			DefaultLocationID,
			OrgNumber,
			OrgHierarchyLevel1Name,
			OrgHierarchyLevel2Name,
			OrgHierarchyLevel3Name,
			OrgHierarchyLevel4Name,
			OrgHierarchyLevel5Name,
			OrgHierarchyLevel6Name,
			OrgHierarchyLevel7Name,
			OrgHierarchyLevel8Name,
			OrgHierarchyLevel9Name,
			OrgHierarchyLevel10Name,
			OrgHierarchyLevel11Name,
			AllName,
			ExecutiveFunctionName,
			ExecutiveFunctionLeaderName,
			ExecutiveSubFunctionName,
			ExecutiveSubFunctionLeaderName,
			CorporateFunctionName,
			CorporateSubFunctionName,
			DivisionName,
			DivisionLeaderName,
			RegionNumber,
			RegionName,
			RegionLeaderName,
			MarketNumber,
			MarketName,
			MarketLeaderName,
			SubMarketNumber,
			SubMarketName,
			SubMarketLeaderName,
			DistrictNumber,
			DistrictName,
			InterimDistrictNumber,
			InterimDistrictName,
			DistrictLeaderName,
			ActingDistrictLeaderName,
			InterimDistrictLeaderName,
			GroupNumber,
			GroupName,
			GroupLeaderName,
			SubgroupNumber,
			SubGroupName,
			SubGroupLeaderName,
			CampusNumber,
			CampusName,
			CampusLeaderName,
			CenterLeaderName,
			ActingCenterLeaderName,
			CategoryName,
			TypeCode,
			TypeName,
			PartnerGroupCode,
			PartnerGroupName,
			CenterGroupCode,
			CenterGroupName,
			DivisionLegacyName,
			BrandCode,
			BrandName,
			OrgFlexAttribute1,
			OrgFlexAttribute2,
			OrgFlexAttribute3,
			OrgFlexAttribute4,
			OrgFlexAttribute5,
			CenterCMSID,
			CenterCSSID,
			SiteHorizonID,
			CenterEnrollmentSourceSystem,
			CenterCMSMigrationDate,
			CenterCMSMigrationStatus,
			CenterLicensedCapacity,
			CenterBackupCareFlag,
			CenterChildCareSelectFlag,
			CenterPublicAllowedFlag,
			CenterOpenTime,
			CenterCloseTime,
			CenterStudentMinimumAge,
			CenterStudentMaximumAge,
			CenterOpenSunFlag,
			CenterOpenMonFlag,
			CenterOpenTueFlag,
			CenterOpenWedFlag,
			CenterOpenThuFlag,
			CenterOpenFriFlag,
			CenterOpenSatFlag,
			CenterFoodProgramStartDate,
			CenterFoodProgramEndDate,
			CenterRegistrationType,
			SiteSchoolDistrict,
			SiteClassYear,
			CenterURL,
			CenterMenuURL,
			CenterHasBreakfastFlag,
			CenterHasMorningSlackFlag,
			CenterHasLunchFlag,
			CenterHasAfternoonSnackFlag,
			CenterSpeaksASLFlag,
			CenterSpeaksArabicFlag,
			CenterSpeaksFrenchFlag,
			CenterSpeaksGermanFlag,
			CenterSpeaksHindiFlag,
			CenterSpeaksMandarinFlag,
			CenterSpeaksPunjabiFlag,
			CenterSpeaksSpanishFlag,
			CenterSpeaksOtherLanguages,
			CenterAccreditationAgencyCode,
			CenterAccreditationStartDate,
			CenterAccreditationExpirationDate,
			CenterAccreditationNextActivity,
			CenterAccreditationNextActivityDueDate,
			CenterAccreditationPrimaryStatus,
			CenterAccreditationProgramID,
			CenterQRISRating,
			CenterQRISRatingStartDate,
			CenterQRISRatingExpirationDate,
			CenterLatitude,
			City,
			[State],
			Zipcode,
			CenterOperationalCapacity,
			CenterLongitude,
			CenterCurrentHumanSigmaScore,
			CenterPreviousHumanSigmaScore,
			EDWEffectiveFrom,
			EDWEffectiveTo,
			EDWCreatedDate,
			EDWModifiedDate,
			EDWDeletedDate,
			EDWRowStatus,
			ETLJobId,
			Address1,
			Address2,
			Address3,
			County,
			Country,
			Timezone,
			PhoneNumber,
			Fax
		)
		VALUES
		(
			-1,
			'-1',
			'Unknown CostCenterName',
			'-1',
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			-1,
			-1,
			-1,
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			-1,
			'-1',
			-1,
			'UNK',
			'1900-01-01',
			NULL,
			-1,
			'Unknown',
			'Unknown',
			'Unknown',
			NULL,
			NULL,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'Unknown',
			'Unknown',
			-1,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'Unknown',
			'1900-01-01',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			-1,
			'Unknown',
			NULL,
			'Unknown',
			-1,
			-1,
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			NULL,
			'A',
			@AuditID,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown'
		)
	END

IF NOT EXISTS (SELECT 1 FROM dbo.DimCostCenter WHERE CostCenterNumber = -2)
	BEGIN
		INSERT INTO dbo.DimCostCenter
		(
			CostCenterKey,
			CostCenterNumber,
			CostCenterName,
			CompanyID,
			CostCenterTypeID,
			CostCenterTypeName,
			BusinessUnitCode,
			BusinessUnitName,
			OrganizationLevelCode,
			OrganizationLevelName,
			FunctionCode,
			FunctionName,
			LineOfBusinessCode,
			LineOfBusinessName,
			LineOfBusinessCategoryCode,
			LineOfBusinessCategoryName,
			LineOfBusinessSubcategoryCode,
			LineOfBusinessSubcategoryName,
			CCHierarchyLevel1Name,
			CCHierarchyLevel2Name,
			CCHierarchyLevel3Name,
			CCHierarchyLevel4Name,
			CCHierarchyLevel5Name,
			CCHierarchyLevel6Name,
			CCHierarchyLevel7Name,
			CCHierarchyLevel8Name,
			CCHierarchyLevel9Name,
			CCHierarchyLevel10Name,
			CCHierarchyLevel11Name,
			CCOpenDate,
			CCClosedDate,
			CCReopenDate,
			CCReopenDateType,
			CCClassification,
			CCStatus,
			CCConsolidation,
			CCFlexAttribute1,
			CCFlexAttribute2,
			CCFlexAttribute3,
			CCFlexAttribute4,
			CCFlexAttribute5,
			OrgID,
			ParentOrgID,
			DefaultLocationID,
			OrgNumber,
			OrgHierarchyLevel1Name,
			OrgHierarchyLevel2Name,
			OrgHierarchyLevel3Name,
			OrgHierarchyLevel4Name,
			OrgHierarchyLevel5Name,
			OrgHierarchyLevel6Name,
			OrgHierarchyLevel7Name,
			OrgHierarchyLevel8Name,
			OrgHierarchyLevel9Name,
			OrgHierarchyLevel10Name,
			OrgHierarchyLevel11Name,
			AllName,
			ExecutiveFunctionName,
			ExecutiveFunctionLeaderName,
			ExecutiveSubFunctionName,
			ExecutiveSubFunctionLeaderName,
			CorporateFunctionName,
			CorporateSubFunctionName,
			DivisionName,
			DivisionLeaderName,
			RegionNumber,
			RegionName,
			RegionLeaderName,
			MarketNumber,
			MarketName,
			MarketLeaderName,
			SubMarketNumber,
			SubMarketName,
			SubMarketLeaderName,
			DistrictNumber,
			DistrictName,
			InterimDistrictNumber,
			InterimDistrictName,
			DistrictLeaderName,
			ActingDistrictLeaderName,
			InterimDistrictLeaderName,
			GroupNumber,
			GroupName,
			GroupLeaderName,
			SubgroupNumber,
			SubGroupName,
			SubGroupLeaderName,
			CampusNumber,
			CampusName,
			CampusLeaderName,
			CenterLeaderName,
			ActingCenterLeaderName,
			CategoryName,
			TypeCode,
			TypeName,
			PartnerGroupCode,
			PartnerGroupName,
			CenterGroupCode,
			CenterGroupName,
			DivisionLegacyName,
			BrandCode,
			BrandName,
			OrgFlexAttribute1,
			OrgFlexAttribute2,
			OrgFlexAttribute3,
			OrgFlexAttribute4,
			OrgFlexAttribute5,
			CenterCMSID,
			CenterCSSID,
			SiteHorizonID,
			CenterEnrollmentSourceSystem,
			CenterCMSMigrationDate,
			CenterCMSMigrationStatus,
			CenterLicensedCapacity,
			CenterBackupCareFlag,
			CenterChildCareSelectFlag,
			CenterPublicAllowedFlag,
			CenterOpenTime,
			CenterCloseTime,
			CenterStudentMinimumAge,
			CenterStudentMaximumAge,
			CenterOpenSunFlag,
			CenterOpenMonFlag,
			CenterOpenTueFlag,
			CenterOpenWedFlag,
			CenterOpenThuFlag,
			CenterOpenFriFlag,
			CenterOpenSatFlag,
			CenterFoodProgramStartDate,
			CenterFoodProgramEndDate,
			CenterRegistrationType,
			SiteSchoolDistrict,
			SiteClassYear,
			CenterURL,
			CenterMenuURL,
			CenterHasBreakfastFlag,
			CenterHasMorningSlackFlag,
			CenterHasLunchFlag,
			CenterHasAfternoonSnackFlag,
			CenterSpeaksASLFlag,
			CenterSpeaksArabicFlag,
			CenterSpeaksFrenchFlag,
			CenterSpeaksGermanFlag,
			CenterSpeaksHindiFlag,
			CenterSpeaksMandarinFlag,
			CenterSpeaksPunjabiFlag,
			CenterSpeaksSpanishFlag,
			CenterSpeaksOtherLanguages,
			CenterAccreditationAgencyCode,
			CenterAccreditationStartDate,
			CenterAccreditationExpirationDate,
			CenterAccreditationNextActivity,
			CenterAccreditationNextActivityDueDate,
			CenterAccreditationPrimaryStatus,
			CenterAccreditationProgramID,
			CenterQRISRating,
			CenterQRISRatingStartDate,
			CenterQRISRatingExpirationDate,
			CenterLatitude,
			City,
			[State],
			Zipcode,
			CenterOperationalCapacity,
			CenterLongitude,
			CenterCurrentHumanSigmaScore,
			CenterPreviousHumanSigmaScore,
			EDWEffectiveFrom,
			EDWEffectiveTo,
			EDWCreatedDate,
			EDWModifiedDate,
			EDWDeletedDate,
			EDWRowStatus,
			ETLJobId,
			Address1,
			Address2,
			Address3,
			County,
			Country,
			Timezone,
			PhoneNumber,
			Fax
		)
		VALUES
		(
			-2,
			'-2',
			'Not Applicable CostCenterName',
			'-2',
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			-2,
			-2,
			-2,
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			-2,
			'-2',
			-2,
			'N/A',
			'1900-01-01',
			NULL,
			-2,
			'N/A',
			'N/A',
			'N/A',
			NULL,
			NULL,
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'N/A',
			'N/A',
			-2,
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'N/A',
			'1900-01-01',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			-2,
			'N/A',
			NULL,
			'N/A',
			-2,
			-2,
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			NULL,
			'A',
			@AuditID,
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A'
		)
	END

SET IDENTITY_INSERT dbo.DimCostCenter OFF
",StagingToEDW_DimMartCostCenter
6828,Package\Loaddimmartcostcenter,Microsoft.ExecuteSQLTask,Loaddimmartcostcenter,,,,,exec  [dbo].[spBING_EDW_Generate_DimCostCenter],StagingToEDW_DimMartCostCenter
6829,Package\SQL - Begin DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimCostCenter ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimMartCostCenter
6830,Package\SQL - End DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimCostCenter ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartCostCenter
6831,Package\SQL - Update the EffectiveFrom,Microsoft.ExecuteSQLTask,SQL - Update the EffectiveFrom,,,,,"UPDATE A
SET A.EDWEffectiveFrom = B.EDWEffectiveTo
FROM DW_MART..DimCostCenter A
    INNER JOIN
    (
        SELECT *
        FROM
        (
            SELECT *,
                   ROW_NUMBER() OVER (PARTITION BY B.CostCenterNumber ORDER BY B.EDWEffectiveTo DESC) AS RW
            FROM DW_MART..DimCostCenter B
            WHERE B.CostCenterNumber IN
                  (
                      SELECT CostCenterNumber
                      FROM DW_MART..DimCostCenter
                      WHERE EDWEffectiveFrom = '1900-01-01 00:00:00.000'
                      GROUP BY CostCenterNumber
                      HAVING COUNT(1) > 1
                  )
                  AND B.EDWRowStatus = 'H'
        ) A
        WHERE A.RW = 1
    ) B
        ON A.CostCenterNumber = B.CostCenterNumber
           AND A.EDWEffectiveFrom = '1900-01-01 00:00:00.000'
           AND A.EDWEffectiveTo = '9999-12-31 23:59:59.999';
",StagingToEDW_DimMartCostCenter
6832,Package\truncate staging,Microsoft.ExecuteSQLTask,truncate staging,,,,,truncate table dbo.DimMartCostcenterLanding,StagingToEDW_DimMartCostCenter
6833,Package,Microsoft.Package,DimMartPartner,,,,,,StagingToEDW_DimMartPartner
6834,Package\DFT - DimPartnertLanding,Microsoft.Pipeline,DFT - DimPartnertLanding,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartPartner
6835,Package\DFT - DimPartnertLanding,Microsoft.Pipeline,DFT - DimPartnertLanding,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimPartnerLanding,,StagingToEDW_DimMartPartner
6836,Package\DFT - DimPartnertLanding,Microsoft.Pipeline,DFT - DimPartnertLanding,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Partner,,StagingToEDW_DimMartPartner
6837,Package\DFT - DimPartnertLanding,Microsoft.Pipeline,DFT - DimPartnertLanding,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartPartner
6838,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartPartner
6839,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartPartner
6840,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimPartner_DM_Data,,StagingToEDW_DimMartPartner
6841,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartPartner
6842,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Delete Count,,StagingToEDW_DimMartPartner
6843,Package\SQL - End DimPartner ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimPartner ETL Audit,,,,,"UPDATE AuditLog
SET DeleteCount = ?
WHERE AuditID = ?",StagingToEDW_DimMartPartner
6844,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimPartner WHERE PartnerKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimPartner ON;

INSERT INTO [dbo].[DimPartner]
		([PartnerKey]
		,[PartnerID]
		,[PartnerName]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID])
	SELECT-1,
			-1,
			'Unknown PartnerName',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			0
	UNION
	SELECT-2,
			-2,
			'Not Applicable PartnerName',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			0
SET IDENTITY_INSERT dbo.DimPartner OFF;
END;",StagingToEDW_DimMartPartner
6845,Package\SQL - SpDimPartnerLoad,Microsoft.ExecuteSQLTask,SQL - SpDimPartnerLoad,,,,,"EXECUTE [dbo].[spDimPartnerLoad] null, null, ?, ? output;",StagingToEDW_DimMartPartner
6846,Package\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,Truncate table DimPartnerLanding,StagingToEDW_DimMartPartner
6847,Package,Microsoft.Package,DimMartProgram,,,,,,StagingToEDW_DimMartProgram
6848,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartProgram
6849,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartProgram
6850,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartProgram
6851,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimProgram,,StagingToEDW_DimMartProgram
6852,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Program,,StagingToEDW_DimMartProgram
6853,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartProgram
6854,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartProgram
6855,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartProgram
6856,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartProgram
6857,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartProgram
6858,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartProgram
6859,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartProgram
6860,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartProgram
6861,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimProgram_DM_Data,,StagingToEDW_DimMartProgram
6862,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartProgram
6863,Package\SQL - Begin DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimProgram ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartProgram
6864,Package\SQL - End DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimProgram ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartProgram
6865,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimProgram WHERE ProgramKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
             SET IDENTITY_INSERT dbo.DimProgram ON;
             INSERT INTO [dbo].[DimProgram]
             ([ProgramKey],
              [ProgramID],
              [ProgramName],
              [SourceSystem],
              [EffectiveFrom],
              [EffectiveTo],
              [CreatedDate],
              [ModifiedDate],
              [DeletedDate],
              [RowStatus],
              [ETLJobID]
             )
                    SELECT-1,
                          -1,
                          'Unknown Program',
                          'UNK',
                          '1900-01-01 00:00:00.000',
                          '9999-12-31 23:59:59.999',
                          GETDATE(),
                          GETDATE(),
                          NULL,
                         'A',
                         ?
                    UNION
                    SELECT-2,
                          -2,
                          'Not Applicable Program',
	          'UNK',
                          '1900-01-01 00:00:00.000',
                          '9999-12-31 23:59:59.999',
                          GETDATE(),
                          GETDATE(),
                          NULL,
                         'A',
                         ?;
        
                         SET IDENTITY_INSERT dbo.DimProgram OFF;
						 END;

						",StagingToEDW_DimMartProgram
6866,Package,Microsoft.Package,DimMartSession,,,,,,StagingToEDW_DimMartSession
6867,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartSession
6868,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartSession
6869,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartSession
6870,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimSession,,StagingToEDW_DimMartSession
6871,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Session,,StagingToEDW_DimMartSession
6872,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartSession
6873,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartSession
6874,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartSession
6875,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartSession
6876,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartSession
6877,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartSession
6878,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartSession
6879,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartSession
6880,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimSession_DM_Data,,StagingToEDW_DimMartSession
6881,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartSession
6882,Package\SQL - Begin DimSession ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimSession ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartSession
6883,Package\SQL - End DimSession ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimSession ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartSession
6884,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimSession WHERE SessionKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimSession ON;

INSERT INTO [dbo].[DimSession]
		([SessionKey]
		,[SessionID]
		,[SessionName]
		,[SourceSystem]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID])
	SELECT-1,
			-1,
			'Unknown SessionName',
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
	UNION
	SELECT-2,
			-2, 
			'Not Applicable SessionName',
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;

SET IDENTITY_INSERT dbo.DimSession OFF;
END;",StagingToEDW_DimMartSession
6885,Package,Microsoft.Package,DimMartSponsor,,,,,,StagingToEDW_DimMartSponsor
6886,Package\DFT - DimSponsor,Microsoft.Pipeline,DFT - DimSponsor,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartSponsor
6887,Package\DFT - DimSponsor,Microsoft.Pipeline,DFT - DimSponsor,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,Dst - DimSponsorLanding,,StagingToEDW_DimMartSponsor
6888,Package\DFT - DimSponsor,Microsoft.Pipeline,DFT - DimSponsor,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC- SourceCount,,StagingToEDW_DimMartSponsor
6889,Package\DFT - DimSponsor,Microsoft.Pipeline,DFT - DimSponsor,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Sponsor,,StagingToEDW_DimMartSponsor
6890,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartSponsor
6891,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartSponsor
6892,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimSponsor_DM_Data,,StagingToEDW_DimMartSponsor
6893,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartSponsor
6894,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Delete Count,,StagingToEDW_DimMartSponsor
6895,Package\SQL - End DimSponsor ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimSponsor ETL Audit,,,,,"UPDATE AuditLog
SET DeleteCount = ?
WHERE AuditID = ?",StagingToEDW_DimMartSponsor
6896,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"
  IF EXISTS
( SELECT 1 FROM dbo.[DimSponsor] WHERE [SponsorKey] < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
 SET IDENTITY_INSERT dbo.DimSponsor ON;
             INSERT INTO [dbo].[DimSponsor]
             ([SponsorKey],
              [SponsorID],
			  [SponsorFirstName],
			  [SponsorLastName],
			  [SponsorFullName],
			  [SponsorStatus],
			  [SourceSystem],
              [CSSCenterNumber],
	          [CSSFamilyNumber],
		      [EffectiveFrom],
		      [EffectiveTo],
		      [CreatedDate],
		      [ModifiedDate],
		      [DeletedDate],
		      [RowStatus],
		      [ETLJobID]
              )
             SELECT-1,
             -1,
			'Unknown FirstName',
			'Unknown LastName',
			'Unknown FullName',
			'Unknown SponsorStatus',
			 'UNK',
            '-1',
            '-1',
		    '1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
            UNION
            SELECT-2,
            -2,
			'Unknown FirstName',
			'Unknown LastName',
			'Unknown FullName',
			'Unknown SponsorStatus',
			'UNK',
            '-2',
            '-2',
		    '1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;
            SET IDENTITY_INSERT dbo.DimSponsor OFF;
			END;

SELECT * FROM DW_Mart.dbo.DimSponsor
WHERE SponsorKey<0",StagingToEDW_DimMartSponsor
6897,Package\SQL - SpDimSponsorLoad,Microsoft.ExecuteSQLTask,SQL - SpDimSponsorLoad,,,,,"EXECUTE [dbo].[spDimSponsorLoad] null, null, ?, ? output;",StagingToEDW_DimMartSponsor
6898,Package\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,Truncate table DimSponsorLanding,StagingToEDW_DimMartSponsor
6899,Package,Microsoft.Package,DimMartStudent,,,,,,StagingToEDW_DimMartStudent
6900,Package\DFT - DimStudentLanding,Microsoft.Pipeline,DFT - DimStudentLanding,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartStudent
6901,Package\DFT - DimStudentLanding,Microsoft.Pipeline,DFT - DimStudentLanding,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimStudentLanding,,StagingToEDW_DimMartStudent
6902,Package\DFT - DimStudentLanding,Microsoft.Pipeline,DFT - DimStudentLanding,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Student,,StagingToEDW_DimMartStudent
6903,Package\DFT - DimStudentLanding,Microsoft.Pipeline,DFT - DimStudentLanding,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartStudent
6904,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartStudent
6905,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartStudent
6906,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimStudent_DM_Data,,StagingToEDW_DimMartStudent
6907,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartStudent
6908,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Delete Count,,StagingToEDW_DimMartStudent
6909,Package\SQL - End DimStudent ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimStudent ETL Audit,,,,,"UPDATE AuditLog
SET DeleteCount = ?
WHERE AuditID = ?",StagingToEDW_DimMartStudent
6910,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimStudent WHERE StudentKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimStudent ON;

INSERT INTO [dbo].[DimStudent]
		([StudentKey]
		,[StudentID]
		,[StudentFirstName]
		,[StudentLastName]
		,[StudentStatus]
		,[StudentFirstEnrollmentDate]
		,[FiscalWeekNumber]
		,[CSSCenterNumber]
		,[CSSFamilyNumber]
		,[CSSStudentNumber]
		,[SourceSystem]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID]
		,[StudentFullName]
		,[StudentBirthDate])
	SELECT-1,
			-1,
			'Unknown StudentFirstName',
			'Unknown StudentLastName',
			'Unknown StudentStatus',
			'1900-01-01',
			-1,
			-1,
			-1,
			-1,
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?,
			'Unknown Student Name',
			'Unknown Student Birth Date'
	UNION
	SELECT-2,
			-2,
			'Unknown StudentFirstName',
			'Unknown StudentLastName',
			'Unknown StudentStatus',
			'1900-01-01',
			-1,
			-1,
			-1,
			-1,
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?,
			'Unknown Student Name',
			'Unknown Student Birth Date';

SET IDENTITY_INSERT dbo.DimStudent OFF;
END;",StagingToEDW_DimMartStudent
6911,Package\SQL - SpDimStudentLoad,Microsoft.ExecuteSQLTask,SQL - SpDimStudentLoad,,,,,"EXECUTE [dbo].[spDimStudentLoad] null, null, ?, ? output;",StagingToEDW_DimMartStudent
6912,Package\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,Truncate table DimStudentLanding,StagingToEDW_DimMartStudent
6913,Package,Microsoft.Package,DimMartTier,,,,,,StagingToEDW_DimMartTier
6914,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartTier
6915,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartTier
6916,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartTier
6917,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimTier,,StagingToEDW_DimMartTier
6918,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Tier,,StagingToEDW_DimMartTier
6919,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartTier
6920,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartTier
6921,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartTier
6922,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartTier
6923,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartTier
6924,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartTier
6925,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartTier
6926,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartTier
6927,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimTier_DM_Data,,StagingToEDW_DimMartTier
6928,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartTier
6929,Package\SQL - Begin DimTier ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimTier ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartTier
6930,Package\SQL - End DimTier ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimTier ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartTier
6931,Package\SQL - Insert CSS Data,Microsoft.ExecuteSQLTask,SQL - Insert CSS Data,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimTier WHERE SourceSystem='CSS' )
BEGIN 
 PRINT 'No Insert' 
END
ELSE 


INSERT INTO [dbo].[DimTier]
  ([TierID]
  ,[TierName]
  ,[CSSTierNumber]
  ,[SourceSystem]
  ,[EffectiveFrom]
  ,[EffectiveTo]
  ,[CreatedDate]
  ,[ModifiedDate]
  ,[DeletedDate]
  ,[RowStatus]
  ,[ETLJobID])
 SELECT
   -2,
   'T1CSS',
   1,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?
 UNION
 SELECT
   -2,
   'T2CSS',
   2,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?
   UNION
 SELECT
   -2,
   'T3CSS',
    3,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?
   UNION
 SELECT
   -2,
   'T4CSS',
    4,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?;


",StagingToEDW_DimMartTier
6932,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimTier WHERE TierKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimTier ON;

INSERT INTO [dbo].[DimTier]
		([TierKey]
		,[TierID]
		,[TierName]                                
		,[SourceSystem]
                                ,[CSSTierNumber]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID])
	SELECT-1,
			-1,
			'Unknown TierName',
			'UNK',
                                                -1,
                                	'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
	UNION
	SELECT-2,
			-2, 
			'Not Applicable TierName',                                                 
                                                 'UNK',
                                                 -2,
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;

SET IDENTITY_INSERT dbo.DimTier OFF;
END;",StagingToEDW_DimMartTier
6933,Package,Microsoft.Package,DimMartTuitionAssistanceProvider,,,,,,StagingToEDW_DimMartTuitionAssistanceProvider
6934,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartTuitionAssistanceProvider
6935,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartTuitionAssistanceProvider
6936,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartTuitionAssistanceProvider
6937,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,Dst - DimTuitionAssistanceProvider,,StagingToEDW_DimMartTuitionAssistanceProvider
6938,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartTuitionAssistanceProvider
6939,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartTuitionAssistanceProvider
6940,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC- SourceCount,,StagingToEDW_DimMartTuitionAssistanceProvider
6941,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartTuitionAssistanceProvider
6942,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartTuitionAssistanceProvider
6943,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - TuitionAssistanceProvider,,StagingToEDW_DimMartTuitionAssistanceProvider
6944,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartTuitionAssistanceProvider
6945,Package\DFT - Update DeletedDate,Microsoft.Pipeline,DFT - Update DeletedDate,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartTuitionAssistanceProvider
6946,Package\DFT - Update DeletedDate,Microsoft.Pipeline,DFT - Update DeletedDate,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - SourceData,,StagingToEDW_DimMartTuitionAssistanceProvider
6947,Package\DFT - Update DeletedDate,Microsoft.Pipeline,DFT - Update DeletedDate,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB CMD Update Deleted Date,,StagingToEDW_DimMartTuitionAssistanceProvider
6948,Package\DFT - Update DeletedDate,Microsoft.Pipeline,DFT - Update DeletedDate,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimTuitionAssistanceProvider,,StagingToEDW_DimMartTuitionAssistanceProvider
6949,Package\SQL - Begin DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimProgram ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartTuitionAssistanceProvider
6950,Package\SQL - End DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimProgram ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartTuitionAssistanceProvider
6951,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,," 
 IF EXISTS
( SELECT 1 FROM dbo.[DimTuitionAssistanceProvider] WHERE [TuitionAssistanceProviderKey] < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
 SET IDENTITY_INSERT dbo.DimTuitionAssistanceProvider ON;
             INSERT INTO [dbo].[DimTuitionAssistanceProvider]
             ([TuitionAssistanceProviderKey],
              [TuitionAssistanceProviderID],
              [TuitionAssistanceProviderName],
              [TuitionAssistanceProviderType],
			  [SourceSystem],
              [CSSCenterNumber]
             ,[CSSCustomerCode]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID]

             )
                    SELECT-1,
                          -1,
                          'Unknown Tuition Assistance Provider',
                          'Unknown Tuition Assistance Provider Type',
						  'UNK',
                           '-1',
                           '-1',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
                         
                    UNION
                    SELECT-2,
                          -2,
                          'Not Applicable Tuition Assistance Provider',
                          'Not Applicable  Tuition Assistance Provider Type',
                         'UNK',
                        '-2',
                        '-2', 
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;
          
             SET IDENTITY_INSERT dbo.DimTuitionAssistanceProvider OFF;
			 END;",StagingToEDW_DimMartTuitionAssistanceProvider
6952,Package,Microsoft.Package,DimMeasure,,,,,,StagingToEDW_DimMeasure
6953,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,StagingToEDW_DimMeasure
6954,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Delete Count,,StagingToEDW_DimMeasure
6955,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingToEDW_DimMeasure
6956,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column 1,,StagingToEDW_DimMeasure
6957,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimMeasure Merge Insert,,StagingToEDW_DimMeasure
6958,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,StagingToEDW_DimMeasure
6959,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Merge Delete,,StagingToEDW_DimMeasure
6960,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Merge Join,,StagingToEDW_DimMeasure
6961,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Merge Update,,StagingToEDW_DimMeasure
6962,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimMeasure,,StagingToEDW_DimMeasure
6963,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimMeasureLanding,,StagingToEDW_DimMeasure
6964,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_DimMeasure
6965,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimMeasure,,StagingToEDW_DimMeasure
6966,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimMeasureLanding,,StagingToEDW_DimMeasure
6967,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,StagingToEDW_DimMeasure
6968,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.DataConvert,Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,Data Conversion,Data Conversion,,StagingToEDW_DimMeasure
6969,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimMeasureLanding,,StagingToEDW_DimMeasure
6970,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_DimMeasure
6971,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.ExcelSource,Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,Excel Source,SRC - Measures File,,StagingToEDW_DimMeasure
6972,Package\DimMeasureLanding,Microsoft.ExecuteSQLTask,DimMeasureLanding,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimMeasure
6973,Package\SQL - End DimMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimMeasure Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMeasure
6974,Package\SQL - End DimMeasureLanding Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimMeasureLanding Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMeasure
6975,Package\SQL - Get Insert count for Landing Table,Microsoft.ExecuteSQLTask,SQL - Get Insert count for Landing Table,,,,,SELECT COUNT(1) AS vInsertCount FROM DimMeasureLanding(NOLOCK),StagingToEDW_DimMeasure
6976,Package\SQL - Start the AuditLog for DimMeasure,Microsoft.ExecuteSQLTask,SQL - Start the AuditLog for DimMeasure,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimMeasure
6977,Package\Truncate DimMeasureLanding,Microsoft.ExecuteSQLTask,Truncate DimMeasureLanding,,,,,Truncate table DimMeasureLanding,StagingToEDW_DimMeasure
6978,Package,Microsoft.Package,DimOrganization,,,,,,StagingToEDW_DimOrganization
6979,Package\Excecute HR_Staging to EDW DimOrganization load,STOCK:SEQUENCE,Excecute HR_Staging to EDW DimOrganization load,,,,,,StagingToEDW_DimOrganization
6980,Package\Excecute HR_Staging to EDW DimOrganization load\Execute spHR_StagingToEDW_DimOrganization,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimOrganization,,,,,EXEC spHR_StagingToEDW_DimOrganization,StagingToEDW_DimOrganization
6981,Package,Microsoft.Package,DimPayBasis,,,,,,StagingToEDW_DimPayBasis
6982,Package\SEQ- StagingToEDW DimPayBasis Load,STOCK:SEQUENCE,SEQ- StagingToEDW DimPayBasis Load,,,,,,StagingToEDW_DimPayBasis
6983,Package\SEQ- StagingToEDW DimPayBasis Load\SQL- EXEC spHR_StagingToEDW_DimPayBasis,Microsoft.ExecuteSQLTask,SQL- EXEC spHR_StagingToEDW_DimPayBasis,,,,,Exec [dbo].[spHR_StagingToEDW_DimPayBasis],StagingToEDW_DimPayBasis
6984,Package,Microsoft.Package,DimPayGrade,,,,,,StagingToEDW_DimPayGrade
6985,Package\Execute HR_Staging to EDW DimPayGrade load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPayGrade load,,,,,,StagingToEDW_DimPayGrade
6986,Package\Execute HR_Staging to EDW DimPayGrade load\Execute spHR_StagingToEDW_DimPayGrade,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPayGrade,,,,,EXEC dbo.spHR_StagingToEDW_DimPayGrade,StagingToEDW_DimPayGrade
6987,Package,Microsoft.Package,DimPaymentType,,,,,,StagingToEDW_DimPaymentType
6988,Package\SEQ-spCMS_StagingToEDW_DimPaymentType,STOCK:SEQUENCE,SEQ-spCMS_StagingToEDW_DimPaymentType,,,,,,StagingToEDW_DimPaymentType
6989,Package\SEQ-spCMS_StagingToEDW_DimPaymentType\SQL-Execute spCMS_StagingToEDW_DimPaymentType,Microsoft.ExecuteSQLTask,SQL-Execute spCMS_StagingToEDW_DimPaymentType,,,,,Execute [dbo].[spCMS_StagingToEDW_DimPaymentType];,StagingToEDW_DimPaymentType
6990,Package,Microsoft.Package,DimPayRateChangeReason,,,,,,StagingToEDW_DimPayRateChangeReason
6991,Package\Execute HR_Staging to EDW DimPayRateChangeReason load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPayRateChangeReason load,,,,,,StagingToEDW_DimPayRateChangeReason
6992,Package\Execute HR_Staging to EDW DimPayRateChangeReason load\Execute spHR_StagingToEDW_DimPayRateChangeReason,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPayRateChangeReason,,,,,EXEC dbo.spHR_StagingToEDW_DimPayRateChangeReason,StagingToEDW_DimPayRateChangeReason
6993,Package,Microsoft.Package,DimPayrollType,,,,,,StagingToEDW_DimPayrollType
6994,Package\Execute MISC_Staging to EDW DimPayrollType load,STOCK:SEQUENCE,Execute MISC_Staging to EDW DimPayrollType load,,,,,,StagingToEDW_DimPayrollType
6995,Package\Execute MISC_Staging to EDW DimPayrollType load\Execute spMISC_StagingToEDW_DimPayrollType,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_DimPayrollType,,,,,EXEC dbo.spMISC_StagingToEDW_DimPayrollType,StagingToEDW_DimPayrollType
6996,Package,Microsoft.Package,DimPeopleGroup,,,,,,StagingToEDW_DimPeopleGroup
6997,Package\Excecute HR_Staging to EDW DimPeopleGroup load,STOCK:SEQUENCE,Excecute HR_Staging to EDW DimPeopleGroup load,,,,,,StagingToEDW_DimPeopleGroup
6998,Package\Excecute HR_Staging to EDW DimPeopleGroup load\Execute spHR_StagingToEDW_DimPeopleGroup,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPeopleGroup,,,,,EXEC spHR_StagingToEDW_DimPeopleGroup,StagingToEDW_DimPeopleGroup
6999,Package,Microsoft.Package,DimPerformanceRating,,,,,,StagingToEDW_DimPerformanceRating
7000,Package\Execute HR_Staging to EDW DimPerformanceRating load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPerformanceRating load,,,,,,StagingToEDW_DimPerformanceRating
7001,Package\Execute HR_Staging to EDW DimPerformanceRating load\Execute spHR_StagingToEDW_DimPerformanceRating,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPerformanceRating,,,,,EXEC dbo.spHR_StagingToEDW_DimPerformanceRating;,StagingToEDW_DimPerformanceRating
7002,Package,Microsoft.Package,DimPerson,,,,,,StagingToEDW_DimPerson
7003,Package\Execute HR_Staging to EDW DimPerson load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPerson load,,,,,,StagingToEDW_DimPerson
7004,Package\Execute HR_Staging to EDW DimPerson load\Execute spHR_StagingToEDW_DimPerson,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPerson,,,,,EXEC dbo.spHR_StagingToEDW_DimPerson,StagingToEDW_DimPerson
7005,Package,Microsoft.Package,DimPosition,,,,,,StagingToEDW_DimPosition
7006,Package\Execute HR_Staging to EDW DimPosition load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPosition load,,,,,,StagingToEDW_DimPosition
7007,Package\Execute HR_Staging to EDW DimPosition load\Execute spHR_StagingToEDW_DimPosition,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPosition,,,,,EXEC dbo.spHR_StagingToEDW_DimPosition,StagingToEDW_DimPosition
7008,Package,Microsoft.Package,DimProgram,,,,,,StagingToEDW_DimProgram
7009,Package\Excecute CMS_staging to EDW DimProgram,STOCK:SEQUENCE,Excecute CMS_staging to EDW DimProgram,,,,,,StagingToEDW_DimProgram
7010,Package\Excecute CMS_staging to EDW DimProgram\Execute spCMS_StagingToEDW_DimProgram,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimProgram,,,,,EXEC dbo.spCMS_StagingToEDW_DimProgram,StagingToEDW_DimProgram
7011,Package,Microsoft.Package,DimQualificationType,,,,,,StagingToEDW_DimQualificationType
7012,Package\Execute HR_Staging to EDW DimQualificationType load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimQualificationType load,,,,,,StagingToEDW_DimQualificationType
7013,Package\Execute HR_Staging to EDW DimQualificationType load\Execute spHR_StagingToEDW_DimQualificationType Item,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimQualificationType Item,,,,,EXEC [dbo].[spHR_StagingToEDW_DimQualificationType],StagingToEDW_DimQualificationType
7014,Package,Microsoft.Package,DimReportProfile,,,,,,StagingToEDW_DimReportProfile
7015,Package\Execute MISC_Staging to EDW DimReportProfile load,STOCK:SEQUENCE,Execute MISC_Staging to EDW DimReportProfile load,,,,,,StagingToEDW_DimReportProfile
7016,Package\Execute MISC_Staging to EDW DimReportProfile load\Execute spMISC_StagingToEDW_DimReportProfile,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_DimReportProfile,,,,,EXEC dbo.spMISC_StagingToEDW_DimReportProfile,StagingToEDW_DimReportProfile
7017,Package,Microsoft.Package,DimRetentionBaseWeek,,,,,,StagingToEDW_DimRetentionBaseWeek
7018,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingToEDW_DimRetentionBaseWeek
7019,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimRetentionBaseWeek,,StagingToEDW_DimRetentionBaseWeek
7020,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC- InsertCount,,StagingToEDW_DimRetentionBaseWeek
7021,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC- SourceCount,,StagingToEDW_DimRetentionBaseWeek
7022,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC- RetentionBaseWeek,,StagingToEDW_DimRetentionBaseWeek
7023,Package\SQL - End DimRetentionBaseWeek Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimRetentionBaseWeek Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimRetentionBaseWeek
7024,Package\SQL - Start the AuditLog for DimRetentionBaseWeek,Microsoft.ExecuteSQLTask,SQL - Start the AuditLog for DimRetentionBaseWeek,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimRetentionBaseWeek
7025,Package\Truncate DimRetentionBaseWeek,Microsoft.ExecuteSQLTask,Truncate DimRetentionBaseWeek,,,,,Truncate table DimRetentionBaseWeek,StagingToEDW_DimRetentionBaseWeek
7026,Package,Microsoft.Package,DimScheduleType,,,,,,StagingToEDW_DimScheduleType
7027,Package\SEQ-spCMS_StagingToEDW_DimScheduleType,STOCK:SEQUENCE,SEQ-spCMS_StagingToEDW_DimScheduleType,,,,,,StagingToEDW_DimScheduleType
7028,Package\SEQ-spCMS_StagingToEDW_DimScheduleType\SQL-  EXEC spCMS_StagingToEDW_DimScheduleType,Microsoft.ExecuteSQLTask,SQL-  EXEC spCMS_StagingToEDW_DimScheduleType,,,,, EXEC [dbo].[spCMS_StagingToEDW_DimScheduleType],StagingToEDW_DimScheduleType
7029,Package,Microsoft.Package,DimScheduleWeek,,,,,,StagingToEDW_DimScheduleWeek
7030,Package\SQL - End DimScheduleWeek Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimScheduleWeek Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimScheduleWeek
7031,Package\SQL - Get Deleted Count,Microsoft.ExecuteSQLTask,SQL - Get Deleted Count,,,,," SELECT COUNT(1) AS DeleteCount 
From dbo.DimScheduleWeek",StagingToEDW_DimScheduleWeek
7032,Package\SQL - Insert data into DimScheduleWeek,Microsoft.ExecuteSQLTask,SQL - Insert data into DimScheduleWeek,,,,,"WITH Numbers(N) -- CTE building the 7 weekday numbers
                  AS (
                  SELECT N
                  FROM(VALUES(1), (2), (3), (4), (5), (6), (7)) Numbers(N)),
                  Recur(N,
                        CalendarID) -- CTE building a combinations of Days per Week as a CalendarID
                  AS (
                  SELECT N,
                         CAST(N AS VARCHAR(1000))
                  FROM Numbers
                  UNION ALL
                  SELECT n.N,
                         CAST(r.CalendarID+','+CAST(n.N AS VARCHAR(10)) AS VARCHAR(1000))
                  FROM Recur r
                       INNER JOIN Numbers n ON n.N > r.N),
                  ScheduleWeekFlags -- CTE building a dataset of 7 flag columns for each days of the week, linking to the CalendarID
                  AS (
                  SELECT CalendarID,
                         CASE
                             WHEN CalendarID LIKE '%1%'
                             THEN '1'
                             ELSE '0'
                         END S,
                         CASE
                             WHEN CalendarID LIKE '%2%'
                             THEN '1'
                             ELSE '0'
                         END M,
                         CASE
                             WHEN CalendarID LIKE '%3%'
                             THEN '1'
                             ELSE '0'
                         END T,
                         CASE
                             WHEN CalendarID LIKE '%4%'
                             THEN '1'
                             ELSE '0'
                         END W,
                         CASE
                             WHEN CalendarID LIKE '%5%'
                             THEN '1'
                             ELSE '0'
                         END TH,
                         CASE
                             WHEN CalendarID LIKE '%6%'
                             THEN '1'
                             ELSE '0'
                         END F,
                         CASE
                             WHEN CalendarID LIKE '%7%'
                             THEN '1'
                             ELSE '0'
                         END SA
                  FROM Recur)
                  INSERT INTO dbo.DimScheduleWeek
                  ([ScheduleWeekName],
                  [RowStatus],
                   [ETLJobID]
                 )
                         SELECT CAST(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(r.CalendarID, '1', 'Su'), '2', 'M'), '3', 'Tu'), '4', 'W'), '5', 'Th'), '6', 'F'), '7', 'Sa') AS VARCHAR(50)) AS ScheduleWeekName,
                                'A' AS RowStatus,
                                ?
                         FROM Recur r
                              JOIN ScheduleWeekFlags s ON r.CalendarID = s.CalendarID
                         ORDER BY LEN(r.CalendarID),
                                  r.CalendarID;
             SELECT @@ROWCOUNT + 2 AS SourceCount;
    
                ",StagingToEDW_DimScheduleWeek
7033,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"DBCC CHECKIDENT('[DimScheduleWeek]', RESEED, 1);
SET IDENTITY_INSERT dbo.DimScheduleWeek ON;
INSERT INTO [dbo].[DimScheduleWeek]
([ScheduleWeekKey],
 [ScheduleWeekName],
 [RowStatus],
 [ETLJobID]
)
       SELECT-1,
             'Unknown Schedule Week',
              'A',
             ?
       UNION
       SELECT-2,
             'Not Applicable Schedule Week',
             'A',
             ?;
SET IDENTITY_INSERT dbo.DimScheduleWeek OFF;",StagingToEDW_DimScheduleWeek
7034,Package\SQL - Start DimScheduleWeek Auditlog,Microsoft.ExecuteSQLTask,SQL - Start DimScheduleWeek Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",StagingToEDW_DimScheduleWeek
7035,Package\SQL - Truncate DimScheduleWeek,Microsoft.ExecuteSQLTask,SQL - Truncate DimScheduleWeek,,,,, TRUNCATE TABLE dbo.DimScheduleWeek,StagingToEDW_DimScheduleWeek
7036,Package,Microsoft.Package,DimSession,,,,,,StagingToEDW_DimSession
7037,Package\Excecute CMS_staging to EDW DimSession,STOCK:SEQUENCE,Excecute CMS_staging to EDW DimSession,,,,,,StagingToEDW_DimSession
7038,Package\Excecute CMS_staging to EDW DimSession\Execute spCMS_StagingToEDW_DimSession,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimSession,,,,,EXEC dbo.spCMS_StagingToEDW_DimSession,StagingToEDW_DimSession
7039,Package,Microsoft.Package,DimSpecialInfo,,,,,,StagingToEDW_DimSpecialInfo
7040,Package\SEQ- StagingToEDW DimSpecialInfo Load,STOCK:SEQUENCE,SEQ- StagingToEDW DimSpecialInfo Load,,,,,,StagingToEDW_DimSpecialInfo
7041,Package\SEQ- StagingToEDW DimSpecialInfo Load\SQL- EXEC spHR_StagingToEDW_DimSpecialInfo,Microsoft.ExecuteSQLTask,SQL- EXEC spHR_StagingToEDW_DimSpecialInfo,,,,,Exec [dbo].[spHR_StagingToEDW_DimSpecialInfo],StagingToEDW_DimSpecialInfo
7042,Package,Microsoft.Package,DimSponsor,,,,,,StagingToEDW_DimSponsor
7043,Package\Executes spCMS_StagingToEDW_DimSponsor,STOCK:SEQUENCE,Executes spCMS_StagingToEDW_DimSponsor,,,,,,StagingToEDW_DimSponsor
7044,Package\Executes spCMS_StagingToEDW_DimSponsor\SQL_spCMS_StagingToEDW_DimSponsor,Microsoft.ExecuteSQLTask,SQL_spCMS_StagingToEDW_DimSponsor,,,,,Execute [dbo].[spCMS_StagingToEDW_DimSponsor],StagingToEDW_DimSponsor
7045,Package,Microsoft.Package,DimStudent,,,,,,StagingToEDW_DimStudent
7046,Package\Change History,STOCK:SEQUENCE,Change History,,,,,,StagingToEDW_DimStudent
7047,Package\SQL - Execute Staging To EDW DimStudent load,STOCK:SEQUENCE,SQL - Execute Staging To EDW DimStudent load,,,,,,StagingToEDW_DimStudent
7048,Package\SQL - Execute Staging To EDW DimStudent load\Execute spCMS_StagingToEDW_DimStudent,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimStudent,,,,,EXEC dbo.spCMS_StagingToEDW_DimStudent,StagingToEDW_DimStudent
7049,Package,Microsoft.Package,DimTier,,,,,,StagingToEDW_DimTier
7050,Package\SEQ- StagingToEDW DimTier Load,STOCK:SEQUENCE,SEQ- StagingToEDW DimTier Load,,,,,,StagingToEDW_DimTier
7051,Package\SEQ- StagingToEDW DimTier Load\SQL- EXEC spCMS_StagingToEDW_DimTier,Microsoft.ExecuteSQLTask,SQL- EXEC spCMS_StagingToEDW_DimTier,,,,,Exec [dbo].[spCMS_StagingToEDW_DimTier];,StagingToEDW_DimTier
7052,Package,Microsoft.Package,DimTimeCalculation,,,,,,StagingToEDW_DimTimeCalculation
7053,Package\EST - Load DimTimeCalculation,Microsoft.ExecuteSQLTask,EST - Load DimTimeCalculation,,,,,"DECLARE @DelCount INT, @InsCount INT, @AudID INT

SET @AudID = ?
SET @DelCount = (SELECT COUNT(1) FROM dbo.DimTimeCalculation)

TRUNCATE TABLE dbo.DimTimeCalculation

SET IDENTITY_INSERT dbo.DimTimeCalculation ON;


;WITH DimTimeCalc
AS (
	    SELECT -2 AS TCKey,	'Not Applicable Time Calculation' AS CalcName
		UNION ALL
		SELECT -1 AS TCKey,	'Unknown Time Calculation' AS CalcName
		UNION ALL
		SELECT 1 AS TCKey, 'Selection' AS CalcName
		UNION ALL
		SELECT 2 AS TCKey, 'PTD' AS CalcName
		UNION ALL
		SELECT 3 AS TCKey, 'QTD' AS CalcName
		UNION ALL
		SELECT 5 AS TCKey, 'YTD' AS CalcName
)
--SELECT * FROM DimTimeCalc+

INSERT INTO [dbo].[DimTimeCalculation]
(	  [TimeCalculationKey]
	 ,[TimeCalculationName]
     ,[EDWEffectiveFrom]
     ,[EDWEffectiveTo]
     ,[EDWRowStatus]
     ,[ETLJobID]			)
SELECT TCKey AS TimeCalculationKey,
       CalcName AS TimeCalculationName,
       CAST('1900-01-01 00:00:00.000' AS DATE) AS EffectiveFrom,
	   CAST('9999-12-31 23:59:59.999' AS DATE) AS EffectiveTo,
	   'A' AS RowStatus,
       @AudID As ETLJobID
FROM DimTimeCalc
ORDER BY TCKey;


--Get Insert Count
SET @InsCount = (SELECT COUNT(1) FROM dbo.DimTimeCalculation)


SET IDENTITY_INSERT dbo.DimTimeCalculation OFF;

SELECT @InsCount AS InsCount, @DelCount AS DelCount;",StagingToEDW_DimTimeCalculation
7054,Package\SQL - End Auditlog,Microsoft.ExecuteSQLTask,SQL - End Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimTimeCalculation
7055,Package\SQL - Start Auditlog,Microsoft.ExecuteSQLTask,SQL - Start Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimTimeCalculation
7056,Package,Microsoft.Package,DimTuitionAssistanceProvider,,,,,,StagingToEDW_DimTuitionAssistanceProvider
7057,Package\Execute spCMS_StagingToEDW_DimTuitionAssistanceProvider,STOCK:SEQUENCE,Execute spCMS_StagingToEDW_DimTuitionAssistanceProvider,,,,,,StagingToEDW_DimTuitionAssistanceProvider
7058,Package\Execute spCMS_StagingToEDW_DimTuitionAssistanceProvider\SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,,,,,EXEC dbo.spCMS_StagingToEDW_DimTuitionAssistanceProvider;,StagingToEDW_DimTuitionAssistanceProvider
7059,Package,Microsoft.Package,DimWebCampaign,,,,,,StagingToEDW_DimWebCampaign
7060,Package\Execute SalesForce_Staging To EDW DimWebCampaign load,STOCK:SEQUENCE,Execute SalesForce_Staging To EDW DimWebCampaign load,,,,,,StagingToEDW_DimWebCampaign
7061,Package\Execute SalesForce_Staging To EDW DimWebCampaign load\SQL - spSalesForce_StagingToEDW_DimWebCampaign,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_DimWebCampaign,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimWebCampaign;,StagingToEDW_DimWebCampaign
7062,Package,Microsoft.Package,FactAdjustment,,,,,,StagingToEDW_FactAdjustment
7063,Package\Execute Staging to EDW FactAdjustment load,STOCK:SEQUENCE,Execute Staging to EDW FactAdjustment load,,,,,,StagingToEDW_FactAdjustment
7064,Package\Execute Staging to EDW FactAdjustment load\Execute spCMS_StagingToEDW_FactAdjustment,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_FactAdjustment,,,,,EXEC dbo.spCMS_StagingToEDW_FactAdjustment,StagingToEDW_FactAdjustment
7065,Package,Microsoft.Package,FactARBalanceSnapshot,,,,,,StagingToEDW_FactARBalanceSnapshot
7066,Package\Back-up Transaction Log after CMS Load,STOCK:SEQUENCE,Back-up Transaction Log after CMS Load,,,,,,StagingToEDW_FactARBalanceSnapshot
7067,Package\Back-up Transaction Log after CMS Load\Execute spBackupTranLog,Microsoft.ExecuteSQLTask,Execute spBackupTranLog,,,,,EXEC spBackupTranLog 'BING_EDW',StagingToEDW_FactARBalanceSnapshot
7068,Package\Execute CMS_Staging To EDW FactARBalance load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactARBalance load,,,,,,StagingToEDW_FactARBalanceSnapshot
7069,Package\Execute CMS_Staging To EDW FactARBalance load\Execute spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,StagingToEDW_FactARBalanceSnapshot
7070,Package\Execute CSS_Staging To EDW FactARBalance load,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactARBalance load,,,,,,StagingToEDW_FactARBalanceSnapshot
7071,Package\Execute CSS_Staging To EDW FactARBalance load\Execute spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,,,,,Exec [dbo].[spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot],StagingToEDW_FactARBalanceSnapshot
7072,Package,Microsoft.Package,FactBilling,,,,,,StagingToEDW_FactBilling
7073,Package\Execute Staging to EDW FactBilling load,STOCK:SEQUENCE,Execute Staging to EDW FactBilling load,,,,,,StagingToEDW_FactBilling
7074,Package\Execute Staging to EDW FactBilling load\Execute spCMS_BatchLoad_StagingToEDW_FactBilling,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactBilling,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactBilling,StagingToEDW_FactBilling
7075,Package,Microsoft.Package,FactCenterStatSnapshot,,,,,,StagingToEDW_FactCenterStatSnapshot
7076,Package\Execute GL_Staging to EDW FactCenterStatSanpshot load,STOCK:SEQUENCE,Execute GL_Staging to EDW FactCenterStatSanpshot load,,,,,,StagingToEDW_FactCenterStatSnapshot
7077,Package\Execute GL_Staging to EDW FactCenterStatSanpshot load\Execute spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,Microsoft.ExecuteSQLTask,Execute spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,,,,,EXEC spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,StagingToEDW_FactCenterStatSnapshot
7078,Package,Microsoft.Package,FactEmployeeAssessment,,,,,,StagingToEDW_FactEmployeeAssessment
7079,Package\Excecute HR_staging to EDW FactEmployeeAssessment,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeeAssessment,,,,,,StagingToEDW_FactEmployeeAssessment
7080,Package\Excecute HR_staging to EDW FactEmployeeAssessment\Execute spHR_StagingToEDW_FactEmployeeAssessment,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeeAssessment,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssessment,StagingToEDW_FactEmployeeAssessment
7081,Package,Microsoft.Package,FactEmployeeAssignment,,,,,,StagingToEDW_FactEmployeeAssignment
7082,Package\Excecute HR_staging to EDW FactEmployeeAssignment,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeeAssignment,,,,,,StagingToEDW_FactEmployeeAssignment
7083,Package\Excecute HR_staging to EDW FactEmployeeAssignment\Execute spHR_StagingToEDW_FactEmployeeAssignment,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeeAssignment,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssignment,StagingToEDW_FactEmployeeAssignment
7084,Package,Microsoft.Package,FactEmployeeCompliance,,,,,,StagingToEDW_FactEmployeeCompliance
7085,Package\Excecute HR_staging to EDW FactEmployeeCompliance,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeeCompliance,,,,,,StagingToEDW_FactEmployeeCompliance
7086,Package\Excecute HR_staging to EDW FactEmployeeCompliance\Execute spHR_StagingToEDW_FactEmployeeCompliance,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeeCompliance,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeCompliance,StagingToEDW_FactEmployeeCompliance
7087,Package,Microsoft.Package,FactEmployeeLeave,,,,,,StagingToEDW_FactEmployeeLeave
7088,Package\Excecute HR_staging to EDW FactEmployeeLeave,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeeLeave,,,,,,StagingToEDW_FactEmployeeLeave
7089,Package\Excecute HR_staging to EDW FactEmployeeLeave\Execute spHR_StagingToEDW_FactEmployeeLeave,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeeLeave,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeLeave,StagingToEDW_FactEmployeeLeave
7090,Package,Microsoft.Package,FactEmployeePayRate,,,,,,StagingToEDW_FactEmployeePayRate
7091,Package\Excecute HR_staging to EDW FactEmployeePayRate,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeePayRate,,,,,,StagingToEDW_FactEmployeePayRate
7092,Package\Excecute HR_staging to EDW FactEmployeePayRate\Execute spHR_StagingToEDW_FactEmployeePayRate,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeePayRate,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeePayRate,StagingToEDW_FactEmployeePayRate
7093,Package,Microsoft.Package,FactEmployeePerformance,,,,,,StagingToEDW_FactEmployeePerformance
7094,Package\Excecute HR_staging to EDW FactEmployeePerformance,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeePerformance,,,,,,StagingToEDW_FactEmployeePerformance
7095,Package\Excecute HR_staging to EDW FactEmployeePerformance\Execute spHR_StagingToEDW_FactEmployeePerformance,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeePerformance,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeePerformance,StagingToEDW_FactEmployeePerformance
7096,Package,Microsoft.Package,FactEmployeeQualification,,,,,,StagingToEDW_FactEmployeeQualification
7097,Package\Execute Staging to EDW FactEmployeeQualification load,STOCK:SEQUENCE,Execute Staging to EDW FactEmployeeQualification load,,,,,,StagingToEDW_FactEmployeeQualification
7098,Package\Execute Staging to EDW FactEmployeeQualification load\Execute spHR_BatchLoad_StagingToEDW_FactEmployeeQualification,Microsoft.ExecuteSQLTask,Execute spHR_BatchLoad_StagingToEDW_FactEmployeeQualification,,,,,EXEC [dbo].[spHR_StagingToEDW_FactEmployeeQualification],StagingToEDW_FactEmployeeQualification
7099,Package,Microsoft.Package,FactFTESnapshot,,,,,,StagingToEDW_FactFTESnapshot
7100,Package\Execute CMS_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactFTESnapshot load,,,,,,StagingToEDW_FactFTESnapshot
7101,Package\Execute CMS_Staging To EDW FactFTESnapshot load\Execute spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,StagingToEDW_FactFTESnapshot
7102,Package,Microsoft.Package,FactFTESnapshotAcquired,,,,,,StagingToEDW_FactFTESnapshotAcquired
7103,Package\Execute spMISC_StagingToEDW_FactFTESnapshot,STOCK:SEQUENCE,Execute spMISC_StagingToEDW_FactFTESnapshot,,,,,,StagingToEDW_FactFTESnapshotAcquired
7104,Package\Execute spMISC_StagingToEDW_FactFTESnapshot\Execute spMISC_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo]. spMISC_StagingToEDW_FactFTESnapshot,StagingToEDW_FactFTESnapshotAcquired
7105,Package,Microsoft.Package,FactFTESnapshotCSS,,,,,,StagingToEDW_FactFTESnapshotCSS
7106,Package\Execute CSS_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactFTESnapshot load,,,,,,StagingToEDW_FactFTESnapshotCSS
7107,Package\Execute CSS_Staging To EDW FactFTESnapshot load\Execute spCSS_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo].[spCSS_BatchLoad_StagingToEDW_FactFTESnapshot],StagingToEDW_FactFTESnapshotCSS
7108,Package,Microsoft.Package,FactFTESnapshot,,,,,,StagingToEDW_FactFTESnapshotPRO
7109,Package\Execute Cambridge_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute Cambridge_Staging To EDW FactFTESnapshot load,,,,,,StagingToEDW_FactFTESnapshotPRO
7110,Package\Execute Cambridge_Staging To EDW FactFTESnapshot load\Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo].[spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot],StagingToEDW_FactFTESnapshotPRO
7111,Package,Microsoft.Package,FactGLBalance,,,,,,StagingToEDW_FactGLBalance
7112,Package\Execute GL_Staging to EDW FactGLBalance load,STOCK:SEQUENCE,Execute GL_Staging to EDW FactGLBalance load,,,,,,StagingToEDW_FactGLBalance
7113,Package\Execute GL_Staging to EDW FactGLBalance load\Execute spGL_BatchLoad_StagingToEDW_FactGLBalance,Microsoft.ExecuteSQLTask,Execute spGL_BatchLoad_StagingToEDW_FactGLBalance,,,,,EXEC spGL_BatchLoad_StagingToEDW_FactGLBalance,StagingToEDW_FactGLBalance
7114,Package,Microsoft.Package,FactGLBalancePlanAllocation,,,,,,StagingToEDW_FactGLBalancePlanAllocation
7115,Package\Execute MISC_Staging to EDW FactGLBalancePlanAllocation load,STOCK:SEQUENCE,Execute MISC_Staging to EDW FactGLBalancePlanAllocation load,,,,,,StagingToEDW_FactGLBalancePlanAllocation
7116,Package\Execute MISC_Staging to EDW FactGLBalancePlanAllocation load\Execute spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,,,,,EXEC dbo.spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,StagingToEDW_FactGLBalancePlanAllocation
7117,Package,Microsoft.Package,FactLaborHourAcquired,,,,,,StagingToEDW_FactLaborHourAcquired
7118,Package\Execute spMISC_StagingToEDW_FactLaborHourACQ,STOCK:SEQUENCE,Execute spMISC_StagingToEDW_FactLaborHourACQ,,,,,,StagingToEDW_FactLaborHourAcquired
7119,Package\Execute spMISC_StagingToEDW_FactLaborHourACQ\Execute spMISC_StagingToEDW_FactLaborHourACQ,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_FactLaborHourACQ,,,,,"Exec [dbo].spMISC_StagingToEDW_FactLaborHourACQ
NULL,
?,
NULL",StagingToEDW_FactLaborHourAcquired
7120,Package,Microsoft.Package,FactLaborHourActual,,,,,,StagingToEDW_FactLaborHourActual
7121,Package\Execute MISC_Staging To EDW FactLaborHourActual load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactLaborHourActual load,,,,,,StagingToEDW_FactLaborHourActual
7122,Package\Execute MISC_Staging To EDW FactLaborHourActual load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourActual,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourActual,,,,,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborHourActual,StagingToEDW_FactLaborHourActual
7123,Package,Microsoft.Package,FactLaborHourTarget,,,,,,StagingToEDW_FactLaborHourTarget
7124,Package\Execute MISC_Staging To EDW FactLaborHourTarget load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactLaborHourTarget load,,,,,,StagingToEDW_FactLaborHourTarget
7125,Package\Execute MISC_Staging To EDW FactLaborHourTarget load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTarget,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTarget,,,,,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborHourTarget,StagingToEDW_FactLaborHourTarget
7126,Package,Microsoft.Package,FactLaborHourTargetLegacy,,,,,,StagingToEDW_FactLaborHourTargetLegacy
7127,Package\Execute MISC_Staging To EDW FactLaborHourTarget load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactLaborHourTarget load,,,,,,StagingToEDW_FactLaborHourTargetLegacy
7128,Package\Execute MISC_Staging To EDW FactLaborHourTarget load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTargetLegacy,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTargetLegacy,,,,,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborHourTargetLegacy,StagingToEDW_FactLaborHourTargetLegacy
7129,Package,Microsoft.Package,FactLaborHourTargetPRO,,,,,,StagingToEDW_FactLaborHourTargetPRO
7130,Package\Execute Cambridge_Staging To EDW FactLaborHourTargetPRO load,STOCK:SEQUENCE,Execute Cambridge_Staging To EDW FactLaborHourTargetPRO load,,,,,,StagingToEDW_FactLaborHourTargetPRO
7131,Package\Execute Cambridge_Staging To EDW FactLaborHourTargetPRO load\Execute spCambridge_BatchLoad_StagingToEDW_FactLaborHourTarget,Microsoft.ExecuteSQLTask,Execute spCambridge_BatchLoad_StagingToEDW_FactLaborHourTarget,,,,,"EXEC 
spCambridge_BatchLoad_StagingToEDW_FactLaborHourTarget",StagingToEDW_FactLaborHourTargetPRO
7132,Package,Microsoft.Package,FactLaborSalary,,,,,,StagingToEDW_FactLaborSalary
7133,Package\Execute MISC_Staging To EDW FactLaborSalary load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactLaborSalary load,,,,,,StagingToEDW_FactLaborSalary
7134,Package\Execute MISC_Staging To EDW FactLaborSalary load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborSalary,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactLaborSalary,,,,,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborSalary,StagingToEDW_FactLaborSalary
7135,Package,Microsoft.Package,FactLeadEvent,,,,,,StagingToEDW_FactLeadEvent
7136,Package\Excecute SalesForce_staging to EDW FactLeadEvent,STOCK:SEQUENCE,Excecute SalesForce_staging to EDW FactLeadEvent,,,,,,StagingToEDW_FactLeadEvent
7137,Package\Excecute SalesForce_staging to EDW FactLeadEvent\Execute spSalesForce_StagingToEDW_FactLeadEvent,Microsoft.ExecuteSQLTask,Execute spSalesForce_StagingToEDW_FactLeadEvent,,,,,EXEC dbo.spSalesForce_StagingToEDW_FactLeadEvent,StagingToEDW_FactLeadEvent
7138,Package,Microsoft.Package,FactLeadPipeline,,,,,,StagingToEDW_FactLeadPipeline
7139,Package\Execute StagingToEDW FactLeadPipeline load,STOCK:SEQUENCE,Execute StagingToEDW FactLeadPipeline load,,,,,,StagingToEDW_FactLeadPipeline
7140,Package\Execute StagingToEDW FactLeadPipeline load\SQL - spSalesForce_StagingToEDW_FactLeadPipeline,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_FactLeadPipeline,,,,,EXEC dbo.spSalesForce_StagingToEDW_FactLeadPipeline;,StagingToEDW_FactLeadPipeline
7141,Package,Microsoft.Package,FactLifecycleStatusSnapshot,,,,,,StagingToEDW_FactLifecycleStatusSnapshot
7142,Package\Execute CMS_Staging To EDW FactLifecycleStatusSnapshot load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactLifecycleStatusSnapshot load,,,,,,StagingToEDW_FactLifecycleStatusSnapshot
7143,Package\Execute CMS_Staging To EDW FactLifecycleStatusSnapshot load\Execute spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,StagingToEDW_FactLifecycleStatusSnapshot
7144,Package,Microsoft.Package,FactNetRevenue,,,,,,StagingToEDW_FactNetRevenue
7145,Package\Execute CMS_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute CMS_Staging to EDW FactNetRevenue load,,,,,,StagingToEDW_FactNetRevenue
7146,Package\Execute CMS_Staging to EDW FactNetRevenue load\Execute spCMS_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactNetRevenue,StagingToEDW_FactNetRevenue
7147,Package,Microsoft.Package,FactNetRevenueAcquired,,,,,,StagingToEDW_FactNetRevenueAcquired
7148,Package\Execute HOR_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute HOR_Staging to EDW FactNetRevenue load,,,,,,StagingToEDW_FactNetRevenueAcquired
7149,Package\Execute HOR_Staging to EDW FactNetRevenue load\Execute spMISC_StagingToEDW_FactNetRevenueACQ,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_FactNetRevenueACQ,,,,,"EXEC spMISC_StagingToEDW_FactNetRevenueACQ
   NULL
  ,?
  ,NULL",StagingToEDW_FactNetRevenueAcquired
7150,Package,Microsoft.Package,FactNetRevenueHOR,,,,,,StagingToEDW_FactNetRevenueHOR
7151,Package\Execute HOR_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute HOR_Staging to EDW FactNetRevenue load,,,,,,StagingToEDW_FactNetRevenueHOR
7152,Package\Execute HOR_Staging to EDW FactNetRevenue load\Execute spHOR_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,Execute spHOR_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC spHOR_BatchLoad_StagingToEDW_FactNetRevenue,StagingToEDW_FactNetRevenueHOR
7153,Package,Microsoft.Package,FactNetRevenuePRO,,,,,,StagingToEDW_FactNetRevenuePRO
7154,Package\Execute PRO_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute PRO_Staging to EDW FactNetRevenue load,,,,,,StagingToEDW_FactNetRevenuePRO
7155,Package\Execute PRO_Staging to EDW FactNetRevenue load\Execute spPRO_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,Execute spPRO_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC spPRO_BatchLoad_StagingToEDW_FactNetRevenue,StagingToEDW_FactNetRevenuePRO
7156,Package,Microsoft.Package,FactPartnerVerifiedSponsor,,,,,,StagingToEDW_FactPartnerVerifiedSponsor
7157,Package\DFT - Load FactPartnerVerifiedSponsor,Microsoft.Pipeline,DFT - Load FactPartnerVerifiedSponsor,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - ETLJobID,,StagingToEDW_FactPartnerVerifiedSponsor
7158,Package\DFT - Load FactPartnerVerifiedSponsor,Microsoft.Pipeline,DFT - Load FactPartnerVerifiedSponsor,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactPartnerVerifiedSponsor,,StagingToEDW_FactPartnerVerifiedSponsor
7159,Package\DFT - Load FactPartnerVerifiedSponsor,Microsoft.Pipeline,DFT - Load FactPartnerVerifiedSponsor,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,StagingToEDW_FactPartnerVerifiedSponsor
7160,Package\DFT - Load FactPartnerVerifiedSponsor,Microsoft.Pipeline,DFT - Load FactPartnerVerifiedSponsor,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactPartnerVerifiedSponsor Landing,,StagingToEDW_FactPartnerVerifiedSponsor
7161,Package\DFT - Load Partner Verified Landing,Microsoft.Pipeline,DFT - Load Partner Verified Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactPartnerVerifiedSponsor Landing,,StagingToEDW_FactPartnerVerifiedSponsor
7162,Package\DFT - Load Partner Verified Landing,Microsoft.Pipeline,DFT - Load Partner Verified Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - CMS SponSponsor,,StagingToEDW_FactPartnerVerifiedSponsor
7163,Package\SQL - End FactPartnerVerifiedSponsor Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End FactPartnerVerifiedSponsor Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",StagingToEDW_FactPartnerVerifiedSponsor
7164,Package\SQL - Get LastProcessedDate,Microsoft.ExecuteSQLTask,SQL - Get LastProcessedDate,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",StagingToEDW_FactPartnerVerifiedSponsor
7165,Package\SQL - InsertCount,Microsoft.ExecuteSQLTask,SQL - InsertCount,,,,,SELECT COUNT(1) AS InsertCount FROM dbo.FactPartnerVerifiedSponsor WHERE  CreatedDate>?,StagingToEDW_FactPartnerVerifiedSponsor
7166,Package\SQL - Start FactPartnerVerifiedSponsor Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FactPartnerVerifiedSponsor Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_FactPartnerVerifiedSponsor
7167,Package\SQL - Update FactPartnerVerifiedSponsor,Microsoft.ExecuteSQLTask,SQL - Update FactPartnerVerifiedSponsor,,,,,"-------------------------------------------------------------------------------------------------------
UPDATE FCT
SET FCT.PartnerAssignmentEndDate = GETDATE()
  , FCT.ModifiedDate = GETDATE()
  , FCT.Effectiveto = CONVERT(Date, GETDATE())
  , FCT.RowStatus='H'
  ,FCT.ETLJobID=?
FROM DW_Mart.dbo.FactPartnerVerifiedSponsor                    FCT
    JOIN DW_Mart.dbo.DimSponsor                                Spon
        ON FCT.SponsorKey = Spon.SponsorKey
    LEFT JOIN DW_Mart.dbo.DimPartner                           Prtnr
        ON FCT.PartnerKey = Prtnr.PartnerKey
     JOIN DW_Landing.dbo.FactPartnerVerifiedSponsorLanding Ldng
        ON Ldng.SponsorID = Spon.SponsorID
WHERE (COALESCE(Ldng.PartnerID, '-1') <> COALESCE(Prtnr.PartnerID, '-1') OR COALESCE(Ldng.PartnerAssignmentStartDate,'1900-01-01')<>COALESCE(FCT.PartnerAssignmentStartDate,'1900-01-01'))
      AND FCT.PartnerAssignmentEndDate IS NULL  AND FCT.RowStatus='A'
-------------------------------------------------------------------------------------------------------
UPDATE FCT
SET FCT.PartnerVerificationEndDate = GETDATE()
  , FCT.ModifiedDate = GETDATE()
  , FCT.EffectiveTo = CONVERT(Date, GETDATE())
  , FCT.RowStatus='H'
  ,FCT.ETLJobID=?
FROM DW_Mart.dbo.FactPartnerVerifiedSponsor                    FCT
    JOIN DW_Mart.dbo.DimSponsor                                Spon
        ON FCT.SponsorKey = Spon.SponsorKey
    LEFT JOIN DW_Mart.dbo.DimPartner                           Prtnr
        ON FCT.PartnerKey = Prtnr.PartnerKey
     JOIN DW_Landing.dbo.FactPartnerVerifiedSponsorLanding Ldng
        ON Ldng.SponsorID = Spon.SponsorID
WHERE (
          COALESCE(Ldng.PartnerID, '-1') <> COALESCE(Prtnr.PartnerID, '-1')
          OR (Ldng.isPartnerVerified <> FCT.isPartnerVerified)
		  OR(COALESCE(Convert(Date,ldng.PartnerVerificationStartDate),'1900-01-01')<>COALESCE(Convert(Date,Fct.PartnerVerificationStartDate),'1900-01-01')) 
      )
      AND FCT.PartnerVerificationEndDate IS NULL  AND FCT.RowStatus='A'
-------------------------------------------------------------------------------------------------------",StagingToEDW_FactPartnerVerifiedSponsor
7168,Package\SQL - Update LastProcessedDate,Microsoft.ExecuteSQLTask,SQL - Update LastProcessedDate,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",StagingToEDW_FactPartnerVerifiedSponsor
7169,Package\SQL - UpdateCount,Microsoft.ExecuteSQLTask,SQL - UpdateCount,,,,,SELECT COUNT(1) AS UpdateCount FROM dbo.FactPartnerVerifiedSponsor WHERE CreatedDate<>ModifiedDate AND ModifiedDate>?,StagingToEDW_FactPartnerVerifiedSponsor
7170,Package\Truncate PartnerVerified Landing,Microsoft.ExecuteSQLTask,Truncate PartnerVerified Landing,,,,,TRUNCATE TABLE dbo.FactPartnerVerifiedSponsorLanding,StagingToEDW_FactPartnerVerifiedSponsor
7171,Package,Microsoft.Package,FactPayment,,,,,,StagingToEDW_FactPayment
7172,Package\Execute Staging to EDW FactPayment load,STOCK:SEQUENCE,Execute Staging to EDW FactPayment load,,,,,,StagingToEDW_FactPayment
7173,Package\Execute Staging to EDW FactPayment load\Execute spCMS_BatchLoad_StagingToEDW_FactPayment,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactPayment,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactPayment,StagingToEDW_FactPayment
7174,Package,Microsoft.Package,FactPaymentApplied,,,,,,StagingToEDW_FactPaymentApplied
7175,Package\Execute Staging to EDW FactPaymentApplied load,STOCK:SEQUENCE,Execute Staging to EDW FactPaymentApplied load,,,,,,StagingToEDW_FactPaymentApplied
7176,Package\Execute Staging to EDW FactPaymentApplied load\Execute spCMS_StagingToEDW_FactPaymentApplied,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_FactPaymentApplied,,,,,EXEC dbo.spCMS_StagingToEDW_FactPaymentApplied,StagingToEDW_FactPaymentApplied
7177,Package,Microsoft.Package,FactPersonSpecialInfo,,,,,,StagingToEDW_FactPersonSpecialInfo
7178,Package\Excecute HR_staging to EDW FactPersonSpecialInfo,STOCK:SEQUENCE,Excecute HR_staging to EDW FactPersonSpecialInfo,,,,,,StagingToEDW_FactPersonSpecialInfo
7179,Package\Excecute HR_staging to EDW FactPersonSpecialInfo\Execute spHR_StagingToEDW_FactPersonSpecialInfo,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactPersonSpecialInfo,,,,,EXEC dbo.spHR_StagingToEDW_FactPersonSpecialInfo,StagingToEDW_FactPersonSpecialInfo
7180,Package,Microsoft.Package,FactProgramDetail,,,,,,StagingToEDW_FactProgramDetail
7181,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactProgramDetail,,StagingToEDW_FactProgramDetail
7182,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactProgramDetailUpdate,,StagingToEDW_FactProgramDetail
7183,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,StagingToEDW_FactProgramDetail
7184,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,StagingToEDW_FactProgramDetail
7185,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_FactProgramDetail
7186,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - locSiteProgram,,StagingToEDW_FactProgramDetail
7187,Package\SQL - Create Update Table,Microsoft.ExecuteSQLTask,SQL - Create Update Table,,,,,"IF OBJECT_ID('FactProgramDetailUpdate', 'U') IS NOT NULL 
	DROP TABLE FactProgramDetailUpdate; 

CREATE TABLE [FactProgramDetailUpdate](
	[ProgramDetailID] [int] NOT NULL,
	[CenterKey] [int] NOT NULL,
	[ProgramKey] [int] NOT NULL,
	[StudentTeacherRatio] [int] NOT NULL,
	[StudentMinimumAgeMonths] [int] NOT NULL,
	[StudentMaximumAgeMonths] [int] NOT NULL,
	[EDWCreatedDate] [datetime2](7) NOT NULL,
	[EDWCreatedBy] [varchar](50) NOT NULL,
	[EDWModifiedDate] [datetime2](7) NOT NULL,
	[EDWModifiedBy] [varchar](50) NOT NULL,
	[Deleted] [datetime2](7) NULL
)
",StagingToEDW_FactProgramDetail
7188,Package\SQL - Drop Update Table,Microsoft.ExecuteSQLTask,SQL - Drop Update Table,,,,,DROP TABLE [FactProgramDetailUpdate],StagingToEDW_FactProgramDetail
7189,Package\SQL - Update EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update EDWETLBatchControl,,,,,"UPDATE EDWETLBatchControl
SET LastProcessedDate = ?, Status = 'Success'
WHERE EventName = 'FactProgramDetail'",StagingToEDW_FactProgramDetail
7190,Package\SQL - Update FactProgramDetail from Update table,Microsoft.ExecuteSQLTask,SQL - Update FactProgramDetail from Update table,,,,,"DELETE f 
FROM FactProgramDetail f
INNER JOIN FactProgramDetailUpdate u
ON f.ProgramDetailID = u.ProgramDetailID 
AND u.Deleted IS NULL

INSERT INTO FactProgramDetail
SELECT ProgramDetailID, CenterKey, ProgramKey, StudentTeacherRatio, StudentMinimumAgeMonths, StudentMaximumAgeMonths,
EDWCreatedDate, EDWCreatedBy, EDWModifiedDate, EDWModifiedBy, Deleted           
FROM FactProgramDetailUpdate WHERE Deleted IS NULL

SELECT @@ROWCOUNT AS UpdateCount",StagingToEDW_FactProgramDetail
7191,Package\SQL - Update in FactProgramDetail for Deleted Records,Microsoft.ExecuteSQLTask,SQL - Update in FactProgramDetail for Deleted Records,,,,,"UPDATE dest 
SET	dest.Deleted =  upd.Deleted
   ,dest.EDWModifiedDate = upd.Deleted
FROM FactProgramDetail dest
INNER JOIN FactProgramDetailUpdate upd
ON dest.ProgramDetailID = upd.ProgramDetailID
AND upd.Deleted IS NOT NULL

SELECT @@ROWCOUNT AS DeleteCount",StagingToEDW_FactProgramDetail
7192,Package,Microsoft.Package,FactSessionEnrollment,,,,,,StagingToEDW_FactSessionEnrollment
7193,Package\Execute Staging to EDW FactSessionEnrollment load,STOCK:SEQUENCE,Execute Staging to EDW FactSessionEnrollment load,,,,,,StagingToEDW_FactSessionEnrollment
7194,Package\Execute Staging to EDW FactSessionEnrollment load\Execute spCMS_StagingToEDW_FactSessionEnrollment,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_FactSessionEnrollment,,,,,EXEC dbo.spCMS_StagingToEDW_FactSessionEnrollment,StagingToEDW_FactSessionEnrollment
7195,Package,Microsoft.Package,FactTierAssignment,,,,,,StagingToEDW_FactTierAssignment
7196,Package\Execute Staging to EDW,STOCK:SEQUENCE,Execute Staging to EDW,,,,,,StagingToEDW_FactTierAssignment
7197,Package\Execute Staging to EDW\Execute spCMS_StagingToEDW_FactTierAssignment,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_FactTierAssignment,,,,,EXEC dbo.spCMS_StagingToEDW_FactTierAssignment,StagingToEDW_FactTierAssignment
7198,Package,Microsoft.Package,MartToEDW_CostCenter_OneTimeLoadforCompNonComp,,,,,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7199,Package\Create View,STOCK:SEQUENCE,Create View,,,,,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7200,Package\Create View\SQL - Create View vFactFTESnapshot,Microsoft.ExecuteSQLTask,SQL - Create View vFactFTESnapshot,,,,,"CREATE VIEW [dbo].[vFactFTESnapshot]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.FTE) AS FTE
     FROM dbo.FactFTESnapshot AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7201,Package\Create View\SQL - Create View vFactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - Create View vFactGLBalancePlanAllocation,,,,,"CREATE VIEW  [dbo].[vFactGLBalancePlanAllocation]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
   dm.GLMetricTypeCode,
   dm.GLMetricTypeKey,
            f.AccountSubaccountKey,
   COUNT_BIG(*) AS [Count],
   SUM(f.GLBalancePlanAllocationAmount) AS GLBalancePlanAllocationAmount
 FROM [dbo].[FactGLBalancePlanAllocation] AS f
      JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
   JOIN dbo.DimGLMetricType AS dm ON dm.GLMetricTypeKey=f.GLMetricTypeKey
   JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
     dm.GLMetricTypeCode,
     dm.GLMetricTypeKey,
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7202,Package\Create View\SQL - Create View vFactLaborHour,Microsoft.ExecuteSQLTask,SQL - Create View vFactLaborHour,,,,,"CREATE VIEW [dbo].[vFactLaborHour]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber,
   f.DataScenarioKey,
            ds.DataScenarioName, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.[Hours]) AS [Hours],
            f.IsTSEF
     FROM [dbo].[FactLaborHour] AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimDataScenario AS ds ON ds.DataScenarioKey = f.DataScenarioKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
     f.DataScenarioKey,
              ds.DataScenarioName, 
              f.AccountSubaccountKey,
 f.IsTSEF;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7203,Package\Create View\SQL - Create View vFactLaborSalary,Microsoft.ExecuteSQLTask,SQL - Create View vFactLaborSalary,,,,,"CREATE VIEW  [dbo].[vFactLaborSalary]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey,
   COUNT_BIG(*) AS [Count],
   SUM(f.NetAmount) AS [NetAmount]
 FROM [dbo].[FactLaborSalary] AS f
      JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
   JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7204,Package\Create View\SQL - Create View vFactNetRevenue,Microsoft.ExecuteSQLTask,SQL - Create View vFactNetRevenue,,,,,"CREATE VIEW [dbo].[vFactNetRevenue] 
WITH SCHEMABINDING
 AS 
SELECT d.FiscalWeekNumber
      ,d.FiscalWeekEndDate 
      ,mcc.CostCenterKey 
      ,mcc.CostCenterNumber 
      ,f.AccountSubaccountKey 
      ,COUNT_BIG(*) AS [Count] 
   ,SUM(f.NetRevenueAmount) AS NetRevenueAmount
 FROM dbo.FactNetRevenue AS f
    JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7205,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7206,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7207,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7208,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimCostCenter,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7209,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - tfnGL_StagingGenerate_CostCenter(),,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7210,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7211,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD1 Update Count,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7212,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7213,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7214,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7215,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD1 Update,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7216,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7217,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7218,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,Insert New,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7219,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB - SRC DimCostCenter,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7220,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7221,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Update Existing,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7222,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7223,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7224,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimCostCenter_DM_Data,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7225,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7226,Package\SEQ - Drop Indexed Views,STOCK:SEQUENCE,SEQ - Drop Indexed Views,,,,,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7227,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactFTESnapshot,Microsoft.ExecuteSQLTask,SQL - Drop View vFactFTESnapshot,,,,,"IF OBJECT_ID('dbo.vFactFTESnapshot') IS NOT NULL
	DROP VIEW [dbo].[vFactFTESnapshot];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7228,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - Drop View vFactGLBalancePlanAllocation,,,,,"IF OBJECT_ID('[dbo].[vFactGLBalancePlanAllocation]')IS NOT NULL
 DROP VIEW [dbo].[vFactGLBalancePlanAllocation];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7229,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactLaborHour,Microsoft.ExecuteSQLTask,SQL - Drop View vFactLaborHour,,,,,"IF OBJECT_ID('[dbo].[vFactLaborHour]')IS NOT NULL
 DROP VIEW [dbo].[vFactLaborHour];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7230,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactLaborSalary,Microsoft.ExecuteSQLTask,SQL - Drop View vFactLaborSalary,,,,,"IF OBJECT_ID('[dbo].[vFactLaborSalary]')IS NOT NULL
 DROP VIEW [dbo].[vFactLaborSalary];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7231,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactNetRevenue,Microsoft.ExecuteSQLTask,SQL - Drop View vFactNetRevenue,,,,,"IF OBJECT_ID('[dbo].[vFactNetRevenue]')IS NOT NULL
 DROP VIEW [dbo].[vFactNetRevenue];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7232,Package\Sequence Container,STOCK:SEQUENCE,Sequence Container,,,,,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7233,Package\Sequence Container\SQL - Create FTE Index,Microsoft.ExecuteSQLTask,SQL - Create FTE Index,,,,,"CREATE UNIQUE CLUSTERED INDEX CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON [dbo].[vFactFTESnapshot](FiscalWeekNumber, CostCenterKey, AccountSubaccountKey);",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7234,Package\Sequence Container\SQL - Create Labor Hour Index,Microsoft.ExecuteSQLTask,SQL - Create Labor Hour Index,,,,,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey]
ON [dbo].[vFactLaborHour]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC, [DataScenarioKey] ASC);
",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7235,Package\Sequence Container\SQL - Create Labor SalaryIndex,Microsoft.ExecuteSQLTask,SQL - Create Labor SalaryIndex,,,,,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[vFactLaborSalary]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7236,Package\Sequence Container\SQL - Create Plan Allocation  Index,Microsoft.ExecuteSQLTask,SQL - Create Plan Allocation  Index,,,,,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey]
    ON [dbo].[vFactGLBalancePlanAllocation]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC, [GLMetricTypeKey] ASC);",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7237,Package\Sequence Container\SQL - Create Revenue Index,Microsoft.ExecuteSQLTask,SQL - Create Revenue Index,,,,,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactNetRevenue_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[vFactNetRevenue]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7238,Package\SQL - Begin DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimCostCenter ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7239,Package\SQL - End DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimCostCenter ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7240,Package\SQL - Onetime History for CompStatus,Microsoft.ExecuteSQLTask,SQL - Onetime History for CompStatus,,,,,"/*--------------Comp---------------*/

INSERT INTO [dbo].DimCostCenter
SELECT 
      [CostCenterNumber]
      ,[CostCenterName]
      ,[CompanyID]
      ,[CostCenterTypeID]
      ,[CostCenterTypeName]
      ,[BusinessUnitCode]
      ,[BusinessUnitName]
      ,[OrganizationLevelCode]
      ,[OrganizationLevelName]
      ,[FunctionCode]
      ,[FunctionName]
      ,[LineOfBusinessCode]
      ,[LineOfBusinessName]
      ,[LineOfBusinessCategoryCode]
      ,[LineOfBusinessCategoryName]
      ,[LineOfBusinessSubcategoryCode]
      ,[LineOfBusinessSubcategoryName]
      ,[CCHierarchyLevel1Name]
      ,[CCHierarchyLevel2Name]
      ,[CCHierarchyLevel3Name]
      ,[CCHierarchyLevel4Name]
      ,[CCHierarchyLevel5Name]
      ,[CCHierarchyLevel6Name]
      ,[CCHierarchyLevel7Name]
      ,[CCHierarchyLevel8Name]
      ,[CCHierarchyLevel9Name]
      ,[CCHierarchyLevel10Name]
      ,[CCHierarchyLevel11Name]
      ,[CCOpenDate]
      ,[CCClosedDate]
      ,[CCReopenDate]
      ,[CCReopenDateType]
      ,[CCClassification]
      ,'Active - Non-Comp' AS [CCCompStatus]
      ,[CCStatus]
      ,[CCConsolidation]
      ,[CCFlexAttribute1]
      ,[CCFlexAttribute2]
      ,[CCFlexAttribute3]
      ,[CCFlexAttribute4]
      ,[CCFlexAttribute5]
      ,[OrgID]
      ,[ParentOrgID]
      ,[DefaultLocationID]
      ,[OrgNumber]
      ,[OrgHierarchyLevel1Name]
      ,[OrgHierarchyLevel2Name]
      ,[OrgHierarchyLevel3Name]
      ,[OrgHierarchyLevel4Name]
      ,[OrgHierarchyLevel5Name]
      ,[OrgHierarchyLevel6Name]
      ,[OrgHierarchyLevel7Name]
      ,[OrgHierarchyLevel8Name]
      ,[OrgHierarchyLevel9Name]
      ,[OrgHierarchyLevel10Name]
      ,[OrgHierarchyLevel11Name]
      ,[AllName]
      ,[ExecutiveFunctionName]
      ,[ExecutiveFunctionLeaderName]
      ,[ExecutiveSubFunctionName]
      ,[ExecutiveSubFunctionLeaderName]
      ,[CorporateFunctionName]
      ,[CorporateSubFunctionName]
      ,[DivisionName]
      ,[DivisionLeaderName]
      ,[RegionNumber]
      ,[RegionName]
      ,[RegionLeaderName]
      ,[MarketNumber]
      ,[MarketName]
      ,[MarketLeaderName]
      ,[SubMarketNumber]
      ,[SubMarketName]
      ,[SubMarketLeaderName]
      ,[DistrictNumber]
      ,[DistrictName]
      ,[InterimDistrictNumber]
      ,[InterimDistrictName]
      ,[DistrictLeaderName]
      ,[ActingDistrictLeaderName]
      ,[InterimDistrictLeaderName]
      ,[GroupNumber]
      ,[GroupName]
      ,[GroupLeaderName]
      ,[SubgroupNumber]
      ,[SubGroupName]
      ,[SubGroupLeaderName]
      ,[CampusNumber]
      ,[CampusName]
      ,[CampusLeaderName]
      ,[CenterLeaderName]
      ,[ActingCenterLeaderName]
      ,[CategoryName]
      ,[TypeCode]
      ,[TypeName]
      ,[PartnerGroupCode]
      ,[PartnerGroupName]
      ,[CenterGroupCode]
      ,[CenterGroupName]
      ,[DivisionLegacyName]
      ,[BrandCode]
      ,[BrandName]
      ,[OrgFlexAttribute1]
      ,[OrgFlexAttribute2]
      ,[OrgFlexAttribute3]
      ,[OrgFlexAttribute4]
      ,[OrgFlexAttribute5]
      ,[CenterCMSID]
      ,[CenterCSSID]
      ,[SiteHorizonID]
      ,[CenterEnrollmentSourceSystem]
      ,[CenterCMSMigrationDate]
      ,[CenterCMSMigrationStatus]
      ,[CenterLicensedCapacity]
      ,[CenterBackupCareFlag]
      ,[CenterChildCareSelectFlag]
      ,[CenterPublicAllowedFlag]
      ,[CenterOpenTime]
      ,[CenterCloseTime]
      ,[CenterStudentMinimumAge]
      ,[CenterStudentMaximumAge]
      ,[CenterOpenSunFlag]
      ,[CenterOpenMonFlag]
      ,[CenterOpenTueFlag]
      ,[CenterOpenWedFlag]
      ,[CenterOpenThuFlag]
      ,[CenterOpenFriFlag]
      ,[CenterOpenSatFlag]
      ,[CenterFoodProgramStartDate]
      ,[CenterFoodProgramEndDate]
      ,[CenterRegistrationType]
      ,[SiteSchoolDistrict]
      ,[SiteClassYear]
      ,[CenterURL]
      ,[CenterMenuURL]
      ,[CenterHasBreakfastFlag]
      ,[CenterHasMorningSlackFlag]
      ,[CenterHasLunchFlag]
      ,[CenterHasAfternoonSnackFlag]
      ,[CenterSpeaksASLFlag]
      ,[CenterSpeaksArabicFlag]
      ,[CenterSpeaksFrenchFlag]
      ,[CenterSpeaksGermanFlag]
      ,[CenterSpeaksHindiFlag]
      ,[CenterSpeaksMandarinFlag]
      ,[CenterSpeaksPunjabiFlag]
      ,[CenterSpeaksSpanishFlag]
      ,[CenterSpeaksOtherLanguages]
      ,[CenterAccreditationAgencyCode]
      ,[CenterAccreditationStartDate]
      ,[CenterAccreditationExpirationDate]
      ,[CenterAccreditationNextActivity]
      ,[CenterAccreditationNextActivityDueDate]
      ,[CenterAccreditationPrimaryStatus]
      ,[CenterAccreditationProgramID]
      ,[CenterQRISRating]
      ,[CenterQRISRatingStartDate]
      ,[CenterQRISRatingExpirationDate]
      ,[CenterLatitude]
      ,[CenterLongitude]
      ,[CenterCurrentHumanSigmaScore]
      ,[CenterPreviousHumanSigmaScore]
      ,'1900-01-01 00:00:00.000' AS [EDWEffectiveFrom]
      ,DATEADD(MM, 13, CCOpenDate) AS [EDWEffectiveTo]
      ,GETDATE() AS [EDWCreatedDate]
      ,GETDATE() AS [EDWModifiedDate]
      ,[EDWDeletedDate]
      ,'H' AS [EDWRowStatus]
      ,[ETLJobId] 
  FROM [dbo].[DimCostCenter]
WHERE CCCompStatus = 'Comp'
GO

UPDATE [DimCostCenter]
SET EDWEffectiveFrom = DATEADD(MM, 13, CCOpenDate),
	[EDWModifiedDate] = GETDATE()
WHERE CCCompStatus = 'Comp'
GO

/*--------------Active - Non-Comp---------------*/

INSERT INTO dbo.DimCostCenter
SELECT 
      [CostCenterNumber]
      ,[CostCenterName]
      ,[CompanyID]
      ,[CostCenterTypeID]
      ,[CostCenterTypeName]
      ,[BusinessUnitCode]
      ,[BusinessUnitName]
      ,[OrganizationLevelCode]
      ,[OrganizationLevelName]
      ,[FunctionCode]
      ,[FunctionName]
      ,[LineOfBusinessCode]
      ,[LineOfBusinessName]
      ,[LineOfBusinessCategoryCode]
      ,[LineOfBusinessCategoryName]
      ,[LineOfBusinessSubcategoryCode]
      ,[LineOfBusinessSubcategoryName]
      ,[CCHierarchyLevel1Name]
      ,[CCHierarchyLevel2Name]
      ,[CCHierarchyLevel3Name]
      ,[CCHierarchyLevel4Name]
      ,[CCHierarchyLevel5Name]
      ,[CCHierarchyLevel6Name]
      ,[CCHierarchyLevel7Name]
      ,[CCHierarchyLevel8Name]
      ,[CCHierarchyLevel9Name]
      ,[CCHierarchyLevel10Name]
      ,[CCHierarchyLevel11Name]
      ,[CCOpenDate]
      ,[CCClosedDate]
      ,[CCReopenDate]
      ,[CCReopenDateType]
      ,[CCClassification]
      ,'UnOpened' AS [CCCompStatus]
      ,[CCStatus]
      ,[CCConsolidation]
      ,[CCFlexAttribute1]
      ,[CCFlexAttribute2]
      ,[CCFlexAttribute3]
      ,[CCFlexAttribute4]
      ,[CCFlexAttribute5]
      ,[OrgID]
      ,[ParentOrgID]
      ,[DefaultLocationID]
      ,[OrgNumber]
      ,[OrgHierarchyLevel1Name]
      ,[OrgHierarchyLevel2Name]
      ,[OrgHierarchyLevel3Name]
      ,[OrgHierarchyLevel4Name]
      ,[OrgHierarchyLevel5Name]
      ,[OrgHierarchyLevel6Name]
      ,[OrgHierarchyLevel7Name]
      ,[OrgHierarchyLevel8Name]
      ,[OrgHierarchyLevel9Name]
      ,[OrgHierarchyLevel10Name]
      ,[OrgHierarchyLevel11Name]
      ,[AllName]
      ,[ExecutiveFunctionName]
      ,[ExecutiveFunctionLeaderName]
      ,[ExecutiveSubFunctionName]
      ,[ExecutiveSubFunctionLeaderName]
      ,[CorporateFunctionName]
      ,[CorporateSubFunctionName]
      ,[DivisionName]
      ,[DivisionLeaderName]
      ,[RegionNumber]
      ,[RegionName]
      ,[RegionLeaderName]
      ,[MarketNumber]
      ,[MarketName]
      ,[MarketLeaderName]
      ,[SubMarketNumber]
      ,[SubMarketName]
      ,[SubMarketLeaderName]
      ,[DistrictNumber]
      ,[DistrictName]
      ,[InterimDistrictNumber]
      ,[InterimDistrictName]
      ,[DistrictLeaderName]
      ,[ActingDistrictLeaderName]
      ,[InterimDistrictLeaderName]
      ,[GroupNumber]
      ,[GroupName]
      ,[GroupLeaderName]
      ,[SubgroupNumber]
      ,[SubGroupName]
      ,[SubGroupLeaderName]
      ,[CampusNumber]
      ,[CampusName]
      ,[CampusLeaderName]
      ,[CenterLeaderName]
      ,[ActingCenterLeaderName]
      ,[CategoryName]
      ,[TypeCode]
      ,[TypeName]
      ,[PartnerGroupCode]
      ,[PartnerGroupName]
      ,[CenterGroupCode]
      ,[CenterGroupName]
      ,[DivisionLegacyName]
      ,[BrandCode]
      ,[BrandName]
      ,[OrgFlexAttribute1]
      ,[OrgFlexAttribute2]
      ,[OrgFlexAttribute3]
      ,[OrgFlexAttribute4]
      ,[OrgFlexAttribute5]
      ,[CenterCMSID]
      ,[CenterCSSID]
      ,[SiteHorizonID]
      ,[CenterEnrollmentSourceSystem]
      ,[CenterCMSMigrationDate]
      ,[CenterCMSMigrationStatus]
      ,[CenterLicensedCapacity]
      ,[CenterBackupCareFlag]
      ,[CenterChildCareSelectFlag]
      ,[CenterPublicAllowedFlag]
      ,[CenterOpenTime]
      ,[CenterCloseTime]
      ,[CenterStudentMinimumAge]
      ,[CenterStudentMaximumAge]
      ,[CenterOpenSunFlag]
      ,[CenterOpenMonFlag]
      ,[CenterOpenTueFlag]
      ,[CenterOpenWedFlag]
      ,[CenterOpenThuFlag]
      ,[CenterOpenFriFlag]
      ,[CenterOpenSatFlag]
      ,[CenterFoodProgramStartDate]
      ,[CenterFoodProgramEndDate]
      ,[CenterRegistrationType]
      ,[SiteSchoolDistrict]
      ,[SiteClassYear]
      ,[CenterURL]
      ,[CenterMenuURL]
      ,[CenterHasBreakfastFlag]
      ,[CenterHasMorningSlackFlag]
      ,[CenterHasLunchFlag]
      ,[CenterHasAfternoonSnackFlag]
      ,[CenterSpeaksASLFlag]
      ,[CenterSpeaksArabicFlag]
      ,[CenterSpeaksFrenchFlag]
      ,[CenterSpeaksGermanFlag]
      ,[CenterSpeaksHindiFlag]
      ,[CenterSpeaksMandarinFlag]
      ,[CenterSpeaksPunjabiFlag]
      ,[CenterSpeaksSpanishFlag]
      ,[CenterSpeaksOtherLanguages]
      ,[CenterAccreditationAgencyCode]
      ,[CenterAccreditationStartDate]
      ,[CenterAccreditationExpirationDate]
      ,[CenterAccreditationNextActivity]
      ,[CenterAccreditationNextActivityDueDate]
      ,[CenterAccreditationPrimaryStatus]
      ,[CenterAccreditationProgramID]
      ,[CenterQRISRating]
      ,[CenterQRISRatingStartDate]
      ,[CenterQRISRatingExpirationDate]
      ,[CenterLatitude]
      ,[CenterLongitude]
      ,[CenterCurrentHumanSigmaScore]
      ,[CenterPreviousHumanSigmaScore]
      ,'1900-01-01 00:00:00.000' AS [EDWEffectiveFrom]
      ,CCOpenDate AS [EDWEffectiveTo]
      ,GETDATE() AS [EDWCreatedDate]
      ,GETDATE() AS [EDWModifiedDate]
      ,[EDWDeletedDate]
      ,'H' AS [EDWRowStatus]
      ,[ETLJobId] 
  FROM [dbo].[DimCostCenter]
WHERE CCCompStatus = 'Active - Non-Comp'
GO

UPDATE [DimCostCenter]
SET EDWEffectiveFrom = CCOpenDate,
	[EDWModifiedDate] = GETDATE()
WHERE CCCompStatus = 'Active - Non-Comp'
GO",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7241,Package\SQL - Truncate DimCostCenter,Microsoft.ExecuteSQLTask,SQL - Truncate DimCostCenter,,,,,Truncate table DimCostCenter,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7242,Package\SQL - Truncate DimMartCostCenter,Microsoft.ExecuteSQLTask,SQL - Truncate DimMartCostCenter,,,,,Truncate table DimMartCostCenter,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
7243,Package,Microsoft.Package,MartToEDW_DimMartCostCenter_IXV,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7244,Package\Create View,STOCK:SEQUENCE,Create View,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7245,Package\Create View\SQL - Create View vFactFTESnapshot,Microsoft.ExecuteSQLTask,SQL - Create View vFactFTESnapshot,,,,,"CREATE VIEW [dbo].[vFactFTESnapshot]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.FTE) AS FTE
     FROM dbo.FactFTESnapshot AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7246,Package\Create View\SQL - Create View vFactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - Create View vFactGLBalancePlanAllocation,,,,,"CREATE VIEW  [dbo].[vFactGLBalancePlanAllocation]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
			dm.GLMetricTypeCode,
			dm.GLMetricTypeKey,
            f.AccountSubaccountKey,
			COUNT_BIG(*) AS [Count],
			SUM(f.GLBalancePlanAllocationAmount) AS GLBalancePlanAllocationAmount
	FROM [dbo].[FactGLBalancePlanAllocation] AS f
	     JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
		 JOIN dbo.DimGLMetricType AS dm ON dm.GLMetricTypeKey=f.GLMetricTypeKey
		 JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
			  dm.GLMetricTypeCode,
			  dm.GLMetricTypeKey,
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7247,Package\Create View\SQL - Create View vFactLaborHour,Microsoft.ExecuteSQLTask,SQL - Create View vFactLaborHour,,,,,"CREATE VIEW [dbo].[vFactLaborHour]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber,
			f.DataScenarioKey,
            ds.DataScenarioName, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.[Hours]) AS [Hours],
            f.IsTSEF
     FROM [dbo].[FactLaborHour] AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimDataScenario AS ds ON ds.DataScenarioKey = f.DataScenarioKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
			  f.DataScenarioKey,
              ds.DataScenarioName, 
              f.AccountSubaccountKey,
 f.IsTSEF;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7248,Package\Create View\SQL - Create View vFactLaborSalary,Microsoft.ExecuteSQLTask,SQL - Create View vFactLaborSalary,,,,,"CREATE VIEW  [dbo].[vFactLaborSalary]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey,
			COUNT_BIG(*) AS [Count],
			SUM(f.NetAmount) AS [NetAmount]
	FROM [dbo].[FactLaborSalary] AS f
	     JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
		 JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7249,Package\Create View\SQL - Create View vFactNetRevenue,Microsoft.ExecuteSQLTask,SQL - Create View vFactNetRevenue,,,,,"CREATE VIEW [dbo].[vFactNetRevenue] 
WITH SCHEMABINDING
	AS 
SELECT d.FiscalWeekNumber
      ,d.FiscalWeekEndDate 
      ,mcc.CostCenterKey 
      ,mcc.CostCenterNumber 
      ,f.AccountSubaccountKey 
      ,COUNT_BIG(*) AS [Count] 
	  ,SUM(f.NetRevenueAmount) AS NetRevenueAmount
	FROM dbo.FactNetRevenue AS f
		  JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7250,Package\EPT - DimMartCostCenter,Microsoft.ExecutePackageTask,EPT - DimMartCostCenter,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7251,Package\SEQ - Drop Indexed Views,STOCK:SEQUENCE,SEQ - Drop Indexed Views,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7252,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactFTESnapshot,Microsoft.ExecuteSQLTask,SQL - Disable Index on vFactFTESnapshot,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactFTESnapshot Disable;
",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7253,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - Disable Index on vFactGLBalancePlanAllocation,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey ON vFactGLBalancePlanAllocation DISABLE;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7254,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactLaborHour,Microsoft.ExecuteSQLTask,SQL - Disable Index on vFactLaborHour,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey ON vFactLaborHour DISABLE;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7255,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactLaborSalary,Microsoft.ExecuteSQLTask,SQL - Disable Index on vFactLaborSalary,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactLaborSalary DISABLE;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7256,Package\SEQ - Drop Indexed Views\SQL - Drop Index on FactNetRevenueConsolidated,Microsoft.ExecuteSQLTask,SQL - Drop Index on FactNetRevenueConsolidated,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM [sys].[sysobjects] [O]
         INNER JOIN [sys].[sysindexes] [I] ON [O].[id] = [I].[id]
    WHERE [I].[name] = 'CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    DROP INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey] ON [dbo].[FactNetRevenueConsolidated];",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7257,Package\Sequence Container,STOCK:SEQUENCE,Sequence Container,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7258,Package\Sequence Container\SQL - Populate Revenue & Create Index,Microsoft.ExecuteSQLTask,SQL - Populate Revenue & Create Index,,,,,"TRUNCATE TABLE [dbo].[FactNetRevenueConsolidated];

INSERT INTO [dbo].[FactNetRevenueConsolidated] (
	[FiscalWeekNumber], [FiscalWeekEndDate], [CostCenterKey], [CostCenterNumber], [AccountSubaccountKey], [Count], [NetRevenueAmount]
)
SELECT
	[D].[FiscalWeekNumber],
	[D].[FiscalWeekEndDate],
	[MCC].[CostCenterKey],
	[MCC].[CostCenterNumber],
	[F].[AccountSubaccountKey],
	COUNT_BIG(*) AS [Count],
	SUM([F].[NetRevenueAmount]) AS [NetRevenueAmount]
FROM [dbo].[FactNetRevenue] [F]
INNER JOIN [dbo].[DimDate] [D] ON [F].[DateKey] = [D].[DateKey]
INNER JOIN [dbo].[DimCostCenter] [C] ON [F].[CostCenterKey] = [C].[CostCenterKey]
INNER JOIN [dbo].[DimMartCostCenter] [MCC] ON [C].[CostCenterNumber] = [MCC].[CostCenterNumber]
	AND [D].[FullDate] BETWEEN [MCC].[EDWEffectiveFrom] AND [MCC].[EDWEffectiveTo]
GROUP BY
	[D].[FiscalWeekNumber], [D].[FiscalWeekEndDate],
	[MCC].[CostCenterKey], [MCC].[CostCenterNumber],
	[F].[AccountSubaccountKey];

CREATE UNIQUE CLUSTERED INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[FactNetRevenueConsolidated]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7259,Package\Sequence Container\SQL - Rebuild FTE Index,Microsoft.ExecuteSQLTask,SQL - Rebuild FTE Index,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactFTESnapshot  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7260,Package\Sequence Container\SQL - Rebuild Labor Hour Index,Microsoft.ExecuteSQLTask,SQL - Rebuild Labor Hour Index,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey ON vFactLaborHour  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7261,Package\Sequence Container\SQL - Rebuild Labor SalaryIndex,Microsoft.ExecuteSQLTask,SQL - Rebuild Labor SalaryIndex,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactLaborSalary  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7262,Package\Sequence Container\SQL - Rebuild Plan Allocation  Index,Microsoft.ExecuteSQLTask,SQL - Rebuild Plan Allocation  Index,,,,,"
DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey ON vFactGLBalancePlanAllocation  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7263,Package\SQL - spGL_StagingToEDW_DimAccountSubAccount,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimAccountSubAccount,,,,,EXEC dbo.spGL_StagingToEDW_DimAccountSubAccount,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7264,Package\SQL - spGL_StagingToEDW_DimCostCenter,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimCostCenter,,,,,EXEC dbo.spGL_StagingToEDW_DimCostCenter,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
7265,Package,Microsoft.Package,OneTimeDimMartAccountSubAccount,,,,,,StagingToEDW_OneTimeDimMartAccountSubAccount
7266,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,StagingToEDW_OneTimeDimMartAccountSubAccount
7267,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - ASA,,StagingToEDW_OneTimeDimMartAccountSubAccount
7268,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Update New Columns,,StagingToEDW_OneTimeDimMartAccountSubAccount
7269,Package\SQL - Assigning value to the SQl Variable,Microsoft.ExecuteSQLTask,SQL - Assigning value to the SQl Variable,,,,,"DECLARE @Field MartLookup;
INSERT INTO @Field (FieldPath)
(SELECT FieldPath
FROM dbo.MartASALookup);

DECLARE @vSQL MartLookup;
INSERT @vSQL
EXEC dbo.spGL_Generate_ASA_SQLStatement @Field;

DECLARE @vSQLCommand VARCHAR(4000);
SET @vSQLCommand = (SELECT FieldPath FROM @vSQL)

SELECT @vSQLCommand AS vSQLCommand;",StagingToEDW_OneTimeDimMartAccountSubAccount
7270,Package\SQL - Load AccountSubaccountLanding,Microsoft.ExecuteSQLTask,SQL - Load AccountSubaccountLanding,,,,,"EXECUTE [spGL_Staging_AccountSubAccountLanding] 
NULL, ? OUTPUT, ? OUTPUT
GO
",StagingToEDW_OneTimeDimMartAccountSubAccount
7271,Package\SQL - Update Seed Rows,Microsoft.ExecuteSQLTask,SQL - Update Seed Rows,,,,,"UPDATE [dbo].[DimAccountSubaccount]
SET [ASAFieldDepth] = -1,                                 -- [ASAFieldDepth]
    [ASAFieldLevel1ID] = '0000.000000',                   -- [ASAFieldLevel1ID]	
    [ASAFieldLevel1Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel1Name]	
    [ASAFieldLevel1Unary] = 1,                            -- [ASAFieldLevel1Unary]	
    [ASAFieldLevel1Sort] = 99999,                         -- [ASAFieldLevel1Sort]
    [ASAFieldLevel2ID] = '0000.000000',                   -- [ASAFieldLevel2ID]	
    [ASAFieldLevel2Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel2Name]	
    [ASAFieldLevel2Unary] = 1,                            -- [ASAFieldLevel2Unary]	
    [ASAFieldLevel2Sort] = 99999,                         -- [ASAFieldLevel2Sort]
    [ASAFieldLevel3ID] = '0000.000000',                   -- [ASAFieldLevel3ID]	
    [ASAFieldLevel3Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel3Name]	
    [ASAFieldLevel3Unary] = 1,                            -- [ASAFieldLevel3Unary]	
    [ASAFieldLevel3Sort] = 99999,                         -- [ASAFieldLevel3Sort]
    [ASAFieldLevel4ID] = '0000.000000',                   -- [ASAFieldLevel4ID]	
    [ASAFieldLevel4Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel4Name]	
    [ASAFieldLevel4Unary] = 1,                            -- [ASAFieldLevel4Unary]	
    [ASAFieldLevel4Sort] = 99999,                         -- [ASAFieldLevel4Sort]
    [ASAFieldLevel5ID] = '0000.000000',                   -- [ASAFieldLevel5ID]	
    [ASAFieldLevel5Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel5Name]	
    [ASAFieldLevel5Unary] = 1,                            -- [ASAFieldLevel5Unary]	
    [ASAFieldLevel5Sort] = 99999,                         -- [ASAFieldLevel5Sort]
    [ASAFieldLevel6ID] = '0000.000000',                   -- [ASAFieldLevel6ID]	
    [ASAFieldLevel6Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel6Name]	
    [ASAFieldLevel6Unary] = 1,                            -- [ASAFieldLevel6Unary]	
    [ASAFieldLevel6Sort] = 99999,                         -- [ASAFieldLevel6Sort]
    [ASAFieldLevel7ID] = '0000.000000',                   -- [ASAFieldLevel7ID]	
    [ASAFieldLevel7Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel7Name]	
    [ASAFieldLevel7Unary] = 1,                            -- [ASAFieldLevel7Unary]	
    [ASAFieldLevel7Sort] = 99999,                         -- [ASAFieldLevel7Sort]
    [ASAFieldLevel8ID] = '0000.000000',                   -- [ASAFieldLevel8ID]	
    [ASAFieldLevel8Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel8Name]	
    [ASAFieldLevel8Unary] = 1,                            -- [ASAFieldLevel8Unary]	
    [ASAFieldLevel8Sort] = 99999,                         -- [ASAFieldLevel8Sort]
    [ASAFieldLevel9ID] = '0000.000000',                   -- [ASAFieldLevel9ID]	
    [ASAFieldLevel9Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel9Name]	
    [ASAFieldLevel9Unary] = 1,                            -- [ASAFieldLevel9Unary]	
    [ASAFieldLevel9Sort] = 99999,                         -- [ASAFieldLevel9Sort]
    [ASAFieldLevel10ID] = '0000.000000',                  -- [ASAFieldLevel10ID]	
    [ASAFieldLevel10Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
    [ASAFieldLevel10Unary] = 1,                           -- [ASAFieldLevel10Unary]	
    [ASAFieldLevel10Sort] = 99999,                        -- [ASAFieldLevel10Sort]
    [ASAFieldLevel11ID] = '0000.000000',                  -- [ASAFieldLevel11ID]	
    [ASAFieldLevel11Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
    [ASAFieldLevel11Unary] = 1,                           -- [ASAFieldLevel11Unary]	
    [ASAFieldLevel11Sort] = 99999,                        -- [ASAFieldLevel11Sort]
    [ASAFieldLevel12ID] = '0000.000000',                  -- [ASAFieldLevel12ID]	
    [ASAFieldLevel12Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
    [ASAFieldLevel12Unary] = 1,                           -- [ASAFieldLevel12Unary]	
    [ASAFieldLevel12Sort] = 99999                         -- [ASAFieldLevel12Sort]
WHERE AccountSubaccountKey = '-1';

UPDATE dbo.DimAccountSubaccount
SET [ASAFieldDepth] = -1,                                 -- [ASAFieldDepth]
    [ASAFieldLevel1ID] = '0000.000000',                   -- [ASAFieldLevel1ID]	
    [ASAFieldLevel1Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel1Name]	
    [ASAFieldLevel1Unary] = 1,                            -- [ASAFieldLevel1Unary]	
    [ASAFieldLevel1Sort] = 99999,                         -- [ASAFieldLevel1Sort]
    [ASAFieldLevel2ID] = '0000.000000',                   -- [ASAFieldLevel2ID]	
    [ASAFieldLevel2Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel2Name]	
    [ASAFieldLevel2Unary] = 1,                            -- [ASAFieldLevel2Unary]	
    [ASAFieldLevel2Sort] = 99999,                         -- [ASAFieldLevel2Sort]
    [ASAFieldLevel3ID] = '0000.000000',                   -- [ASAFieldLevel3ID]	
    [ASAFieldLevel3Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel3Name]	
    [ASAFieldLevel3Unary] = 1,                            -- [ASAFieldLevel3Unary]	
    [ASAFieldLevel3Sort] = 99999,                         -- [ASAFieldLevel3Sort]
    [ASAFieldLevel4ID] = '0000.000000',                   -- [ASAFieldLevel4ID]	
    [ASAFieldLevel4Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel4Name]	
    [ASAFieldLevel4Unary] = 1,                            -- [ASAFieldLevel4Unary]	
    [ASAFieldLevel4Sort] = 99999,                         -- [ASAFieldLevel4Sort]
    [ASAFieldLevel5ID] = '0000.000000',                   -- [ASAFieldLevel5ID]	
    [ASAFieldLevel5Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel5Name]	
    [ASAFieldLevel5Unary] = 1,                            -- [ASAFieldLevel5Unary]	
    [ASAFieldLevel5Sort] = 99999,                         -- [ASAFieldLevel5Sort]
    [ASAFieldLevel6ID] = '0000.000000',                   -- [ASAFieldLevel6ID]	
    [ASAFieldLevel6Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel6Name]	
    [ASAFieldLevel6Unary] = 1,                            -- [ASAFieldLevel6Unary]	
    [ASAFieldLevel6Sort] = 99999,                         -- [ASAFieldLevel6Sort]
    [ASAFieldLevel7ID] = '0000.000000',                   -- [ASAFieldLevel7ID]	
    [ASAFieldLevel7Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel7Name]	
    [ASAFieldLevel7Unary] = 1,                            -- [ASAFieldLevel7Unary]	
    [ASAFieldLevel7Sort] = 99999,                         -- [ASAFieldLevel7Sort]
    [ASAFieldLevel8ID] = '0000.000000',                   -- [ASAFieldLevel8ID]	
    [ASAFieldLevel8Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel8Name]	
    [ASAFieldLevel8Unary] = 1,                            -- [ASAFieldLevel8Unary]	
    [ASAFieldLevel8Sort] = 99999,                         -- [ASAFieldLevel8Sort]
    [ASAFieldLevel9ID] = '0000.000000',                   -- [ASAFieldLevel9ID]	
    [ASAFieldLevel9Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel9Name]	
    [ASAFieldLevel9Unary] = 1,                            -- [ASAFieldLevel9Unary]	
    [ASAFieldLevel9Sort] = 99999,                         -- [ASAFieldLevel9Sort]
    [ASAFieldLevel10ID] = '0000.000000',                  -- [ASAFieldLevel10ID]	
    [ASAFieldLevel10Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
    [ASAFieldLevel10Unary] = 1,                           -- [ASAFieldLevel10Unary]	
    [ASAFieldLevel10Sort] = 99999,                        -- [ASAFieldLevel10Sort]
    [ASAFieldLevel11ID] = '0000.000000',                  -- [ASAFieldLevel11ID]	
    [ASAFieldLevel11Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
    [ASAFieldLevel11Unary] = 1,                           -- [ASAFieldLevel11Unary]	
    [ASAFieldLevel11Sort] = 99999,                        -- [ASAFieldLevel11Sort]
    [ASAFieldLevel12ID] = '0000.000000',                  -- [ASAFieldLevel12ID]	
    [ASAFieldLevel12Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
    [ASAFieldLevel12Unary] = 1,                           -- [ASAFieldLevel12Unary]	
    [ASAFieldLevel12Sort] = 99999                         -- [ASAFieldLevel12Sort]
WHERE AccountSubaccountKey = '-2';",StagingToEDW_OneTimeDimMartAccountSubAccount
7272,Package,Microsoft.Package,ReportMeasure,,,,,,StagingToEDW_ReportMeasure
7273,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.DataConvert,Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,Data Conversion,Data Conversion,,StagingToEDW_ReportMeasure
7274,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - ReportMeasure,,StagingToEDW_ReportMeasure
7275,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,StagingToEDW_ReportMeasure
7276,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_ReportMeasure
7277,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.ExcelSource,Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,Excel Source,SRC - ReportMeasure,,StagingToEDW_ReportMeasure
7278,Package\SQL - End ReportMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportMeasure Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_ReportMeasure
7279,Package\SQL - Start ReportMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - Start ReportMeasure Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",StagingToEDW_ReportMeasure
7280,Package\SQL - Truncate ReportMeasure table,Microsoft.ExecuteSQLTask,SQL - Truncate ReportMeasure table,,,,,TRUNCATE TABLE [dbo].[ReportMeasure],StagingToEDW_ReportMeasure
7281,Package\SQL - Upsert Mart ReportMeasure,Microsoft.ExecuteSQLTask,SQL - Upsert Mart ReportMeasure,,,,,"DECLARE @SummaryOfChanges TABLE (Change VARCHAR(20));
DECLARE @InsertCount INT,
		@UpdateCount INT,
		@DeleteCount INT;

MERGE [DW_Mart].[dbo].[ReportMeasure] AS [T]
USING (
	SELECT
		[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
		[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
	FROM [DW_Landing].[dbo].[ReportMeasure]
) AS [S]
	(
		[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
		[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
	)
	ON
		[T].[ReportID] = [S].[ReportID]
		AND [T].[MeasureOrder] = [S].[MeasureOrder]
		AND [T].[MeasureLabel] = [S].[MeasureLabel]
WHEN MATCHED
	THEN
		UPDATE
			SET [ReportName] = [S].[ReportName],
				[MeasureName] = [S].[MeasureName],
				[NumberFormat] = [S].[NumberFormat],
				[IsHeader] = [S].[IsHeader],
				[PageOrder] = [S].[PageOrder],
				[PageName] = [S].[PageName],
				[HasRightBorder] = [S].[HasRightBorder],
				[Font] = [S].[Font],
				[PlanDisplay] = [S].[PlanDisplay],
				[PlanVarDisplay] = [S].[PlanVarDisplay],
				[PlanVarPctDisplay] = [S].[PlanVarPctDisplay],
				[LYDisplay] = [S].[LYDisplay],
				[LYVarDisplay] = [S].[LYVarDisplay],
				[LYVarPctDisplay] = [S].[LYVarPctDisplay],
				[ActualToDateDisplay] = [S].[ActualToDateDisplay],
				[PlanVarInverse] = [S].[PlanVarInverse],
				[LYVarInverse] = [S].[LYVarInverse],
				[AbsDivisor] = [S].[AbsDivisor],
				[TargetForPlan] = [S].[TargetForPlan]

WHEN NOT MATCHED BY TARGET
	THEN
		INSERT (
			[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
			[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
		)
		VALUES (
			[S].[ReportID], [S].[ReportName], [S].[MeasureOrder], [S].[MeasureLabel], [S].[MeasureName], [S].[NumberFormat], [S].[IsHeader], [S].[PageOrder], [S].[PageName], [S].[HasRightBorder], [S].[Font],
			[S].[PlanDisplay], [S].[PlanVarDisplay], [S].[PlanVarPctDisplay], [S].[LYDisplay], [S].[LYVarDisplay], [S].[LYVarPctDisplay], [S].[ActualToDateDisplay], [S].[PlanVarInverse], [S].[LYVarInverse],
			[S].[AbsDivisor], [S].[TargetForPlan], GETDATE()
		)
WHEN NOT MATCHED BY SOURCE
	THEN
		DELETE
OUTPUT $action
INTO @SummaryOfChanges;

SELECT @InsertCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'INSERT';
SELECT @UpdateCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'UPDATE';
SELECT @DeleteCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'DELETE';

SELECT
	@InsertCount AS [InsertCount],
	@UpdateCount AS [UpdateCount],
	@DeleteCount AS [DeleteCount];",StagingToEDW_ReportMeasure
7282,Package,Microsoft.Package,ReportProfile,,,,,,StagingToEDW_ReportProfile
7283,Package\DFT - ReportProfile,Microsoft.Pipeline,DFT - ReportProfile,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST- ReportProfile,,StagingToEDW_ReportProfile
7284,Package\DFT - ReportProfile,Microsoft.Pipeline,DFT - ReportProfile,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",SourceCount,,StagingToEDW_ReportProfile
7285,Package\DFT - ReportProfile,Microsoft.Pipeline,DFT - ReportProfile,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,Src- ReportProfile Table,,StagingToEDW_ReportProfile
7286,Package\SQL - End DimDataScenario Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimDataScenario Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_ReportProfile
7287,Package\SQL - Get Delete Count,Microsoft.ExecuteSQLTask,SQL - Get Delete Count,,,,, SELECT COUNT(1) AS DeleteCount  From [dbo].[ReportProfile],StagingToEDW_ReportProfile
7288,Package\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,, SELECT COUNT(1) AS InsertCount  From [dbo].[ReportProfile],StagingToEDW_ReportProfile
7289,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"SET IDENTITY_INSERT [dbo].[ReportProfile] ON;
INSERT INTO [dbo].[ReportProfile]
([ReportProfileKey], 
 [ReportProfileID], 
 [ReportProfileName], 
 [ReportProfileLogoImage], 
 [ReportProfileSmallImage], 
 [ReportProfileLegalNoticeDescription], 
 [MartCreatedDate]
)
       SELECT-1, 
             -1, 
             '-1', 
             0x00, 
             0x00, 
             'Unknown Description', 
             GETDATE()
       UNION
       SELECT-2, 
             -2, 
             '-2', 
             0x00, 
             0x00, 
             'Not Applicable Description', 
             GETDATE();
SET IDENTITY_INSERT [dbo].[ReportProfile] OFF;",StagingToEDW_ReportProfile
7290,Package\SQL - Start Report Profile Auditlog,Microsoft.ExecuteSQLTask,SQL - Start Report Profile Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_ReportProfile
7291,Package\SQL - Truncate Table,Microsoft.ExecuteSQLTask,SQL - Truncate Table,,,,, TRUNCATE TABLE dbo.ReportProfile,StagingToEDW_ReportProfile
7292,Package,Microsoft.Package,StagingToEDWParentPackage,,,,,,StagingToEDW_StagingToEDWParentPackage
7293,Package\All Dimensions Completed,STOCK:SEQUENCE,All Dimensions Completed,,,,,,StagingToEDW_StagingToEDWParentPackage
7294,Package\Change History - StagingToEDWParentPackage,STOCK:SEQUENCE,Change History - StagingToEDWParentPackage,,,,,,StagingToEDW_StagingToEDWParentPackage
7295,Package\StagingToEDW Dimension Center Management,STOCK:SEQUENCE,StagingToEDW Dimension Center Management,,,,,,StagingToEDW_StagingToEDWParentPackage
7296,Package\StagingToEDW Dimension Center Management\Execute StagingToEDW_Dimension_CenterManagement,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_CenterManagement,,,,,,StagingToEDW_StagingToEDWParentPackage
7297,Package\StagingToEDW Dimension GL and HR,STOCK:SEQUENCE,StagingToEDW Dimension GL and HR,,,,,,StagingToEDW_StagingToEDWParentPackage
7298,Package\StagingToEDW Dimension GL and HR\Execute StagingToEDW_Dimension_GLandHR,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_GLandHR,,,,,,StagingToEDW_StagingToEDWParentPackage
7299,Package\StagingToEDW Dimension Student Leads,STOCK:SEQUENCE,StagingToEDW Dimension Student Leads,,,,,,StagingToEDW_StagingToEDWParentPackage
7300,Package\StagingToEDW Dimension Student Leads\Execute StagingToEDW_Dimension_StudentLeads,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_StudentLeads,,,,,,StagingToEDW_StagingToEDWParentPackage
7301,Package\StagingToEDW Fact Loads,STOCK:SEQUENCE,StagingToEDW Fact Loads,,,,,,StagingToEDW_StagingToEDWParentPackage
7302,Package\StagingToEDW Fact Loads\Execute StagingToEDW_FactParent,Microsoft.ExecutePackageTask,Execute StagingToEDW_FactParent,,,,,,StagingToEDW_StagingToEDWParentPackage
7303,Package\STATIC and FOUNDATION Dimensions,STOCK:SEQUENCE,STATIC and FOUNDATION Dimensions,,,,,,StagingToEDW_StagingToEDWParentPackage
7304,Package\STATIC and FOUNDATION Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimDate load before other Dimensions,,,,,,StagingToEDW_StagingToEDWParentPackage
7305,Package\STATIC and FOUNDATION Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions\SQL - spGL_StagingToEDW_DimDate,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimDate,,,,,EXEC dbo.spGL_StagingToEDW_DimDate,StagingToEDW_StagingToEDWParentPackage
7306,Package\STATIC and FOUNDATION Dimensions\StagingToEDW Static Dimension Loads,STOCK:SEQUENCE,StagingToEDW Static Dimension Loads,,,,,,StagingToEDW_StagingToEDWParentPackage
7307,Package\STATIC and FOUNDATION Dimensions\StagingToEDW Static Dimension Loads\SQL - Dimension Static Data,Microsoft.ExecuteSQLTask,SQL - Dimension Static Data,,,,,EXEC dbo.spBING_EDW_Build_DimensionStaticData,StagingToEDW_StagingToEDWParentPackage
7308,Package,Microsoft.Package,StagingToEDW_DimensionParent,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7309,Package\Change History - StagingToEDW_Dimension,STOCK:SEQUENCE,Change History - StagingToEDW_Dimension,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7310,Package\CMS and CSS Center Management Dimensions,STOCK:SEQUENCE,CMS and CSS Center Management Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7311,Package\CMS and CSS Center Management Dimensions\Execute StagingToEDW_Dimension_CenterManagement Child Package,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_CenterManagement Child Package,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7312,Package\ORACLE GL and HRIS Dimensions,STOCK:SEQUENCE,ORACLE GL and HRIS Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7313,Package\ORACLE GL and HRIS Dimensions\Execute StagingToEDW_Dimension_GLandHR Child Package,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_GLandHR Child Package,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7314,Package\SALESFORCE Dimensions,STOCK:SEQUENCE,SALESFORCE Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7315,Package\SALESFORCE Dimensions\Execute StagingToEDW_Dimension_StudentLeads Child Package,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_StudentLeads Child Package,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7316,Package\STATIC and FOUNDATION Dimensions,STOCK:SEQUENCE,STATIC and FOUNDATION Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7317,Package\STATIC and FOUNDATION Dimensions\EDW Dimension Package Start,STOCK:SEQUENCE,EDW Dimension Package Start,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7318,Package\STATIC and FOUNDATION Dimensions\EDW Dimension Package Start\SQL - EDW Dimension Package Start,Microsoft.ExecuteSQLTask,SQL - EDW Dimension Package Start,,,,,"INSERT INTO dbo.EDWAuditLog 
(StartTime,
 StatusCode,
 StatusName,
 TaskName,
 EndTime
)
VALUES
(GETDATE(),
 1,
 'Completed',
 'EDW Dimension BNG-1262 - 2/26/2018',
 GETDATE()
);",StagingToEDW_StagingToEDW_DimensionParent
7319,Package\STATIC and FOUNDATION Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimDate load before other Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7320,Package\STATIC and FOUNDATION Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions\SQL - spGL_StagingToEDW_DimDate,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimDate,,,,,EXEC dbo.spGL_StagingToEDW_DimDate,StagingToEDW_StagingToEDW_DimensionParent
7321,Package\STATIC and FOUNDATION Dimensions\StagingToEDW Static Dimension Loads,STOCK:SEQUENCE,StagingToEDW Static Dimension Loads,,,,,,StagingToEDW_StagingToEDW_DimensionParent
7322,Package\STATIC and FOUNDATION Dimensions\StagingToEDW Static Dimension Loads\SQL - Dimension Static Data,Microsoft.ExecuteSQLTask,SQL - Dimension Static Data,,,,,EXEC dbo.spBING_EDW_Build_DimensionStaticData,StagingToEDW_StagingToEDW_DimensionParent
7323,Package,Microsoft.Package,StagingToEDW_Dimension_CenterManagement,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7324,Package\Change History - StagingToEDW_Dimension_CenterManagement,STOCK:SEQUENCE,Change History - StagingToEDW_Dimension_CenterManagement,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7325,Package\CMS and CSS Center Management Dimensions,STOCK:SEQUENCE,CMS and CSS Center Management Dimensions,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7326,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimAdjustmentReason load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimAdjustmentReason load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7327,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimAdjustmentReason load\SQL - spCMS_StagingToEDW_DimAdjustmentReason,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimAdjustmentReason,,,,,EXEC dbo.spCMS_StagingToEDW_DimAdjustmentReason;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7328,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimScheduleType load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimScheduleType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7329,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimScheduleType load\SQL - spCMS_StagingToEDW_DimScheduleType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimScheduleType,,,,,EXEC dbo.spCMS_StagingToEDW_DimScheduleType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7330,Package\CMS and CSS Center Management Dimensions\Execute CSS_Staging To EDW DimTransactionCode load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimTransactionCode load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7331,Package\CMS and CSS Center Management Dimensions\Execute CSS_Staging To EDW DimTransactionCode load\SQL - spCSS_StagingToEDW_DimTransactionCode,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTransactionCode,,,,,EXEC dbo.spCSS_StagingToEDW_DimTransactionCode;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7332,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load,STOCK:SEQUENCE,Execute EDW DimARAgencyType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7333,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CMS_Staging To EDW DimARAgency load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimARAgency load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7334,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CMS_Staging To EDW DimARAgency load\SQL - spCMS_StagingToEDW_DimARAgencyType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimARAgencyType,,,,,EXEC dbo.spCMS_StagingToEDW_DimARAgencyType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7335,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CSS_Staging To EDW DimARAgency load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimARAgency load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7336,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CSS_Staging To EDW DimARAgency load\SQL - spCSS_StagingToEDW_DimARAgencyType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimARAgencyType,,,,,EXEC dbo.spCSS_StagingToEDW_DimARAgencyType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7337,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load,STOCK:SEQUENCE,Execute EDW DimClassroom load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7338,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CMS_Staging To EDW DimClassroom load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimClassroom load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7339,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CMS_Staging To EDW DimClassroom load\SQL - spCMS_StagingToEDW_DimClassroom,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimClassroom,,,,,EXEC dbo.spCMS_StagingToEDW_DimClassroom;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7340,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CSS_Staging To EDW DimClassroom load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimClassroom load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7341,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CSS_Staging To EDW DimClassroom load\SQL - spCSS_StagingToEDW_DimClassroom,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimClassroom,,,,,EXEC dbo.spCSS_StagingToEDW_DimClassroom;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7342,Package\CMS and CSS Center Management Dimensions\Execute EDW DimCreditMemoType load,STOCK:SEQUENCE,Execute EDW DimCreditMemoType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7343,Package\CMS and CSS Center Management Dimensions\Execute EDW DimCreditMemoType load\SQL - spCMS_StagingToEDW_DimCreditMemoType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimCreditMemoType,,,,,EXEC dbo.spCMS_StagingToEDW_DimCreditMemoType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7344,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load,STOCK:SEQUENCE,Execute EDW DimDiscountType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7345,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CMS_Staging To EDW DimDiscountType load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimDiscountType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7346,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CMS_Staging To EDW DimDiscountType load\SQL - spCMS_StagingToEDW_DimDiscountType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimDiscountType,,,,,EXEC dbo.spCMS_StagingToEDW_DimDiscountType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7347,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CSS_Staging To EDW DimDiscountType,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimDiscountType,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7348,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CSS_Staging To EDW DimDiscountType\SQL - spCSS_StagingToEDW_DimDiscountType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimDiscountType,,,,,EXEC dbo.spCSS_StagingToEDW_DimDiscountType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7349,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load,STOCK:SEQUENCE,Execute EDW DimFeeType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7350,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CMS_Staging To EDW DimFeeType load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimFeeType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7351,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CMS_Staging To EDW DimFeeType load\SQL - spCMS_StagingToEDW_DimFeeType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimFeeType,,,,,EXEC dbo.spCMS_StagingToEDW_DimFeeType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7352,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CSS_Staging To EDW DimFeeType load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimFeeType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7353,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CSS_Staging To EDW DimFeeType load\SQL - spCSS_StagingToEDW_DimFeeType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimFeeType,,,,,EXEC dbo.spCSS_StagingToEDW_DimFeeType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7354,Package\CMS and CSS Center Management Dimensions\Execute EDW DimInvoiceType load,STOCK:SEQUENCE,Execute EDW DimInvoiceType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7355,Package\CMS and CSS Center Management Dimensions\Execute EDW DimInvoiceType load\SQL - spCMS_StagingToEDW_DimInvoiceType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimInvoiceType,,,,,EXEC dbo.spCMS_StagingToEDW_DimInvoiceType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7356,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load,STOCK:SEQUENCE,Execute EDW DimPaymentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7357,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CMS_Staging To EDW DimPaymentType load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimPaymentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7358,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CMS_Staging To EDW DimPaymentType load\SQL - spCMS_StagingToEDW_DimPaymentType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimPaymentType,,,,,EXEC dbo.spCMS_StagingToEDW_DimPaymentType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7359,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CSS_Staging To EDW DimPaymentType load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimPaymentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7360,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CSS_Staging To EDW DimPaymentType load\SQL - spCSS_StagingToEDW_DimPaymentType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimPaymentType,,,,,EXEC DBO.spCSS_StagingToEDW_DimPaymentType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7361,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load,STOCK:SEQUENCE,Execute EDW DimProgram load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7362,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CMS_Staging To EDW DimProgram load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimProgram load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7363,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CMS_Staging To EDW DimProgram load\SQL - spCMS_StagingToEDW_DimProgram,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimProgram,,,,,EXEC dbo.spCMS_StagingToEDW_DimProgram,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7364,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CSS_Staging To EDW DimProgram load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimProgram load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7365,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CSS_Staging To EDW DimProgram load\SQL - spCSS_StagingToEDW_DimProgram,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimProgram,,,,,EXEC dbo.spCSS_StagingToEDW_DimProgram,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7366,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load,STOCK:SEQUENCE,Execute EDW DimSession load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7367,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CMS_Staging To EDW DimSession load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimSession load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7368,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CMS_Staging To EDW DimSession load\SQL - spCMS_StagingToEDW_DimSession,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimSession,,,,,EXEC dbo.spCMS_StagingToEDW_DimSession,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7369,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CSS_Staging To EDW DimSession load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimSession load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7370,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CSS_Staging To EDW DimSession load\SQL - spCSS_StagingToEDW_DimSession,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimSession,,,,,EXEC dbo.spCSS_StagingToEDW_DimSession,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7371,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load,STOCK:SEQUENCE,Execute EDW DimSponsor load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7372,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CMS_Staging To EDW DimSponsor load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimSponsor load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7373,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CMS_Staging To EDW DimSponsor load\SQL - spCMS_StagingToEDW_DimSponsor,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimSponsor,,,,,EXEC dbo.spCMS_StagingToEDW_DimSponsor;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7374,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CSS_Staging To EDW DimSponsor load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimSponsor load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7375,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CSS_Staging To EDW DimSponsor load\SQL - spCSS_StagingToEDW_DimSponsor,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimSponsor,,,,,EXEC dbo.spCSS_StagingToEDW_DimSponsor;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7376,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load,STOCK:SEQUENCE,Execute EDW DimStudent load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7377,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CMS_Staging To EDW DimStudent load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimStudent load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7378,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CMS_Staging To EDW DimStudent load\SQL - spCMS_StagingToEDW_DimStudent,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimStudent,,,,,EXEC dbo.spCMS_StagingToEDW_DimStudent;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7379,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CSS_Staging To EDW DimStudent load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimStudent load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7380,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CSS_Staging To EDW DimStudent load\SQL - spCSS_StagingToEDW_DimStudent,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimStudent,,,,,EXEC dbo.spCSS_StagingToEDW_DimStudent,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7381,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load,STOCK:SEQUENCE,Execute EDW DimTier load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7382,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CMS_Staging To EDW DimTier load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimTier load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7383,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CMS_Staging To EDW DimTier load\SQL - spCMS_StagingToEDW_DimTier,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimTier,,,,,"IF EXISTS -- This Package is getting merged before the proc is present, so put in safety net for now...
(
    SELECT *
    FROM sys.objects
    WHERE type = 'P'
          AND name = 'spCMS_StagingToEDW_DimTier'
)
    EXEC dbo.spCMS_StagingToEDW_DimTier;
GO",StagingToEDW_StagingToEDW_Dimension_CenterManagement
7384,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CSS_Staging To EDW DimTier load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimTier load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7385,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CSS_Staging To EDW DimTier load\SQL - spCSS_StagingToEDW_DimTier,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTier,,,,,EXEC dbo.spCSS_StagingToEDW_DimTier,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7386,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load,STOCK:SEQUENCE,Execute EDW DimTuitionAssistanceProvider load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7387,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CMS_Staging To EDW DimTuitionAssistanceProvider load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimTuitionAssistanceProvider load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7388,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CMS_Staging To EDW DimTuitionAssistanceProvider load\SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,,,,,EXEC dbo.spCMS_StagingToEDW_DimTuitionAssistanceProvider;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7389,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CSS_Staging To EDW DimAssistance load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimAssistance load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7390,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CSS_Staging To EDW DimAssistance load\SQL - spCSS_StagingToEDW_DimTuitionAssistanceProvider,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTuitionAssistanceProvider,,,,,EXEC dbo.spCSS_StagingToEDW_DimTuitionAssistanceProvider;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7391,Package\DW_Mart Dimension Tables,STOCK:SEQUENCE,DW_Mart Dimension Tables,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7392,Package\DW_Mart Dimension Tables\DimDataScenario,Microsoft.ExecutePackageTask,DimDataScenario,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7393,Package\DW_Mart Dimension Tables\DimDate_DM,Microsoft.ExecutePackageTask,DimDate_DM,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7394,Package\DW_Mart Dimension Tables\DimLifecycleStatus,Microsoft.ExecutePackageTask,DimLifecycleStatus,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7395,Package\DW_Mart Dimension Tables\DimMartPartner,Microsoft.ExecutePackageTask,DimMartPartner,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7396,Package\DW_Mart Dimension Tables\DimMeasure,Microsoft.ExecutePackageTask,DimMeasure,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7397,Package\DW_Mart Dimension Tables\DimProgram,Microsoft.ExecutePackageTask,DimProgram,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7398,Package\DW_Mart Dimension Tables\DimRetentionBaseWeek,Microsoft.ExecutePackageTask,DimRetentionBaseWeek,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7399,Package\DW_Mart Dimension Tables\DimScheduleWeek,Microsoft.ExecutePackageTask,DimScheduleWeek,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7400,Package\DW_Mart Dimension Tables\DimSession,Microsoft.ExecutePackageTask,DimSession,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7401,Package\DW_Mart Dimension Tables\DimSponsor,Microsoft.ExecutePackageTask,DimSponsor,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7402,Package\DW_Mart Dimension Tables\DimStudent,Microsoft.ExecutePackageTask,DimStudent,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7403,Package\DW_Mart Dimension Tables\DimTier,Microsoft.ExecutePackageTask,DimTier,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7404,Package\DW_Mart Dimension Tables\DimTimeCalculation,Microsoft.ExecutePackageTask,DimTimeCalculation,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7405,Package\DW_Mart Dimension Tables\DimTuitionAssistanceProvider,Microsoft.ExecutePackageTask,DimTuitionAssistanceProvider,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7406,Package\DW_Mart Dimension Tables\ReportMeasure,Microsoft.ExecutePackageTask,ReportMeasure,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
7407,Package,Microsoft.Package,StagingToEDW_Dimension_GLandHR,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7408,Package\Change History - StagingToEDW_Dimension_GLandHR,STOCK:SEQUENCE,Change History - StagingToEDW_Dimension_GLandHR,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7409,Package\ORACLE GL and HRIS Dimensions,STOCK:SEQUENCE,ORACLE GL and HRIS Dimensions,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7410,Package\ORACLE GL and HRIS Dimensions\EPT - DimMartCostCenter,Microsoft.ExecutePackageTask,EPT - DimMartCostCenter,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7411,Package\ORACLE GL and HRIS Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimDate load before other Dimensions,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7412,Package\ORACLE GL and HRIS Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions\SQL - spGL_StagingToEDW_DimDate,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimDate,,,,,EXEC dbo.spGL_StagingToEDW_DimDate,StagingToEDW_StagingToEDW_Dimension_GLandHR
7413,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging HrAllOrganizationUnits load,STOCK:SEQUENCE,Execute GL_Staging HrAllOrganizationUnits load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7414,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging HrAllOrganizationUnits load\SQL - spGL_StagingGenerate_HrAllOrganizationUnits,Microsoft.ExecuteSQLTask,SQL - spGL_StagingGenerate_HrAllOrganizationUnits,,,,,EXEC dbo.spGL_StagingGenerate_HrAllOrganizationUnits,StagingToEDW_StagingToEDW_Dimension_GLandHR
7415,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To DW_Mart DimAccountSubaccount,STOCK:SEQUENCE,Execute GL_Staging To DW_Mart DimAccountSubaccount,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7416,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To DW_Mart DimAccountSubaccount\EPT - DimMartAccountSubaccount,Microsoft.ExecutePackageTask,EPT - DimMartAccountSubaccount,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7417,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW BridgeCompanyRollup load,STOCK:SEQUENCE,Execute GL_Staging To EDW BridgeCompanyRollup load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7418,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW BridgeCompanyRollup load\SQL - spGL_StagingToEDW_BridgeCompanyRollup,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_BridgeCompanyRollup,,,,,EXEC dbo.spGL_StagingToEDW_BridgeCompanyRollup;,StagingToEDW_StagingToEDW_Dimension_GLandHR
7419,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimAccountSubaccount load,STOCK:SEQUENCE,Execute GL_Staging To EDW DimAccountSubaccount load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7420,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimAccountSubaccount load\SQL - spGL_StagingToEDW_DimAccountSubAccount,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimAccountSubAccount,,,,,EXEC dbo.spGL_StagingToEDW_DimAccountSubAccount,StagingToEDW_StagingToEDW_Dimension_GLandHR
7421,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompany load,STOCK:SEQUENCE,Execute GL_Staging To EDW DimCompany load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7422,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompany load\SQL - spGL_StagingToEDW_DimCompany,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimCompany,,,,,EXEC dbo.spGL_StagingToEDW_DimCompany,StagingToEDW_StagingToEDW_Dimension_GLandHR
7423,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompanyRollup load,STOCK:SEQUENCE,Execute GL_Staging To EDW DimCompanyRollup load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7424,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompanyRollup load\SQL - spGL_StagingToEDW_DimCompanyRollup,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimCompanyRollup,,,,,EXEC dbo.spGL_StagingToEDW_DimCompanyRollup;,StagingToEDW_StagingToEDW_Dimension_GLandHR
7425,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCostCenterType load,STOCK:SEQUENCE,Execute GL_Staging To EDW DimCostCenterType load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7426,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCostCenterType load\SQL - spGL_StagingToEDW_DimCostCenterType,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimCostCenterType,,,,,EXEC dbo.spGL_StagingToEDW_DimCostCenterType,StagingToEDW_StagingToEDW_Dimension_GLandHR
7427,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging OrgLeaderAccess load,STOCK:SEQUENCE,Execute HR_Staging OrgLeaderAccess load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7428,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging OrgLeaderAccess load\SQL - spHR_StagingGenerate_OrgLeaderAccess,Microsoft.ExecuteSQLTask,SQL - spHR_StagingGenerate_OrgLeaderAccess,,,,,EXEC dbo.spHR_StagingGenerate_OrgLeaderAccess,StagingToEDW_StagingToEDW_Dimension_GLandHR
7429,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonHRISGroup,STOCK:SEQUENCE,Execute HR_Staging To EDW BridgeSecurityPersonHRISGroup,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7430,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonHRISGroup\SQL -spHR_StagingTransform_BridgeSecurityPersonHRISGroup,Microsoft.ExecuteSQLTask,SQL -spHR_StagingTransform_BridgeSecurityPersonHRISGroup,,,,,EXEC dbo.spHR_StagingToEDW_BridgeSecurityPersonHRISGroup;,StagingToEDW_StagingToEDW_Dimension_GLandHR
7431,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonOrg,STOCK:SEQUENCE,Execute HR_Staging To EDW BridgeSecurityPersonOrg,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7432,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonOrg\SQL - spHR_StagingToEDW_BridgeSecurityPersonOrg,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_BridgeSecurityPersonOrg,,,,,EXEC dbo.spHR_StagingToEDW_BridgeSecurityPersonOrg;,StagingToEDW_StagingToEDW_Dimension_GLandHR
7433,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssessmentType load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimAssessmentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7434,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssessmentType load\SQL - spHR_StagingToEDW_DimAssessmentType,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimAssessmentType,,,,,EXEC dbo.spHR_StagingToEDW_DimAssessmentType,StagingToEDW_StagingToEDW_Dimension_GLandHR
7435,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssignmentType load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimAssignmentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7436,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssignmentType load\SQL - spHR_StagingToEDW_DimAssignmentType,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimAssignmentType,,,,,EXEC dbo.spHR_StagingToEDW_DimAssignmentType,StagingToEDW_StagingToEDW_Dimension_GLandHR
7437,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceItem load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimComplianceItem load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7438,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceItem load\SQL - spHR_StagingToEDW_DimComplianceItem,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimComplianceItem,,,,,EXEC dbo.spHR_StagingToEDW_DimComplianceItem,StagingToEDW_StagingToEDW_Dimension_GLandHR
7439,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceRating load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimComplianceRating load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7440,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceRating load\SQL - spHR_StagingToEDW_DimComplianceRating,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimComplianceRating,,,,,EXEC dbo.spHR_StagingToEDW_DimComplianceRating; ,StagingToEDW_StagingToEDW_Dimension_GLandHR
7441,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimHRUser load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimHRUser load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7442,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimHRUser load\SQL - spHR_StagingToEDW_DimHRUser,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimHRUser,,,,,EXEC dbo.spHR_StagingToEDW_DimHRUser;,StagingToEDW_StagingToEDW_Dimension_GLandHR
7443,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveReason load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimLeaveReason load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7444,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveReason load\SQL - spHR_StagingToEDW_DimLeaveReason,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimLeaveReason,,,,,EXEC dbo.spHR_StagingToEDW_DimLeaveReason,StagingToEDW_StagingToEDW_Dimension_GLandHR
7445,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveType load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimLeaveType load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7446,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveType load\SQL - spHR_StagingToEDW_DimLeaveType,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimLeaveType,,,,,EXEC dbo.spHR_StagingToEDW_DimLeaveType,StagingToEDW_StagingToEDW_Dimension_GLandHR
7447,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimLocation load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimLocation load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7448,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimLocation load\SQL - spHR_StagingToEDW_DimLocation,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimLocation,,,,,EXEC dbo.spHR_StagingToEDW_DimLocation,StagingToEDW_StagingToEDW_Dimension_GLandHR
7449,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimOrganization Load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimOrganization Load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7450,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimOrganization Load\SQL - spHR_StagingToEDW_DimOrganization,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimOrganization,,,,,EXEC dbo.spHR_StagingToEDW_DimOrganization,StagingToEDW_StagingToEDW_Dimension_GLandHR
7451,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayBasis load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPayBasis load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7452,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayBasis load\SQL - spHR_StagingToEDW_DimPayBasis,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPayBasis,,,,,EXEC dbo.spHR_StagingToEDW_DimPayBasis,StagingToEDW_StagingToEDW_Dimension_GLandHR
7453,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayGrade load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPayGrade load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7454,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayGrade load\SQL - spHR_StagingToEDW_DimPayGrade,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPayGrade,,,,,EXEC dbo.spHR_StagingToEDW_DimPayGrade;,StagingToEDW_StagingToEDW_Dimension_GLandHR
7455,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPeopleGroup load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPeopleGroup load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7456,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPeopleGroup load\SQL - spHR_StagingToEDW_DimPeopleGroup,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPeopleGroup,,,,,EXEC dbo.spHR_StagingToEDW_DimPeopleGroup;,StagingToEDW_StagingToEDW_Dimension_GLandHR
7457,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerformanceRating load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPerformanceRating load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7458,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerformanceRating load\SQL - spHR_StagingToEDW_DimPerformanceRating,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPerformanceRating,,,,,EXEC dbo.spHR_StagingToEDW_DimPerformanceRating,StagingToEDW_StagingToEDW_Dimension_GLandHR
7459,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerson load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPerson load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7460,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerson load\SQL - spHR_StagingToEDW_DimPerson,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPerson,,,,,EXEC dbo.spHR_StagingToEDW_DimPerson;,StagingToEDW_StagingToEDW_Dimension_GLandHR
7461,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPosition load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPosition load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7462,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPosition load\SQL - spHR_StagingToEDW_DimPosition,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPosition,,,,,EXEC dbo.spHR_StagingToEDW_DimPosition,StagingToEDW_StagingToEDW_Dimension_GLandHR
7463,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimQualificationType,STOCK:SEQUENCE,Execute HR_Staging To EDW DimQualificationType,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7464,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimQualificationType\SQL - spHR_StagingToEDW_DimQualificationType,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimQualificationType,,,,,EXEC dbo.spHR_StagingToEDW_DimQualificationType;,StagingToEDW_StagingToEDW_Dimension_GLandHR
7465,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimSpecialInfo load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimSpecialInfo load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7466,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimSpecialInfo load\SQL - spHR_StagingToEDW_DimSpecialInfo,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimSpecialInfo,,,,,EXEC dbo.spHR_StagingToEDW_DimSpecialInfo,StagingToEDW_StagingToEDW_Dimension_GLandHR
7467,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW • DimPayRateChangeReason load,STOCK:SEQUENCE,Execute HR_Staging To EDW • DimPayRateChangeReason load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7468,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW • DimPayRateChangeReason load\SQL - spHR_StagingToEDW_DimPayRateChangeReason,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPayRateChangeReason,,,,,EXEC dbo.spHR_StagingToEDW_DimPayRateChangeReason,StagingToEDW_StagingToEDW_Dimension_GLandHR
7469,Package\ORACLE GL and HRIS Dimensions\Execute MISC_Staging To EDW DimReport Profile,STOCK:SEQUENCE,Execute MISC_Staging To EDW DimReport Profile,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
7470,Package\ORACLE GL and HRIS Dimensions\Execute MISC_Staging To EDW DimReport Profile\SQL - spMISC_StagingToEDW_DimReportProfile,Microsoft.ExecuteSQLTask,SQL - spMISC_StagingToEDW_DimReportProfile,,,,,EXEC dbo.spMISC_StagingToEDW_DimReportProfile,StagingToEDW_StagingToEDW_Dimension_GLandHR
7471,Package,Microsoft.Package,StagingToEDW_Dimension_StudentLeads,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
7472,Package\Change History - StagingToEDW_Dimension_StudentLeads,STOCK:SEQUENCE,Change History - StagingToEDW_Dimension_StudentLeads,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
7473,Package\Exec DimLead EDW Load,STOCK:SEQUENCE,Exec DimLead EDW Load,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
7474,Package\Exec DimLead EDW Load\SQL - spSalesForce_StagingToEDW_DimLead,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_DimLead,,,,,EXEC dbo.spSalesforce_StagingToEDW_DimLead,StagingToEDW_StagingToEDW_Dimension_StudentLeads
7475,Package\Exec DimLeadType EDW Load,STOCK:SEQUENCE,Exec DimLeadType EDW Load,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
7476,Package\Exec DimLeadType EDW Load\SQL - spSalesForce_StagingToEDW_DimLeadType,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_DimLeadType,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimLeadType,StagingToEDW_StagingToEDW_Dimension_StudentLeads
7477,Package\Exec DimWebCampaign Load,STOCK:SEQUENCE,Exec DimWebCampaign Load,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
7478,Package\Exec DimWebCampaign Load\SQL - spSalesForce_StagingToEDW_DimWebCampaign,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_DimWebCampaign,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimWebCampaign,StagingToEDW_StagingToEDW_Dimension_StudentLeads
7479,Package,Microsoft.Package,StagingToEDW_FactParent,,,,,,StagingToEDW_StagingToEDW_FactParent
7480,Package\Change History - StagingToEDW_FactParent,STOCK:SEQUENCE,Change History - StagingToEDW_FactParent,,,,,,StagingToEDW_StagingToEDW_FactParent
7481,Package\Execute FactGLBalancePlanAllocation load,STOCK:SEQUENCE,Execute FactGLBalancePlanAllocation load,,,,,,StagingToEDW_StagingToEDW_FactParent
7482,Package\Execute FactGLBalancePlanAllocation load\Execute StagingToEDW_Fact_GLBalancePlanAllocation,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_GLBalancePlanAllocation,,,,,,StagingToEDW_StagingToEDW_FactParent
7483,Package\StagingToEDW Fact Load - CMS and CSS,STOCK:SEQUENCE,StagingToEDW Fact Load - CMS and CSS,,,,,,StagingToEDW_StagingToEDW_FactParent
7484,Package\StagingToEDW Fact Load - CMS and CSS\CMS Fact Load,STOCK:SEQUENCE,CMS Fact Load,,,,,,StagingToEDW_StagingToEDW_FactParent
7485,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW Fact Billing Payment Transactions,STOCK:SEQUENCE,Execute EDW Fact Billing Payment Transactions,,,,,,StagingToEDW_StagingToEDW_FactParent
7486,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW Fact Billing Payment Transactions\Execute StagingToEDW_Fact_BillingPaymentTransactions,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_BillingPaymentTransactions,,,,,,StagingToEDW_StagingToEDW_FactParent
7487,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactARBalanceSnapshot load,STOCK:SEQUENCE,Execute EDW FactARBalanceSnapshot load,,,,,,StagingToEDW_StagingToEDW_FactParent
7488,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactARBalanceSnapshot load\Execute StagingToEDW_Fact_ARBalanceSnapshot,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_ARBalanceSnapshot,,,,,,StagingToEDW_StagingToEDW_FactParent
7489,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute EDW FactFTESnapshot load,,,,,,StagingToEDW_StagingToEDW_FactParent
7490,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactFTESnapshot load\Execute StagingToEDW_Fact_FTESnapshot,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_FTESnapshot,,,,,,StagingToEDW_StagingToEDW_FactParent
7491,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactNetRevenue load,STOCK:SEQUENCE,Execute EDW FactNetRevenue load,,,,,,StagingToEDW_StagingToEDW_FactParent
7492,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactNetRevenue load\Execute StagingToEDW_Fact_CenterManagementRevenue,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_CenterManagementRevenue,,,,,,StagingToEDW_StagingToEDW_FactParent
7493,Package\StagingToEDW Fact Load - GL,STOCK:SEQUENCE,StagingToEDW Fact Load - GL,,,,,,StagingToEDW_StagingToEDW_FactParent
7494,Package\StagingToEDW Fact Load - GL\Execute GL_Staging To EDW FactCenterStatSnapshot load,STOCK:SEQUENCE,Execute GL_Staging To EDW FactCenterStatSnapshot load,,,,,,StagingToEDW_StagingToEDW_FactParent
7495,Package\StagingToEDW Fact Load - GL\Execute GL_Staging To EDW FactCenterStatSnapshot load\Execute StagingToEDW_Fact_CenterStatSnapshot,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_CenterStatSnapshot,,,,,,StagingToEDW_StagingToEDW_FactParent
7496,Package\StagingToEDW Fact Load - GL\Execute GL_Staging To EDW FactGLBalance load,STOCK:SEQUENCE,Execute GL_Staging To EDW FactGLBalance load,,,,,,StagingToEDW_StagingToEDW_FactParent
7497,Package\StagingToEDW Fact Load - GL\Execute GL_Staging To EDW FactGLBalance load\Execute StagingToEDW_Fact_GLBalances,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_GLBalances,,,,,,StagingToEDW_StagingToEDW_FactParent
7498,Package\StagingToEDW SalesForce Fact Load,STOCK:SEQUENCE,StagingToEDW SalesForce Fact Load,,,,,,StagingToEDW_StagingToEDW_FactParent
7499,Package\StagingToEDW SalesForce Fact Load\Execute StagingToEDW_Fact_StudentLeads,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_StudentLeads,,,,,,StagingToEDW_StagingToEDW_FactParent
7500,Package,Microsoft.Package,StagingToEDW_Fact_ARBalanceSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
7501,Package\Change History - StagingToEDW_Fact_ARBalanceSnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_ARBalanceSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
7502,Package\Execute EDW FactARBalanceSnapshot load,STOCK:SEQUENCE,Execute EDW FactARBalanceSnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
7503,Package\Execute EDW FactARBalanceSnapshot load\Execute CMS_StagingToEDW FactARBalanceSnapshot load,STOCK:SEQUENCE,Execute CMS_StagingToEDW FactARBalanceSnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
7504,Package\Execute EDW FactARBalanceSnapshot load\Execute CMS_StagingToEDW FactARBalanceSnapshot load\SQL - spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,Microsoft.ExecuteSQLTask,SQL - spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot;,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
7505,Package\Execute EDW FactARBalanceSnapshot load\Execute CSS_StagingToEDW FactARBalanceSnapshot load,STOCK:SEQUENCE,Execute CSS_StagingToEDW FactARBalanceSnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
7506,Package\Execute EDW FactARBalanceSnapshot load\Execute CSS_StagingToEDW FactARBalanceSnapshot load\SQL - spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,Microsoft.ExecuteSQLTask,SQL - spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,,,,,EXEC dbo.spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot;,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
7507,Package,Microsoft.Package,StagingToEDW_Fact_BillingPaymentTransactions,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7508,Package\Change History - StagingToEDW_Fact_BillingPaymentTransactions,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_BillingPaymentTransactions,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7509,Package\Execute CMS_Staging To EDW FactAdjustment load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactAdjustment load,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7510,Package\Execute CMS_Staging To EDW FactAdjustment load\SQL - spCMS_StagingToEDW_FactAdjustment,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_FactAdjustment,,,,,EXEC dbo.spCMS_StagingToEDW_FactAdjustment;,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7511,Package\Execute CMS_Staging To EDW FactBilling load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactBilling load,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7512,Package\Execute CMS_Staging To EDW FactBilling load\SQL -spCMS_BatchLoad_StagingToEDW_FactBilling,Microsoft.ExecuteSQLTask,SQL -spCMS_BatchLoad_StagingToEDW_FactBilling,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactBilling;,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7513,Package\Execute CMS_Staging To EDW FactPayment load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactPayment load,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7514,Package\Execute CMS_Staging To EDW FactPayment load\SQL - spCMS_BatchLoad_StagingToEDW_FactPayment,Microsoft.ExecuteSQLTask,SQL - spCMS_BatchLoad_StagingToEDW_FactPayment,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactPayment,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7515,Package\Execute CMS_Staging To EDW FactPaymentApplied,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactPaymentApplied,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7516,Package\Execute CMS_Staging To EDW FactPaymentApplied\SQL - spCMS_StagingToEDW_FactPaymentApplied,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_FactPaymentApplied,,,,,EXEC dbo.spCMS_StagingToEDW_FactPaymentApplied,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
7517,Package,Microsoft.Package,StagingToEDW_Fact_CenterManagementEnrollment,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
7518,Package\Change History - StagingToEDW_Fact_CenterStatsSnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_CenterStatsSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
7519,Package\Execute CMS_Staging To EDW FactSessionEnrollment load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactSessionEnrollment load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
7520,Package\Execute CMS_Staging To EDW FactSessionEnrollment load\SQL - spCMS_StagingToEDW_FactSessionEnrollment,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_FactSessionEnrollment,,,,,EXEC dbo.spCMS_StagingToEDW_FactSessionEnrollment;,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
7521,Package\Execute CMS_Staging To EDW FactTierAssignment,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactTierAssignment,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
7522,Package\Execute CMS_Staging To EDW FactTierAssignment\SQL -spCMS_StagingToEDW_FactTierAssignment,Microsoft.ExecuteSQLTask,SQL -spCMS_StagingToEDW_FactTierAssignment,,,,,EXEC dbo.spCMS_StagingToEDW_FactTierAssignment;,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
7523,Package\Execute FactPartnerverifiedSponsor,Microsoft.ExecutePackageTask,Execute FactPartnerverifiedSponsor,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
7524,Package\Execute GL_Staging To EDW FactCenterStatSnapshot load,STOCK:SEQUENCE,Execute GL_Staging To EDW FactCenterStatSnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
7525,Package\Execute GL_Staging To EDW FactCenterStatSnapshot load\SQL - spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,Microsoft.ExecuteSQLTask,SQL - spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,,,,,EXEC dbo.spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot;,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
7526,Package,Microsoft.Package,StagingToEDW_Fact_CenterManagementRevenue,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7527,Package\Change History - StagingToEDW_Fact_CenterManagementRevenue,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_CenterManagementRevenue,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7528,Package\Drop Index and Populate NetRevenueConsolidated Table,STOCK:SEQUENCE,Drop Index and Populate NetRevenueConsolidated Table,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7529,Package\Drop Index and Populate NetRevenueConsolidated Table\SQL - Drop Index on FactNetRevenueConsolidated,Microsoft.ExecuteSQLTask,SQL - Drop Index on FactNetRevenueConsolidated,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM [sys].[sysobjects] [O]
         INNER JOIN [sys].[sysindexes] [I] ON [O].[id] = [I].[id]
    WHERE [I].[name] = 'CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    DROP INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey] ON [dbo].[FactNetRevenueConsolidated];",StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7530,Package\Drop Index and Populate NetRevenueConsolidated Table\SQL - Populate Revenue & Create Index,Microsoft.ExecuteSQLTask,SQL - Populate Revenue & Create Index,,,,,"TRUNCATE TABLE [dbo].[FactNetRevenueConsolidated];

INSERT INTO [dbo].[FactNetRevenueConsolidated] (
 [FiscalWeekNumber], [FiscalWeekEndDate], [CostCenterKey], [CostCenterNumber], [AccountSubaccountKey], [Count], [NetRevenueAmount]
)
SELECT
 [D].[FiscalWeekNumber],
 [D].[FiscalWeekEndDate],
 [MCC].[CostCenterKey],
 [MCC].[CostCenterNumber],
 [F].[AccountSubaccountKey],
 COUNT_BIG(*) AS [Count],
 SUM([F].[NetRevenueAmount]) AS [NetRevenueAmount]
FROM [dbo].[FactNetRevenue] [F]
INNER JOIN [dbo].[DimDate] [D] ON [F].[DateKey] = [D].[DateKey]
INNER JOIN [dbo].[DimCostCenter] [C] ON [F].[CostCenterKey] = [C].[CostCenterKey]
INNER JOIN [dbo].[DimMartCostCenter] [MCC] ON [C].[CostCenterNumber] = [MCC].[CostCenterNumber]
 AND [D].[FullDate] BETWEEN [MCC].[EDWEffectiveFrom] AND [MCC].[EDWEffectiveTo]
GROUP BY
 [D].[FiscalWeekNumber], [D].[FiscalWeekEndDate],
 [MCC].[CostCenterKey], [MCC].[CostCenterNumber],
 [F].[AccountSubaccountKey];

CREATE UNIQUE CLUSTERED INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[FactNetRevenueConsolidated]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7531,Package\Execute Cambridge_Staging To EDW FactNetRevenue load,STOCK:SEQUENCE,Execute Cambridge_Staging To EDW FactNetRevenue load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7532,Package\Execute Cambridge_Staging To EDW FactNetRevenue load\SQL - EXEC spPRO_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,SQL - EXEC spPRO_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC dbo.spPRO_BatchLoad_StagingToEDW_FactNetRevenue;,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7533,Package\Execute CMS_Staging To EDW FactNetRevenue load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactNetRevenue load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7534,Package\Execute CMS_Staging To EDW FactNetRevenue load\SQL - spCMS_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,SQL - spCMS_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactNetRevenue;,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7535,Package\Execute CMS_Staging To EDW FactNetRevenue load\Update Stats for CMS_Staging,Microsoft.ExecuteSQLTask,Update Stats for CMS_Staging,,,,,"EXEC [dbo].[spUpdateStatistics];
EXEC [dbo].[spRecompile];",StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7536,Package\Execute Horizon_Staging To EDW FactNetRevenue load,STOCK:SEQUENCE,Execute Horizon_Staging To EDW FactNetRevenue load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7537,Package\Execute Horizon_Staging To EDW FactNetRevenue load\SQL - spHOR_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,SQL - spHOR_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC dbo.spHOR_BatchLoad_StagingToEDW_FactNetRevenue;,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
7538,Package,Microsoft.Package,StagingToEDW_Fact_FTESnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_FTESnapshot
7539,Package\Change History - StagingToEDW_Fact_FTESnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_FTESnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_FTESnapshot
7540,Package\Execute Cambridge_Staging To EDW FactFTESnapshot,STOCK:SEQUENCE,Execute Cambridge_Staging To EDW FactFTESnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_FTESnapshot
7541,Package\Execute Cambridge_Staging To EDW FactFTESnapshot\Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo].[spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot],StagingToEDW_StagingToEDW_Fact_FTESnapshot
7542,Package\Execute CMS_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactFTESnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_FTESnapshot
7543,Package\Execute CMS_Staging To EDW FactFTESnapshot load\Execute spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,StagingToEDW_StagingToEDW_Fact_FTESnapshot
7544,Package\Execute CMS_Staging To EDW FactFTESnapshot load\Update Stats CMS_Staging,Microsoft.ExecuteSQLTask,Update Stats CMS_Staging,,,,,"EXEC [dbo].[spUpdateStatistics];
EXEC [dbo].[spRecompile];",StagingToEDW_StagingToEDW_Fact_FTESnapshot
7545,Package,Microsoft.Package,StagingToEDW_Fact_GLBalancePlanAllocation,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalancePlanAllocation
7546,Package\Change History - StagingToEDW_Fact_GLBalancePlanAllocation,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_GLBalancePlanAllocation,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalancePlanAllocation
7547,Package\Execute MISC_Staging To EDW FactGLBalancePlanAllocation LegacyDW load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactGLBalancePlanAllocation LegacyDW load,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalancePlanAllocation
7548,Package\Execute MISC_Staging To EDW FactGLBalancePlanAllocation LegacyDW load\SQL - spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,,,,,EXEC dbo.spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation;,StagingToEDW_StagingToEDW_Fact_GLBalancePlanAllocation
7549,Package,Microsoft.Package,StagingToEDW_Fact_GLBalances,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalances
7550,Package\Change History - StagingToEDW_Fact_GLBalances,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_GLBalances,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalances
7551,Package\Execute GL_Staging To EDW FactGLBalance load,STOCK:SEQUENCE,Execute GL_Staging To EDW FactGLBalance load,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalances
7552,Package\Execute GL_Staging To EDW FactGLBalance load\SQL - spGL_BatchLoad_StagingToEDW_FactGLBalance,Microsoft.ExecuteSQLTask,SQL - spGL_BatchLoad_StagingToEDW_FactGLBalance,,,,,EXEC dbo.spGL_BatchLoad_StagingToEDW_FactGLBalance,StagingToEDW_StagingToEDW_Fact_GLBalances
7553,Package\Execute GL_Staging To EDW FactGLBalance load\Update Stats for GL Balance tables,Microsoft.ExecuteSQLTask,Update Stats for GL Balance tables,,,,,"EXEC [dbo].[spUpdateStatistics];
EXEC [dbo].[spRecompile];",StagingToEDW_StagingToEDW_Fact_GLBalances
7554,Package,Microsoft.Package,StagingToEDW_Fact_HREmployee,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7555,Package\Change History - StagingToEDW_Fact_HREmployee,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_HREmployee,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7556,Package\Execute HR_Staging To EDW FactEmployeeAssessment load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeAssessment load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7557,Package\Execute HR_Staging To EDW FactEmployeeAssessment load\SQL - spHR_StagingToEDW_FactEmployeeAssessment,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeAssessment,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssessment;,StagingToEDW_StagingToEDW_Fact_HREmployee
7558,Package\Execute HR_Staging To EDW FactEmployeeAssignment load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeAssignment load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7559,Package\Execute HR_Staging To EDW FactEmployeeAssignment load\SQL - spHR_StagingToEDW_FactEmployeeAssignment,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeAssignment,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssignment;,StagingToEDW_StagingToEDW_Fact_HREmployee
7560,Package\Execute HR_Staging To EDW FactEmployeeCompliance load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeCompliance load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7561,Package\Execute HR_Staging To EDW FactEmployeeCompliance load\SQL - spHR_StagingToEDW_FactEmployeeCompliance,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeCompliance,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeCompliance;,StagingToEDW_StagingToEDW_Fact_HREmployee
7562,Package\Execute HR_Staging To EDW FactEmployeeLeave load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeLeave load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7563,Package\Execute HR_Staging To EDW FactEmployeeLeave load\SQL - spHR_StagingToEDW_FactEmployeeLeave,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeLeave,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeLeave;,StagingToEDW_StagingToEDW_Fact_HREmployee
7564,Package\Execute HR_Staging To EDW FactEmployeePayRate Load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeePayRate Load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7565,Package\Execute HR_Staging To EDW FactEmployeePayRate Load\SQL - spHR_StagingToEDW_FactEmployeePayRate,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeePayRate,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeePayRate;,StagingToEDW_StagingToEDW_Fact_HREmployee
7566,Package\Execute HR_Staging To EDW FactEmployeePerformance load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeePerformance load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7567,Package\Execute HR_Staging To EDW FactEmployeePerformance load\SQL - spHR_StagingToEDW_FactEmployeePerformance,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeePerformance,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeePerformance;,StagingToEDW_StagingToEDW_Fact_HREmployee
7568,Package\Execute HR_Staging To EDW FactEmployeeQualification,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeQualification,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7569,Package\Execute HR_Staging To EDW FactEmployeeQualification\SQL - spHR_StagingToEDW_FactEmployeeQualification,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeQualification,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeQualification;,StagingToEDW_StagingToEDW_Fact_HREmployee
7570,Package\Execute HR_Staging To EDW FactEmployeeSpecialInfo load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeSpecialInfo load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
7571,Package\Execute HR_Staging To EDW FactEmployeeSpecialInfo load\SQL - spHR_StagingToEDW_FactPersonSpecialInfo,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactPersonSpecialInfo,,,,,EXEC dbo.spHR_StagingToEDW_FactPersonSpecialInfo;,StagingToEDW_StagingToEDW_Fact_HREmployee
7572,Package,Microsoft.Package,StagingToEDW_Fact_Labor,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7573,Package\Change History - StagingToEDW_Fact_LaborHour,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_LaborHour,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7574,Package\Execute Fact Labor Hour Actual Load,STOCK:SEQUENCE,Execute Fact Labor Hour Actual Load,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7575,Package\Execute Fact Labor Hour Actual Load\FactLaborHourActual,Microsoft.ExecutePackageTask,FactLaborHourActual,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7576,Package\Execute Fact Labor Hour Target load,STOCK:SEQUENCE,Execute Fact Labor Hour Target load,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7577,Package\Execute Fact Labor Hour Target load\FactLaborHourTarget,Microsoft.ExecutePackageTask,FactLaborHourTarget,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7578,Package\Execute Fact Labor Hour Target PRO,STOCK:SEQUENCE,Execute Fact Labor Hour Target PRO,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7579,Package\Execute Fact Labor Hour Target PRO\FactLaborHourTargetPRO,Microsoft.ExecutePackageTask,FactLaborHourTargetPRO,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7580,Package\Execute Fact Labor Salary,STOCK:SEQUENCE,Execute Fact Labor Salary,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7581,Package\Execute Fact Labor Salary\FactLaborSalary,Microsoft.ExecutePackageTask,FactLaborSalary,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
7582,Package,Microsoft.Package,StagingToEDW_Fact_LifecycleStatusSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_LifecycleStatusSnapshot
7583,Package\Change History - StagingToEDW_Fact_LifecycleStatusSnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_LifecycleStatusSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_LifecycleStatusSnapshot
7584,Package\Execute Fact Lifecycle Status Snapshot Load,STOCK:SEQUENCE,Execute Fact Lifecycle Status Snapshot Load,,,,,,StagingToEDW_StagingToEDW_Fact_LifecycleStatusSnapshot
7585,Package\Execute Fact Lifecycle Status Snapshot Load\SQL - spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,Microsoft.ExecuteSQLTask,SQL - spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,,,,,EXEC [dbo].[spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot];,StagingToEDW_StagingToEDW_Fact_LifecycleStatusSnapshot
7586,Package,Microsoft.Package,StagingToEDW_Fact_StudentLeads,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
7587,Package\Change History - StagingToEDW_Fact_ARBalanceSnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_ARBalanceSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
7588,Package\Execute SalesForce FactLeadEvent Load,STOCK:SEQUENCE,Execute SalesForce FactLeadEvent Load,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
7589,Package\Execute SalesForce FactLeadEvent Load\SQL - spSalesForce_StagingToEDW_FactLeadEvent,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_FactLeadEvent,,,,,EXEC dbo.spSalesForce_StagingToEDW_FactLeadEvent,StagingToEDW_StagingToEDW_Fact_StudentLeads
7590,Package\Execute SalesForce FactLeadPipeline Load,STOCK:SEQUENCE,Execute SalesForce FactLeadPipeline Load,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
7591,Package\Execute SalesForce FactLeadPipeline Load\SQL - spSalesForce_StagingToEDW_FactLeadPipeline,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_FactLeadPipeline,,,,,EXEC dbo.spSalesForce_StagingToEDW_FactLeadPipeline,StagingToEDW_StagingToEDW_Fact_StudentLeads
7592,Package\Execute SalesForce Method of Contact Lookup load,STOCK:SEQUENCE,Execute SalesForce Method of Contact Lookup load,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
7593,Package\Execute SalesForce Method of Contact Lookup load\SQL - spSalesForce_StagingGenerate_LookupMethodOfContact,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingGenerate_LookupMethodOfContact,,,,,EXEC dbo.spSalesForce_StagingGenerate_LookupMethodOfContact,StagingToEDW_StagingToEDW_Fact_StudentLeads
