,RefId,ExecutableType,ObjectName,componentClassID,contactInfo,description,name,SqlTaskData,File_path
0,Package,Microsoft.Package,DimAccreditation,,,,,,DataLakeBaseToMart_DimAccreditation
1,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimAccreditation
2,Package\Dimension - Data Load\DFT - Load new records From Landing to Dim,Microsoft.Pipeline,DFT - Load new records From Landing to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Table,,DataLakeBaseToMart_DimAccreditation
3,Package\Dimension - Data Load\DFT - Load new records From Landing to Dim,Microsoft.Pipeline,DFT - Load new records From Landing to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - InsertCount,,DataLakeBaseToMart_DimAccreditation
4,Package\Dimension - Data Load\DFT - Load new records From Landing to Dim,Microsoft.Pipeline,DFT - Load new records From Landing to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing table,,DataLakeBaseToMart_DimAccreditation
5,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimAccreditation
6,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimAccreditation
7,Package\Dimension - Data Load\SQL - Seed Row Insert if doesn't exists,Microsoft.ExecuteSQLTask,SQL - Seed Row Insert if doesn't exists,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.DimAccreditation WHERE AccreditationKey  IN (-1,-2))
	BEGIN
			SET IDENTITY_INSERT dbo.DimAccreditation ON;
			INSERT INTO [dbo].[DimAccreditation]
			           ([AccreditationKey]
			           ,[QualificationID]
			           ,[Accreditation]
			           ,[AreaOfStudy]
			           ,[AccreditationDate]
			           ,[Comments]
			           ,[CreatedDate]
			           ,[ModifiedDate]
			           ,[InsertAuditID])
			SELECT		-1
						, -1
						, 'Unknown Accredititaion'
						, 'Unknown Area of Study'
						, '1900-01-01'
						, 'Unknown Comments'
						, GETDATE()
						, GETDATE()
						,?
			UNION 
			SELECT		-2
						, -2
						, 'Not Applicable Accredititaion'
						, 'Not Applicable Area of Study'
						, '1900-01-01'
						, 'Not Applicable Comments'
						, GETDATE()
						, GETDATE()
						,?;
SELECT @@ROWCOUNT  + ? AS InsertCount;
SET IDENTITY_INSERT dbo.DimAccreditation OFF;
END
ELSE SELECT 0 as InsertCount;",DataLakeBaseToMart_DimAccreditation
8,Package\Dimension - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_DimAccreditation
9,Package\Dimension - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeBaseToMart_DimAccreditation
10,Package\Dimension - Data Load\SQl - Update Modified Record for Deletes,Microsoft.ExecuteSQLTask,SQl - Update Modified Record for Deletes,,,,,"UPDATE dima
   SET dima.ModifiedDate  =   GETDATE()    
            , dima.Deleted   = source.Deleted
            , dima.UpdateAuditID  =   ?       
FROM dbo.DimAccreditation dima
JOIN DW_Landing.dbo.DimAccreditationLanding source ON source.QualificationID = dima.QualificationID 
WHERE source.Deleted <> COALESCE(dima.Deleted, 'N')

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeBaseToMart_DimAccreditation
11,Package\Dimension - Data Load\SQl - Update Modified Records for SCD 1,Microsoft.ExecuteSQLTask,SQl - Update Modified Records for SCD 1,,,,,"UPDATE dima
   SET  dima.Accreditation  =   source.Accreditation  
      , dima.AreaOfStudy  =   source.AreaOfStudy  
      , dima.AccreditationDate  =   source.AccreditationDate  
      , dima.Comments      =   source.Comments      
      , dima.ModifiedDate  =   GETDATE()    
      , dima.UpdateAuditID  =   ?       
FROM dbo.DimAccreditation dima
JOIN DW_Landing.dbo.DimAccreditationLanding source ON source.QualificationID = dima.QualificationID 
WHERE COALESCE(source.Deleted, 'N') = COALESCE(dima.Deleted, 'N')

SELECT @@ROWCOUNT AS UpdateCount ;",DataLakeBaseToMart_DimAccreditation
12,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeBaseToMart_DimAccreditation
13,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing Table,,DataLakeBaseToMart_DimAccreditation
14,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeBaseToMart_DimAccreditation
15,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimAccreditation
16,Package\Landing - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimAccreditation
17,Package\Landing - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimAccreditation
18,Package\Landing - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @CreatedDate DATETIME = (SELECT MAX(CreatedDate) FROM DW_MART.dbo.DimAccreditation);

IF @LastProcessedDate IS NULL OR @CreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeBaseToMart_DimAccreditation
19,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_DimAccreditation
20,Package,Microsoft.Package,DimAge,,,,,,DataLakeBaseToMart_DimAge
21,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimAge
22,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Compare Values,,DataLakeBaseToMart_DimAge
23,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - InsertAuditID Column,,DataLakeBaseToMart_DimAge
24,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Insert,,DataLakeBaseToMart_DimAge
25,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",DST - Dim Update,,DataLakeBaseToMart_DimAge
26,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DataLakeBaseToMart_DimAge
27,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup Target,,DataLakeBaseToMart_DimAge
28,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimAge
29,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,DataLakeBaseToMart_DimAge
30,Package\Dimension - Data Load\Insert Seed Records,Microsoft.ExecuteSQLTask,Insert Seed Records,,,,,"DECLARE @InsertAuditID BIGINT = ?
DECLARE @CurDate datetime = GETDATE()

IF NOT EXISTS (SELECT 1 FROM dbo.DimAge WHERE MinimumDays = -1)
	BEGIN
                  SET IDENTITY_INSERT dbo.DimAge ON;
		INSERT INTO dbo.DimAge
		(
			AgeKey,
                                                      AgeID,
			MinimumDays,
			MaximumDays,
			AgeGrouping,
			CreatedDate,
			ModifiedDate,
			InsertAuditID
		)
		VALUES
		(
			-1,
                                                      -1,
			-1,
			-1,
			'Unknown',
			@CurDate,
			@CurDate,
			@InsertAuditID
		)
	END

IF NOT EXISTS (SELECT 1 FROM dbo.DimAge WHERE MinimumDays = -2)
	BEGIN
		INSERT INTO dbo.DimAge
		(
			AgeKey,
                                                      AgeID,
			MinimumDays,
			MaximumDays,
			AgeGrouping,
			CreatedDate,
			ModifiedDate,
			InsertAuditID
		)
		VALUES
		(
			-2,
                                                      -2,
			-2,
			-2,
			'N/A',
			@CurDate,
			@CurDate,
			@InsertAuditID
		)
SET IDENTITY_INSERT dbo.DimAge OFF;
	END",DataLakeBaseToMart_DimAge
31,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimAge
32,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimAge
33,Package,Microsoft.Package,DimAssessment,,,,,,DataLakeBaseToMart_DimAssessment
34,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimAssessment
35,Package\Dimension - Data Load\DFT - Load new records From Landing to Dim,Microsoft.Pipeline,DFT - Load new records From Landing to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Table,,DataLakeBaseToMart_DimAssessment
36,Package\Dimension - Data Load\DFT - Load new records From Landing to Dim,Microsoft.Pipeline,DFT - Load new records From Landing to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - InsertCount,,DataLakeBaseToMart_DimAssessment
37,Package\Dimension - Data Load\DFT - Load new records From Landing to Dim,Microsoft.Pipeline,DFT - Load new records From Landing to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing table,,DataLakeBaseToMart_DimAssessment
38,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimAssessment
39,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimAssessment
40,Package\Dimension - Data Load\SQL - Seed Row Insert if doesn't exists,Microsoft.ExecuteSQLTask,SQL - Seed Row Insert if doesn't exists,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.DimAssessment WHERE AssessmentKey  IN (-1,-2))
	BEGIN
			SET IDENTITY_INSERT dbo.DimAssessment ON;
			INSERT INTO [dbo].[DimAssessment]
			           ([AssessmentKey]
			           ,[AssessmentID]
                       ,[AssessmentType]
                       ,[AssessmentBand]
                       ,[CreatedDate]
                       ,[ModifiedDate]
			           ,[InsertAuditID])
			SELECT		-1
						, 'Unknown Assessment ID'
						, 'Unknown Assessment Type'
						, 'Unknown Assessment Band'
						, GETDATE()
						, GETDATE()
						,?
			UNION 
			SELECT		-2
						, 'Not Applicable'
						, 'Not Applicable'
						, 'Not Applicable'
						, GETDATE()
						, GETDATE()
						,?;
SELECT @@ROWCOUNT  + ? AS InsertCount;
SET IDENTITY_INSERT dbo.DimAssessment OFF;
END
ELSE SELECT ? as InsertCount;",DataLakeBaseToMart_DimAssessment
41,Package\Dimension - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_DimAssessment
42,Package\Dimension - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeBaseToMart_DimAssessment
43,Package\Dimension - Data Load\SQl - Update Modified Record for Deletes,Microsoft.ExecuteSQLTask,SQl - Update Modified Record for Deletes,,,,,"UPDATE tgt
   SET tgt.ModifiedDate = GETDATE()    
       ,tgt.Deleted   = src.Deleted
       ,tgt.UpdateAuditID  =   ?     
FROM dbo.DimAssessment tgt
JOIN DW_Landing.dbo.DimAssessmentLanding src ON src.AssessmentID = tgt.AssessmentID 
WHERE src.Deleted <> COALESCE(tgt.Deleted, 'N')

SELECT @@ROWCOUNT AS DeleteCount",DataLakeBaseToMart_DimAssessment
44,Package\Dimension - Data Load\SQl - Update Modified Records for SCD 1,Microsoft.ExecuteSQLTask,SQl - Update Modified Records for SCD 1,,,,,"UPDATE tgt
   SET tgt.AssessmentType = src.AssessmentType
      ,tgt.AssessmentBand = src.AssessmentBand
      ,tgt.ModifiedDate = GETDATE()    
      ,tgt.UpdateAuditID = ?
FROM	 dbo.DimAssessment tgt
JOIN  DW_Landing.dbo.DimAssessmentLanding src ON src.AssessmentID = tgt.AssessmentID
WHERE COALESCE(src.Deleted, 'N') = COALESCE(tgt.Deleted, 'N')

SELECT @@ROWCOUNT AS UpdateCount ;",DataLakeBaseToMart_DimAssessment
45,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeBaseToMart_DimAssessment
46,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing Table,,DataLakeBaseToMart_DimAssessment
47,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeBaseToMart_DimAssessment
48,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimAssessment
49,Package\Landing - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimAssessment
50,Package\Landing - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimAssessment
51,Package\Landing - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @CreatedDate DATETIME = (SELECT MAX(CreatedDate) FROM DW_MART.dbo.DimTermination);

IF @LastProcessedDate IS NULL OR @CreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeBaseToMart_DimAssessment
52,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_DimAssessment
53,Package,Microsoft.Package,DimAssignment,,,,,,DataLakeBaseToMart_DimAssignment
54,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimAssignment
55,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Table,,DataLakeBaseToMart_DimAssignment
56,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - InsertCount,,DataLakeBaseToMart_DimAssignment
57,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing table,,DataLakeBaseToMart_DimAssignment
58,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimAssignment
59,Package\Dimension - Data Load\SQL - Delete records from Dim,Microsoft.ExecuteSQLTask,SQL - Delete records from Dim,,,,,"DECLARE @LastProcessedDate DATETIME = ?
DELETE p
FROM dbo.DimAssignment p 
JOIN (SELECT *
FROM DW_Landing.dbo.DimAssignmentLanding dpl
WHERE (dpl.BaseCreatedDate > @LastProcessedDate  OR dpl.BaseModifiedDate > @LastProcessedDate )
AND EXISTS
(
    SELECT 1
    FROM dbo.DimAssignment dp
    WHERE dp.AssignmentID = dpl.AssignmentID
 AND dp.EffectiveStartDate = dpl.EffectiveStartDate
    AND dp.EffectiveFrom = dpl.BaseEffectiveDate
)
)a ON p.AssignmentID = a.AssignmentID AND p.EffectiveStartDate = a.EffectiveStartDate AND p.EffectiveFrom = a.BaseEffectiveDate

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeBaseToMart_DimAssignment
60,Package\Dimension - Data Load\SQL - Delete records from Dim not in source,Microsoft.ExecuteSQLTask,SQL - Delete records from Dim not in source,,,,,"DELETE dp
FROM dbo.DimAssignment dp
WHERE NOT EXISTS
(
    SELECT 1
    FROM DW_Landing.dbo.DimAssignmentLanding dpl
    WHERE dp.AssignmentID = dpl.AssignmentID
	AND dp.EffectiveStartDate = dpl.EffectiveStartDate
    AND dp.EffectiveFrom = dpl.BaseEffectiveDate
)
AND dp.AssignmentKey > 0

SELECT @@ROWCOUNT + ? AS DeleteCount ;",DataLakeBaseToMart_DimAssignment
61,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimAssignment
62,Package\Dimension - Data Load\SQL - Seed Row Insert if doesn't exists,Microsoft.ExecuteSQLTask,SQL - Seed Row Insert if doesn't exists,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.DimAssignment WHERE AssignmentID  IN (-1,-2))
	BEGIN
		SET IDENTITY_INSERT dbo.DimAssignment ON;

		INSERT INTO dbo.DimAssignment
		(
			AssignmentKey,
			AssignmentID,
			PersonID,
			AssignmentNumber,
			AssignmentType,
			AssignmentStatusType,
			WorkAtHomeIndicator,
			NormalWorkingHours,
			NDQCFlag,
			BonusPercent,
			ChangeReason,
			AssignmentSubType,
			IVRCode,
			Title,
			ExecutiveAssistant,
			CAWaiverIndicator,
			EmploymentCategory,
			EmployeePayBasis,
			SpecialInfoTypeName,
			SecondaryRateStartDate,
			SecondaryRateEndDate,
			SecondaryJobName,
			SecondaryPayRate,
                                                      SecondaryHoursType,
			Vendor,
			PeopleGroup,
			KLCLineOfBusiness,
			KLCPeopleGroup,
			KCLOTLLink,
			ProjectedAssignmentEndDate,
			PayGradeID,
			PositionID,
			LocationID,
			OrganizationID,
			EffectiveStartDate,
			ExpirationDate,
			EffectiveFrom,
			EffectiveTo,
			Deleted,
			RowStatus,
			CreatedDate,
			ModifiedDate,
			InsertAuditID,
			UpdateAuditID,
                                                      SourceUpdateDate
		)
		SELECT
			-1,
			-1,
			-1,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			-1,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'4712-12-31',
			'Unknown',
			-1,
                                                      'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'4712-12-31',
			-1,
			-1,
			-1,
			-1,
			'1900-01-01',
			'4712-12-31',
			'1900-01-01',
			'9999-12-31',
			NULL,
			'A',
			GETDATE(),
			GETDATE(),
			?,
			NULL,
                                                      '1900-01-01'
		UNION
		SELECT
			-2,
			-2,
			-2,
			'Not Applicable',
			'Not Applicable',
			'Not Applicable',
			'N/A',
			-2,
			'N/A',
			'N/A',
			'Not Applicable',
			'Not Applicable',
			'Not Applicable',
			'Not Applicable',
			'Not Applicable',
			'N/A',
			'Not Applicable',
			'Not Applicable',
			'Not Applicable',
			'1900-01-01',
			'4712-12-31',
			'Not Applicable',
	  		-2,
            'Not Applicable',
			'Not Applicable',
			'Not Applicable',
			'Not Applicable',
			'Not Applicable',
			'Not Applicable',
			'4712-12-31',
			-2,
			-2,
			-2,
			-2,
			'1900-01-01',
			'4712-12-31',
			'1900-01-01',
			'9999-12-31',
			NULL,
			'A',
			GETDATE(),
			GETDATE(),
			?,
			NULL,
                                                      '1900-01-01'

		SELECT @@ROWCOUNT + ? AS InsertCount;

		SET IDENTITY_INSERT dbo.DimAssignment OFF;
	END
ELSE
	BEGIN
		SELECT 0 + ? AS InsertCount;
	END",DataLakeBaseToMart_DimAssignment
63,Package\Dimension - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_DimAssignment
64,Package\Dimension - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeBaseToMart_DimAssignment
65,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeBaseToMart_DimAssignment
66,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing Table,,DataLakeBaseToMart_DimAssignment
67,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeBaseToMart_DimAssignment
68,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimAssignment
69,Package\Landing - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimAssignment
70,Package\Landing - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimAssignment
71,Package\Landing - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @CreatedDate DATETIME = (SELECT MAX(CreatedDate) FROM DW_MART.dbo.DimAssignment);

IF @LastProcessedDate IS NULL OR @CreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeBaseToMart_DimAssignment
72,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_DimAssignment
73,Package,Microsoft.Package,DimEvent,,,,,,DataLakeBaseToMart_DimEvent
74,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimEvent
75,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Compare Values,,DataLakeBaseToMart_DimEvent
76,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - InsertAuditID Column,,DataLakeBaseToMart_DimEvent
77,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Insert,,DataLakeBaseToMart_DimEvent
78,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",DST - Dim Update,,DataLakeBaseToMart_DimEvent
79,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DataLakeBaseToMart_DimEvent
80,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup Target,,DataLakeBaseToMart_DimEvent
81,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimEvent
82,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,DataLakeBaseToMart_DimEvent
83,Package\Dimension - Data Load\Insert Seed Records,Microsoft.ExecuteSQLTask,Insert Seed Records,,,,,"DECLARE @InsertAuditID bigint = ?
DECLARE @CurDate datetime = GETDATE()

IF NOT EXISTS (SELECT 1 FROM dbo.DimEvent WHERE EventID = -1)
	BEGIN
                 SET IDENTITY_INSERT dbo.DimEvent ON;
		INSERT INTO dbo.DimEvent
		(
			EventKey,
                                                      EventID,
			EventName,
			CreatedDate,
			ModifiedDate,
			InsertAuditID
		)
		VALUES
		(
                                                     -1,
			-1,
			'Unknown',
			@CurDate,
			@CurDate,
			@InsertAuditID
		)
	END

IF NOT EXISTS (SELECT 1 FROM dbo.DimEvent WHERE EventID = -2)
	BEGIN
		INSERT INTO dbo.DimEvent
		(
			EventKey,
                                                      EventID,
			EventName,
			CreatedDate,
			ModifiedDate,
			InsertAuditID
		)
		VALUES
		(
                                                      -2,
			-2,
			'N/A',
			@CurDate,
			@CurDate,
			@InsertAuditID
		)
   SET IDENTITY_INSERT dbo.DimEvent OFF;
	END",DataLakeBaseToMart_DimEvent
84,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimEvent
85,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimEvent
86,Package,Microsoft.Package,DimPayGrade,,,,,,DataLakeBaseToMart_DimPayGrade
87,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimPayGrade
88,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Table,,DataLakeBaseToMart_DimPayGrade
89,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - InsertCount,,DataLakeBaseToMart_DimPayGrade
90,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing table,,DataLakeBaseToMart_DimPayGrade
91,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimPayGrade
92,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimPayGrade
93,Package\Dimension - Data Load\SQL - Seed Row Insert if doesn't exists,Microsoft.ExecuteSQLTask,SQL - Seed Row Insert if doesn't exists,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.DimPayGrade WHERE PayGradeKey  IN (-1,-2))
 BEGIN
   SET IDENTITY_INSERT dbo.DimPayGrade ON;
INSERT INTO [dbo].[DimPayGrade]
           ([PayGradeKey]
           ,[GradeID]
           ,[PayGrade]
           ,[Status]
           ,[MaximumPayRate]
           ,[MedianPayRate]
           ,[MinimumPayRate]
           ,[GradeRuleID]
           ,[EffectiveStartDate]
           ,[ExpirationDate]
           ,[EffectiveFrom]
           ,[EffectiveTo]
           ,[RowStatus]
           ,[CreatedDate]
           ,[ModifiedDate]
           ,[InsertAuditID]
		   )
   SELECT  -1
      , -1
      , 'Unknown'
      , 'Unknown'
	  , 0
	  , 0
	  , 0
      , -1
      , '1900-01-01'
	  , '4712-12-31'
      , '1900-01-01'
	  , '9999-12-31'
	  , 'A'
      , GETDATE()
      , GETDATE()
      , ?
   UNION 
   SELECT  -2
      , -2
      , 'Not Applicable'
      , 'N/A'
	  , 0
	  , 0
	  , 0
      , -2
      , '1900-01-01'
	  , '4712-12-31'
      , '1900-01-01'
	  , '9999-12-31'
	  , 'A'
      , GETDATE()
      , GETDATE()
      , ?;
SELECT @@ROWCOUNT  + ? AS InsertCount;
SET IDENTITY_INSERT dbo.DimPayGrade OFF;
END
ELSE SELECT 0 + ? AS InsertCount;",DataLakeBaseToMart_DimPayGrade
94,Package\Dimension - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_DimPayGrade
95,Package\Dimension - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeBaseToMart_DimPayGrade
96,Package\Dimension - Data Load\SQl - Update Modified Record for Deletes,Microsoft.ExecuteSQLTask,SQl - Update Modified Record for Deletes,,,,,"UPDATE dimpg
   SET dimpg.Deleted			= source.Deleted
       , dimpg.ModifiedDate		= GETDATE()    
       , dimpg.UpdateAuditID	=   ?   
FROM dbo.DimPayGrade dimpg
JOIN DW_Landing.dbo.DimPayGradeLanding source ON source.GradeID = dimpg.GradeID AND source.EffectiveStartDate = dimpg.EffectiveStartDate
	AND source.Deleted != COALESCE(dimpg.Deleted, 'N')

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeBaseToMart_DimPayGrade
97,Package\Dimension - Data Load\SQl - Update Modified Records for SCD 1,Microsoft.ExecuteSQLTask,SQl - Update Modified Records for SCD 1,,,,,"UPDATE dimpg
   SET dimpg.PayGrade               = source.PayGrade
	   , dimpg.Status				= source.Status
	   , dimpg.MaximumPayRate		= source.MaximumPayRate
	   , dimpg.MedianPayRate		= source.MedianPayRate
	   , dimpg.MinimumPayRate		= source.MinimumPayRate
	   , dimpg.GradeRuleID			= source.GradeRuleID
	   , dimpg.EffectiveStartDate	= source.EffectiveStartDate
	   , dimpg.ExpirationDate		= source.ExpirationDate
	   , dimpg.EffectiveFrom		= source.BaseEffectiveDate
	   , dimpg.EffectiveTo			= source.BaseEndDate
	   , dimpg.RowStatus			= source.RowStatus
       , dimpg.ModifiedDate			= GETDATE()    
       , dimpg.UpdateAuditID		=   ?   
FROM dbo.DimPayGrade dimpg
JOIN DW_Landing.dbo.DimPayGradeLanding source ON source.GradeID = dimpg.GradeID AND source.EffectiveStartDate = dimpg.EffectiveStartDate
	AND source.RowStatus != dimpg.RowStatus AND source.RowStatus = 'H' AND COALESCE(source.Deleted, 'N') = COALESCE(dimpg.Deleted, 'N')

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeBaseToMart_DimPayGrade
98,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeBaseToMart_DimPayGrade
99,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing Table,,DataLakeBaseToMart_DimPayGrade
100,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeBaseToMart_DimPayGrade
101,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimPayGrade
102,Package\Landing - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimPayGrade
103,Package\Landing - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimPayGrade
104,Package\Landing - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
 END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @CreatedDate DATETIME =  (SELECT MAX(CreatedDate) FROM DW_MART.dbo.DimPayGrade);

IF @LastProcessedDate IS NULL OR @CreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeBaseToMart_DimPayGrade
105,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_DimPayGrade
106,Package,Microsoft.Package,DimPerson,,,,,,DataLakeBaseToMart_DimPerson
107,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimPerson
108,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Table,,DataLakeBaseToMart_DimPerson
109,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - InsertCount,,DataLakeBaseToMart_DimPerson
110,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing table,,DataLakeBaseToMart_DimPerson
111,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimPerson
112,Package\Dimension - Data Load\SQL - Delete records from DimPerson,Microsoft.ExecuteSQLTask,SQL - Delete records from DimPerson,,,,,"DECLARE @LastProcessedDate DATETIME = ?
DELETE p
FROM dbo.DimPerson p 
JOIN (SELECT *
FROM DW_Landing.dbo.DimPersonLanding dpl
WHERE (dpl.BaseCreatedDate > @LastProcessedDate  OR dpl.BaseModifiedDate > @LastProcessedDate )
AND EXISTS
(
    SELECT 1
    FROM dbo.DimPerson dp
    WHERE dp.PersonID = dpl.PersonID
 AND dp.EffectiveStartDate = dpl.EffectiveStartDate
    AND dp.EffectiveFrom = dpl.BaseEffectiveDate
)
)a ON p.PersonID = a.PersonID AND p.EffectiveStartDate = a.EffectiveStartDate AND p.EffectiveFrom = a.BaseEffectiveDate

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeBaseToMart_DimPerson
113,Package\Dimension - Data Load\SQL - Delete records from DimPerson not in source,Microsoft.ExecuteSQLTask,SQL - Delete records from DimPerson not in source,,,,,"DELETE dp
FROM dbo.DimPerson dp
WHERE NOT EXISTS
(
    SELECT 1
    FROM DW_Landing.dbo.DimPersonLanding dpl
    WHERE dp.PersonID = dpl.PersonID
	AND dp.EffectiveStartDate = dpl.EffectiveStartDate
    AND dp.EffectiveFrom = dpl.BaseEffectiveDate
)
AND dp.PersonKey > 0

SELECT @@ROWCOUNT + ? AS DeleteCount ;",DataLakeBaseToMart_DimPerson
114,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimPerson
115,Package\Dimension - Data Load\SQL - Seed Row Insert if doesn't exists,Microsoft.ExecuteSQLTask,SQL - Seed Row Insert if doesn't exists,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.DimPerson WHERE PersonKey  IN (-1,-2))
 BEGIN
   SET IDENTITY_INSERT dbo.DimPerson ON;
INSERT INTO [dbo].[DimPerson]
           ([PersonKey]
           ,[PersonID]
           ,[PersonType]
           ,[PersonName]
           ,[Title]
           ,[PersonFirstName]
           ,[PersonMiddleName]
           ,[PersonLastName]
           ,[PersonSuffix]
           ,[PersonPreferredName]
           ,[SocialSecurityNumber]
           ,[BirthDate]
           ,[EmployeeNumber]
           ,[MaritalStatus]
           ,[Gender]
           ,[Ethnicity]
           ,[VeteranStatus]
           ,[EmailAddressKinderCare]
           ,[EmailAddressPersonal]
           ,[OriginalHireDate]
           ,[StartDate]
           ,[TerminationDate]
           ,[AdjustedServiceDate]
           ,[DeathDate]
           ,[PreviousEmployeeNumber]
           ,[PreviousEmployeeSource]
           ,[WOTCNotifiedIndicator]
           ,[WOTCNumber]
           ,[CheckSendToLocationID]
           ,[VestingDate]
           ,[MealPeriodWaived]
           ,[AlaskaWaiveDailyOTIndicator]
           ,[PersonAcquisitionDate]
           ,[TaleoCandidateID]
           ,[ContingentWorkerEmployeeID]
           ,[ContingentWorkerEmployeeNumber]
           ,[I9ReceivedIndicator]
           ,[WorkSchedule]
           ,[EmployeePerformanceRating]
           ,[EffectiveStartDate]
           ,[ExpirationDate]
           ,[EffectiveFrom]
           ,[EffectiveTo]
           ,[RowStatus]
           ,[CreatedDate]
           ,[ModifiedDate]
           ,[InsertAuditID]
            )  
   SELECT -1
      , -1
      , 'Unknown'    
	  , 'Unknown'
      , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  ,  '1900-01-01'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , '1900-01-01'
	  , '1900-01-01'
	  , '1900-01-01'
	  , '1900-01-01'
	  , '1900-01-01'
	  , 'Unknown'
	  , 'Unknown'
	  , 'UNK'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'UNK'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , '1900-01-01'
	  , '4712-12-31'
      , '1900-01-01'
	  , '9999-12-31'
	  , 'A'
      , GETDATE()
      , GETDATE()
      , ?
  
   UNION 
   SELECT  -2
      , -2
      , 'Not Applicable'
	  , 'Not Applicable'
      , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  ,  '1900-01-01'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , '1900-01-01'
	  , '1900-01-01'
	  , '1900-01-01'
	  , '1900-01-01'
	  , '1900-01-01'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'N/A'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'N/A'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , '1900-01-01'
	  , '4712-12-31'
      , '1900-01-01'
	  , '9999-12-31'
	  , 'A'
      , GETDATE()
      , GETDATE()
      , ?;
	
SELECT @@ROWCOUNT  + ?  AS InsertCount;
SET IDENTITY_INSERT dbo.DimPerson OFF;
END
ELSE SELECT 0 + ?  AS InsertCount;",DataLakeBaseToMart_DimPerson
116,Package\Dimension - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_DimPerson
117,Package\Dimension - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeBaseToMart_DimPerson
118,Package\Dimension - PersonSupervisor Load,STOCK:SEQUENCE,Dimension - PersonSupervisor Load,,,,,,DataLakeBaseToMart_DimPerson
119,Package\Dimension - PersonSupervisor Load\SQL - Execute spDimPersonSupervisorLoad,Microsoft.ExecuteSQLTask,SQL - Execute spDimPersonSupervisorLoad,,,,,"EXECUTE [dbo].[spDimPersonSupervisorLoad]
GO",DataLakeBaseToMart_DimPerson
120,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeBaseToMart_DimPerson
121,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing Table,,DataLakeBaseToMart_DimPerson
122,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeBaseToMart_DimPerson
123,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimPerson
124,Package\Landing - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimPerson
125,Package\Landing - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimPerson
126,Package\Landing - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @CreatedDate DATETIME = (SELECT MAX(CreatedDate) FROM DW_MART.dbo.DimPerson);

IF @LastProcessedDate IS NULL OR @CreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeBaseToMart_DimPerson
127,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_DimPerson
128,Package,Microsoft.Package,DimPosition,,,,,,DataLakeBaseToMart_DimPosition
129,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimPosition
130,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Table,,DataLakeBaseToMart_DimPosition
131,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - InsertCount,,DataLakeBaseToMart_DimPosition
132,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing table,,DataLakeBaseToMart_DimPosition
133,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimPosition
134,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimPosition
135,Package\Dimension - Data Load\SQL - Seed Row Insert if doesn't exists,Microsoft.ExecuteSQLTask,SQL - Seed Row Insert if doesn't exists,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.DimPosition WHERE PositionKey  IN (-1,-2))
 BEGIN
   SET IDENTITY_INSERT dbo.DimPosition ON;
INSERT INTO [dbo].[DimPosition]
           (PositionKey
	   ,[PositionID]
      ,[JobID]
      ,[Position]
      ,[Job]
      ,[PositionPayBasis]
      ,[PayBasisAnnualizationFactor]
      ,[PositionStatus]
      ,[PermTempIndicator]
      ,[PeopleGroup]
      ,[JobCategory]
      ,[JobLevel]
      ,[ManagerIndicator]
      ,[PurchaseApprovalLevel]
      ,[ADPJobActivity]
      ,[PcardApprovalIndicator]
      ,[JobGroup]
      ,[EEOCategory]
      ,[LaborType]
      ,[FSLAClassification]
      ,[KLCJobGroup]
      ,[PositionCode]
      ,[FunctionalArea]
      ,[SubFunctionalArea]
      ,[CorporateOverheadValue]
      ,[JobLevelCode]
      ,[BonusEligibleIndicator]
      ,[BonusPlan]
      ,[BonusTargetPercent]
      ,[LTIPEligibleIndicator]
      ,[JobType]
      ,[JobFamily]
      ,[PositionRollup]
      ,[LTPPercent]
      ,[PositionType]
      ,[PayFrequency]
      ,[OriginalEffectiveDate]
      ,[LocationID]
      ,[GradeID]
      ,[EffectiveStartDate]
      ,[ExpirationDate]
      ,[EffectiveFrom]
      ,[EffectiveTo]
      ,[RowStatus]
      ,[CreatedDate]
      ,[ModifiedDate]
      ,[InsertAuditID]
	)   
   SELECT  -1
      , -1
      , -1
      , 'Unknown'
	  , 'Unknown'
      , 'Unknown'
	  ,  -1
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'UNK'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'Unknown'
	  , 'UNK'
      , '1900-01-01'
	  , -1
	  , -1
	  , '1900-01-01'
	  , '4712-12-31'
      , '1900-01-01'
	  , '9999-12-31'
	  , 'A'
      , GETDATE()
      , GETDATE()
      , ?
  
   UNION 
   SELECT  -2
      , -2
      , -2
      , 'Not Applicable'
	  , 'Not Applicable'
      , 'Not Applicable'
	  ,  -2
	  , 'Not Applicable'
	  , 'N/A'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'N/A'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'Not Applicable'
	  , 'N/A'
      , '1900-01-01'
	  , -2
	  , -2
	  , '1900-01-01'
	  , '4712-12-31'
      , '1900-01-01'
	  , '9999-12-31'
	  , 'A'
      , GETDATE()
      , GETDATE()
      , ?;
	
SELECT @@ROWCOUNT  + ?  AS InsertCount;
SET IDENTITY_INSERT dbo.DimPosition OFF;
END
ELSE SELECT 0 + ? AS InsertCount;",DataLakeBaseToMart_DimPosition
136,Package\Dimension - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_DimPosition
137,Package\Dimension - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeBaseToMart_DimPosition
138,Package\Dimension - Data Load\SQl - Update Modified Record for Deletes,Microsoft.ExecuteSQLTask,SQl - Update Modified Record for Deletes,,,,,"UPDATE dimp
   SET dimp.Deleted			= source.Deleted
       , dimp.ModifiedDate		= GETDATE()    
       , dimp.UpdateAuditID	=   ?   
FROM dbo.DimPosition dimp
JOIN DW_Landing.dbo.DimPositionLanding source ON source.PositionID = dimp.PositionID AND source.EffectiveStartDate = dimp.EffectiveStartDate
	AND source.Deleted != COALESCE(dimp.Deleted, 'N')

SELECT @@ROWCOUNT AS DeleteCount;
",DataLakeBaseToMart_DimPosition
139,Package\Dimension - Data Load\SQl - Update Modified Records for SCD 1,Microsoft.ExecuteSQLTask,SQl - Update Modified Records for SCD 1,,,,,"UPDATE dimp
   SET dimp.PositionID = source.PositionID
      ,dimp.JobID = source.JobID
      ,dimp.Position = source.Position
      ,dimp.Job = source.Job
      ,dimp.PositionPayBasis = source.PositionPayBasis
      ,dimp.PayBasisAnnualizationFactor = source.PayBasisAnnualizationFactor
      ,dimp.PositionStatus = source.PositionStatus
      ,dimp.PermTempIndicator = source.PermTempIndicator
      ,dimp.PeopleGroup = source.PeopleGroup
      ,dimp.JobCategory = source.JobCategory
      ,dimp.JobLevel = source.JobLevel
      ,dimp.ManagerIndicator = source.ManagerIndicator
      ,dimp.PurchaseApprovalLevel = source.PurchaseApprovalLevel
      ,dimp.ADPJobActivity = source.ADPJobActivity
      ,dimp.PcardApprovalIndicator = source.PcardApprovalIndicator
      ,dimp.JobGroup = source.JobGroup
      ,dimp.EEOCategory = source.EEOCategory
      ,dimp.LaborType = source.LaborType
      ,dimp.FSLAClassification = source.FSLAClassification
      ,dimp.KLCJobGroup = source.KLCJobGroup
      ,dimp.PositionCode = source.PositionCode
      ,dimp.FunctionalArea = source.FunctionalArea
      ,dimp.SubFunctionalArea = source.SubFunctionalArea
      ,dimp.CorporateOverheadValue = source.CorporateOverheadValue
      ,dimp.JobLevelCode = source.JobLevelCode
      ,dimp.BonusEligibleIndicator = source.BonusEligibleIndicator
      ,dimp.BonusPlan = source.BonusPlan
      ,dimp.BonusTargetPercent = source.BonusTargetPercent
      ,dimp.LTIPEligibleIndicator = source.LTIPEligibleIndicator
      ,dimp.JobType = source.JobType
      ,dimp.JobFamily = source.JobFamily
      ,dimp.PositionRollup = source.PositionRollup
      ,dimp.LTPPercent = source.LTPPercent
      ,dimp.PositionType = source.PositionType
      ,dimp.PayFrequency = source.PayFrequency
      ,dimp.OriginalEffectiveDate = source.OriginalEffectiveDate
      ,dimp.LocationID = source.LocationID
      ,dimp.GradeID = source.GradeID
      , dimp.EffectiveStartDate	= source.EffectiveStartDate
	   , dimp.ExpirationDate		= source.ExpirationDate
	   , dimp.EffectiveFrom		= source.BaseEffectiveDate
	   , dimp.EffectiveTo			= source.BaseEndDate
	   , dimp.RowStatus			= source.RowStatus
       , dimp.ModifiedDate			= GETDATE()    
       , dimp.UpdateAuditID		=   ?   
FROM  dbo.DimPosition dimp
 JOIN DW_Landing.dbo.DimPositionLanding source ON source.PositionID = dimp.PositionID AND source.EffectiveStartDate = dimp.EffectiveStartDate
	--AND source.RowStatus != dimp.RowStatus AND COALESCE(source.Deleted, 'N') = COALESCE(dimp.Deleted, 'N')
	AND source.RowStatus != dimp.RowStatus AND source.RowStatus = 'H' AND COALESCE(source.Deleted, 'N') = COALESCE(dimp.Deleted, 'N')

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeBaseToMart_DimPosition
140,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeBaseToMart_DimPosition
141,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing Table,,DataLakeBaseToMart_DimPosition
142,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeBaseToMart_DimPosition
143,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimPosition
144,Package\Landing - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimPosition
145,Package\Landing - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimPosition
146,Package\Landing - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
 END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @CreatedDate DATETIME =  (SELECT MAX(CreatedDate) FROM DW_MART.dbo.DimPosition);

IF @LastProcessedDate IS NULL OR @CreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeBaseToMart_DimPosition
147,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_DimPosition
148,Package,Microsoft.Package,DimTermination,,,,,,DataLakeBaseToMart_DimTermination
149,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimTermination
150,Package\Dimension - Data Load\DFT - Load new records From Landing to Dim,Microsoft.Pipeline,DFT - Load new records From Landing to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Table,,DataLakeBaseToMart_DimTermination
151,Package\Dimension - Data Load\DFT - Load new records From Landing to Dim,Microsoft.Pipeline,DFT - Load new records From Landing to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - InsertCount,,DataLakeBaseToMart_DimTermination
152,Package\Dimension - Data Load\DFT - Load new records From Landing to Dim,Microsoft.Pipeline,DFT - Load new records From Landing to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing table,,DataLakeBaseToMart_DimTermination
153,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimTermination
154,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimTermination
155,Package\Dimension - Data Load\SQL - Seed Row Insert if doesn't exists,Microsoft.ExecuteSQLTask,SQL - Seed Row Insert if doesn't exists,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.DimTermination WHERE TerminationKey  IN (-1,-2))
	BEGIN
			SET IDENTITY_INSERT dbo.DimTermination ON;
			INSERT INTO [dbo].[DimTermination]
			           ([TerminationKey]
			           ,[PeriodofServiceID]
                          ,[TerminationReason]
                          ,[TerminationType]
                          ,[EligibleforRehireIndicator]
                          ,[TwoWeekNoticeIndicator]
                          ,[RegrettableTerminationIndicator]
                          ,[TerminationComments]
                          ,[TerminationNotifiedDate]
                          ,[LastWorkedDate]
                          ,[CreatedDate]
                          ,[ModifiedDate]
			           ,[InsertAuditID])
			SELECT		-1
						, -1
						, 'Unknown Termination Reason'
						, 'Unknown'
						, 'Unknown'
						, 'Unknown'
						, 'Unknown'
						, 'Unknown Termination Comments'
						, '1900-01-01'
						, '1900-01-01'
						, GETDATE()
						, GETDATE()
						,?
			UNION 
			SELECT		-2
						, -2
						, 'Not Applicable Termination Reason'
						, 'Not Applicable'
						, 'Not Applicable'
						, 'Not Applicable'
						, 'Not Applicable'
						, 'Not Applicable Termination Comments'
						, '1900-01-01'
						, '1900-01-01'
						, GETDATE()
						, GETDATE()
						,?;
SELECT @@ROWCOUNT  + ? AS InsertCount;
SET IDENTITY_INSERT dbo.DimTermination OFF;
END
ELSE SELECT 0 as InsertCount;",DataLakeBaseToMart_DimTermination
156,Package\Dimension - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_DimTermination
157,Package\Dimension - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeBaseToMart_DimTermination
158,Package\Dimension - Data Load\SQl - Update Modified Record for Deletes,Microsoft.ExecuteSQLTask,SQl - Update Modified Record for Deletes,,,,,"
UPDATE dmt
   SET dmt.ModifiedDate = GETDATE()    
       ,dmt.Deleted   = source.Deleted
            , dmt.UpdateAuditID  =   ?     
FROM dbo.DimTermination dmt
JOIN DW_Landing.dbo.DimTerminationLanding source ON source.PeriodofServiceID = dmt.PeriodofServiceID 
WHERE source.Deleted <> COALESCE(dmt.Deleted, 'N')

SELECT @@ROWCOUNT AS DeleteCount
",DataLakeBaseToMart_DimTermination
159,Package\Dimension - Data Load\SQl - Update Modified Records for SCD 1,Microsoft.ExecuteSQLTask,SQl - Update Modified Records for SCD 1,,,,,"UPDATE dmt
   SET dmt.TerminationReason = Source.TerminationReason
      ,dmt.TerminationType = Source.TerminationType
      ,dmt.EligibleforRehireIndicator = Source.EligibleforRehireIndicator
      ,dmt.TwoWeekNoticeIndicator = Source.TwoWeekNoticeIndicator
      ,dmt.RegrettableTerminationIndicator = Source.RegrettableTerminationIndicator
      ,dmt.TerminationComments = Source.TerminationComments
      ,dmt.TerminationNotifiedDate = Source.TerminationNotifiedDate
      ,dmt.LastWorkedDate = Source.LastWorkedDate
      ,dmt.ModifiedDate = GETDATE()    
      ,dmt.UpdateAuditID = ?
FROM	 dbo.DimTermination dmt
JOIN  DW_Landing.dbo.DimTerminationLanding Source ON Source.PeriodofServiceID=dmt.PeriodofServiceID
WHERE COALESCE(source.Deleted, 'N') = COALESCE(dmt.Deleted, 'N')

SELECT @@ROWCOUNT AS UpdateCount ;",DataLakeBaseToMart_DimTermination
160,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeBaseToMart_DimTermination
161,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing Table,,DataLakeBaseToMart_DimTermination
162,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeBaseToMart_DimTermination
163,Package\Landing - Data Load\DFT - Load new & modified records From BN to Landing,Microsoft.Pipeline,DFT - Load new & modified records From BN to Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimTermination
164,Package\Landing - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimTermination
165,Package\Landing - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimTermination
166,Package\Landing - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @CreatedDate DATETIME = (SELECT MAX(CreatedDate) FROM DW_MART.dbo.DimTermination);

IF @LastProcessedDate IS NULL OR @CreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeBaseToMart_DimTermination
167,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_DimTermination
168,Package,Microsoft.Package,DimTimeIn,,,,,,DataLakeBaseToMart_DimTimeIn
169,Package\Dimension - Data Load,STOCK:SEQUENCE,Dimension - Data Load,,,,,,DataLakeBaseToMart_DimTimeIn
170,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeBaseToMart_DimTimeIn
171,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - InsertAuditID Column1,,DataLakeBaseToMart_DimTimeIn
172,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Dim Insert,,DataLakeBaseToMart_DimTimeIn
173,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",DST - Dim Update,,DataLakeBaseToMart_DimTimeIn
174,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DataLakeBaseToMart_DimTimeIn
175,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup Target,,DataLakeBaseToMart_DimTimeIn
176,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_DimTimeIn
177,Package\Dimension - Data Load\DFT - Load new records From BN to Dim,Microsoft.Pipeline,DFT - Load new records From BN to Dim,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,DataLakeBaseToMart_DimTimeIn
178,Package\Dimension - Data Load\Insert Seed Records,Microsoft.ExecuteSQLTask,Insert Seed Records,,,,,"DECLARE @InsertAuditID BIGINT = ?
DECLARE @CurDate datetime = GETDATE()

IF NOT EXISTS (SELECT 1 FROM dbo.DimTimeIn WHERE MinimumDays = -1)
	BEGIN
   SET IDENTITY_INSERT dbo.DimTimeIn ON;
		INSERT INTO dbo.DimTimeIn
		(
			TimeInKey,
                                                     TimeInID,
			MinimumDays,
			MaximumDays,
			TimeInGrouping,
			CreatedDate,
			ModifiedDate,
			InsertAuditID
		)
		VALUES
		(
                                                      -1,
			-1,
			-1,
			-1,
			'Unknown',
			@CurDate,
			@CurDate,
			@InsertAuditID
		)
	END

IF NOT EXISTS (SELECT 1 FROM dbo.DimTimeIn WHERE MinimumDays = -2)
	BEGIN
		INSERT INTO dbo.DimTimeIn
		(
			TimeInKey,
                                                    TimeInID,
			MinimumDays,
			MaximumDays,
			TimeInGrouping,
			CreatedDate,
			ModifiedDate,
			InsertAuditID
		)
		VALUES
		(
                                                      -2,
			-2,
			-2,
			-2,
			'N/A',
			@CurDate,
			@CurDate,
			@InsertAuditID
		)
 SET IDENTITY_INSERT dbo.DimTimeIn OFF;
	END",DataLakeBaseToMart_DimTimeIn
179,Package\Dimension - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_DimTimeIn
180,Package\Dimension - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_DimTimeIn
181,Package,Microsoft.Package,FactCosting,,,,,,DataLakeBaseToMart_FactCosting
182,Package\SEQ - FactCosting,STOCK:SEQUENCE,SEQ - FactCosting,,,,,,DataLakeBaseToMart_FactCosting
183,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DataLakeBaseToMart_FactCosting
184,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week\Get Insert Date,Microsoft.ExecuteSQLTask,Get Insert Date,,,,,Select GetDate() AS RowInsertDate ;,DataLakeBaseToMart_FactCosting
185,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week\Load DW_Landing FactADPCostingBN,Microsoft.Pipeline,Load DW_Landing FactADPCostingBN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DataLakeBaseToMart_FactCosting
186,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week\Load DW_Landing FactADPCostingBN,Microsoft.Pipeline,Load DW_Landing FactADPCostingBN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactCosting,,DataLakeBaseToMart_FactCosting
187,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week\Load DW_Landing FactADPCostingBN,Microsoft.Pipeline,Load DW_Landing FactADPCostingBN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactADPCostingBN,,DataLakeBaseToMart_FactCosting
188,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week\SQL - Begin Week Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Week Load Audit Log,,,,,"DECLARE @BatchSplitByName VARCHAR(10) = 'FiscalDate';

EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?, @BatchSplitByName, ?
GO",DataLakeBaseToMart_FactCosting
189,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week\SQL - Delete Existing Data for the week,Microsoft.ExecuteSQLTask,SQL - Delete Existing Data for the week,,,,,"DELETE FROM [dbo].[FactCosting] WHERE [FiscalWeekEndDateKey] = ?;


SELECT @@ROWCOUNT AS Deleted",DataLakeBaseToMart_FactCosting
190,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week\SQL - End Week Load Audit Log,Microsoft.ExecuteSQLTask,SQL - End Week Load Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DataLakeBaseToMart_FactCosting
191,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week\SQL - Load FactCosting,Microsoft.ExecuteSQLTask,SQL - Load FactCosting,,,,,"exec [dbo].[spFactCostingLoad] ? OUTPUT, ?, ?",DataLakeBaseToMart_FactCosting
192,Package\SEQ - FactCosting\Foreach - New or Updated Fiscal Week\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_FactCosting
193,Package\SEQ - FactCosting\SP- Update Keys FactCosting,Microsoft.ExecuteSQLTask,SP- Update Keys FactCosting,,,,," EXEC [dbo].[spFactCostingUpdateKeys]  ?,?",DataLakeBaseToMart_FactCosting
194,Package\SEQ - FactCosting\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT Distinct [FiscalWeekStartDate], [FiscalWeekEndDate], [FiscalWeekEndDateKey]
FROM [dbo].[DimDate]
WHERE [FullDate] >= ?
AND [FullDate] <= GETDATE()",DataLakeBaseToMart_FactCosting
195,Package\SEQ - FactCosting\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE TableName = ? )

BEGIN
 (SELECT COALESCE(LastProcessedDate,'1900-01-01') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE TableName = ? )

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(TableName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DataLakeBaseToMart_FactCosting
196,Package\SEQ - FactCosting\SQL - Get the Min PayPeriodEndFullDate,Microsoft.ExecuteSQLTask,SQL - Get the Min PayPeriodEndFullDate,,,,,"SELECT COALESCE(MIN([PayPeriodEndFullDate]), GETDATE()) AS PayPeriodEndFullDate FROM [dbo].[FactADPCostingBN] WHERE [InsertedDate] > ?",DataLakeBaseToMart_FactCosting
197,Package\SEQ - FactCosting\SQL - Populate FactPersonJobEntryDateRank,Microsoft.ExecuteSQLTask,SQL - Populate FactPersonJobEntryDateRank,,,,,"TRUNCATE TABLE [dbo].[FactPersonJobEntryDateRank];

INSERT INTO [dbo].[FactPersonJobEntryDateRank] (
	[PersonID], [JobEntryDate], [JobEntryDateRank]
)
SELECT
	[PersonID],
	[JobEntryDate],
	DENSE_RANK() OVER (PARTITION BY [PersonID] ORDER BY [JobEntryDate]) AS [Job Entry Date Rank]
FROM (
	SELECT DISTINCT [PersonID], [JobEntryDate] FROM [DW_Mart].[dbo].[FactCosting] (NOLOCK)
) AS [Rank];",DataLakeBaseToMart_FactCosting
198,Package\SEQ - FactCosting\SQL - Rebuild Index,Microsoft.ExecuteSQLTask,SQL - Rebuild Index,,,,,"DECLARE @PackageName VARCHAR(30) = ?;
DECLARE @ExecutionID VARCHAR(300) = ?;
DECLARE @CurrentDate DATE = CAST(GETDATE() AS DATE);
DECLARE @AuditID BIGINT;

IF ((SELECT MAX([avg_fragmentation_in_percent]) FROM [sys].[dm_db_index_physical_stats](DB_ID('DW_Mart'), OBJECT_ID('[dbo].[FactCosting]'), NULL, NULL, 'LIMITED')) > 10.00)
	BEGIN
		EXEC [dbo].[spBeginAuditLog]
			@AuditId = @AuditID OUTPUT,
			@SourceName = @PackageName,
			@ExecutionID = @ExecutionID,
			@BatchSplitByName = 'RebuildIndex',
			@BatchSplitByValue = @CurrentDate,
			@IsOverride = 0;

		ALTER INDEX [XAK1FactCosting] ON [dbo].[FactCosting] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = COLUMNSTORE);

		EXEC [dbo].[spEndAuditLog] 
			@InsertCount = 0,
			@UpdateCount = 0,
			@DeleteCount = 0,
			@SourceCount = 0,
			@AuditId = @AuditID,
			@IsOverride = 0;
	END;",DataLakeBaseToMart_FactCosting
199,Package\SEQ - FactCosting\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE [dbo].[ETLBatchControl]
SET [LastProcessedDate] = GETDATE(),
[Status] = 'Success'
WHERE [TableName] = ?",DataLakeBaseToMart_FactCosting
200,Package,Microsoft.Package,FactEarning,,,,,,DataLakeBaseToMart_FactEarning
201,Package\SEQ - FactEarning,STOCK:SEQUENCE,SEQ - FactEarning,,,,,,DataLakeBaseToMart_FactEarning
202,Package\SEQ - FactEarning\Foreach - New or Updated Fiscal Week,STOCK:FOREACHLOOP,Foreach - New or Updated Fiscal Week,,,,,,DataLakeBaseToMart_FactEarning
203,Package\SEQ - FactEarning\Foreach - New or Updated Fiscal Week\Load DW_Landing FactADPEarningBN,Microsoft.Pipeline,Load DW_Landing FactADPEarningBN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DataLakeBaseToMart_FactEarning
204,Package\SEQ - FactEarning\Foreach - New or Updated Fiscal Week\Load DW_Landing FactADPEarningBN,Microsoft.Pipeline,Load DW_Landing FactADPEarningBN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactEarning,,DataLakeBaseToMart_FactEarning
205,Package\SEQ - FactEarning\Foreach - New or Updated Fiscal Week\Load DW_Landing FactADPEarningBN,Microsoft.Pipeline,Load DW_Landing FactADPEarningBN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactADPEarningBN,,DataLakeBaseToMart_FactEarning
206,Package\SEQ - FactEarning\Foreach - New or Updated Fiscal Week\SP- Load FactEarning,Microsoft.ExecuteSQLTask,SP- Load FactEarning,,,,,exec [dbo].[spFactEarningLoad] ? OUTPUT,DataLakeBaseToMart_FactEarning
207,Package\SEQ - FactEarning\Foreach - New or Updated Fiscal Week\SQL - Begin Week Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Week Load Audit Log,,,,,"DECLARE @BatchSplitByName VARCHAR(10) = 'FiscalDate';

EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?, @BatchSplitByName, ?
GO",DataLakeBaseToMart_FactEarning
208,Package\SEQ - FactEarning\Foreach - New or Updated Fiscal Week\SQL - Delete Existing Data for the week,Microsoft.ExecuteSQLTask,SQL - Delete Existing Data for the week,,,,,"DELETE FROM [dbo].[FactEarning] WHERE [FiscalWeekEndDateKey] = ?;


SELECT @@ROWCOUNT AS Deleted",DataLakeBaseToMart_FactEarning
209,Package\SEQ - FactEarning\Foreach - New or Updated Fiscal Week\SQL - End Week Load Audit Log,Microsoft.ExecuteSQLTask,SQL - End Week Load Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DataLakeBaseToMart_FactEarning
210,Package\SEQ - FactEarning\Foreach - New or Updated Fiscal Week\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_FactEarning
211,Package\SEQ - FactEarning\SP- Update Keys FactEarning,Microsoft.ExecuteSQLTask,SP- Update Keys FactEarning,,,,,"exec [dbo].[spFactEarningUpdateKeys] ?,?",DataLakeBaseToMart_FactEarning
212,Package\SEQ - FactEarning\SQL - Get List Of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List Of Weeks to Process,,,,,"SELECT Distinct [FiscalWeekStartDate], [FiscalWeekEndDate], [FiscalWeekEndDateKey]
FROM [dbo].[DimDate]
WHERE [FullDate] >= ?
AND [FullDate] <= GETDATE()",DataLakeBaseToMart_FactEarning
213,Package\SEQ - FactEarning\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE TableName = ? )

BEGIN
 (SELECT COALESCE(LastProcessedDate,'1900-01-01') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE TableName = ? )

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(TableName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DataLakeBaseToMart_FactEarning
214,Package\SEQ - FactEarning\SQL - Get the Min PayPeriodEndFullDate,Microsoft.ExecuteSQLTask,SQL - Get the Min PayPeriodEndFullDate,,,,,"SELECT COALESCE(MIN([PayPeriodEndFullDate]), GETDATE()) AS PayPeriodEndFullDate FROM [dbo].[FactADPEarningBN] WHERE [InsertedDate] > ?",DataLakeBaseToMart_FactEarning
215,Package\SEQ - FactEarning\SQL - Rebuild Index,Microsoft.ExecuteSQLTask,SQL - Rebuild Index,,,,,"DECLARE @PackageName VARCHAR(30) = ?;
DECLARE @ExecutionID VARCHAR(300) = ?;
DECLARE @CurrentDate DATE = CAST(GETDATE() AS DATE);
DECLARE @AuditID BIGINT;

IF ((SELECT MAX([avg_fragmentation_in_percent]) FROM [sys].[dm_db_index_physical_stats](DB_ID('DW_Mart'), OBJECT_ID('[dbo].[FactEarning]'), NULL, NULL, 'LIMITED')) > 10.00)
	BEGIN
		EXEC [dbo].[spBeginAuditLog]
			@AuditId = @AuditID OUTPUT,
			@SourceName = @PackageName,
			@ExecutionID = @ExecutionID,
			@BatchSplitByName = 'RebuildIndex',
			@BatchSplitByValue = @CurrentDate,
			@IsOverride = 0;

		ALTER INDEX [XAK1FactEarning] ON [dbo].[FactEarning] REBUILD PARTITION = ALL WITH (DATA_COMPRESSION = COLUMNSTORE);

		EXEC [dbo].[spEndAuditLog] 
			@InsertCount = 0,
			@UpdateCount = 0,
			@DeleteCount = 0,
			@SourceCount = 0,
			@AuditId = @AuditID,
			@IsOverride = 0;
	END;",DataLakeBaseToMart_FactEarning
216,Package\SEQ - FactEarning\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE [dbo].[ETLBatchControl]
SET [LastProcessedDate] = GETDATE(),
[Status] = 'Success'
WHERE [TableName] = ?",DataLakeBaseToMart_FactEarning
217,Package,Microsoft.Package,FactEmployeeCensus,,,,,,DataLakeBaseToMart_FactEmployeeCensus
218,Package\Fact - Data Load,STOCK:SEQUENCE,Fact - Data Load,,,,,,DataLakeBaseToMart_FactEmployeeCensus
219,Package\Fact - Data Load\DFT - Load new records From BN to Fact,Microsoft.Pipeline,DFT - Load new records From BN to Fact,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Fact Table,,DataLakeBaseToMart_FactEmployeeCensus
220,Package\Fact - Data Load\DFT - Load new records From BN to Fact,Microsoft.Pipeline,DFT - Load new records From BN to Fact,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - InsertCount,,DataLakeBaseToMart_FactEmployeeCensus
221,Package\Fact - Data Load\DFT - Load new records From BN to Fact,Microsoft.Pipeline,DFT - Load new records From BN to Fact,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing table,,DataLakeBaseToMart_FactEmployeeCensus
222,Package\Fact - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"DECLARE @BatchSplitByName VARCHAR(10) = 'FiscalDate';

EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?, @BatchSplitByName, ?
GO",DataLakeBaseToMart_FactEmployeeCensus
223,Package\Fact - Data Load\SQL - Delete Count,Microsoft.ExecuteSQLTask,SQL - Delete Count,,,,,SELECT COUNT(1) AS DeleteCount FROM dbo.FactEmployeeCensus(NOLOCK),DataLakeBaseToMart_FactEmployeeCensus
224,Package\Fact - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensus
225,Package\Fact - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_FactEmployeeCensus
226,Package\Fact - Data Load\SQL - Truncate Fact Table,Microsoft.ExecuteSQLTask,SQL - Truncate Fact Table,,,,,TRUNCATE TABLE dbo.FactEmployeeCensus,DataLakeBaseToMart_FactEmployeeCensus
227,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeBaseToMart_FactEmployeeCensus
228,Package\Landing - Data Load\DFT - Load new records From BN to Landing,Microsoft.Pipeline,DFT - Load new records From BN to Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing Table,,DataLakeBaseToMart_FactEmployeeCensus
229,Package\Landing - Data Load\DFT - Load new records From BN to Landing,Microsoft.Pipeline,DFT - Load new records From BN to Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeBaseToMart_FactEmployeeCensus
230,Package\Landing - Data Load\DFT - Load new records From BN to Landing,Microsoft.Pipeline,DFT - Load new records From BN to Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_FactEmployeeCensus
231,Package\Landing - Data Load\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"DECLARE @BatchSplitByName VARCHAR(10) = 'FiscalDate';

EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?, @BatchSplitByName, ?
GO",DataLakeBaseToMart_FactEmployeeCensus
232,Package\Landing - Data Load\SQL - Delete Count,Microsoft.ExecuteSQLTask,SQL - Delete Count,,,,,SELECT COUNT(1) AS DeleteCount FROM dbo.FactEmployeeCensusLanding(NOLOCK),DataLakeBaseToMart_FactEmployeeCensus
233,Package\Landing - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensus
234,Package\Landing - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,SELECT MAX(FullDate) AS FullDate FROM BaseEmployeeCensusBN(NOLOCK),DataLakeBaseToMart_FactEmployeeCensus
235,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_FactEmployeeCensus
236,Package,Microsoft.Package,FactEmployeeCensusArchive,,,,,,DataLakeBaseToMart_FactEmployeeCensusArchive
237,Package\Fact - FactCensusArchive Assignment Keys Update,STOCK:SEQUENCE,Fact - FactCensusArchive Assignment Keys Update,,,,,,DataLakeBaseToMart_FactEmployeeCensusArchive
238,Package\Fact - FactCensusArchive Assignment Keys Update\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
239,Package\Fact - FactCensusArchive Assignment Keys Update\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
240,Package\Fact - FactCensusArchive Assignment Keys Update\SQL - Update FactCensusArchive with the new Assignment Keys,Microsoft.ExecuteSQLTask,SQL - Update FactCensusArchive with the new Assignment Keys,,,,,"UPDATE f
 SET f.AssignmentKey = p.AssignmentKey
, DateTimeModified = GETDATE()
, UpdateAuditID = ?
FROM dbo.FactEmployeeCensusArchive f
JOIN dbo.DimDate d ON f.DateKey = d.DateKey
LEFT JOIN dbo.DimAssignment p ON f.AssignmentID = p.AssignmentID AND (d.FullDate BETWEEN p.EffectiveFrom AND p.EffectiveTo) AND p.Deleted IS NULL AND  CreatedDate > ?
WHERE p.AssignmentKey <> f.AssignmentKey 

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeBaseToMart_FactEmployeeCensusArchive
241,Package\Fact - FactCensusArchive Person Keys Update,STOCK:SEQUENCE,Fact - FactCensusArchive Person Keys Update,,,,,,DataLakeBaseToMart_FactEmployeeCensusArchive
242,Package\Fact - FactCensusArchive Person Keys Update\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
243,Package\Fact - FactCensusArchive Person Keys Update\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
244,Package\Fact - FactCensusArchive Person Keys Update\SQL - Update FactCensusArchive with the new Person Keys,Microsoft.ExecuteSQLTask,SQL - Update FactCensusArchive with the new Person Keys,,,,,"UPDATE f
 SET f.PersonKey = p.PersonKey
, DateTimeModified = GETDATE()
, UpdateAuditID = ?
FROM dbo.FactEmployeeCensusArchive f
JOIN dbo.DimDate d ON f.DateKey = d.DateKey
LEFT JOIN dbo.DimPerson p ON f.PersonID = p.PersonID AND (d.FullDate BETWEEN p.EffectiveFrom AND p.EffectiveTo) AND p.Deleted IS NULL AND  CreatedDate > ?
WHERE p.PersonKey <> f.PersonKey 

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeBaseToMart_FactEmployeeCensusArchive
245,Package\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeBaseToMart_FactEmployeeCensusArchive
246,Package\Foreach Loop Container\Fact - Data Load,STOCK:SEQUENCE,Fact - Data Load,,,,,,DataLakeBaseToMart_FactEmployeeCensusArchive
247,Package\Foreach Loop Container\Fact - Data Load\DFT - Load new records From BN to Fact,Microsoft.Pipeline,DFT - Load new records From BN to Fact,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Fact Table,,DataLakeBaseToMart_FactEmployeeCensusArchive
248,Package\Foreach Loop Container\Fact - Data Load\DFT - Load new records From BN to Fact,Microsoft.Pipeline,DFT - Load new records From BN to Fact,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - InsertCount,,DataLakeBaseToMart_FactEmployeeCensusArchive
249,Package\Foreach Loop Container\Fact - Data Load\DFT - Load new records From BN to Fact,Microsoft.Pipeline,DFT - Load new records From BN to Fact,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing table,,DataLakeBaseToMart_FactEmployeeCensusArchive
250,Package\Foreach Loop Container\Fact - Data Load\SQL - Begin Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Audit Log,,,,,"DECLARE @BatchSplitByName VARCHAR(10) = 'FiscalWeekDate';

EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?, @BatchSplitByName, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
251,Package\Foreach Loop Container\Fact - Data Load\SQL - Delete Records If Exists,Microsoft.ExecuteSQLTask,SQL - Delete Records If Exists,,,,,"DECLARE @FiscalDate DATE = ?;

/* Delete if data exists before loading during the reload */
		
DELETE f
FROM dbo.FactEmployeeCensusArchive f
JOIN  dbo.DimDate d ON f.DateKey = d.DateKey 
WHERE FullDate =  @FiscalDate;

SELECT @@ROWCOUNT AS DeleteCount;
",DataLakeBaseToMart_FactEmployeeCensusArchive
252,Package\Foreach Loop Container\Fact - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
253,Package\Foreach Loop Container\Fact - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_FactEmployeeCensusArchive
254,Package\Foreach Loop Container\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeBaseToMart_FactEmployeeCensusArchive
255,Package\Foreach Loop Container\Landing - Data Load\DFT - Load new records From BN to Landing,Microsoft.Pipeline,DFT - Load new records From BN to Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing Table,,DataLakeBaseToMart_FactEmployeeCensusArchive
256,Package\Foreach Loop Container\Landing - Data Load\DFT - Load new records From BN to Landing,Microsoft.Pipeline,DFT - Load new records From BN to Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeBaseToMart_FactEmployeeCensusArchive
257,Package\Foreach Loop Container\Landing - Data Load\DFT - Load new records From BN to Landing,Microsoft.Pipeline,DFT - Load new records From BN to Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base BN table,,DataLakeBaseToMart_FactEmployeeCensusArchive
258,Package\Foreach Loop Container\Landing - Data Load\SQL - Begin Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Audit Log,,,,,"DECLARE @BatchSplitByName VARCHAR(10) = 'FiscalWeek';

EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?, @BatchSplitByName, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
259,Package\Foreach Loop Container\Landing - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
260,Package\Foreach Loop Container\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeBaseToMart_FactEmployeeCensusArchive
261,Package\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeBaseToMart_FactEmployeeCensusArchive
262,Package\SEQ - Get List of FiscalDates to process\SQL - Begin Parent Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Parent Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
263,Package\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastSuccessfulFiscalDate DATE;

DECLARE @DateKey INT = (SELECT MAX(DateKey) FROM dbo.FactEmployeeCensusArchive(NOLOCK));

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?) AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastSuccessfulFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @DateKey IS NULL THEN ?
  ELSE ISNULL(@LastSuccessfulFiscalDate, '1900-01-01') 
    END AS LastSuccessfulFiscalDate;  ",DataLakeBaseToMart_FactEmployeeCensusArchive
264,Package\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastSuccessfulFiscalDate DATE;

/*If there are no ExecutionID's for the BatchOverride then Insert into the table*/
IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

/*If there are ExecutionID's for the BatchOverride then join on ExecutionID to get the Last fiscal date loaded successfully*/
WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = ?) AND IsOverride = 1 
      GROUP BY TaskName)


SELECT @LastSuccessfulFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastSuccessfulFiscalDate, '1900-01-01') AS LastSuccessfulFiscalDate",DataLakeBaseToMart_FactEmployeeCensusArchive
265,Package\SEQ - Get List of FiscalDates to process\SQL - Get List of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List of Weeks to Process,,,,,"DECLARE @StartDate DATETIME = ?;
DECLARE @CurrentDate DATE = CAST(GETDATE() AS DATE);
DECLARE @LastSuccessfulFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);
DECLARE @FiscalDatesToProcess TABLE (FullDate DATE);

IF (@LastSuccessfulFiscalDate IS NULL)
BEGIN
	INSERT INTO @FiscalDatesToProcess
	SELECT DISTINCT FullDate
	FROM dbo.BaseEmployeeCensusBN
	WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
	ORDER BY FullDate
END 
ELSE 
BEGIN
	INSERT INTO @FiscalDatesToProcess
	SELECT DISTINCT FullDate
	FROM dbo.BaseEmployeeCensusBN
	WHERE BaseCreatedDate > @StartDate
	UNION
	SELECT DISTINCT FullDate
	FROM dbo.BaseEmployeeCensusBN
	WHERE FullDate > @LastSuccessfulFiscalDate
	ORDER BY FullDate
END

SELECT FullDate
FROM @FiscalDatesToProcess
WHERE DATENAME(WEEKDAY, FullDate) = 'Sunday'
ORDER BY FullDate;",DataLakeBaseToMart_FactEmployeeCensusArchive
266,Package\SEQ - Get List of FiscalDates to process\SQL - Get List of Weeks to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of Weeks to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastSuccessfulFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @FiscalDatesToProcess TABLE (FullDate DATE);

IF (@LastSuccessfulFiscalDate IS NULL)
BEGIN
	INSERT INTO @FiscalDatesToProcess
	SELECT DISTINCT FullDate
	FROM dbo.BaseEmployeeCensusBN
	WHERE FullDate BETWEEN  @OverrideStartDate AND @OverrideEndDate
	ORDER BY FullDate
END 
ELSE 
BEGIN
	INSERT INTO @FiscalDatesToProcess
	SELECT DISTINCT FullDate
	FROM dbo.BaseEmployeeCensusBN
	WHERE FullDate > @LastSuccessfulFiscalDate AND FullDate<= @OverrideEndDate
	ORDER BY FullDate
END

SELECT FullDate
FROM @FiscalDatesToProcess
WHERE DATENAME(WEEKDAY, FullDate) = 'Sunday'
ORDER BY FullDate;
",DataLakeBaseToMart_FactEmployeeCensusArchive
267,Package\SEQ - Get List of FiscalDates to process\SQL - Get Min Fulldate from BaseBN,Microsoft.ExecuteSQLTask,SQL - Get Min Fulldate from BaseBN,,,,,SELECT MIN(FullDate) AS FullDate FROM BaseEmployeeCensusBN(NOLOCK),DataLakeBaseToMart_FactEmployeeCensusArchive
268,Package\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = ?;

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT COALESCE(LastProcessedDate, ?)
        FROM DW_Landing.dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeBaseToMart_FactEmployeeCensusArchive
269,Package\SEQ - Get List of FiscalDates to process\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"DECLARE @PackageName VARCHAR(MAX) = ?;
DECLARE @MinFullDate DATE = CAST(? AS DATE);


IF (NOT EXISTS ( SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @PackageName ))
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName, LastProcessedDate) VALUES (@PackageName, @MinFullDate);
 END
ELSE IF (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @PackageName) = NULL
 BEGIN
  UPDATE dbo.ETLBatchControl
  SET LastProcessedDate = @MinFullDate
  WHERE TableName = @PackageName
 END
ELSE IF (NOT EXISTS (SELECT 1 FROM DW_MART.dbo.FactEmployeeCensusArchive ))
 BEGIN
  UPDATE dbo.ETLBatchControl
  SET LastProcessedDate = @MinFullDate
  WHERE TableName = @PackageName
 END

SELECT LastProcessedDate 
FROM dbo.ETLBatchControl WHERE TableName = @PackageName;  ",DataLakeBaseToMart_FactEmployeeCensusArchive
270,Package\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeBaseToMart_FactEmployeeCensusArchive
271,Package\SEQ - Update Parent Audit Log\SQL - Delete records that are more than 1 year,Microsoft.ExecuteSQLTask,SQL - Delete records that are more than 1 year,,,,,"DECLARE @CurrentDate DATE = ?;
DECLARE @YearBackDate DATE = (SELECT DATEADD(DAY, -365, @CurrentDate));
DECLARE @DeleteCount INT;


/*Delete records more than one year */

DELETE f 
FROM dbo.FactEmployeeCensusArchive f
JOIN dbo.DimDate d on f.DateKey = d.DateKey
WHERE FullDate < @YearBackDate;
  
  SET @DeleteCount = (SELECT @@ROWCOUNT);


SELECT @DeleteCount AS DeleteCount;
",DataLakeBaseToMart_FactEmployeeCensusArchive
272,Package\SEQ - Update Parent Audit Log\SQL - End Parent Audit Log,Microsoft.ExecuteSQLTask,SQL - End Parent Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeCensusArchive
273,Package\SEQ - Update Parent Audit Log\SQL - Get Delete Count,Microsoft.ExecuteSQLTask,SQL - Get Delete Count,,,,,"DECLARE @PreviousDeleteCount INT = ?;
DECLARE @DeleteCount INT = @PreviousDeleteCount;


SET @DeleteCount = @DeleteCount + (SELECT COALESCE(SUM(DeleteCount), 0) 
FROM dbo.AuditLog(NOLOCK)
WHERE ExecutionID = ? AND TaskName = ?)


SELECT ? = @DeleteCount;",DataLakeBaseToMart_FactEmployeeCensusArchive
274,"Package\SEQ - Update Parent Audit Log\SQL - Get Total Insert, Source, Update",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount
FROM dbo.AuditLog(NOLOCK)
WHERE ExecutionID = ? AND TaskName = ?",DataLakeBaseToMart_FactEmployeeCensusArchive
275,Package\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = ?
AND IsActive = 1",DataLakeBaseToMart_FactEmployeeCensusArchive
276,Package\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl 
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = ?;",DataLakeBaseToMart_FactEmployeeCensusArchive
277,Package\SQL - Get Min Fulldate from BaseBN,Microsoft.ExecuteSQLTask,SQL - Get Min Fulldate from BaseBN,,,,,SELECT MIN(FullDate) AS FullDate FROM BaseEmployeeCensusBN(NOLOCK),DataLakeBaseToMart_FactEmployeeCensusArchive
278,Package\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"DECLARE @PackageName VARCHAR(MAX) = ?;
DECLARE @MinFullDate DATE = CAST(? AS DATE);


IF (NOT EXISTS ( SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @PackageName ))
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName, LastProcessedDate) VALUES (@PackageName, @MinFullDate);
 END
ELSE IF (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @PackageName) = NULL
 BEGIN
  UPDATE dbo.ETLBatchControl
  SET LastProcessedDate = @MinFullDate
  WHERE TableName = @PackageName
 END
ELSE IF (NOT EXISTS (SELECT 1 FROM DW_MART.dbo.FactEmployeeCensusArchive ))
 BEGIN
  UPDATE dbo.ETLBatchControl
  SET LastProcessedDate = @MinFullDate
  WHERE TableName = @PackageName
 END

SELECT LastProcessedDate 
FROM dbo.ETLBatchControl WHERE TableName = @PackageName;  ",DataLakeBaseToMart_FactEmployeeCensusArchive
279,Package,Microsoft.Package,FactEmployeeEvent,,,,,,DataLakeBaseToMart_FactEmployeeEvent
280,Package\Fact - FactEmployeeEvent Assignment Keys Update,STOCK:SEQUENCE,Fact - FactEmployeeEvent Assignment Keys Update,,,,,,DataLakeBaseToMart_FactEmployeeEvent
281,Package\Fact - FactEmployeeEvent Assignment Keys Update\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_FactEmployeeEvent
282,Package\Fact - FactEmployeeEvent Assignment Keys Update\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeEvent
283,Package\Fact - FactEmployeeEvent Assignment Keys Update\SQL - Get the Max Created Date from Fact EmployeeEvent,Microsoft.ExecuteSQLTask,SQL - Get the Max Created Date from Fact EmployeeEvent,,,,,"DECLARE @TableName VARCHAR(100) = ?

SELECT COALESCE(LastProcessedDate, '2016-01-01') AS LastProcessedDate
FROM dbo.ETLBatchControl
WHERE TableName = @TableName",DataLakeBaseToMart_FactEmployeeEvent
284,Package\Fact - FactEmployeeEvent Assignment Keys Update\SQL - Update FactEmployeeEvent with the new Assignment  Keys,Microsoft.ExecuteSQLTask,SQL - Update FactEmployeeEvent with the new Assignment  Keys,,,,,"UPDATE f 
SET f.AssignmentKey = p.AssignmentKey
, DateTimeModified = GETDATE()
, UpdateAuditID = ?
FROM dbo.FactEmployeeEvent f
JOIN dbo.DimDate d ON f.DateKey = d.DateKey
LEFT JOIN dbo.DimAssignment p ON f.AssignmentID = p.AssignmentID AND (d.FullDate BETWEEN p.EffectiveFrom AND p.EffectiveTo) AND p.Deleted IS NULL AND CreatedDate > ?
WHERE p.AssignmentKey <> f.AssignmentKey 

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeBaseToMart_FactEmployeeEvent
285,Package\Fact - FactEmployeeEvent Person Keys Update,STOCK:SEQUENCE,Fact - FactEmployeeEvent Person Keys Update,,,,,,DataLakeBaseToMart_FactEmployeeEvent
286,Package\Fact - FactEmployeeEvent Person Keys Update\SQL - Begin Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeBaseToMart_FactEmployeeEvent
287,Package\Fact - FactEmployeeEvent Person Keys Update\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeEvent
288,Package\Fact - FactEmployeeEvent Person Keys Update\SQL - Get the Max Created Date from Fact EmployeeEvent,Microsoft.ExecuteSQLTask,SQL - Get the Max Created Date from Fact EmployeeEvent,,,,,"DECLARE @TableName VARCHAR(100) = ?

SELECT COALESCE(LastProcessedDate, '2016-01-01') AS LastProcessedDate
FROM dbo.ETLBatchControl
WHERE TableName = @TableName",DataLakeBaseToMart_FactEmployeeEvent
289,Package\Fact - FactEmployeeEvent Person Keys Update\SQL - Update FactEmployeeEvent with the new Person Keys,Microsoft.ExecuteSQLTask,SQL - Update FactEmployeeEvent with the new Person Keys,,,,,"UPDATE f 
SET f.PersonKey = p.PersonKey
, DateTimeModified = GETDATE()
, UpdateAuditID = ?
FROM dbo.FactEmployeeEvent f
JOIN dbo.DimDate d ON f.DateKey = d.DateKey
LEFT JOIN dbo.DimPerson p ON f.PersonID = p.PersonID AND (d.FullDate BETWEEN p.EffectiveFrom AND p.EffectiveTo) AND p.Deleted IS NULL AND CreatedDate > ?
WHERE p.PersonKey <> f.PersonKey 

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeBaseToMart_FactEmployeeEvent
290,Package\Foreach - Fiscal EndDate,STOCK:FOREACHLOOP,Foreach - Fiscal EndDate,,,,,,DataLakeBaseToMart_FactEmployeeEvent
291,Package\Foreach - Fiscal EndDate\DFT - Load FactEmployeeEvent,Microsoft.Pipeline,DFT - Load FactEmployeeEvent,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DataLakeBaseToMart_FactEmployeeEvent
292,Package\Foreach - Fiscal EndDate\DFT - Load FactEmployeeEvent,Microsoft.Pipeline,DFT - Load FactEmployeeEvent,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,DataLakeBaseToMart_FactEmployeeEvent
293,Package\Foreach - Fiscal EndDate\DFT - Load FactEmployeeEvent,Microsoft.Pipeline,DFT - Load FactEmployeeEvent,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactEmployeeEvent,,DataLakeBaseToMart_FactEmployeeEvent
294,Package\Foreach - Fiscal EndDate\DFT - Load FactEmployeeEvent,Microsoft.Pipeline,DFT - Load FactEmployeeEvent,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - BaseEmployeeEventLanding,,DataLakeBaseToMart_FactEmployeeEvent
295,Package\Foreach - Fiscal EndDate\DFT - Load Landing,Microsoft.Pipeline,DFT - Load Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DataLakeBaseToMart_FactEmployeeEvent
296,Package\Foreach - Fiscal EndDate\DFT - Load Landing,Microsoft.Pipeline,DFT - Load Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseEmployeeEventLanding,,DataLakeBaseToMart_FactEmployeeEvent
297,Package\Foreach - Fiscal EndDate\DFT - Load Landing,Microsoft.Pipeline,DFT - Load Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - BaseEmployeeEvent,,DataLakeBaseToMart_FactEmployeeEvent
298,Package\Foreach - Fiscal EndDate\SQL - Begin Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Audit Log,,,,,"DECLARE @BatchSplitByName VARCHAR(10) = 'FiscalDate';

EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?, @BatchSplitByName, ?
GO",DataLakeBaseToMart_FactEmployeeEvent
299,Package\Foreach - Fiscal EndDate\SQL - Delete Records If Exists,Microsoft.ExecuteSQLTask,SQL - Delete Records If Exists,,,,,"DECLARE @FiscalDate DATE = ?;

/* Delete if data exists before loading during the reload */
  
DELETE f
FROM dbo.FactEmployeeEvent f
JOIN  dbo.DimDate d ON f.DateKey = d.DateKey 
WHERE FullDate =  @FiscalDate;

SELECT @@ROWCOUNT AS DeleteCount;
",DataLakeBaseToMart_FactEmployeeEvent
300,Package\Foreach - Fiscal EndDate\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeBaseToMart_FactEmployeeEvent
301,Package\Foreach - Fiscal EndDate\SQL - End FactEmployeeEvent Audit Log,Microsoft.ExecuteSQLTask,SQL - End FactEmployeeEvent Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DataLakeBaseToMart_FactEmployeeEvent
302,Package\Foreach - Fiscal EndDate\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeBaseToMart_FactEmployeeEvent
303,Package\Foreach - Fiscal EndDate\SQL - Start FactEmployeeEventLanding Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FactEmployeeEventLanding Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DataLakeBaseToMart_FactEmployeeEvent
304,Package\Foreach - Fiscal EndDate\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,TRUNCATE TABLE FactEmployeeEventLanding;,DataLakeBaseToMart_FactEmployeeEvent
305,Package\SEQ - FactEmployeeEvent,STOCK:SEQUENCE,SEQ - FactEmployeeEvent,,,,,,DataLakeBaseToMart_FactEmployeeEvent
306,Package\SEQ - FactEmployeeEvent\SQL - Get Base Dates,Microsoft.ExecuteSQLTask,SQL - Get Base Dates,,,,,"DECLARE @StartDate DATETIME = ?;
DECLARE @CurrentDate DATE = CAST(GETDATE() AS DATE);
DECLARE @LastProcessedDate DATETIME = cast(? as date);


IF (@LastProcessedDate='2001-01-01')
BEGIN
	SELECT DISTINCT fulldate as vFiscalEndDate
FROM hr_base.dbo.BaseEmployeeEventBN (NOLOCK) AS b
WHERE fulldate >=cast(@StartDate as date) and fulldate is not null 
order by fulldate asc
END
ELSE 
BEGIN
SELECT DISTINCT fulldate as vFiscalEndDate
FROM hr_base.dbo.BaseEmployeeEventBN (NOLOCK) AS b
WHERE fulldate >=cast(@StartDate as date) and fulldate is not null 
UNION 
SELECT DISTINCT fulldate as vFiscalEndDate
FROM hr_base.dbo.BaseEmployeeEventBN (NOLOCK) AS b
WHERE BaseCreatedDate  BETWEEN  ?  AND getdate() and fulldate is not null order by fulldate asc	
END


",DataLakeBaseToMart_FactEmployeeEvent
307,Package\SEQ - FactEmployeeEvent\SQL - Get Last Processed Date from Auditlog,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from Auditlog,,,,,"

DECLARE @LastProcessFiscalWeekEndDate datetime, @LastProcessDate datetime, @LastsuccessfulDate DateTime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(BatchSplitByValue) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekEndDate = 
ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.BatchSplitByValue;

WITH LatestJobAuditBySuccessfulRun AS (
   SELECT TaskName, MAX(BatchSplitByValue) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditBySuccessfulRun AS lja ON lja.LatestJobAudit = ja.BatchSplitByValue;


SELECT ISNULL(@LastProcessFiscalWeekEndDate, '2001-01-01') AS LastProcessFiscalWeekEndDate

",DataLakeBaseToMart_FactEmployeeEvent
308,Package\SEQ - FactEmployeeEvent\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastSuccessfulFiscalDate DATE;

/*If there are no ExecutionID's for the BatchOverride then Insert into the table*/
IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

/*If there are ExecutionID's for the BatchOverride then join on ExecutionID to get the Last fiscal date loaded successfully*/
WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = ?) AND IsOverride = 1 
      GROUP BY TaskName)


SELECT @LastSuccessfulFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastSuccessfulFiscalDate, '1900-01-01') AS LastSuccessfulFiscalDate",DataLakeBaseToMart_FactEmployeeEvent
309,Package\SEQ - FactEmployeeEvent\SQL - Get List of Days to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of Days to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate as vFiscalEndDate
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS vFiscalEndDate
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate as vFiscalEndDate
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS vFiscalEndDate
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate as vFiscalEndDate
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate as vFiscalEndDate
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",DataLakeBaseToMart_FactEmployeeEvent
310,Package\SEQ - FactEmployeeEvent\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = ?;

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT COALESCE(LastProcessedDate, ?)
        FROM DW_Landing.dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeBaseToMart_FactEmployeeEvent
311,Package\SEQ - FactEmployeeEvent\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES (?,'2001-01-01')
 END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);



SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeBaseToMart_FactEmployeeEvent
312,Package\Sequence Container,STOCK:SEQUENCE,Sequence Container,,,,,,DataLakeBaseToMart_FactEmployeeEvent
313,Package\Sequence Container\SQL - End FactEmployee Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End FactEmployee Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DataLakeBaseToMart_FactEmployeeEvent
314,Package\Sequence Container\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = ?
AND IsActive = 1",DataLakeBaseToMart_FactEmployeeEvent
315,Package\Sequence Container\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl 
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = ?;",DataLakeBaseToMart_FactEmployeeEvent
316,"Package\Sequence Container\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?
",DataLakeBaseToMart_FactEmployeeEvent
317,Package\SQL - Start Parent Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Parent Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DataLakeBaseToMart_FactEmployeeEvent
318,Package,Microsoft.Package,HRISDimensionParent,,,,,,DataLakeBaseToMart_HRISDimensionParent
319,Package\SEQ - Execute Dimesion tables,STOCK:SEQUENCE,SEQ - Execute Dimesion tables,,,,,,DataLakeBaseToMart_HRISDimensionParent
320,Package\SEQ - Execute Dimesion tables\DimAccreditation,Microsoft.ExecutePackageTask,DimAccreditation,,,,,,DataLakeBaseToMart_HRISDimensionParent
321,Package\SEQ - Execute Dimesion tables\DimAge,Microsoft.ExecutePackageTask,DimAge,,,,,,DataLakeBaseToMart_HRISDimensionParent
322,Package\SEQ - Execute Dimesion tables\DimAssessment,Microsoft.ExecutePackageTask,DimAssessment,,,,,,DataLakeBaseToMart_HRISDimensionParent
323,Package\SEQ - Execute Dimesion tables\DimAssignment,Microsoft.ExecutePackageTask,DimAssignment,,,,,,DataLakeBaseToMart_HRISDimensionParent
324,Package\SEQ - Execute Dimesion tables\DimEvent,Microsoft.ExecutePackageTask,DimEvent,,,,,,DataLakeBaseToMart_HRISDimensionParent
325,Package\SEQ - Execute Dimesion tables\DimPayGrade,Microsoft.ExecutePackageTask,DimPayGrade,,,,,,DataLakeBaseToMart_HRISDimensionParent
326,Package\SEQ - Execute Dimesion tables\DimPerson,Microsoft.ExecutePackageTask,DimPerson,,,,,,DataLakeBaseToMart_HRISDimensionParent
327,Package\SEQ - Execute Dimesion tables\DimPosition,Microsoft.ExecutePackageTask,DimPosition,,,,,,DataLakeBaseToMart_HRISDimensionParent
328,Package\SEQ - Execute Dimesion tables\DimTermination,Microsoft.ExecutePackageTask,DimTermination,,,,,,DataLakeBaseToMart_HRISDimensionParent
329,Package\SEQ - Execute Dimesion tables\DimTime,Microsoft.ExecutePackageTask,DimTime,,,,,,DataLakeBaseToMart_HRISDimensionParent
330,Package,Microsoft.Package,AccreditationBN,,,,,,DataLakeHRISToBase_AccreditationBN
331,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_AccreditationBN
332,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_AccreditationBN
333,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_AccreditationBN
334,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_AccreditationBN
335,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_AccreditationBN
336,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_AccreditationBN
337,Package\Base - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.AccreditationBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeHRISToBase_AccreditationBN
338,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"WITH PerQualifications AS 
(
SELECT 
pq.qualification_id AS QualificationID
FROM dbo.PER_QUALIFICATIONS_B0 pq
LEFT JOIN dbo.PER_QUALIFICATION_TYPES_B0 pqt ON pq.qualification_type_id = pqt.qualification_type_id
WHERE pq.person_id IS NOT NULL
)

UPDATE abn 
SET abn.Deleted = 'Y'
  , abn.BaseModifiedDate = GETDATE()
  , abn.UpdateAuditID = ?
FROM dbo.AccreditationBN abn
WHERE NOT EXISTS
(
    SELECT 1
    FROM PerQualifications pq
    WHERE pq.QualificationID = abn.QualificationID
)
AND abn.Deleted IS NULL;

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_AccreditationBN
339,Package\Base - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeHRISToBase_AccreditationBN
340,Package\Base - Data Load\SQl - Update Modified Records as SCD 1,Microsoft.ExecuteSQLTask,SQl - Update Modified Records as SCD 1,,,,,"WITH PerQualifications AS 
(
SELECT 
pq.qualification_id AS QualificationID
, COALESCE(pqt.name, 'N/A') AS Accreditation
, COALESCE(pq.title, '') AS AreaOfStudy
, COALESCE(pq.start_date, '9999-12-31') AS AccreditationDate
, COALESCE(pq.comments, '') AS Comments
, CAST(HASHBYTES('MD5',
(SELECT pq.qualification_id
      , COALESCE(pqt.name, 'N/A') Accreditation
      , pq.title
      , pq.start_date
      , pq.comments FOR XML RAW)) AS BINARY(16)) AS RowHash
FROM dbo.PER_QUALIFICATIONS_B0 pq
LEFT JOIN dbo.PER_QUALIFICATION_TYPES_B0 pqt ON pq.qualification_type_id = pqt.qualification_type_id
WHERE pq.person_id IS NOT NULL
)
, PerQualificationUpdate AS
(
SELECT *
FROM PerQualifications pq
WHERE EXISTS
(
    SELECT 1
    FROM dbo.AccreditationBN abn
    WHERE pq.QualificationID = abn.QualificationID AND pq.RowHash <> abn.RowHash
)
)

UPDATE bn
   SET  bn.Accreditation	  =   base.Accreditation		
      , bn.AreaOfStudy		  =   base.AreaOfStudy		
      , bn.AccreditationDate  =   base.AccreditationDate  
      , bn.Comments		      =   base.Comments		    
      , bn.BaseModifiedDate	  =   GETDATE()    
      , bn.UpdateAuditID	  =   ?	    
      , bn.RowHash			  =   base.RowHash			
FROM dbo.AccreditationBN bn
JOIN PerQualificationUpdate base ON bn.QualificationID = base.QualificationID

SELECT @@ROWCOUNT AS UpdateCount ;",DataLakeHRISToBase_AccreditationBN
341,Package,Microsoft.Package,AgeBN,,,,,,DataLakeHRISToBase_AgeBN
342,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_AgeBN
343,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Compare Values,,DataLakeHRISToBase_AgeBN
344,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - InsertAuditID Column,,DataLakeHRISToBase_AgeBN
345,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Insert,,DataLakeHRISToBase_AgeBN
346,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",DST - Update,,DataLakeHRISToBase_AgeBN
347,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DataLakeHRISToBase_AgeBN
348,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,DataLakeHRISToBase_AgeBN
349,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - tfnHR_BaseGenerate_AgeBN,,DataLakeHRISToBase_AgeBN
350,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_AgeBN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,DataLakeHRISToBase_AgeBN
351,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_AgeBN
352,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_AgeBN
353,Package,Microsoft.Package,AP_SUPPLIERS_B0,,,,,,DataLakeHRISToBase_AP_SUPPLIERS_B0
354,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_AP_SUPPLIERS_B0
355,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_AP_SUPPLIERS_B0
356,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_AP_SUPPLIERS_B0
357,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_AP_SUPPLIERS_B0
358,Package\Base - Data Load\SQL - Begin Base Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_AP_SUPPLIERS_B0
359,Package\Base - Data Load\SQL - Delete records,Microsoft.ExecuteSQLTask,SQL - Delete records,,,,,"DELETE FROM base
FROM dbo.[AP_SUPPLIERS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[AP_SUPPLIERS_B0Landing] landing
    WHERE base.vendor_id = landing.vendor_id
);

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeHRISToBase_AP_SUPPLIERS_B0
360,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_AP_SUPPLIERS_B0
361,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_AP_SUPPLIERS_B0
362,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base SET 
	base.last_update_date = landing.last_update_date,
	base.last_updated_by = landing.last_updated_by,
	base.vendor_name = landing.vendor_name,
	base.vendor_name_alt = landing.vendor_name_alt,
	base.segment1 = landing.segment1,
	base.summary_flag = landing.summary_flag,
	base.enabled_flag = landing.enabled_flag,
	base.segment2 = landing.segment2,
	base.segment3 = landing.segment3,
	base.segment4 = landing.segment4,
	base.segment5 = landing.segment5,
	base.last_update_login = landing.last_update_login,
	base.creation_date = landing.creation_date,
	base.created_by = landing.created_by,
	base.employee_id = landing.employee_id,
	base.vendor_type_lookup_code = landing.vendor_type_lookup_code,
	base.customer_num = landing.customer_num,
	base.one_time_flag = landing.one_time_flag,
	base.parent_vendor_id = landing.parent_vendor_id,
	base.min_order_amount = landing.min_order_amount,
	base.ship_to_location_id = landing.ship_to_location_id,
	base.bill_to_location_id = landing.bill_to_location_id,
	base.ship_via_lookup_code = landing.ship_via_lookup_code,
	base.freight_terms_lookup_code = landing.freight_terms_lookup_code,
	base.fob_lookup_code = landing.fob_lookup_code,
	base.terms_id = landing.terms_id,
	base.set_of_books_id = landing.set_of_books_id,
	base.credit_status_lookup_code = landing.credit_status_lookup_code,
	base.credit_limit = landing.credit_limit,
	base.always_take_disc_flag = landing.always_take_disc_flag,
	base.pay_date_basis_lookup_code = landing.pay_date_basis_lookup_code,
	base.pay_group_lookup_code = landing.pay_group_lookup_code,
	base.payment_priority = landing.payment_priority,
	base.invoice_currency_code = landing.invoice_currency_code,
	base.payment_currency_code = landing.payment_currency_code,
	base.invoice_amount_limit = landing.invoice_amount_limit,
	base.exchange_date_lookup_code = landing.exchange_date_lookup_code,
	base.hold_all_payments_flag = landing.hold_all_payments_flag,
	base.hold_future_payments_flag = landing.hold_future_payments_flag,
	base.hold_reason = landing.hold_reason,
	base.distribution_set_id = landing.distribution_set_id,
	base.accts_pay_code_combination_id = landing.accts_pay_code_combination_id,
	base.disc_lost_code_combination_id = landing.disc_lost_code_combination_id,
	base.disc_taken_code_combination_id = landing.disc_taken_code_combination_id,
	base.expense_code_combination_id = landing.expense_code_combination_id,
	base.prepay_code_combination_id = landing.prepay_code_combination_id,
	base.num_1099 = landing.num_1099,
	base.type_1099 = landing.type_1099,
	base.withholding_status_lookup_code = landing.withholding_status_lookup_code,
	base.withholding_start_date = landing.withholding_start_date,
	base.organization_type_lookup_code = landing.organization_type_lookup_code,
	base.vat_code = landing.vat_code,
	base.start_date_active = landing.start_date_active,
	base.end_date_active = landing.end_date_active,
	base.minority_group_lookup_code = landing.minority_group_lookup_code,
	base.payment_method_lookup_code = landing.payment_method_lookup_code,
	base.bank_account_name = landing.bank_account_name,
	base.bank_account_num = landing.bank_account_num,
	base.bank_num = landing.bank_num,
	base.bank_account_type = landing.bank_account_type,
	base.women_owned_flag = landing.women_owned_flag,
	base.small_business_flag = landing.small_business_flag,
	base.standard_industry_class = landing.standard_industry_class,
	base.hold_flag = landing.hold_flag,
	base.purchasing_hold_reason = landing.purchasing_hold_reason,
	base.hold_by = landing.hold_by,
	base.hold_date = landing.hold_date,
	base.terms_date_basis = landing.terms_date_basis,
	base.price_tolerance = landing.price_tolerance,
	base.inspection_required_flag = landing.inspection_required_flag,
	base.receipt_required_flag = landing.receipt_required_flag,
	base.qty_rcv_tolerance = landing.qty_rcv_tolerance,
	base.qty_rcv_exception_code = landing.qty_rcv_exception_code,
	base.enforce_ship_to_location_code = landing.enforce_ship_to_location_code,
	base.days_early_receipt_allowed = landing.days_early_receipt_allowed,
	base.days_late_receipt_allowed = landing.days_late_receipt_allowed,
	base.receipt_days_exception_code = landing.receipt_days_exception_code,
	base.receiving_routing_id = landing.receiving_routing_id,
	base.allow_substitute_receipts_flag = landing.allow_substitute_receipts_flag,
	base.allow_unordered_receipts_flag = landing.allow_unordered_receipts_flag,
	base.hold_unmatched_invoices_flag = landing.hold_unmatched_invoices_flag,
	base.exclusive_payment_flag = landing.exclusive_payment_flag,
	base.ap_tax_rounding_rule = landing.ap_tax_rounding_rule,
	base.auto_tax_calc_flag = landing.auto_tax_calc_flag,
	base.auto_tax_calc_override = landing.auto_tax_calc_override,
	base.amount_includes_tax_flag = landing.amount_includes_tax_flag,
	base.tax_verification_date = landing.tax_verification_date,
	base.name_control = landing.name_control,
	base.state_reportable_flag = landing.state_reportable_flag,
	base.federal_reportable_flag = landing.federal_reportable_flag,
	base.attribute_category = landing.attribute_category,
	base.attribute1 = landing.attribute1,
	base.attribute2 = landing.attribute2,
	base.attribute3 = landing.attribute3,
	base.attribute4 = landing.attribute4,
	base.attribute5 = landing.attribute5,
	base.attribute6 = landing.attribute6,
	base.attribute7 = landing.attribute7,
	base.attribute8 = landing.attribute8,
	base.attribute9 = landing.attribute9,
	base.attribute10 = landing.attribute10,
	base.attribute11 = landing.attribute11,
	base.attribute12 = landing.attribute12,
	base.attribute13 = landing.attribute13,
	base.attribute14 = landing.attribute14,
	base.attribute15 = landing.attribute15,
	base.request_id = landing.request_id,
	base.program_application_id = landing.program_application_id,
	base.program_id = landing.program_id,
	base.program_update_date = landing.program_update_date,
	base.offset_vat_code = landing.offset_vat_code,
	base.vat_registration_num = landing.vat_registration_num,
	base.auto_calculate_interest_flag = landing.auto_calculate_interest_flag,
	base.validation_number = landing.validation_number,
	base.exclude_freight_from_discount = landing.exclude_freight_from_discount,
	base.tax_reporting_name = landing.tax_reporting_name,
	base.check_digits = landing.check_digits,
	base.bank_number = landing.bank_number,
	base.allow_awt_flag = landing.allow_awt_flag,
	base.awt_group_id = landing.awt_group_id,
	base.global_attribute1 = landing.global_attribute1,
	base.global_attribute2 = landing.global_attribute2,
	base.global_attribute3 = landing.global_attribute3,
	base.global_attribute4 = landing.global_attribute4,
	base.global_attribute5 = landing.global_attribute5,
	base.global_attribute6 = landing.global_attribute6,
	base.global_attribute7 = landing.global_attribute7,
	base.global_attribute8 = landing.global_attribute8,
	base.global_attribute9 = landing.global_attribute9,
	base.global_attribute10 = landing.global_attribute10,
	base.global_attribute11 = landing.global_attribute11,
	base.global_attribute12 = landing.global_attribute12,
	base.global_attribute13 = landing.global_attribute13,
	base.global_attribute14 = landing.global_attribute14,
	base.global_attribute15 = landing.global_attribute15,
	base.global_attribute16 = landing.global_attribute16,
	base.global_attribute17 = landing.global_attribute17,
	base.global_attribute18 = landing.global_attribute18,
	base.global_attribute19 = landing.global_attribute19,
	base.global_attribute20 = landing.global_attribute20,
	base.global_attribute_category = landing.global_attribute_category,
	base.edi_transaction_handling = landing.edi_transaction_handling,
	base.edi_payment_method = landing.edi_payment_method,
	base.edi_payment_format = landing.edi_payment_format,
	base.edi_remittance_method = landing.edi_remittance_method,
	base.edi_remittance_instruction = landing.edi_remittance_instruction,
	base.bank_charge_bearer = landing.bank_charge_bearer,
	base.bank_branch_type = landing.bank_branch_type,
	base.match_option = landing.match_option,
	base.future_dated_payment_ccid = landing.future_dated_payment_ccid,
	base.create_debit_memo_flag = landing.create_debit_memo_flag,
	base.offset_tax_flag = landing.offset_tax_flag,
	base.party_id = landing.party_id,
	base.parent_party_id = landing.parent_party_id,
	base.ni_number = landing.ni_number,
	base.tca_sync_num_1099 = landing.tca_sync_num_1099,
	base.tca_sync_vendor_name = landing.tca_sync_vendor_name,
	base.tca_sync_vat_reg_num = landing.tca_sync_vat_reg_num,
	base.unique_tax_reference_num = landing.unique_tax_reference_num,
	base.partnership_utr = landing.partnership_utr,
	base.partnership_name = landing.partnership_name,
	base.cis_enabled_flag = landing.cis_enabled_flag,
	base.first_name = landing.first_name,
	base.second_name = landing.second_name,
	base.last_name = landing.last_name,
	base.salutation = landing.salutation,
	base.trading_name = landing.trading_name,
	base.work_reference = landing.work_reference,
	base.company_registration_number = landing.company_registration_number,
	base.national_insurance_number = landing.national_insurance_number,
	base.verification_number = landing.verification_number,
	base.verification_request_id = landing.verification_request_id,
	base.match_status_flag = landing.match_status_flag,
	base.cis_verification_date = landing.cis_verification_date,
	base.individual_1099 = landing.individual_1099,
	base.pay_awt_group_id = landing.pay_awt_group_id,
	base.cis_parent_vendor_id = landing.cis_parent_vendor_id,
	base.bus_class_last_certified_date = landing.bus_class_last_certified_date,
	base.bus_class_last_certified_by = landing.bus_class_last_certified_by,
	base.datalakeinserttime = landing.datalakeinserttime,
	base.[RowHash] = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[AP_SUPPLIERS_B0] base
JOIN [HR_Landing].dbo.[AP_SUPPLIERS_B0Landing] landing 
	ON base.vendor_id = landing.vendor_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_AP_SUPPLIERS_B0
363,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_AP_SUPPLIERS_B0
364,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_AP_SUPPLIERS_B0
365,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_AP_SUPPLIERS_B0
366,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_AP_SUPPLIERS_B0
367,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_AP_SUPPLIERS_B0
368,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_AP_SUPPLIERS_B0
369,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_AP_SUPPLIERS_B0
370,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_AP_SUPPLIERS_B0
371,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_AP_SUPPLIERS_B0
372,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_AP_SUPPLIERS_B0
373,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_AP_SUPPLIERS_B0
374,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_AP_SUPPLIERS_B0
375,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_AP_SUPPLIERS_B0
376,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_AP_SUPPLIERS_B0
377,Package\Landing - Data Load\SQL - Update RowHash,Microsoft.ExecuteSQLTask,SQL - Update RowHash,,,,,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	vendor_id,
	HASHBYTES('MD5',
(SELECT
	vendor_name,
	vendor_name_alt,
	segment1,
	summary_flag,
	enabled_flag,
	segment2,
	segment3,
	segment4,
	segment5,
	employee_id,
	vendor_type_lookup_code,
	customer_num,
	one_time_flag,
	parent_vendor_id,
	min_order_amount,
	ship_to_location_id,
	bill_to_location_id,
	ship_via_lookup_code,
	freight_terms_lookup_code,
	fob_lookup_code,
	terms_id,
	set_of_books_id,
	credit_status_lookup_code,
	credit_limit,
	always_take_disc_flag,
	pay_date_basis_lookup_code,
	pay_group_lookup_code,
	payment_priority,
	invoice_currency_code,
	payment_currency_code,
	invoice_amount_limit,
	exchange_date_lookup_code,
	hold_all_payments_flag,
	hold_future_payments_flag,
	hold_reason,
	distribution_set_id,
	accts_pay_code_combination_id,
	disc_lost_code_combination_id,
	disc_taken_code_combination_id,
	expense_code_combination_id,
	prepay_code_combination_id,
	num_1099,
	type_1099,
	withholding_status_lookup_code,
	withholding_start_date,
	organization_type_lookup_code,
	vat_code,
	start_date_active,
	end_date_active,
	minority_group_lookup_code,
	payment_method_lookup_code,
	bank_account_name,
	bank_account_num,
	bank_num,
	bank_account_type,
	women_owned_flag,
	small_business_flag,
	standard_industry_class,
	hold_flag,
	purchasing_hold_reason,
	hold_by,
	hold_date,
	terms_date_basis,
	price_tolerance,
	inspection_required_flag,
	receipt_required_flag,
	qty_rcv_tolerance,
	qty_rcv_exception_code,
	enforce_ship_to_location_code,
	days_early_receipt_allowed,
	days_late_receipt_allowed,
	receipt_days_exception_code,
	receiving_routing_id,
	allow_substitute_receipts_flag,
	allow_unordered_receipts_flag,
	hold_unmatched_invoices_flag,
	exclusive_payment_flag,
	ap_tax_rounding_rule,
	auto_tax_calc_flag,
	auto_tax_calc_override,
	amount_includes_tax_flag,
	tax_verification_date,
	name_control,
	state_reportable_flag,
	federal_reportable_flag,
	attribute_category,
	attribute1,
	attribute2,
	attribute3,
	attribute4
	attribute5,
	attribute6,
	attribute7,
	attribute8,
	attribute9,
	attribute10,
	attribute11,
	attribute12,
	attribute13,
	attribute14,
	attribute15,
	request_id,
	program_application_id,
	program_id,
	program_update_date,
	offset_vat_code,
	vat_registration_num,
	auto_calculate_interest_flag,
	validation_number,
	exclude_freight_from_discount,
	tax_reporting_name,
	check_digits,
	bank_number,
	allow_awt_flag,
	awt_group_id,
	global_attribute1,
	global_attribute2,
	global_attribute3,
	global_attribute4,
	global_attribute5,
	global_attribute6,
	global_attribute7,
	global_attribute8,
	global_attribute9,
	global_attribute10,
	global_attribute11,
	global_attribute12,
	global_attribute13,
	global_attribute14,
	global_attribute15,
	global_attribute16,
	global_attribute17,
	global_attribute18,
	global_attribute19,
	global_attribute20,
	global_attribute_category,
	edi_transaction_handling,
	edi_payment_method,
	edi_payment_format,
	edi_remittance_method,
	edi_remittance_instruction,
	bank_charge_bearer,
	bank_branch_type,
	match_option,
	future_dated_payment_ccid,
	create_debit_memo_flag,
	offset_tax_flag,
	party_id,
	parent_party_id,
	ni_number,
	tca_sync_num_1099,
	tca_sync_vendor_name,
	tca_sync_vat_reg_num,
	unique_tax_reference_num,
	partnership_utr,
	partnership_name,
	cis_enabled_flag,
	first_name,
	second_name,
	last_name,
	salutation,
	trading_name,
	work_reference,
	company_registration_number,
	national_insurance_number,
	verification_number,
	verification_request_id,
	match_status_flag,
	cis_verification_date,
	individual_1099,
	pay_awt_group_id,
	cis_parent_vendor_id,
	bus_class_last_certified_date,
	bus_class_last_certified_by
	FOR XML RAW)) AS RowHash
FROM dbo.AP_SUPPLIERS_B0Landing l) src
JOIN dbo.AP_SUPPLIERS_B0Landing target ON src.vendor_id = target.vendor_id

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_AP_SUPPLIERS_B0
378,Package,Microsoft.Package,AssessmentBN,,,,,,DataLakeHRISToBase_AssessmentBN
379,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_AssessmentBN
380,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST- AssessmentBN,,DataLakeHRISToBase_AssessmentBN
381,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_AssessmentBN
382,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - B0 Query,,DataLakeHRISToBase_AssessmentBN
383,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_AssessmentBN
384,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_AssessmentBN
385,Package\Base - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
 END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.AssessmentBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeHRISToBase_AssessmentBN
386,Package\Base - Data Load\SQl - Soft Delete From AssessmentBN,Microsoft.ExecuteSQLTask,SQl - Soft Delete From AssessmentBN,,,,,"WITH Assessment AS
(
SELECT  
	    ( coalesce(PAC.segment1,'') + case when PAC.segment1 is not null or PAC.segment3 is not null then   '_' end  + coalesce (PAC.segment3,'')) AS  AssessmentID 
FROM dbo.PER_ANALYSIS_CRITERIA_B0 PAC
     LEFT JOIN dbo.FND_ID_FLEX_STRUCTURES_TL_B0 FIFST
        ON PAC.id_flex_num = FIFST.id_flex_num
WHERE  FIFST.id_flex_structure_name='Assessment -'
)

UPDATE Trmn
SET Trmn.Deleted = 'Y',
    Trmn.BaseModifiedDate = GETDATE(),
   Trmn.UpdateAuditID = ?
FROM AssessmentBN Trmn
WHERE NOT EXISTS
      (
          SELECT 1
		  FROM Assessment pps
		  WHERE pps.AssessmentID=Trmn.AssessmentID
)		  
      
      AND Trmn.deleted IS NULL;

SELECT @@RowCount AS DeleteCount;",DataLakeHRISToBase_AssessmentBN
387,Package\Base - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"
UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeHRISToBase_AssessmentBN
388,Package\Base - Data Load\SQl - Update Modified Records,Microsoft.ExecuteSQLTask,SQl - Update Modified Records,,,,,"
WITH B0Query AS 
(
SELECT 
 DISTINCT PAC.segment1 as AssessmentType,
  PAC.segment3 as AssessmentBand,
( coalesce(PAC.segment1,'') + case when PAC.segment1 is not null or PAC.segment3 is not null then   '_' end  + coalesce (PAC.segment3,'')) AS  AssessmentID 
, CAST(HASHBYTES('MD5',
(SELECT PAC.segment1 as AssessmentType,
  PAC.segment3 as AssessmentBand,
( coalesce(PAC.segment1,'') + case when PAC.segment1 is not null or PAC.segment3 is not null then   '_' end  + coalesce (PAC.segment3,'')) AS  AssessmentID FOR XML RAW)) AS BINARY(16)) AS RowHash
FROM dbo.PER_ANALYSIS_CRITERIA_B0 PAC
     LEFT JOIN dbo.FND_ID_FLEX_STRUCTURES_TL_B0 FIFST
        ON PAC.id_flex_num = FIFST.id_flex_num
WHERE  FIFST.id_flex_structure_name='Assessment -' 
)

, AssessmentBNUpdate AS (SELECT * FROM B0Query B0

WHERE EXISTS 
(SELECT 1 FROM dbo.AssessmentBN BN
WHERE BN.AssessmentID=B0.AssessmentID AND B0.RowHash<>BN.RowHash  )
)
UPDATE BN 

SET  [AssessmentType] =                      Upd.[AssessmentType],
    [AssessmentBand] =              Upd.[AssessmentBand],     
    [BaseModifiedDate] = GETDATE(),
    [UpdateAuditID] = ?,

    [RowHash] =upd.RowHash
	

	FROM dbo.AssessmentBN BN 
	JOIN AssessmentBNUpdate Upd ON BN.AssessmentID=Upd.AssessmentID

	
SELECT @@ROWCOUNT AS UpdateCount
    
",DataLakeHRISToBase_AssessmentBN
389,Package,Microsoft.Package,AssignmentBN,,,,,,DataLakeHRISToBase_AssignmentBN
390,Package\Base - B1 Data Load,STOCK:SEQUENCE,Base - B1 Data Load,,,,,,DataLakeHRISToBase_AssignmentBN
391,Package\Base - B1 Data Load\DFT - Load new records From B0 into B1,Microsoft.Pipeline,DFT - Load new records From B0 into B1,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base B1 Table,,DataLakeHRISToBase_AssignmentBN
392,Package\Base - B1 Data Load\DFT - Load new records From B0 into B1,Microsoft.Pipeline,DFT - Load new records From B0 into B1,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_AssignmentBN
393,Package\Base - B1 Data Load\DFT - Load new records From B0 into B1,Microsoft.Pipeline,DFT - Load new records From B0 into B1,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_AssignmentBN
394,Package\Base - B1 Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_AssignmentBN
395,Package\Base - B1 Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_AssignmentBN
396,Package\Base - B1 Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.PersonBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;

",DataLakeHRISToBase_AssignmentBN
397,Package\Base - B1 Data Load\SQL - Truncate B1 table,Microsoft.ExecuteSQLTask,SQL - Truncate B1 table,,,,,TRUNCATE TABLE dbo.AssignmentB1,DataLakeHRISToBase_AssignmentBN
398,Package\Base - BN Data Load,STOCK:SEQUENCE,Base - BN Data Load,,,,,,DataLakeHRISToBase_AssignmentBN
399,Package\Base - BN Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base BN Table,,DataLakeHRISToBase_AssignmentBN
400,Package\Base - BN Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_AssignmentBN
401,Package\Base - BN Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B1 table,,DataLakeHRISToBase_AssignmentBN
402,Package\Base - BN Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_AssignmentBN
403,Package\Base - BN Data Load\SQL - Delete records from PersonBN,Microsoft.ExecuteSQLTask,SQL - Delete records from PersonBN,,,,,"DELETE p
FROM dbo.AssignmentBN p 
JOIN (SELECT *
FROM HR_Landing.dbo.AssignmentB1 vpbn
WHERE EXISTS
(
    SELECT 1
    FROM dbo.AssignmentBN pbn
    WHERE pbn.AssignmentID = vpbn.AssignmentID
 AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
)
)A ON p.AssignmentID = a.AssignmentID AND p.EffectiveStartDate = a.EffectiveStartDate AND p.BaseEffectiveDate = a.BaseEffectiveDate

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_AssignmentBN
404,Package\Base - BN Data Load\SQL - Delete records from PersonBN not in source,Microsoft.ExecuteSQLTask,SQL - Delete records from PersonBN not in source,,,,,"DELETE pbn
FROM dbo.AssignmentBN pbn
WHERE NOT EXISTS
(
    SELECT 1
    FROM dbo.vAssignmentBN vpbn
    WHERE pbn.AssignmentID = vpbn.AssignmentID
	AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
)

SELECT @@ROWCOUNT + ? AS DeleteCount ;",DataLakeHRISToBase_AssignmentBN
405,Package\Base - BN Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_AssignmentBN
406,Package\Base - BN Data Load\SQl - SCD1 Update,Microsoft.ExecuteSQLTask,SQl - SCD1 Update,,,,,"WITH Updates AS 
(
SELECT * 
FROM dbo.vAssignmentBN vabn
WHERE EXISTS
(
    SELECT 1
    FROM dbo.AssignmentBN abn
    WHERE abn.AssignmentID = vabn.AssignmentID
	AND abn.EffectiveStartDate = vabn.EffectiveStartDate
    AND abn.BaseEffectiveDate = vabn.BaseEffectiveDate
	AND abn.BaseEndDate = vabn.BaseEndDate
	AND abn.RowHash <> vabn.RowHash
)
)

UPDATE a
SET [AssignmentNumber] = u.AssignmentNumber
,[AssignmentType] = u.AssignmentType	
,[AssignmentStatusType] = u.AssignmentStatusType
,[WorkAtHomeIndicator] = u.WorkAtHomeIndicator
,[NormalWorkingHours] = u.NormalWorkingHours
,[NDQCFlag] = u.NDQCFlag
,[BonusPercent] = u.BonusPercent
,[ChangeReason] = u.ChangeReason
,[AssignmentSubType] = u.AssignmentSubType
,[IVRCode] = u.IVRCode
,[Title] = u.Title
,[ExecutiveAssistant] = u.ExecutiveAssistant
,[CAWaiverIndicator] = u.CAWaiverIndicator
,[EmploymentCategory] = u.EmploymentCategory
,[EmployeePayBasis] = u.EmployeePayBasis
,[SpecialInfoTypeName] = u.SpecialInfoTypeName
,[SecondaryRateStartDate] = u.SecondaryRateStartDate
,[SecondaryRateEndDate] = u.SecondaryRateEndDate
,[SecondaryJobName] = u.SecondaryJobName
,[SecondaryPayRate] = u.SecondaryPayRate
,[SecondaryHoursType] = u.SecondaryHoursType
,[Vendor] = u.Vendor
,[PeopleGroup] = u.PeopleGroup
,[KLCLineOfBusiness] = u.KLCLineOfBusiness
,[KLCPeopleGroup] = u.KLCPeopleGroup
,[KCLOTLLink] = u.KCLOTLLink
,[ProjectedAssignmentEndDate] = u.ProjectedAssignmentEndDate
,[PayGradeID] = u.PayGradeID
,[PositionID] = u.PositionID
,[LocationID] = u.LocationID
,[OrganizationID] = u.OrganizationID
,[EffectiveStartDate] = u.EffectiveStartDate
,[ExpirationDate] = u.ExpirationDate
,[BaseEffectiveDate] = u.BaseEffectiveDate
,[BaseEndDate] = u.BaseEndDate
,[BaseModifiedDate] = GETDATE()
,[UpdateAuditID] = ?
,[RowHash] = u.RowHash
,[SourceUpdateDate] = u.SourceUpdateDate
FROM dbo.AssignmentBN a
JOIN Updates u ON a.AssignmentID = u.AssignmentID AND a.EffectiveStartDate = u.EffectiveStartDate 
		AND a.BaseEffectiveDate = u.BaseEffectiveDate AND a.BaseEndDate = u.BaseEndDate

SELECT @@ROWCOUNT  AS UpdateCount;",DataLakeHRISToBase_AssignmentBN
407,Package\Base - BN Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeHRISToBase_AssignmentBN
408,Package\Base - BN Data Load\SQl - Update RowStatus for history records,Microsoft.ExecuteSQLTask,SQl - Update RowStatus for history records,,,,,"UPDATE dbo.AssignmentBN 
SET RowStatus = 'H'
, BaseModifiedDate = GETDATE()
, UpdateAuditID = ?
WHERE
 CAST(BaseEndDate AS DATE)< CAST(GETDATE() AS DATE) 
 AND RowStatus <> 'H'

SELECT @@ROWCOUNT + ? AS UpdateCount;",DataLakeHRISToBase_AssignmentBN
409,Package,Microsoft.Package,BaseEmployeeCensusBN,,,,,,DataLakeHRISToBase_BaseEmployeeCensusBN
410,Package\SEQ - Base Data Load,STOCK:SEQUENCE,SEQ - Base Data Load,,,,,,DataLakeHRISToBase_BaseEmployeeCensusBN
411,Package\SEQ - Base Data Load\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeCensusBN
412,Package\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeCensusBN
413,Package\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeCensusBN
414,Package\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeCensusBN
415,Package\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);
DECLARE @Day VARCHAR(20) = (SELECT DATENAME(WEEKDAY, @FiscalDate ) );

IF @Day = 'Sunday' 
	BEGIN
		SET @BatchSplitByName = 'FiscalWeekDate'
	END
ELSE 
	SET @BatchSplitByName = 'FiscalDate'

EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeCensusBN
416,Package\SEQ - Base Data Load\Foreach Loop Container\SQL - Delete Previous Day Records or Delete if exists,Microsoft.ExecuteSQLTask,SQL - Delete Previous Day Records or Delete if exists,,,,,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?
DECLARE @PreviousWeek DATE = (SELECT DATEADD(week, (DATEDIFF(week,-1,@FiscalDate)),-1));
DECLARE @ReloadDate DATE = (SELECT DATEADD(DAY, -365, @CurrentDate));
DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
	BEGIN
		DELETE FROM dbo.BaseEmployeeCensusBN WHERE FullDate =  @FiscalDate;

		SET @DeleteCount = (SELECT @@ROWCOUNT );
		SELECT @DeleteCount AS DeleteCount;
	END 
ELSE 
	BEGIN
    
		/* Delete records more than one year */
		
		DELETE FROM dbo.BaseEmployeeCensusBN WHERE FullDate < @ReloadDate;
		
		SET @DeleteCount = (SELECT @@ROWCOUNT);
		
		
		/* Delete previous day record */
		
		IF @FiscalDate = @CurrentDate
			BEGIN 
					IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeCensusBN ))
						BEGIN
							DELETE FROM dbo.BaseEmployeeCensusBN WHERE FullDate > @PreviousWeek;
					
							SET @DeleteCount = (SELECT @@ROWCOUNT + @DeleteCount );
						END
			END
		ELSE 
			SET @DeleteCount = (SELECT 0 + @DeleteCount) ;
		
			   	 
		/* Delete if data exists before loading during the reload */
		
		IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeCensusBN WHERE FullDate = @FiscalDate))
			BEGIN
				DELETE FROM dbo.BaseEmployeeCensusBN WHERE FullDate =  @FiscalDate;
		
				SET @DeleteCount = (SELECT @@ROWCOUNT + @DeleteCount);
			END
		ELSE 
				SET @DeleteCount = (SELECT 0 + @DeleteCount);
		
		SELECT @DeleteCount AS DeleteCount;
	END",DataLakeHRISToBase_BaseEmployeeCensusBN
417,Package\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeCensusBN
418,Package\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeCensusBN
WHERE InsertAuditID = ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeCensusBN
419,Package\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeHRISToBase_BaseEmployeeCensusBN
420,Package\SEQ - Get List of FiscalDates to process\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeCensusBN
421,Package\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeCensusBN(NOLOCK));

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?) AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
		ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
	   END AS LastProcessedFiscalDate;	 ",DataLakeHRISToBase_BaseEmployeeCensusBN
422,Package\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
	INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
	INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = ?) AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",DataLakeHRISToBase_BaseEmployeeCensusBN
423,Package\SEQ - Get List of FiscalDates to process\SQL - Get List of Weeks to Process,Microsoft.ExecuteSQLTask,SQL - Get List of Weeks to Process,,,,,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
									   ELSE FiscalWeekStartDate 
								  END AS FiscalWeekStartDate
						   FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
	BEGIN
		SELECT DISTINCT FiscalWeekStartDate
		FROM dbo.DimDate
		WHERE FiscalWeekStartDate BETWEEN  @StartDate AND @CurrentDate
		UNION 
		SELECT @CurrentDate AS FiscalWeekStartDate
		ORDER BY FiscalWeekStartDate

	END
ELSE 
	BEGIN
		SELECT DISTINCT FiscalWeekStartDate
		FROM dbo.DimDate
		WHERE (FiscalWeekStartDate BETWEEN  @StartDate AND @CurrentDate)
		AND FiscalWeekStartDate > @LastProcessedFiscalDate
		UNION 
		SELECT @CurrentDate AS FiscalWeekStartDate
		ORDER BY FiscalWeekStartDate
	END",DataLakeHRISToBase_BaseEmployeeCensusBN
424,Package\SEQ - Get List of FiscalDates to process\SQL - Get List of Weeks to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of Weeks to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
	BEGIN
		IF (@LastProcessedFiscalDate IS NULL)
			BEGIN
				SELECT DISTINCT FiscalWeekStartDate
				FROM dbo.DimDate
				WHERE FiscalWeekStartDate BETWEEN @OverrideStartDate AND @OverrideEndDate
				UNION 
				SELECT @CurrentDate AS FiscalWeekStartDate
				ORDER BY FiscalWeekStartDate
			END
		ELSE 
			BEGIN
				SELECT DISTINCT FiscalWeekStartDate
				FROM dbo.DimDate
				WHERE (FiscalWeekStartDate BETWEEN @OverrideStartDate AND @OverrideEndDate)
				AND FiscalWeekStartDate > @LastProcessedFiscalDate
				UNION 
				SELECT @CurrentDate AS FiscalWeekStartDate
				ORDER BY FiscalWeekStartDate
			END
	END 
ELSE 
	BEGIN
		IF (@LastProcessedFiscalDate IS NULL)
			BEGIN
				SELECT DISTINCT FiscalWeekStartDate
				FROM dbo.DimDate
				WHERE FiscalWeekStartDate BETWEEN @OverrideStartDate AND @OverrideEndDate
			END
		ELSE 
			BEGIN
				SELECT DISTINCT FiscalWeekStartDate
				FROM dbo.DimDate
				WHERE (FiscalWeekStartDate BETWEEN @OverrideStartDate AND @OverrideEndDate)
				AND FiscalWeekStartDate > @LastProcessedFiscalDate
				ORDER BY FiscalWeekStartDate
			END
	END ",DataLakeHRISToBase_BaseEmployeeCensusBN
425,Package\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,Microsoft.ExecuteSQLTask,SQL - Get LoadStartDate,,,,,"DECLARE @PackageName VARCHAR(MAX) = ?;
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @ReloadDate DATE = (SELECT DATEADD(DAY, -365, @CurrentDate));


IF (NOT EXISTS ( SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @PackageName ))
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName, LastProcessedDate) VALUES (@PackageName, @ReloadDate);
	END
ELSE IF (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @PackageName) = NULL
	BEGIN
		UPDATE dbo.ETLBatchControl
		SET LastProcessedDate = @ReloadDate
		WHERE TableName = @PackageName
	END
ELSE IF (NOT EXISTS (SELECT 1 FROM dbo.BaseEmployeeCensusBN ))
	BEGIN
		UPDATE dbo.ETLBatchControl
		SET LastProcessedDate = @ReloadDate
		WHERE TableName = @PackageName
	END

SELECT CAST(LastProcessedDate AS DATE) AS LoadStartDate 
FROM dbo.ETLBatchControl WHERE TableName = @PackageName;
	 ",DataLakeHRISToBase_BaseEmployeeCensusBN
426,Package\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = ?;

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeHRISToBase_BaseEmployeeCensusBN
427,Package\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeHRISToBase_BaseEmployeeCensusBN
428,Package\SEQ - Update Parent Audit Log\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeCensusBN
429,"Package\SEQ - Update Parent Audit Log\SQL - Get Total Insert, Source, Update, Delete Count",Microsoft.ExecuteSQLTask,"SQL - Get Total Insert, Source, Update, Delete Count",,,,,"SELECT SUM(SourceCount) AS SourceCount, SUM(InsertCount) AS InsertCount, SUM(UpdateCount) AS UpdateCount, SUM(DeleteCount) AS DeleteCount, SUM(RejectCount) AS RejectCount
FROM dbo.AuditLog(NOLOCK)
WHERE ExecutionID = ?",DataLakeHRISToBase_BaseEmployeeCensusBN
430,Package\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = ?
AND IsActive = 1",DataLakeHRISToBase_BaseEmployeeCensusBN
431,Package\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = ?;",DataLakeHRISToBase_BaseEmployeeCensusBN
432,Package,Microsoft.Package,BaseEmployeeEventBN,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
433,Package\SEQ - Anniversay Event,STOCK:SEQUENCE,SEQ - Anniversay Event,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
434,Package\SEQ - Anniversay Event\SEQ - Base Data Load,STOCK:SEQUENCE,SEQ - Base Data Load,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
435,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
436,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
437,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
438,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
439,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
440,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
441,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
442,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
443,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Anniversary';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_BaseEmployeeEventBN
444,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeAnniversaryEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
445,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
446,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Anniversary'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
447,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Anniversary';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Anniversary'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Anniversary';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",DataLakeHRISToBase_BaseEmployeeEventBN
448,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeAnniversaryEvent', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
449,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
450,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Anniversary';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
451,Package\SEQ - Anniversay Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process Updates,,,,,"With 
PersonID
AS 
(
select person_id from  hr_base..PER_PERIODS_OF_SERVICE_B0History with (nolock) 
 WHERE  CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? as date)  and  adjusted_svc_date is not null
),
OldDates
AS
(
select left((FullDate),4) [Year],right((FullDate),5)[Month],personid
from hr_base..BaseEmployeeEventBN with (nolock) 
where EventName='Anniversary'
 and personid in 
 (select person_id from  PersonID)

),

NewDates
AS
(
select left((b.FullDate),4) [Year],right((p.adjusted_svc_date),5)[Month],personid
from hr_base..BaseEmployeeEventBN b with (nolock)  join 
hr_base..PER_PERIODS_OF_SERVICE_B0 p with (nolock) on  b.PersonID=p.person_id
where EventName='Anniversary'
 and personid in 
 (select person_id from  PersonID)
 )
select cast([year]+'-'+[Month] as date)  FullUpdateDate from OldDates  where [year] is not null and [Month] is not null  AND [Month]<>'02-29' AND  [Year]>=format(GETDATE(), 'yyyy')-7
Union
select cast([year]+'-'+[Month]  as date) FullUpdateDate from NewDates  where [year] is not null and [Month] is not null  AND [Month]<>'02-29' AND  [Year]>=format(GETDATE(), 'yyyy')-7",DataLakeHRISToBase_BaseEmployeeEventBN
452,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
453,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Anniversary');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeAnniversaryEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
  ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
    END AS LastProcessedFiscalDate;  ",DataLakeHRISToBase_BaseEmployeeEventBN
454,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeAnniversaryEvent') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",DataLakeHRISToBase_BaseEmployeeEventBN
455,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process,,,,,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
            ELSE FiscalWeekStartDate 
          END AS FiscalWeekStartDate
         FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate

 END
ELSE 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
  AND FullDate > @LastProcessedFiscalDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate
 END",DataLakeHRISToBase_BaseEmployeeEventBN
456,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get List of Days to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of Days to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",DataLakeHRISToBase_BaseEmployeeEventBN
457,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,Microsoft.ExecuteSQLTask,SQL - Get LoadStartDate,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeAnniversaryEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeeAnniversaryEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeAnniversaryEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Anniversary') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",DataLakeHRISToBase_BaseEmployeeEventBN
458,Package\SEQ - Anniversay Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeeAnniversaryEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeHRISToBase_BaseEmployeeEventBN
459,Package\SEQ - Anniversay Event\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
460,Package\SEQ - Anniversay Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeeAnniversaryEventBN'
AND IsActive = 1",DataLakeHRISToBase_BaseEmployeeEventBN
461,Package\SEQ - Anniversay Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeeAnniversaryEventBN';",DataLakeHRISToBase_BaseEmployeeEventBN
462,Package\SEQ - Birthday Event,STOCK:SEQUENCE,SEQ - Birthday Event,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
463,Package\SEQ - Birthday Event\SEQ - Base Data Load,STOCK:SEQUENCE,SEQ - Base Data Load,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
464,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
465,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
466,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
467,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
468,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
469,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
470,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
471,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
472,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Birthday';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_BaseEmployeeEventBN
473,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeBirthdayEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
474,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
475,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Birthday'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
476,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Birthday';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Birthday'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Birthday';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",DataLakeHRISToBase_BaseEmployeeEventBN
477,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeBirthdayEvent', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
478,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
479,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Birthday';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
480,Package\SEQ - Birthday Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process Updates,,,,,"With 
PersonID
AS 
(
select person_id from  hr_base..PER_ALL_PEOPLE_F_B0History with (nolock) 
 WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? as date)  and  date_of_birth is not null
),
OldDates
AS
(
select left((FullDate),4) [Year],right((FullDate),5)[Month],personid
from hr_base..BaseEmployeeEventBN with (nolock)  
where EventName='Birthday'
 and personid in 
 (select person_id from  PersonID)

),

NewDates
AS
(
select left((b.FullDate),4) [Year],right((p.date_of_birth),5)[Month],personid
from hr_base..BaseEmployeeEventBN b with (nolock) join 
hr_base..PER_ALL_PEOPLE_F_B0 p with (nolock) on  b.PersonID=p.person_id
where EventName='Birthday'
 and personid in 
 (select person_id from  PersonID)
 )
select cast([year]+'-'+[Month] as date)  FullUpdateDate from OldDates  where [year] is not null and [Month] is not null   AND [Month]<>'02-29'  AND  [Year]>=format(GETDATE(), 'yyyy')-7
Union
select cast([year]+'-'+[Month]  as date) FullUpdateDate from NewDates  where [year] is not null and [Month] is not null  AND [Month]<>'02-29'  AND  [Year]>=format(GETDATE(), 'yyyy')-7",DataLakeHRISToBase_BaseEmployeeEventBN
481,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
482,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Birthday');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeBirthdayEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
  ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
    END AS LastProcessedFiscalDate;  ",DataLakeHRISToBase_BaseEmployeeEventBN
483,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeBirthdayEventBN') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",DataLakeHRISToBase_BaseEmployeeEventBN
484,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process,,,,,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
            ELSE FiscalWeekStartDate 
          END AS FiscalWeekStartDate
         FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate

 END
ELSE 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
  AND FullDate > @LastProcessedFiscalDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate
 END",DataLakeHRISToBase_BaseEmployeeEventBN
485,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get List of Days to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of Days to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",DataLakeHRISToBase_BaseEmployeeEventBN
486,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,Microsoft.ExecuteSQLTask,SQL - Get LoadStartDate,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeBirthdayEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeeBirthdayEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeBirthdayEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Birthday') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",DataLakeHRISToBase_BaseEmployeeEventBN
487,Package\SEQ - Birthday Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeeBirthdayEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeHRISToBase_BaseEmployeeEventBN
488,Package\SEQ - Birthday Event\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
489,Package\SEQ - Birthday Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeeBirthdayEventBN'
AND IsActive = 1",DataLakeHRISToBase_BaseEmployeeEventBN
490,Package\SEQ - Birthday Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeeBirthdayEventBN';",DataLakeHRISToBase_BaseEmployeeEventBN
491,Package\SEQ - Hire Event,STOCK:SEQUENCE,SEQ - Hire Event,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
492,Package\SEQ - Hire Event\SEQ - Base Data Load,STOCK:SEQUENCE,SEQ - Base Data Load,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
493,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
494,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
495,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
496,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
497,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
498,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
499,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
500,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
501,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Hire';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_BaseEmployeeEventBN
502,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeHireEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
503,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
504,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Hire'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
505,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Hire';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Hire'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Hire';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",DataLakeHRISToBase_BaseEmployeeEventBN
506,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeHireEvent', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
507,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
508,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Hire';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
509,Package\SEQ - Hire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process Updates,,,,,"SELECT DISTINCT  date_start  FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0 s with (nolock)
JOIN HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0 a with (nolock) ON s.period_of_service_id = a.period_of_service_id 
WHERE s.person_id IN (
SELECT DISTINCT s.person_id  FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0History s with (nolock)
JOIN HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History a with (nolock) on s.period_of_service_id=a.period_of_service_id 
WHERE CONVERT(date, SWITCHOFFSET(s.BaseUTCEndDate, DATEPART(TZOFFSET, 
s.BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? AS DATE)
 AND  date_start IS NOT NULL AND assignment_number  NOT  LIKE '%-%'   AND date_start>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy')))
AND  date_start IS NOT NULL AND assignment_number NOT  LIKE '%-%' AND date_start>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy'))
UNION
SELECT DISTINCT date_start FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0History s with (nolock) 
JOIN HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History a with (nolock) on s.period_of_service_id=a.period_of_service_id
 WHERE CONVERT(date, SWITCHOFFSET(s.BaseUTCEndDate, DATEPART(TZOFFSET, 
s.BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? AS DATE) 
 AND  date_start IS NOT NULL AND assignment_number  NOT  LIKE '%-%' AND date_start>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy'))
 UNION
 select distinct DateStart From PerPeriodsB10 with (nolock) where ActualTerminationDate is null and  PersonID in (
select PersonID From PerPeriodsB10
except 
select PersonID from BaseEmployeeEventBN with (nolock) )",DataLakeHRISToBase_BaseEmployeeEventBN
510,Package\SEQ - Hire Event\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
511,Package\SEQ - Hire Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Hire');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeHireEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
  ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
    END AS LastProcessedFiscalDate;  ",DataLakeHRISToBase_BaseEmployeeEventBN
512,Package\SEQ - Hire Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeHireEventBN') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",DataLakeHRISToBase_BaseEmployeeEventBN
513,Package\SEQ - Hire Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process,,,,,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
            ELSE FiscalWeekStartDate 
          END AS FiscalWeekStartDate
         FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate

 END
ELSE 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
  AND FullDate > @LastProcessedFiscalDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate
 END",DataLakeHRISToBase_BaseEmployeeEventBN
514,Package\SEQ - Hire Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",DataLakeHRISToBase_BaseEmployeeEventBN
515,Package\SEQ - Hire Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,Microsoft.ExecuteSQLTask,SQL - Get LoadStartDate,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeHireEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeeHireEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeHireEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Hire') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",DataLakeHRISToBase_BaseEmployeeEventBN
516,Package\SEQ - Hire Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeeHireEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeHRISToBase_BaseEmployeeEventBN
517,Package\SEQ - Hire Event\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
518,Package\SEQ - Hire Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeeHireEventBN'
AND IsActive = 1",DataLakeHRISToBase_BaseEmployeeEventBN
519,Package\SEQ - Hire Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeeHireEventBN';",DataLakeHRISToBase_BaseEmployeeEventBN
520,Package\SEQ - Job Change Event,STOCK:SEQUENCE,SEQ - Job Change Event,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
521,Package\SEQ - Job Change Event\SEQ - Base Data Load,STOCK:SEQUENCE,SEQ - Base Data Load,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
522,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
523,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
524,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
525,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
526,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
527,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
528,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
529,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
530,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Job Change';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_BaseEmployeeEventBN
531,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeJobChangeEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
532,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
533,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Job Change'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
534,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Job Change';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Job Change'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Job Change';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",DataLakeHRISToBase_BaseEmployeeEventBN
535,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeJobChangeEvent', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
536,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
537,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Job Change';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
538,Package\SEQ - Job Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process Updates,,,,,"SELECT distinct  effective_start_date  FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0 with (nolock) WHERE job_id in (
SELECT DISTINCT job_id FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock)
WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(?  as date) ) 
and person_id in (SELECT DISTINCT person_id FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock) 
 WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(?  as date))
and effective_end_date in(SELECT DISTINCT effective_end_date FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock) 
 WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(? as date))
UNION
SELECT DISTINCT effective_start_date FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock)
WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(?  as date) and  effective_start_date is not null
",DataLakeHRISToBase_BaseEmployeeEventBN
539,Package\SEQ - Job Change Event\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
540,Package\SEQ - Job Change Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Job Change');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeJobChangeEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
  ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
    END AS LastProcessedFiscalDate;  ",DataLakeHRISToBase_BaseEmployeeEventBN
541,Package\SEQ - Job Change Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeJobChangeEventBN') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",DataLakeHRISToBase_BaseEmployeeEventBN
542,Package\SEQ - Job Change Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process,,,,,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
            ELSE FiscalWeekStartDate 
          END AS FiscalWeekStartDate
         FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate

 END
ELSE 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
  AND FullDate > @LastProcessedFiscalDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate
 END",DataLakeHRISToBase_BaseEmployeeEventBN
543,Package\SEQ - Job Change Event\SEQ - Get List of FiscalDates to process\SQL - Get List of Days to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of Days to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",DataLakeHRISToBase_BaseEmployeeEventBN
544,Package\SEQ - Job Change Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,Microsoft.ExecuteSQLTask,SQL - Get LoadStartDate,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeJobChangeEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeeJobChangeEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeJobChangeEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Job Change') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",DataLakeHRISToBase_BaseEmployeeEventBN
545,Package\SEQ - Job Change Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeeJobChangeEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeHRISToBase_BaseEmployeeEventBN
546,Package\SEQ - Job Change Event\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
547,Package\SEQ - Job Change Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeeJobChangeEventBN'
AND IsActive = 1",DataLakeHRISToBase_BaseEmployeeEventBN
548,Package\SEQ - Job Change Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeeJobChangeEventBN';",DataLakeHRISToBase_BaseEmployeeEventBN
549,Package\SEQ - Org Change Event,STOCK:SEQUENCE,SEQ - Org Change Event,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
550,Package\SEQ - Org Change Event\SEQ - Base Data Load,STOCK:SEQUENCE,SEQ - Base Data Load,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
551,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
552,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
553,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
554,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
555,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
556,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
557,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
558,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
559,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Organization Change';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_BaseEmployeeEventBN
560,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeOrgnChangeEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
561,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
562,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Organization Change'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
563,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Organization Change';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Organization Change'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Organization Change';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",DataLakeHRISToBase_BaseEmployeeEventBN
564,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeOrgChangeEvent', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
565,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
566,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Organization Change';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
567,Package\SEQ - Org Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process Updates,,,,,"SELECT distinct  effective_start_date  FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0 with (nolock) WHERE organization_id in (
SELECT DISTINCT organization_id FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock) 
WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(? as date) ) 
and person_id in (SELECT DISTINCT person_id FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock)
 WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(?  as date))
and effective_end_date in(SELECT DISTINCT effective_end_date FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock)
 WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(? as date))
UNION
SELECT DISTINCT effective_start_date FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock) 
WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(?  as date) and  effective_start_date is not null
",DataLakeHRISToBase_BaseEmployeeEventBN
568,Package\SEQ - Org Change Event\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
569,Package\SEQ - Org Change Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Organization Change');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeOrgChangeEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
  ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
    END AS LastProcessedFiscalDate;  ",DataLakeHRISToBase_BaseEmployeeEventBN
570,Package\SEQ - Org Change Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeOrgChangeEventBN') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",DataLakeHRISToBase_BaseEmployeeEventBN
571,Package\SEQ - Org Change Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process,,,,,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
            ELSE FiscalWeekStartDate 
          END AS FiscalWeekStartDate
         FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate

 END
ELSE 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
  AND FullDate > @LastProcessedFiscalDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate
 END",DataLakeHRISToBase_BaseEmployeeEventBN
572,Package\SEQ - Org Change Event\SEQ - Get List of FiscalDates to process\SQL - Get List of Days to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of Days to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",DataLakeHRISToBase_BaseEmployeeEventBN
573,Package\SEQ - Org Change Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,Microsoft.ExecuteSQLTask,SQL - Get LoadStartDate,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeOrgChangeEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeeOrgChangeEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeOrgChangeEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Organization Change') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",DataLakeHRISToBase_BaseEmployeeEventBN
574,Package\SEQ - Org Change Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeeOrgChangeEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeHRISToBase_BaseEmployeeEventBN
575,Package\SEQ - Org Change Event\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
576,Package\SEQ - Org Change Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeeOrgChangeEventBN'
AND IsActive = 1",DataLakeHRISToBase_BaseEmployeeEventBN
577,Package\SEQ - Org Change Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeeOrgChangeEventBN';",DataLakeHRISToBase_BaseEmployeeEventBN
578,Package\SEQ - Position Change Event,STOCK:SEQUENCE,SEQ - Position Change Event,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
579,Package\SEQ - Position Change Event\SEQ - Base Data Load,STOCK:SEQUENCE,SEQ - Base Data Load,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
580,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
581,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
582,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
583,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
584,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
585,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
586,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
587,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
588,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Position Change';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_BaseEmployeeEventBN
589,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeePositionChangeEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
590,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
591,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Position Change'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
592,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Position Change';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Position Change'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Position Change';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",DataLakeHRISToBase_BaseEmployeeEventBN
593,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeePositionChangeEvent', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
594,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
595,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Position Change';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
596,Package\SEQ - Position Change Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process Updates,,,,,"SELECT distinct  effective_start_date  FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0 with (nolock) WHERE position_id in (
SELECT DISTINCT position_id FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock) 
WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(? as date) ) 
and person_id in (SELECT DISTINCT person_id FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock) 
 WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(?  as date))
and effective_end_date in(SELECT DISTINCT effective_end_date FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock) 
 WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(? as date))
UNION
SELECT DISTINCT effective_start_date FROM  HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History with (nolock) 
WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time'))) =CAST(?  as date) and  effective_start_date is not null
",DataLakeHRISToBase_BaseEmployeeEventBN
597,Package\SEQ - Position Change Event\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
598,Package\SEQ - Position Change Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Position Change');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeePositionChangeEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
  ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
    END AS LastProcessedFiscalDate;  ",DataLakeHRISToBase_BaseEmployeeEventBN
599,Package\SEQ - Position Change Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeePositionChangeEventBN') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",DataLakeHRISToBase_BaseEmployeeEventBN
600,Package\SEQ - Position Change Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process,,,,,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
            ELSE FiscalWeekStartDate 
          END AS FiscalWeekStartDate
         FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate

 END
ELSE 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
  AND FullDate > @LastProcessedFiscalDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate
 END",DataLakeHRISToBase_BaseEmployeeEventBN
601,Package\SEQ - Position Change Event\SEQ - Get List of FiscalDates to process\SQL - Get List of Days to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of Days to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",DataLakeHRISToBase_BaseEmployeeEventBN
602,Package\SEQ - Position Change Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,Microsoft.ExecuteSQLTask,SQL - Get LoadStartDate,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeePositionChangeEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeePositionChangeEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeePositionChangeEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Position Change') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",DataLakeHRISToBase_BaseEmployeeEventBN
603,Package\SEQ - Position Change Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeePositionChangeEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeHRISToBase_BaseEmployeeEventBN
604,Package\SEQ - Position Change Event\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
605,Package\SEQ - Position Change Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeePositionChangeEventBN'
AND IsActive = 1",DataLakeHRISToBase_BaseEmployeeEventBN
606,Package\SEQ - Position Change Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeePositionChangeEventBN';",DataLakeHRISToBase_BaseEmployeeEventBN
607,Package\SEQ - Rehire Event,STOCK:SEQUENCE,SEQ - Rehire Event,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
608,Package\SEQ - Rehire Event\SEQ - Base Data Load,STOCK:SEQUENCE,SEQ - Base Data Load,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
609,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
610,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
611,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
612,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
613,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
614,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
615,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
616,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
617,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Rehire';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_BaseEmployeeEventBN
618,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeRehireEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
619,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
620,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Rehire'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
621,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
 BEGIN
  DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Rehire';

  SET @DeleteCount = (SELECT @@ROWCOUNT );
  SELECT @DeleteCount AS DeleteCount;
 END 
ELSE 
 BEGIN
    
  
        
  /* Delete if data exists before loading during the reload */
  
  IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Rehire'))
   BEGIN
    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Rehire';
  
    SET @DeleteCount = (SELECT @@ROWCOUNT);
   END
  ELSE 
    
  SET @DeleteCount = (SELECT @@ROWCOUNT);
  SELECT @DeleteCount AS DeleteCount;
 END",DataLakeHRISToBase_BaseEmployeeEventBN
622,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeRehireEvent', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
623,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
624,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ? AND EventName='Rehire';

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
625,Package\SEQ - Rehire Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process Updates,,,,,"SELECT DISTINCT  date_start  FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0 s with (nolock) 
JOIN HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0 a with (nolock) ON s.period_of_service_id = a.period_of_service_id 
WHERE s.person_id IN (
SELECT DISTINCT s.person_id  FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0History s with (nolock) 
JOIN HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History a with (nolock) on s.period_of_service_id=a.period_of_service_id 
WHERE CONVERT(date, SWITCHOFFSET(s.BaseUTCEndDate, DATEPART(TZOFFSET, 
s.BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? AS DATE)
 AND  date_start IS NOT NULL AND assignment_number   LIKE '%-%'  AND date_start>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy')))
AND  date_start IS NOT NULL AND assignment_number   LIKE '%-%'  AND date_start>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy'))
UNION
SELECT DISTINCT date_start FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0History s with (nolock) 
JOIN HR_Base.dbo.PER_ALL_ASSIGNMENTS_F_B0History a with (nolock) on s.period_of_service_id=a.period_of_service_id
 WHERE CONVERT(date, SWITCHOFFSET(s.BaseUTCEndDate, DATEPART(TZOFFSET, 
s.BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? AS DATE) 
 AND  date_start IS NOT NULL AND assignment_number  LIKE '%-%'  AND date_start>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy'))
UNION
 select distinct DateStart From PerPeriodsB10 with (nolock) where ActualTerminationDate is null and  PersonID in (
select PersonID From PerPeriodsB10
except 
select PersonID from BaseEmployeeEventBN with (nolock) )
UNION
 select distinct DateStart From PerPeriodsB10 with (nolock) where DateStart>getdate()",DataLakeHRISToBase_BaseEmployeeEventBN
626,Package\SEQ - Rehire Event\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
627,Package\SEQ - Rehire Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Rehire');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeRehireEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
  ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
    END AS LastProcessedFiscalDate;  ",DataLakeHRISToBase_BaseEmployeeEventBN
628,Package\SEQ - Rehire Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
 INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
 INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeRehireEventBN') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",DataLakeHRISToBase_BaseEmployeeEventBN
629,Package\SEQ - Rehire Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process,,,,,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
            ELSE FiscalWeekStartDate 
          END AS FiscalWeekStartDate
         FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate

 END
ELSE 
 BEGIN
  SELECT DISTINCT FullDate
  FROM dbo.DimDate
  WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
  AND FullDate > @LastProcessedFiscalDate
  UNION 
  SELECT @CurrentDate AS FullDate
  ORDER BY FullDate
 END",DataLakeHRISToBase_BaseEmployeeEventBN
630,Package\SEQ - Rehire Event\SEQ - Get List of FiscalDates to process\SQL - Get List of Days to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of Days to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",DataLakeHRISToBase_BaseEmployeeEventBN
631,Package\SEQ - Rehire Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,Microsoft.ExecuteSQLTask,SQL - Get LoadStartDate,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeRehireEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeeRehireEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeRehireEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Rehire') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",DataLakeHRISToBase_BaseEmployeeEventBN
632,Package\SEQ - Rehire Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeeRehireEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeHRISToBase_BaseEmployeeEventBN
633,Package\SEQ - Rehire Event\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
634,Package\SEQ - Rehire Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeeRehireEventBN'
AND IsActive = 1",DataLakeHRISToBase_BaseEmployeeEventBN
635,Package\SEQ - Rehire Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeeRehireEventBN';",DataLakeHRISToBase_BaseEmployeeEventBN
636,Package\SEQ - Termination Event,STOCK:SEQUENCE,SEQ - Termination Event,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
637,Package\SEQ - Termination Event\SEQ - Base Data Load,STOCK:SEQUENCE,SEQ - Base Data Load,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
638,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
639,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
640,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
641,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
642,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
643,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseBN Table,,DataLakeHRISToBase_BaseEmployeeEventBN
644,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_BaseEmployeeEventBN
645,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_BaseEmployeeEventBN
646,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalUpdateDate DATE = ?

    DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalUpdateDate  and EventName='Termination';
  
    SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_BaseEmployeeEventBN
647,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



 BEGIN
  SET @BatchSplitByName = 'FiscalDate'
 END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeTerminationEventUpdates', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
648,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
649,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN where Eventname='Termination'
 and Fulldate= ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
650,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\SQL -  Delete if exists,Microsoft.ExecuteSQLTask,SQL -  Delete if exists,,,,,"DECLARE @FiscalDate DATE = ?
DECLARE @CurrentDate DATE = ?

DECLARE @DeleteCount INT = ?;
DECLARE @ISOverride BIT = ?

IF @ISOverride = 1
	BEGIN
		DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate and EventName='Termination';

		SET @DeleteCount = (SELECT @@ROWCOUNT );
		SELECT @DeleteCount AS DeleteCount;
	END 
ELSE 
	BEGIN
    
		
			   	 
		/* Delete if data exists before loading during the reload */
		
		IF (EXISTS ( SELECT 1 FROM dbo.BaseEmployeeEventBN WHERE FullDate = @FiscalDate and EventName='Termination'))
			BEGIN
				DELETE FROM dbo.BaseEmployeeEventBN WHERE FullDate =  @FiscalDate  and EventName='Termination';
		
				SET @DeleteCount = (SELECT @@ROWCOUNT);
			END
		ELSE 
				
		SET @DeleteCount = (SELECT @@ROWCOUNT);
		SELECT @DeleteCount AS DeleteCount;
	END",DataLakeHRISToBase_BaseEmployeeEventBN
651,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"DECLARE @FiscalDate DATE = ?;
DECLARE @BatchSplitByName VARCHAR(20);



	BEGIN
		SET @BatchSplitByName = 'FiscalDate'
	END


EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, 'BaseEmployeeTerminationEvent', ?,@BatchSplitByName, @FiscalDate;
GO",DataLakeHRISToBase_BaseEmployeeEventBN
652,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_BaseEmployeeEventBN
653,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get Insert Count,Microsoft.ExecuteSQLTask,SQL - Get Insert Count,,,,,"SELECT COUNT(1) AS InsertCount 
FROM dbo.BaseEmployeeEventBN
WHERE InsertAuditID = ?;

/* Set source count to Insert + Delete */

SET ? = ? + ?;",DataLakeHRISToBase_BaseEmployeeEventBN
654,Package\SEQ - Termination Event\SEQ - Base Data Load\Foreach Loop Container\SQL - Get List of days to Process Updates,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process Updates,,,,,"SELECT DISTINCT  actual_termination_date  FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0 with (nolock) WHERE person_id in (
SELECT DISTINCT person_id  FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0History with (nolock) WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? as date) ) and  actual_termination_date is not null and actual_termination_date>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy'))
UNION
SELECT DISTINCT actual_termination_date FROM  HR_Base.dbo.PER_PERIODS_OF_SERVICE_B0History with (nolock) WHERE CONVERT(date, SWITCHOFFSET(BaseUTCEndDate, DATEPART(TZOFFSET, 
BaseUTCEndDate AT TIME ZONE 'Pacific Standard Time')))=CAST(? as date) and  actual_termination_date is not null and actual_termination_date>=DATEADD(YEAR,-7,format(GETDATE(),'yyyy'))
UNION
 select distinct ActualTerminationDate From PerPeriodsB10 with (nolock) where ActualTerminationDate is not null and  PersonID in (
select PersonID From PerPeriodsB10
except 
select PersonID from BaseEmployeeEventBN with (nolock) where EventName='Termination' )",DataLakeHRISToBase_BaseEmployeeEventBN
655,Package\SEQ - Termination Event\SEQ - Get List of FiscalDates to process,STOCK:SEQUENCE,SEQ - Get List of FiscalDates to process,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
656,Package\SEQ - Termination Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog */

DECLARE @LastProcessedFiscalDate DATE;
DECLARE @FullDate DATE = (SELECT MAX(FullDate) FROM dbo.BaseEmployeeEventBN(NOLOCK) WHERE EventName='Termination');

WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeTerminationEvent') AND IsOverride = 0
      GROUP BY TaskName)

SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT CASE WHEN @FullDate IS NULL THEN ?
		ELSE ISNULL(@LastProcessedFiscalDate, '1900-01-01') 
	   END AS LastProcessedFiscalDate;	 ",DataLakeHRISToBase_BaseEmployeeEventBN
657,Package\SEQ - Termination Event\SEQ - Get List of FiscalDates to process\SQL - Get LastFiscalDate processed Successfully during Override,Microsoft.ExecuteSQLTask,SQL - Get LastFiscalDate processed Successfully during Override,,,,,"/* Get Last Fiscal Date processed successfully from AuditLog for override only */

DECLARE @BatchOverrideID BIGINT = ?;
DECLARE @NewExecutionID VARCHAR(300) = ?;
DECLARE @ExecutionIDS TABLE (ExecutionID VARCHAR(300));
DECLARE @LastProcessedFiscalDate DATE;

IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID)
BEGIN 
	INSERT INTO dbo.ETLBatchOverrideExecutions (BatchOverrideID, ExecutionID) VALUES(@BatchOverrideID, @NewExecutionID )
END 
ELSE
	INSERT INTO @ExecutionIDS 
SELECT COALESCE(ExecutionID, '' )ExecutionID FROM dbo.ETLBatchOverrideExecutions WHERE BatchOverrideID = @BatchOverrideID;

WITH LatestJobAuditByTaskName AS (
SELECT TaskName, MAX(AuditId) AS LatestJobAudit
FROM dbo.AuditLog (NOLOCK)a
JOIN @ExecutionIDS e ON a.ExecutionID = e.ExecutionID
WHERE (StatusCode = 1) AND (TaskName = 'BaseEmployeeTerminationEventBN') AND IsOverride = 1 
      GROUP BY TaskName)



SELECT @LastProcessedFiscalDate = CAST(ja.BatchSplitByValue  AS DATE) 
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId ;

SELECT ISNULL(@LastProcessedFiscalDate, '1900-01-01') AS LastProcessedFiscalDate
",DataLakeHRISToBase_BaseEmployeeEventBN
658,Package\SEQ - Termination Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process,,,,,"DECLARE @StartDate DATE = (SELECT CASE WHEN FullDate > FiscalWeekStartDate THEN DATEADD(DAY, 7, FiscalWeekStartDate)
									   ELSE FiscalWeekStartDate 
								  END AS FiscalWeekStartDate
						   FROM dbo.DimDate WHERE FullDate = ?)
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE);


IF (@LastProcessedFiscalDate IS NULL) 
	BEGIN
		SELECT DISTINCT FullDate
		FROM dbo.DimDate
		WHERE FullDate BETWEEN  @StartDate AND @CurrentDate
		UNION 
		SELECT @CurrentDate AS FullDate
		ORDER BY FullDate

	END
ELSE 
	BEGIN
		SELECT DISTINCT FullDate
		FROM dbo.DimDate
		WHERE (FullDate BETWEEN  @StartDate AND @CurrentDate)
		AND FullDate > @LastProcessedFiscalDate
		UNION 
		SELECT @CurrentDate AS FullDate
		ORDER BY FullDate
	END",DataLakeHRISToBase_BaseEmployeeEventBN
659,Package\SEQ - Termination Event\SEQ - Get List of FiscalDates to process\SQL - Get List of days to Process for override,Microsoft.ExecuteSQLTask,SQL - Get List of days to Process for override,,,,,"DECLARE @OverrideStartDate DATE = ?;
DECLARE @OverrideEndDate DATE = ?;
DECLARE @LastProcessedFiscalDate DATE = CAST(NULLIF(?, '1900-01-01') AS DATE); 
DECLARE @CurrentDate DATE = CAST(? AS DATE);
DECLARE @Weekday VARCHAR(15) = (SELECT DATENAME(WEEKDAY, @OverrideEndDate));
DECLARE @FiscalWeekStartDate DATE = (SELECT FiscalWeekStartDate FROM dbo.DimDate WHERE FullDate = @CurrentDate)

IF (@Weekday <> 'Sunday' AND @OverrideEndDate > @FiscalWeekStartDate)
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    UNION 
    SELECT @CurrentDate AS FullDate 
    ORDER BY FullDate 
   END
 END 
ELSE 
 BEGIN
  IF (@LastProcessedFiscalDate IS NULL)
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE FullDate BETWEEN @OverrideStartDate AND @OverrideEndDate
   END
  ELSE 
   BEGIN
    SELECT DISTINCT FullDate 
    FROM dbo.DimDate
    WHERE (FullDate  BETWEEN @OverrideStartDate AND @OverrideEndDate)
    AND FullDate > @LastProcessedFiscalDate
    ORDER BY FullDate 
   END
 END ",DataLakeHRISToBase_BaseEmployeeEventBN
660,Package\SEQ - Termination Event\SEQ - Get List of FiscalDates to process\SQL - Get LoadStartDate,Microsoft.ExecuteSQLTask,SQL - Get LoadStartDate,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeTerminationEventBN')
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName,LastProcessedDate) VALUES ('BaseEmployeeTerminationEventBN',?)
 END


DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = 'BaseEmployeeTerminationEventBN');
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.BaseEmployeeEventBN where eventname='Termination') ;

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = ?;

SELECT @LastProcessedDate AS LoadStartDate;",DataLakeHRISToBase_BaseEmployeeEventBN
661,Package\SEQ - Termination Event\SEQ - Get List of FiscalDates to process\SQL - Get Start End Date while Overriding Batch,Microsoft.ExecuteSQLTask,SQL - Get Start End Date while Overriding Batch,,,,,"DECLARE @OverrideStartDate DATE;
DECLARE @OverrideEndDate DATE;
DECLARE @BatchOverrideID BIGINT;
DECLARE @IsOverride BIT;
DECLARE @PackageName VARCHAR(50) = 'BaseEmployeeTerminationEventBN';

IF EXISTS
(
    SELECT 1
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
)
BEGIN
    SELECT TOP 1
           @BatchOverrideID = BatchOverrideID,
           @OverrideStartDate = OverrideStartDate,
           @OverrideEndDate = OverrideEndDate
    FROM dbo.ETLBatchOverride
    WHERE TaskName = @PackageName
          AND IsActive = 1
    ORDER BY CreatedDate DESC;
    SET @IsOverride = 1;
END;
ELSE
BEGIN
    SET @OverrideStartDate =
    (
        SELECT LastProcessedDate
        FROM dbo.ETLBatchControl
        WHERE TableName = @PackageName
    );
    SET @OverrideEndDate = GETDATE();
    SET @IsOverride = 0;
END;
SELECT @BatchOverrideID AS BatchOverrideID,
       @OverrideStartDate AS OverrideStartDate,
       @OverrideEndDate AS OverrideEndDate,
       @IsOverride AS IsOverride;
",DataLakeHRISToBase_BaseEmployeeEventBN
662,Package\SEQ - Termination Event\SEQ - Update Parent Audit Log,STOCK:SEQUENCE,SEQ - Update Parent Audit Log,,,,,,DataLakeHRISToBase_BaseEmployeeEventBN
663,Package\SEQ - Termination Event\SEQ - Update Parent Audit Log\SQL - Update ETLBatchOverride,Microsoft.ExecuteSQLTask,SQL - Update ETLBatchOverride,,,,,"UPDATE dbo.ETLBatchOverride
SET IsActive = 0
         , LastProcessedDate = ?
WHERE TaskName = 'BaseEmployeeTerminationEventBN'
AND IsActive = 1",DataLakeHRISToBase_BaseEmployeeEventBN
664,Package\SEQ - Termination Event\SEQ - Update Parent Audit Log\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE dbo.ETLBatchControl
SET LastProcessedDate = ?
, Status = 'Success'
WHERE TableName = 'BaseEmployeeTerminationEventBN';",DataLakeHRISToBase_BaseEmployeeEventBN
665,Package\SQL -  Get Min Date From Base B0 Tables,Microsoft.ExecuteSQLTask,SQL -  Get Min Date From Base B0 Tables,,,,,"With MinDateOfBaseTables
As (
Select Min(effective_end_date) as MinDate From PER_ALL_ASSIGNMENTS_F_B0 -- 2016-01-01
Union
Select Min(effective_end_date) From PER_ALL_PEOPLE_F_B0 -- 2016-01-01
Union
Select Min(actual_termination_date ) From PER_PERIODS_OF_SERVICE_B0 -- 2016-01-01
) Select Min(MinDate) as [MinDateOfBaseTables] From MinDateOfBaseTables",DataLakeHRISToBase_BaseEmployeeEventBN
666,Package,Microsoft.Package,DataLakeHRISToBaseParent,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
667,Package\Parfallel Execution - I,STOCK:SEQUENCE,Parfallel Execution - I,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
668,Package\Parfallel Execution - I\FND_FLEX_VALUES_B0,Microsoft.ExecutePackageTask,FND_FLEX_VALUES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
669,Package\Parfallel Execution - I\FND_FLEX_VALUES_TL_B0,Microsoft.ExecutePackageTask,FND_FLEX_VALUES_TL_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
670,Package\Parfallel Execution - I\FND_FLEX_VALUE_SETS_B0,Microsoft.ExecutePackageTask,FND_FLEX_VALUE_SETS_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
671,Package\Parfallel Execution - I\FND_ID_FLEX_STRUCTURES_TL_B0,Microsoft.ExecutePackageTask,FND_ID_FLEX_STRUCTURES_TL_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
672,Package\Parfallel Execution - I\HR_ALL_ORGANIZATION_UNITS_B0,Microsoft.ExecutePackageTask,HR_ALL_ORGANIZATION_UNITS_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
673,Package\Parfallel Execution - I\HR_LOCATIONS_ALL_B0,Microsoft.ExecutePackageTask,HR_LOCATIONS_ALL_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
674,Package\Parfallel Execution - I\PAY_GRADE_RULES_F_B0,Microsoft.ExecutePackageTask,PAY_GRADE_RULES_F_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
675,Package\Parfallel Execution - I\PAY_PEOPLE_GROUPS_B0,Microsoft.ExecutePackageTask,PAY_PEOPLE_GROUPS_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
676,Package\Parfallel Execution - I\PER_ASSIGNMENT_STATUS_TYPES_B0,Microsoft.ExecutePackageTask,PER_ASSIGNMENT_STATUS_TYPES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
677,Package\Parfallel Execution - I\PER_GRADES_B0,Microsoft.ExecutePackageTask,PER_GRADES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
678,Package\Parfallel Execution - I\PER_JOBS_B0,Microsoft.ExecutePackageTask,PER_JOBS_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
679,Package\Parfallel Execution - I\PER_PAY_BASES_B0,Microsoft.ExecutePackageTask,PER_PAY_BASES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
680,Package\Parfallel Execution - I\PER_PERSON_ANALYSES_B0,Microsoft.ExecutePackageTask,PER_PERSON_ANALYSES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
681,Package\Parfallel Execution - I\PER_PERSON_TYPES_B0,Microsoft.ExecutePackageTask,PER_PERSON_TYPES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
682,Package\Parfallel Execution - I\PER_QUALIFICATION_TYPES_B0,Microsoft.ExecutePackageTask,PER_QUALIFICATION_TYPES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
683,Package\Parfallel Execution - II,STOCK:SEQUENCE,Parfallel Execution - II,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
684,Package\Parfallel Execution - II\AP_SUPPLIERS_B0,Microsoft.ExecutePackageTask,AP_SUPPLIERS_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
685,Package\Parfallel Execution - II\FND_LOOKUP_VALUES_B0,Microsoft.ExecutePackageTask,FND_LOOKUP_VALUES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
686,Package\Parfallel Execution - II\HR_ALL_POSITIONS_F_B0,Microsoft.ExecutePackageTask,HR_ALL_POSITIONS_F_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
687,Package\Parfallel Execution - II\PER_ADDRESSES_B0,Microsoft.ExecutePackageTask,PER_ADDRESSES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
688,Package\Parfallel Execution - II\PER_ANALYSIS_CRITERIA_B0,Microsoft.ExecutePackageTask,PER_ANALYSIS_CRITERIA_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
689,Package\Parfallel Execution - II\PER_PAY_PROPOSALS_B0,Microsoft.ExecutePackageTask,PER_PAY_PROPOSALS_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
690,Package\Parfallel Execution - II\PER_PERFORMANCE_REVIEWS_B0,Microsoft.ExecutePackageTask,PER_PERFORMANCE_REVIEWS_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
691,Package\Parfallel Execution - II\PER_PERIODS_OF_PLACEMENT_B0,Microsoft.ExecutePackageTask,PER_PERIODS_OF_PLACEMENT_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
692,Package\Parfallel Execution - II\PER_PERIODS_OF_SERVICE_B0,Microsoft.ExecutePackageTask,PER_PERIODS_OF_SERVICE_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
693,Package\Parfallel Execution - II\PER_PHONES_B0,Microsoft.ExecutePackageTask,PER_PHONES_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
694,Package\Parfallel Execution - II\PER_QUALIFICATIONS_B0,Microsoft.ExecutePackageTask,PER_QUALIFICATIONS_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
695,Package\Sequential Execution,STOCK:SEQUENCE,Sequential Execution,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
696,Package\Sequential Execution\Assignments,STOCK:SEQUENCE,Assignments,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
697,Package\Sequential Execution\Assignments\PER_ALL_ASSIGNMENTS_F_B0,Microsoft.ExecutePackageTask,PER_ALL_ASSIGNMENTS_F_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
698,Package\Sequential Execution\People,STOCK:SEQUENCE,People,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
699,Package\Sequential Execution\People\PER_ALL_PEOPLE_F_B0,Microsoft.ExecutePackageTask,PER_ALL_PEOPLE_F_B0,,,,,,DataLakeHRISToBase_DataLakeHRISToBaseParent
700,Package,Microsoft.Package,EventBN,,,,,,DataLakeHRISToBase_EventBN
701,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_EventBN
702,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Compare Values,,DataLakeHRISToBase_EventBN
703,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - InsertAuditID Column,,DataLakeHRISToBase_EventBN
704,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Insert,,DataLakeHRISToBase_EventBN
705,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",DST - Update,,DataLakeHRISToBase_EventBN
706,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,DataLakeHRISToBase_EventBN
707,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_EventBN
708,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - tfnHR_BaseGenerate_EventBN,,DataLakeHRISToBase_EventBN
709,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_EventBN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,DataLakeHRISToBase_EventBN
710,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_EventBN
711,Package\Base - Data Load\SQL - End Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - End Base Load Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_EventBN
712,Package,Microsoft.Package,FlexValuesLookupB10,,,,,,DataLakeHRISToBase_FlexValuesLookupB10
713,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_FlexValuesLookupB10
714,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table Insert,,DataLakeHRISToBase_FlexValuesLookupB10
715,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",DST - Create new Active Row,,DataLakeHRISToBase_FlexValuesLookupB10
716,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",DST - Update Row to Historical,,DataLakeHRISToBase_FlexValuesLookupB10
717,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DataLakeHRISToBase_FlexValuesLookupB10
718,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count SCD2,,DataLakeHRISToBase_FlexValuesLookupB10
719,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Reject Count,,DataLakeHRISToBase_FlexValuesLookupB10
720,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Split - Compare Hash,,DataLakeHRISToBase_FlexValuesLookupB10
721,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_FlexValuesLookupB10
722,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Target Lookup,,DataLakeHRISToBase_FlexValuesLookupB10
723,Package\Base - Data Load\DFT - Load new records From B0 into B10,Microsoft.Pipeline,DFT - Load new records From B0 into B10,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,DataLakeHRISToBase_FlexValuesLookupB10
724,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FlexValuesLookupB10
725,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FlexValuesLookupB10
726,Package\Base - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"DECLARE @TableName varchar(30) = 'FlexValuesLookupB10'
DECLARE @LastProcessedDate datetime
DECLARE @BaseCreatedDate datetime


IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @TableName)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (@TableName)
	END

UPDATE dbo.ETLBatchControl SET [Status] = 'In Process' WHERE TableName = @TableName

SELECT @LastProcessedDate = LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @TableName
SELECT @BaseCreatedDate = MAX(BaseCreatedDate) FROM dbo.FlexValuesLookupB10

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
	BEGIN
		SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));
	END

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeHRISToBase_FlexValuesLookupB10
727,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"UPDATE tgt SET
	Deleted			= 'Y',
	BaseEndDate		= GETDATE()
FROM
	dbo.FlexValuesLookupB10 AS tgt
WHERE NOT EXISTS
	(
		SELECT 1
		FROM
			dbo.FND_FLEX_VALUES_B0 AS fv WITH (NOLOCK)
			INNER JOIN
			dbo.FND_FLEX_VALUE_SETS_B0 AS fvs WITH (NOLOCK)
				ON	fv.flex_value_set_id = fvs.flex_value_set_id
			INNER JOIN
			dbo.FND_FLEX_VALUES_TL_B0 AS fvtl WITH (NOLOCK)
				ON	fv.flex_value_id = fvtl.flex_value_id
		WHERE
			fvs.flex_value_set_name	= tgt.FlexValueSetName AND
			fv.flex_value		= tgt.FlexValue
	)
	AND tgt.RowStatus				= 'A'
	AND ISNULL(tgt.Deleted, '')			!= 'Y'
	;

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeHRISToBase_FlexValuesLookupB10
728,Package\Base - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"DECLARE @Tablename varchar(30) = 'FlexValuesLookupB10'

UPDATE dbo.ETLBatchControl SET
	LastProcessedDate = GETDATE(),
	[Status] = 'Success'
WHERE
	Tablename = @Tablename",DataLakeHRISToBase_FlexValuesLookupB10
729,Package,Microsoft.Package,FND_FLEX_VALUES_B0,,,,,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
730,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
731,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
732,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
733,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
734,Package\Base - Data Load\SQL - Begin Base Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUES_B0
735,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUES_B0
736,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[FND_FLEX_VALUES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[FND_FLEX_VALUES_B0Landing] landing
    WHERE base.[flex_value_id] = landing.[flex_value_id]
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_FND_FLEX_VALUES_B0
737,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_FLEX_VALUES_B0
738,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base SET 
	base.[flex_value_set_id] = landing.[flex_value_set_id],
	base.[flex_value] = landing.[flex_value],
	base.[last_update_date] = landing.[last_update_date],
	base.[last_updated_by] = landing.[last_updated_by],
	base.[creation_date] = landing.[creation_date],
	base.[created_by] = landing.[created_by],
	base.[last_update_login] = landing.[last_update_login],
	base.[enabled_flag] = landing.[enabled_flag],
	base.[summary_flag] = landing.[summary_flag],
	base.[start_date_active] = landing.[start_date_active],
	base.[end_date_active] = landing.[end_date_active],
	base.[parent_flex_value_low] = landing.[parent_flex_value_low],
	base.[parent_flex_value_high] = landing.[parent_flex_value_high],
	base.[structured_hierarchy_level] = landing.[structured_hierarchy_level],
	base.[hierarchy_level] = landing.[hierarchy_level],
	base.[compiled_value_attributes] = landing.[compiled_value_attributes],
	base.[value_category] = landing.[value_category],
	base.[attribute1] = landing.[attribute1],
	base.[attribute2] = landing.[attribute2],
	base.[attribute3] = landing.[attribute3],
	base.[attribute4] = landing.[attribute4],
	base.[attribute5] = landing.[attribute5],
	base.[attribute6] = landing.[attribute6],
	base.[attribute7] = landing.[attribute7],
	base.[attribute8] = landing.[attribute8],
	base.[attribute9] = landing.[attribute9],
	base.[attribute10] = landing.[attribute10],
	base.[attribute11] = landing.[attribute11],
	base.[attribute12] = landing.[attribute12],
	base.[attribute13] = landing.[attribute13],
	base.[attribute14] = landing.[attribute14],
	base.[attribute15] = landing.[attribute15],
	base.[attribute16] = landing.[attribute16],
	base.[attribute17] = landing.[attribute17],
	base.[attribute18] = landing.[attribute18],
	base.[attribute19] = landing.[attribute19],
	base.[attribute20] = landing.[attribute20],
	base.[attribute21] = landing.[attribute21],
	base.[attribute22] = landing.[attribute22],
	base.[attribute23] = landing.[attribute23],
	base.[attribute24] = landing.[attribute24],
	base.[attribute25] = landing.[attribute25],
	base.[attribute26] = landing.[attribute26],
	base.[attribute27] = landing.[attribute27],
	base.[attribute28] = landing.[attribute28],
	base.[attribute29] = landing.[attribute29],
	base.[attribute30] = landing.[attribute30],
	base.[attribute31] = landing.[attribute31],
	base.[attribute32] = landing.[attribute32],
	base.[attribute33] = landing.[attribute33],
	base.[attribute34] = landing.[attribute34],
	base.[attribute35] = landing.[attribute35],
	base.[attribute36] = landing.[attribute36],
	base.[attribute37] = landing.[attribute37],
	base.[attribute38] = landing.[attribute38],
	base.[attribute39] = landing.[attribute39],
	base.[attribute40] = landing.[attribute40],
	base.[attribute41] = landing.[attribute41],
	base.[attribute42] = landing.[attribute42],
	base.[attribute43] = landing.[attribute43],
	base.[attribute44] = landing.[attribute44],
	base.[attribute45] = landing.[attribute45],
	base.[attribute46] = landing.[attribute46],
	base.[attribute47] = landing.[attribute47],
	base.[attribute48] = landing.[attribute48],
	base.[attribute49] = landing.[attribute49],
	base.[attribute50] = landing.[attribute50],
	base.[attribute_sort_order] = landing.[attribute_sort_order],
	base.[zd_edition_name] = landing.[zd_edition_name],
	base.[datalakeinserttime] = landing.[datalakeinserttime],
	base.[RowHash] = landing.[RowHash],
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[FND_FLEX_VALUES_B0] base
JOIN [HR_Landing].dbo.[FND_FLEX_VALUES_B0Landing] landing ON base.[flex_value_id] = landing.[flex_value_id]
WHERE base.[RowHash] != landing.[RowHash];

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_FLEX_VALUES_B0
739,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
740,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
741,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
742,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
743,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
744,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
745,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
746,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
747,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
748,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_FND_FLEX_VALUES_B0
749,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUES_B0
750,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUES_B0
751,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_FLEX_VALUES_B0
752,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_FND_FLEX_VALUES_B0
753,Package\Landing - Data Load\SQL - Update RowHash Column,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [flex_value_id],
HASHBYTES('MD5',
(SELECT
	[flex_value_set_id],
	[flex_value_id],
	[flex_value],
	[enabled_flag],
	[summary_flag],
	[start_date_active],
	[end_date_active],
	[parent_flex_value_low],
	[parent_flex_value_high],
	[structured_hierarchy_level],
	[hierarchy_level],
	[compiled_value_attributes],
	[value_category],
	[attribute1],
	[attribute2],
	[attribute3],
	[attribute4],
	[attribute5],
	[attribute6],
	[attribute7],
	[attribute8],
	[attribute9],
	[attribute10],
	[attribute11],
	[attribute12],
	[attribute13],
	[attribute14],
	[attribute15],
	[attribute16],
	[attribute17],
	[attribute18],
	[attribute19],
	[attribute20],
	[attribute21],
	[attribute22],
	[attribute23],
	[attribute24],
	[attribute25],
	[attribute26],
	[attribute27],
	[attribute28],
	[attribute29],
	[attribute30],
	[attribute31],
	[attribute32],
	[attribute33],
	[attribute34],
	[attribute35],
	[attribute36],
	[attribute37],
	[attribute38],
	[attribute39],
	[attribute40],
	[attribute41],
	[attribute42],
	[attribute43],
	[attribute44],
	[attribute45],
	[attribute46],
	[attribute47],
	[attribute48],
	[attribute49],
	[attribute50],
	[attribute_sort_order]
	FOR XML RAW)) AS RowHash
FROM [dbo].FND_FLEX_VALUES_B0Landing l)src
JOIN [dbo].FND_FLEX_VALUES_B0Landing TARGET ON src.[flex_value_id] = TARGET.[flex_value_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_FLEX_VALUES_B0
754,Package,Microsoft.Package,FND_FLEX_VALUES_TL_B0,,,,,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
755,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
756,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BASE table,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
757,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
758,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
759,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
760,Package\Base - Data Load\SQL - End Base Audit Log,Microsoft.ExecuteSQLTask,SQL - End Base Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
761,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.FND_FLEX_VALUES_TL_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.FND_FLEX_VALUES_TL_B0Landing landing
    WHERE base.flex_value_id = landing.flex_value_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
762,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
763,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
SET base.flex_value_id = landing.flex_value_id,
    base.language = landing.language,
    base.last_update_date = landing.last_update_date,
    base.last_updated_by = landing.last_updated_by,
    base.creation_date = landing.creation_date,
    base.created_by = landing.created_by,
    base.last_update_login = landing.last_update_login,
    base.description = landing.description,
    base.source_lang = landing.source_lang,
    base.flex_value_meaning = landing.flex_value_meaning,
    base.zd_edition_name = landing.zd_edition_name,
    base.[datalakeinserttime] = landing.[datalakeinserttime],
    base.[RowHash] = landing.[RowHash],
    base.[BaseCreatedDate] = GETDATE(),
    base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[FND_FLEX_VALUES_TL_B0] base
    JOIN [HR_Landing].dbo.[FND_FLEX_VALUES_TL_B0Landing] landing
        ON base.flex_value_id = landing.flex_value_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
764,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
765,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
766,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
767,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
768,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
769,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
770,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
771,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - DataLake,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
772,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
773,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All other Error Records,,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
774,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
775,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
776,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
777,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
778,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE TARGET 
SET target.RowHash=SRC.RowHash
FROM 
(SELECT flex_value_id,
HASHBYTES('MD5',


(SELECT  flex_value_id
,language

,description
,source_lang
,flex_value_meaning
zd_edition_name
 FOR XML RAW)) AS RowHash

  FROM [HR_Landing].[dbo].[FND_FLEX_VALUES_TL_B0Landing]) SRC
  JOIN [HR_Landing].[dbo].[FND_FLEX_VALUES_TL_B0Landing] Target ON SRC.flex_value_id=Target.flex_value_id


   SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_FLEX_VALUES_TL_B0
779,Package,Microsoft.Package,FND_FLEX_VALUE_SETS_B0,,,,,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
780,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
781,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
782,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
783,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
784,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
785,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
786,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[FND_FLEX_VALUE_SETS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[FND_FLEX_VALUE_SETS_B0Landing] landing
    WHERE base.flex_value_set_id = landing.flex_value_set_id   
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
787,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
788,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET 
       base.flex_value_set_id = landing.flex_value_set_id
      ,base.flex_value_set_name = landing.flex_value_set_name
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.creation_date = landing.creation_date
      ,base.created_by = landing.created_by
      ,base.last_update_login = landing.last_update_login
      ,base.validation_type = landing.validation_type
      ,base.protected_flag = landing.protected_flag
      ,base.security_enabled_flag = landing.security_enabled_flag
      ,base.longlist_flag = landing.longlist_flag
      ,base.format_type = landing.format_type
      ,base.maximum_size= landing.maximum_size
      ,base.alphanumeric_allowed_flag = landing.alphanumeric_allowed_flag
      ,base.uppercase_only_flag = landing.uppercase_only_flag
      ,base.numeric_mode_enabled_flag = landing.numeric_mode_enabled_flag
      ,base.description = landing.description
      ,base.dependant_default_value = landing.dependant_default_value
      ,base.dependant_default_meaning = landing.dependant_default_meaning
      ,base.parent_flex_value_set_id = landing.parent_flex_value_set_id
      ,base.minimum_value = landing.minimum_value
      ,base.maximum_value = landing.maximum_value
      ,base.number_precision = landing.number_precision
      ,base.zd_edition_name = landing.zd_edition_name
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[FND_FLEX_VALUE_SETS_B0] base
JOIN [HR_Landing].dbo.[FND_FLEX_VALUE_SETS_B0Landing] landing ON base.flex_value_set_id = landing.flex_value_set_id 
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
789,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
790,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
791,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
792,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
793,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
794,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
795,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
796,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
797,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
798,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
799,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
800,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
801,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
802,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
803,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [flex_value_set_id],
HASHBYTES('MD5',
(SELECT [flex_value_set_id]
      ,[flex_value_set_name]
      ,[validation_type]
      ,[protected_flag]
      ,[security_enabled_flag]
      ,[longlist_flag]
      ,[format_type]
      ,[maximum_size]
      ,[alphanumeric_allowed_flag]
      ,[uppercase_only_flag]
      ,[numeric_mode_enabled_flag]
      ,[description]
      ,[dependant_default_value]
      ,[dependant_default_meaning]
      ,[parent_flex_value_set_id]
      ,[minimum_value]
      ,[maximum_value]
      ,[number_precision]
      ,[zd_edition_name] FOR XML RAW)) AS RowHash
FROM [dbo].FND_FLEX_VALUE_SETS_B0Landing l)src
JOIN [dbo].FND_FLEX_VALUE_SETS_B0Landing TARGET ON src.[flex_value_set_id] = TARGET.[flex_value_set_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_FLEX_VALUE_SETS_B0
804,Package,Microsoft.Package,FND_ID_FLEX_STRUCTURES_TL_B0,,,,,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
805,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
806,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
807,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
808,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
809,Package\Base - Data Load\SQL - Begin Base Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
810,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
811,Package\Base - Data Load\SQL - Soft Delete Records,Microsoft.ExecuteSQLTask,SQL - Soft Delete Records,,,,,"DELETE FROM base
FROM dbo.[FND_ID_FLEX_STRUCTURES_TL_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[FND_ID_FLEX_STRUCTURES_TL_B0Landing] landing
    WHERE
	base.[application_id] = landing.[application_id] AND
	base.[id_flex_code] = landing.[id_flex_code] AND
	base.[id_flex_num] = landing.[id_flex_num] AND
	base.[language] = landing.[language]
);

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
812,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
813,Package\Base - Data Load\SQL - Update Modified Records,Microsoft.ExecuteSQLTask,SQL - Update Modified Records,,,,,"UPDATE base SET 
	base.[last_update_date] = landing.[last_update_date],
	base.[last_updated_by] = landing.[last_updated_by],
	base.[creation_date] = landing.[creation_date],
	base.[created_by] = landing.[created_by],
	base.[last_update_login] = landing.[last_update_login],
	base.[id_flex_structure_name] = landing.[id_flex_structure_name],
	base.[description] = landing.[description],
	base.[shorthand_prompt] = landing.[shorthand_prompt],
	base.[source_lang] = landing.[source_lang],
	base.[zd_edition_name] = landing.[zd_edition_name],
	base.[datalakeinserttime] = landing.[datalakeinserttime],
	base.[RowHash] = landing.[RowHash],
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = suser_sname()
FROM
	[HR_Base].dbo.[FND_ID_FLEX_STRUCTURES_TL_B0] base
	INNER JOIN
	[HR_Landing].dbo.[FND_ID_FLEX_STRUCTURES_TL_B0Landing] landing
		ON	base.[application_id] = landing.[application_id] AND
			base.[id_flex_code] = landing.[id_flex_code] AND
			base.[id_flex_num] = landing.[id_flex_num] AND
			base.[language] = landing.[language]
WHERE
	base.[RowHash] != landing.[RowHash];

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
814,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
815,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
816,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
817,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
818,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
819,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
820,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
821,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
822,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
823,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
824,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
825,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
826,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
827,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
828,Package\Landing - Data Load\SQL - Update RowHash Column,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [application_id], [id_flex_code], [id_flex_num], [language], 
HASHBYTES('MD5',
(SELECT
	[application_id],
	[id_flex_code],
	[id_flex_num],
	[language],
	[id_flex_structure_name],
	[description],
	[shorthand_prompt],
	[source_lang]
	FOR XML RAW)) AS RowHash
FROM [dbo].FND_ID_FLEX_STRUCTURES_TL_B0Landing l) src
JOIN [dbo].FND_ID_FLEX_STRUCTURES_TL_B0Landing target 
	ON	src.[application_id] = target.[application_id] AND
		src.[id_flex_code] = target.[id_flex_code] AND
		src.[id_flex_num] = target.[id_flex_num] AND
		src.[language] = target.[language];

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_ID_FLEX_STRUCTURES_TL_B0
829,Package,Microsoft.Package,FND_LOGINS_B0,,,,,,DataLakeHRISToBase_FND_LOGINS_B0
830,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_FND_LOGINS_B0
831,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_FND_LOGINS_B0
832,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_FND_LOGINS_B0
833,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_FND_LOGINS_B0
834,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_LOGINS_B0
835,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_LOGINS_B0
836,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.Fnd_Logins_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.Fnd_Logins_B0PreLanding landing
    WHERE base.Login_id = landing.Login_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_FND_LOGINS_B0
837,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_LOGINS_B0
838,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
SET base.[Login_id] = landing.[Login_id],
    base.[User_id] = landing.[User_id],
    base.[Start_time] = landing.[Start_time],
    base.[End_time] = landing.[End_time],
    base.[pid] = landing.[pid],
    base.[Spid] = landing.[Spid],
    base.[Terminal_id] = landing.[Terminal_id],
    base.[Login_name] = landing.[Login_name],
    base.[Session_number] = landing.[Session_number],
    base.[Submitted_login_id] = landing.[Submitted_login_id],
    base.[Serial#] = landing.[Serial#],
    base.[process_spid] = landing.[process_spid],
    base.[login_type] = landing.[login_type],
    base.[datalakeinserttime] = landing.[datalakeinserttime],
    base.[RowHash] = landing.[RowHash],
    base.[BaseCreatedDate] = GETDATE(),
    base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[Fnd_Logins_B0] base
    JOIN [HR_Landing].dbo.[Fnd_Logins_B0Landing] landing
        ON base.Login_id = landing.Login_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_LOGINS_B0
839,Package\First landing - Data Load,STOCK:SEQUENCE,First landing - Data Load,,,,,,DataLakeHRISToBase_FND_LOGINS_B0
840,Package\First landing - Data Load\DFT - Load the Pre Landing table,Microsoft.Pipeline,DFT - Load the Pre Landing table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FND_LOGINS_B0PreLanding,,DataLakeHRISToBase_FND_LOGINS_B0
841,Package\First landing - Data Load\DFT - Load the Pre Landing table,Microsoft.Pipeline,DFT - Load the Pre Landing table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_FND_LOGINS_B0
842,Package\First landing - Data Load\DFT - Load the Pre Landing table,Microsoft.Pipeline,DFT - Load the Pre Landing table,Attunity.SSISODBCSrc,,ODBC Source,SRC - hris-applsys-fnd_logins,,DataLakeHRISToBase_FND_LOGINS_B0
843,Package\First landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_LOGINS_B0
844,Package\First landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_LOGINS_B0
845,Package\First landing - Data Load\SQL - Truncate First Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate First Landing Table,,,,,User::vPreLandingTruncateQuery,DataLakeHRISToBase_FND_LOGINS_B0
846,Package\First landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE TARGET 
SET target.RowHash=SRC.RowHash
FROM 
(SELECT Login_id,
HASHBYTES('MD5',
(SELECT  [Login_id]
      ,[User_id]
      ,[Start_time]
      ,[End_time]
      ,[pid]
      ,[Spid]
      ,[Terminal_id]
      ,[Login_name]
      ,[Session_number]
      ,[Submitted_login_id]
      ,[Serial#]
      ,[process_spid]
      ,[login_type] FOR XML RAW)) AS RowHash
      
  FROM [dbo].[FND_LOGINS_B0PreLanding]
) SRC
    JOIN [dbo].[FND_LOGINS_B0PreLanding] Target
        ON SRC.Login_id = Target.Login_id;
           
SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_LOGINS_B0
847,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_FND_LOGINS_B0
848,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_FND_LOGINS_B0
849,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_FND_LOGINS_B0
850,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_FND_LOGINS_B0
851,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST Landing,,DataLakeHRISToBase_FND_LOGINS_B0
852,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - RejectCount,,DataLakeHRISToBase_FND_LOGINS_B0
853,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_FND_LOGINS_B0
854,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FND_LOGINS_B0PreLanding,,DataLakeHRISToBase_FND_LOGINS_B0
855,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_FND_LOGINS_B0
856,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All Error Records,,DataLakeHRISToBase_FND_LOGINS_B0
857,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_LOGINS_B0
858,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_LOGINS_B0
859,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_LOGINS_B0
860,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_FND_LOGINS_B0
861,Package,Microsoft.Package,FND_LOOKUP_VALUES_B0,,,,,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
862,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
863,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Add Columns,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
864,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
865,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
866,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
867,Package\Base - Data Load\SQL - Begin Base Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
868,Package\Base - Data Load\SQL - End Base Audit Log,Microsoft.ExecuteSQLTask,SQL - End Base Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
869,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"UPDATE dbo.[FND_LOOKUP_VALUES_B0] SET deleted= 'Y'
WHERE RowHash NOT IN
(
    SELECT RowHash
    FROM [HR_Landing].dbo.[FND_LOOKUP_VALUES_B0Landing]
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
870,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
871,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base SET 
	base.[language] = landing.[language],
	base.[meaning] = landing.[meaning],
	base.[description] = landing.[description],
	base.[enabled_flag] = landing.[enabled_flag],
	base.[start_date_active] = landing.[start_date_active],
	base.[end_date_active] = landing.[end_date_active],
	base.[created_by] = landing.[created_by],
	base.[creation_date] = landing.[creation_date],
	base.[last_updated_by] = landing.[last_updated_by],
	base.[last_update_login] = landing.[last_update_login],
	base.[last_update_date] = landing.[last_update_date],
	base.[source_lang] = landing.[source_lang],
	base.[security_group_id] = landing.[security_group_id],
	base.[territory_code] = landing.[territory_code],
	base.[attribute_category] = landing.[attribute_category],
	base.[attribute1] = landing.[attribute1],
	base.[attribute2] = landing.[attribute2],
	base.[attribute3] = landing.[attribute3],
	base.[attribute4] = landing.[attribute4],
	base.[attribute5] = landing.[attribute5],
	base.[attribute6] = landing.[attribute6],
	base.[attribute7] = landing.[attribute7],
	base.[attribute8] = landing.[attribute8],
	base.[attribute9] = landing.[attribute9],
	base.[attribute10] = landing.[attribute10],
	base.[attribute11] = landing.[attribute11],
	base.[attribute12] = landing.[attribute12],
	base.[attribute13] = landing.[attribute13],
	base.[attribute14] = landing.[attribute14],
	base.[attribute15] = landing.[attribute15],
	base.[tag] = landing.[tag],
	base.[leaf_node] = landing.[leaf_node],
	base.[zd_edition_name] = landing.[zd_edition_name],
	base.[datalakeinserttime] = landing.[datalakeinserttime],
	base.[RowHash] = landing.[RowHash],
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[FND_LOOKUP_VALUES_B0] base
JOIN [HR_Landing].dbo.[FND_LOOKUP_VALUES_B0Landing] landing 
	ON base.[lookup_type] COLLATE Latin1_General_CS_AS = landing.[lookup_type] COLLATE Latin1_General_CS_AS
	AND base.[lookup_code] COLLATE Latin1_General_CS_AS = landing.[lookup_code] COLLATE Latin1_General_CS_AS
	AND base.[view_application_id] = landing.[view_application_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
872,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
873,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
874,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
875,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
876,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
877,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
878,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
879,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DataConvert,Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,Data Conversion,Skipped,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
880,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
881,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
882,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
883,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
884,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
885,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
886,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
887,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE TARGET
SET TARGET.RowHash = SRC.RowHash
FROM 
(SELECT [lookup_type], 
[lookup_code], 
[view_application_id],
HASHBYTES('MD5',
(SELECT 
	[lookup_type],
	[language],
	[lookup_code],
	[meaning],
	[description],
	[enabled_flag],
	[start_date_active],
	[end_date_active],
	[source_lang],
	[security_group_id],
	[view_application_id],
	[territory_code],
	[attribute_category],
	[attribute1],
	[attribute2],
	[attribute3],
	[attribute4],
	[attribute5],
	[attribute6],
	[attribute7],
	[attribute8],
	[attribute9],
	[attribute10],
	[attribute11],
	[attribute12],
	[attribute13],
	[attribute14],
	[attribute15],
	[tag],
	[leaf_node],
	[zd_edition_name]
    FOR XML RAW)) AS RowHash
FROM [dbo].FND_LOOKUP_VALUES_B0Landing l) SRC
JOIN [dbo].FND_LOOKUP_VALUES_B0Landing TARGET 
	ON SRC.[lookup_type] COLLATE Latin1_General_CS_AS = TARGET.[lookup_type] COLLATE Latin1_General_CS_AS
	AND SRC.[lookup_code] COLLATE Latin1_General_CS_AS = TARGET.[lookup_code] COLLATE Latin1_General_CS_AS
	AND SRC.[view_application_id] = TARGET.[view_application_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_FND_LOOKUP_VALUES_B0
888,Package,Microsoft.Package,HRISB0toBNParent,,,,,,DataLakeHRISToBase_HRISB0toBNParent
889,Package\SEQ - Execute B10 tables,STOCK:SEQUENCE,SEQ - Execute B10 tables,,,,,,DataLakeHRISToBase_HRISB0toBNParent
890,Package\SEQ - Execute B10 tables\FlexValuesLookupB10,Microsoft.ExecutePackageTask,FlexValuesLookupB10,,,,,,DataLakeHRISToBase_HRISB0toBNParent
891,Package\SEQ - Execute B10 tables\PerPeriodsB10,Microsoft.ExecutePackageTask,PerPeriodsB10,,,,,,DataLakeHRISToBase_HRISB0toBNParent
892,Package\SEQ - Execute BN tables,STOCK:SEQUENCE,SEQ - Execute BN tables,,,,,,DataLakeHRISToBase_HRISB0toBNParent
893,Package\SEQ - Execute BN tables\AccreditationBN,Microsoft.ExecutePackageTask,AccreditationBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
894,Package\SEQ - Execute BN tables\AgeBN,Microsoft.ExecutePackageTask,AgeBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
895,Package\SEQ - Execute BN tables\AssessmentBN,Microsoft.ExecutePackageTask,AssessmentBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
896,Package\SEQ - Execute BN tables\AssignmentBN,Microsoft.ExecutePackageTask,AssignmentBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
897,Package\SEQ - Execute BN tables\EventBN,Microsoft.ExecutePackageTask,EventBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
898,Package\SEQ - Execute BN tables\PayGradeBN,Microsoft.ExecutePackageTask,PayGradeBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
899,Package\SEQ - Execute BN tables\PersonBN,Microsoft.ExecutePackageTask,PersonBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
900,Package\SEQ - Execute BN tables\PositionBN,Microsoft.ExecutePackageTask,PositionBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
901,Package\SEQ - Execute BN tables\TerminationBN,Microsoft.ExecutePackageTask,TerminationBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
902,Package\SEQ - Execute BN tables\TimeBN,Microsoft.ExecutePackageTask,TimeBN,,,,,,DataLakeHRISToBase_HRISB0toBNParent
903,Package,Microsoft.Package,HRIS_Datalake_Runtime_Metadata,,,,,,DataLakeHRISToBase_HRIS_Datalake_Runtime_Metadata
904,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_HRIS_Datalake_Runtime_Metadata
905,Package\Base - Data Load\DFT - Load Data From DL HRISRuntimeMetadata,Microsoft.Pipeline,DFT - Load Data From DL HRISRuntimeMetadata,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - InsertAuditID Column,,DataLakeHRISToBase_HRIS_Datalake_Runtime_Metadata
906,Package\Base - Data Load\DFT - Load Data From DL HRISRuntimeMetadata,Microsoft.Pipeline,DFT - Load Data From DL HRISRuntimeMetadata,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Insert HRIS_Datalake_Runtime_Metadata,,DataLakeHRISToBase_HRIS_Datalake_Runtime_Metadata
907,Package\Base - Data Load\DFT - Load Data From DL HRISRuntimeMetadata,Microsoft.Pipeline,DFT - Load Data From DL HRISRuntimeMetadata,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DataLakeHRISToBase_HRIS_Datalake_Runtime_Metadata
908,Package\Base - Data Load\DFT - Load Data From DL HRISRuntimeMetadata,Microsoft.Pipeline,DFT - Load Data From DL HRISRuntimeMetadata,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,DataLakeHRISToBase_HRIS_Datalake_Runtime_Metadata
909,Package\Base - Data Load\DFT - Load Data From DL HRISRuntimeMetadata,Microsoft.Pipeline,DFT - Load Data From DL HRISRuntimeMetadata,Attunity.SSISODBCSrc,ODBC Source;Connector for Open Database Connectivity (ODBC) by Attunity; Attunity Ltd.; All Rights Reserved; http://www.attunity.com;7,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_HRIS_Datalake_Runtime_Metadata
910,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_HRIS_Datalake_Runtime_Metadata
911,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_HRIS_Datalake_Runtime_Metadata
912,Package,Microsoft.Package,HR_ALL_ORGANIZATION_UNITS_B0,,,,,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
913,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
914,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
915,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
916,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
917,Package\Base - Data Load\SQL - Begin Base Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
918,Package\Base - Data Load\SQL - Delete records,Microsoft.ExecuteSQLTask,SQL - Delete records,,,,,"DELETE FROM base
FROM dbo.[HR_ALL_ORGANIZATION_UNITS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[HR_ALL_ORGANIZATION_UNITS_B0Landing] landing
    WHERE base.organization_id = landing.organization_id
);

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
919,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
920,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
921,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base SET 
	base.attribute_category	= landing.attribute_category,
	base.attribute1 = landing.attribute1,
	base.attribute10 = landing.attribute10,
	base.attribute11 = landing.attribute11,
	base.attribute12 = landing.attribute12,
	base.attribute13 = landing.attribute13,
	base.attribute14 = landing.attribute14,
	base.attribute15 = landing.attribute15,
	base.attribute16 = landing.attribute16,
	base.attribute17 = landing.attribute17,
	base.attribute18 = landing.attribute18,
	base.attribute19 = landing.attribute19,
	base.attribute2 = landing.attribute2,
	base.attribute20 = landing.attribute20,
	base.attribute21 = landing.attribute21,
	base.attribute22 = landing.attribute22,
	base.attribute23 = landing.attribute23,
	base.attribute24 = landing.attribute24,
	base.attribute25 = landing.attribute25,
	base.attribute26 = landing.attribute26,
	base.attribute27 = landing.attribute27,
	base.attribute28 = landing.attribute28,
	base.attribute29 = landing.attribute29,
	base.attribute3 = landing.attribute3,
	base.attribute30 = landing.attribute30,
	base.attribute4 = landing.attribute4,
	base.attribute5 = landing.attribute5,
	base.attribute6 = landing.attribute6,
	base.attribute7 = landing.attribute7,
	base.attribute8 = landing.attribute8,
	base.attribute9 = landing.attribute9,
	base.business_group_id = landing.business_group_id,
	base.comments = landing.comments,
	base.cost_allocation_keyflex_id = landing.cost_allocation_keyflex_id,
	base.created_by = landing.created_by,
	base.creation_date = landing.creation_date,
	base.datalakeinserttime = landing.datalakeinserttime,
	base.date_from = landing.date_from,
	base.date_to = landing.date_to,
	base.internal_address_line = landing.internal_address_line,
	base.internal_external_flag = landing.internal_external_flag,
	base.last_update_date = landing.last_update_date,
	base.last_update_login = landing.last_update_login,
	base.last_updated_by = landing.last_updated_by,
	base.location_id = landing.location_id,
	base.[name] = landing.[name],
	base.object_version_number = landing.object_version_number,
	base.party_id = landing.party_id,
	base.program_application_id = landing.program_application_id,
	base.program_id = landing.program_id,
	base.program_update_date = landing.program_update_date,
	base.request_id = landing.request_id,
	base.soft_coding_keyflex_id = landing.soft_coding_keyflex_id,
	base.[type] = landing.[type],
	base.[RowHash] = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[HR_ALL_ORGANIZATION_UNITS_B0] base
JOIN [HR_Landing].dbo.[HR_ALL_ORGANIZATION_UNITS_B0Landing] landing 
	ON base.organization_id = landing.organization_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
922,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
923,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
924,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
925,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
926,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
927,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
928,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
929,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
930,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
931,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
932,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
933,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
934,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
935,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
936,Package\Landing - Data Load\SQL - Update RowHash,Microsoft.ExecuteSQLTask,SQL - Update RowHash,,,,,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	organization_id,
	HASHBYTES('MD5',
(SELECT
	attribute_category,
	attribute1,
	attribute10,
	attribute11,
	attribute12,
	attribute13,
	attribute14,
	attribute15,
	attribute16,
	attribute17,
	attribute18,
	attribute19,
	attribute2,
	attribute20,
	attribute21,
	attribute22,
	attribute23,
	attribute24,
	attribute25,
	attribute26,
	attribute27,
	attribute28,
	attribute29,
	attribute3,
	attribute30,
	attribute4,
	attribute5,
	attribute6,
	attribute7,
	attribute8,
	attribute9,
	business_group_id,
	comments,
	cost_allocation_keyflex_id,
	date_from,
	date_to,
	internal_address_line,
	internal_external_flag,
	location_id,
	[name],
	object_version_number,
	organization_id,
	party_id,
	program_application_id,
	program_id,
	program_update_date,
	request_id,
	soft_coding_keyflex_id,
	[type]
	FOR XML RAW)) AS RowHash
FROM dbo.HR_ALL_ORGANIZATION_UNITS_B0Landing l) src
JOIN dbo.HR_ALL_ORGANIZATION_UNITS_B0Landing target ON src.[organization_id] = target.[organization_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_HR_ALL_ORGANIZATION_UNITS_B0
937,Package,Microsoft.Package,HR_ALL_POSITIONS_F_B0,,,,,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
938,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
939,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
940,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
941,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
942,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
943,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
944,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[HR_ALL_POSITIONS_F_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[HR_ALL_POSITIONS_F_B0Landing] landing
    WHERE base.position_id = landing.position_id
AND base.[effective_start_date] = landing.effective_start_date
AND base.[effective_end_date] = landing.effective_end_date
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
945,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
946,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[availability_status_id] = landing.availability_status_id
      ,base.[business_group_id] = landing.business_group_id
      ,base.[entry_grade_id] = landing.entry_grade_id
      ,base.[entry_grade_rule_id] = landing.entry_grade_rule_id
      ,base.[entry_step_id] = landing.entry_step_id
      ,base.[job_id] = landing.job_id
      ,base.[location_id] = landing.location_id
      ,base.[organization_id] = landing.organization_id
      ,base.[pay_basis_id] = landing.pay_basis_id
      ,base.[pay_freq_payroll_id] = landing.pay_freq_payroll_id
      ,base.[position_definition_id] = landing.position_definition_id
      ,base.[position_transaction_id] = landing.position_transaction_id
      ,base.[prior_position_id] = landing.prior_position_id
      ,base.[relief_position_id] = landing.relief_position_id
      ,base.[successor_position_id] = landing.successor_position_id
      ,base.[supervisor_id] = landing.supervisor_id
      ,base.[supervisor_position_id] = landing.supervisor_position_id
      ,base.[amendment_date] = landing.amendment_date
      ,base.[amendment_recommendation] = landing.amendment_recommendation
      ,base.[amendment_ref_number] = landing.amendment_ref_number
      ,base.[avail_status_prop_end_date] = landing.avail_status_prop_end_date
      ,base.[bargaining_unit_cd] = landing.bargaining_unit_cd
      ,base.[copied_to_old_table_flag] = landing.copied_to_old_table_flag
      ,base.[current_job_prop_end_date] = landing.current_job_prop_end_date
      ,base.[current_org_prop_end_date] = landing.current_org_prop_end_date
      ,base.[date_effective] = landing.date_effective
      ,base.[date_end] = landing.date_end
      ,base.[earliest_hire_date] = landing.earliest_hire_date
      ,base.[fill_by_date] = landing.fill_by_date
      ,base.[frequency] = landing.frequency
      ,base.[fte] = landing.fte
      ,base.[max_persons] = landing.max_persons
      ,base.[name] = landing.NAME
      ,base.[overlap_period] = landing.overlap_period
      ,base.[overlap_unit_cd] = landing.overlap_unit_cd
      ,base.[pay_term_end_day_cd] = landing.pay_term_end_day_cd
      ,base.[pay_term_end_month_cd] = landing.pay_term_end_month_cd
      ,base.[permanent_temporary_flag] = landing.permanent_temporary_flag
      ,base.[permit_recruitment_flag] = landing.permit_recruitment_flag
      ,base.[position_type] = landing.position_type
      ,base.[posting_description] = landing.posting_description
      ,base.[probation_period] = landing.probation_period
      ,base.[probation_period_unit_cd] = landing.probation_period_unit_cd
      ,base.[proposed_fte_for_layoff] = landing.proposed_fte_for_layoff
      ,base.[proposed_date_for_layoff] = landing.proposed_date_for_layoff
      ,base.[replacement_required_flag] = landing.replacement_required_flag
      ,base.[review_flag] = landing.review_flag
      ,base.[seasonal_flag] = landing.seasonal_flag
      ,base.[security_requirements] = landing.security_requirements
      ,base.[status] = landing.STATUS
      ,base.[term_start_day_cd] = landing.term_start_day_cd
      ,base.[term_start_month_cd] = landing.term_start_month_cd
      ,base.[time_normal_finish] = landing.time_normal_finish
      ,base.[time_normal_start] = landing.time_normal_start
      ,base.[update_source_cd] = landing.update_source_cd
      ,base.[working_hours] = landing.working_hours
      ,base.[works_council_approval_flag] = landing.works_council_approval_flag
      ,base.[work_period_type_cd] = landing.work_period_type_cd
      ,base.[work_term_end_day_cd] = landing.work_term_end_day_cd
      ,base.[work_term_end_month_cd] = landing.work_term_end_month_cd
      ,base.[information1] = landing.information1
      ,base.[information2] = landing.information2
      ,base.[information3] = landing.information3
      ,base.[information4] = landing.information4
      ,base.[information5] = landing.information5
      ,base.[information6] = landing.information6
      ,base.[information7] = landing.information7
      ,base.[information8] = landing.information8
      ,base.[information9] = landing.information9
      ,base.[information10] = landing.information10
      ,base.[information11] = landing.information11
      ,base.[information12] = landing.information12
      ,base.[information13] = landing.information13
      ,base.[information14] = landing.information14
      ,base.[information15] = landing.information15
      ,base.[information16] = landing.information16
      ,base.[information17] = landing.information17
      ,base.[information18] = landing.information18
      ,base.[information19] = landing.information19
      ,base.[information20] = landing.information20
      ,base.[information21] = landing.information21
      ,base.[information22] = landing.information22
      ,base.[information23] = landing.information23
      ,base.[information24] = landing.information24
      ,base.[information25] = landing.information25
      ,base.[information26] = landing.information26
      ,base.[information27] = landing.information27
      ,base.[information28] = landing.information28
      ,base.[information29] = landing.information29
      ,base.[information30] = landing.information30
      ,base.[information_category] = landing.information_category
      ,base.[attribute1] = landing.attribute1
      ,base.[attribute2] = landing.attribute2
      ,base.[attribute3] = landing.attribute3
      ,base.[attribute4] = landing.attribute4
      ,base.[attribute5] = landing.attribute5
      ,base.[attribute6] = landing.attribute6
      ,base.[attribute7] = landing.attribute7
      ,base.[attribute8] = landing.attribute8
      ,base.[attribute9] = landing.attribute9
      ,base.[attribute10] = landing.attribute10
      ,base.[attribute11] = landing.attribute11
      ,base.[attribute12] = landing.attribute12
      ,base.[attribute13] = landing.attribute13
      ,base.[attribute14] = landing.attribute14
      ,base.[attribute15] = landing.attribute15
      ,base.[attribute16] = landing.attribute16
      ,base.[attribute17] = landing.attribute17
      ,base.[attribute18] = landing.attribute18
      ,base.[attribute19] = landing.attribute19
      ,base.[attribute20] = landing.attribute20
      ,base.[attribute21] = landing.attribute21
      ,base.[attribute22] = landing.attribute22
      ,base.[attribute23] = landing.attribute23
      ,base.[attribute24] = landing.attribute24
      ,base.[attribute25] = landing.attribute25
      ,base.[attribute26] = landing.attribute26
      ,base.[attribute27] = landing.attribute27
      ,base.[attribute28] = landing.attribute28
      ,base.[attribute29] = landing.attribute29
      ,base.[attribute30] = landing.attribute30
      ,base.[attribute_category] = landing.attribute_category
      ,base.[request_id] = landing.request_id
      ,base.[program_application_id] = landing.program_application_id
      ,base.[program_id] = landing.program_id
      ,base.[program_update_date] = landing.program_update_date
      ,base.[created_by] = landing.created_by
      ,base.[creation_date] = landing.creation_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_update_login] = landing.last_update_login
      ,base.[object_version_number] = landing.object_version_number
      ,base.[comments] = landing.comments
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_ALL_POSITIONS_F_B0] base
JOIN [HR_Landing].dbo.[HR_ALL_POSITIONS_F_B0Landing] landing ON base.position_id = landing.position_id
AND base.[effective_start_date] = landing.effective_start_date
AND base.[effective_end_date] = landing.effective_end_date
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
947,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
948,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
949,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
950,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
951,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
952,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
953,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
954,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
955,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
956,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
957,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
958,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
959,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
960,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
961,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [position_id], [effective_start_date], [effective_end_date],
HASHBYTES('MD5',
(SELECT [position_id]
      ,[effective_start_date]
      ,[effective_end_date]
      ,[availability_status_id]
      ,[business_group_id]
      ,[entry_grade_id]
      ,[entry_grade_rule_id]
      ,[entry_step_id]
      ,[job_id]
      ,[location_id]
      ,[organization_id]
      ,[pay_basis_id]
      ,[pay_freq_payroll_id]
      ,[position_definition_id]
      ,[position_transaction_id]
      ,[prior_position_id]
      ,[relief_position_id]
      ,[successor_position_id]
      ,[supervisor_id]
      ,[supervisor_position_id]
      ,[amendment_date]
      ,[amendment_recommendation]
      ,[amendment_ref_number]
      ,[avail_status_prop_end_date]
      ,[bargaining_unit_cd]
      ,[copied_to_old_table_flag]
      ,[current_job_prop_end_date]
      ,[current_org_prop_end_date]
      ,[date_effective]
      ,[date_end]
      ,[earliest_hire_date]
      ,[fill_by_date]
      ,[frequency]
      ,[fte]
      ,[max_persons]
      ,[name]
      ,[overlap_period]
      ,[overlap_unit_cd]
      ,[pay_term_end_day_cd]
      ,[pay_term_end_month_cd]
      ,[permanent_temporary_flag]
      ,[permit_recruitment_flag]
      ,[position_type]
      ,[posting_description]
      ,[probation_period]
      ,[probation_period_unit_cd]
      ,[proposed_fte_for_layoff]
      ,[proposed_date_for_layoff]
      ,[replacement_required_flag]
      ,[review_flag]
      ,[seasonal_flag]
      ,[security_requirements]
      ,[status]
      ,[term_start_day_cd]
      ,[term_start_month_cd]
      ,[time_normal_finish]
      ,[time_normal_start]
      ,[update_source_cd]
      ,[working_hours]
      ,[works_council_approval_flag]
      ,[work_period_type_cd]
      ,[work_term_end_day_cd]
      ,[work_term_end_month_cd]
      ,[information1]
      ,[information2]
      ,[information3]
      ,[information4]
      ,[information5]
      ,[information6]
      ,[information7]
      ,[information8]
      ,[information9]
      ,[information10]
      ,[information11]
      ,[information12]
      ,[information13]
      ,[information14]
      ,[information15]
      ,[information16]
      ,[information17]
      ,[information18]
      ,[information19]
      ,[information20]
      ,[information21]
      ,[information22]
      ,[information23]
      ,[information24]
      ,[information25]
      ,[information26]
      ,[information27]
      ,[information28]
      ,[information29]
      ,[information30]
      ,[information_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[attribute21]
      ,[attribute22]
      ,[attribute23]
      ,[attribute24]
      ,[attribute25]
      ,[attribute26]
      ,[attribute27]
      ,[attribute28]
      ,[attribute29]
      ,[attribute30]
      ,[attribute_category]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[object_version_number]
      ,[comments] FOR XML RAW)) AS RowHash
FROM [dbo].HR_ALL_POSITIONS_F_B0Landing l)src
JOIN [dbo].HR_ALL_POSITIONS_F_B0Landing TARGET ON src.[position_id] = TARGET.[position_id]
AND src.[effective_start_date] = target.[effective_start_date] AND src.[effective_end_date] = target.[effective_end_date]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_HR_ALL_POSITIONS_F_B0
962,Package,Microsoft.Package,HR_LOCATIONS_ALL_B0,,,,,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
963,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
964,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
965,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
966,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
967,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
968,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?,?
GO",DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
969,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[HR_LOCATIONS_ALL_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[HR_LOCATIONS_ALL_B0Landing] landing
    WHERE base.location_id = landing.location_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
970,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
971,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[location_id] = landing.location_id,
      base.[location_code] = landing.location_code,
      base.[business_group_id] = landing.business_group_id,
      base.[description] = landing.description,
      base.[ship_to_location_id] = landing.ship_to_location_id,
      base.[ship_to_site_flag] = landing.ship_to_site_flag,
      base.[receiving_site_flag] = landing.receiving_site_flag,
      base.[bill_to_site_flag] = landing.bill_to_site_flag,
      base.[in_organization_flag] = landing.in_organization_flag,
      base.[office_site_flag] = landing.office_site_flag,
      base.[designated_receiver_id] = landing.designated_receiver_id,
      base.[inventory_organization_id] = landing.inventory_organization_id,
      base.[inactive_date] = landing.inactive_date,
      base.[style] = landing.style,
      base.[address_line_1] = landing.address_line_1,
      base.[address_line_2] = landing.address_line_2,
      base.[address_line_3] = landing.address_line_3,
      base.[town_or_city] = landing.town_or_city,
      base.[country] = landing.country,
      base.[postal_code] = landing.postal_code,
      base.[region_1] = landing.region_1,
      base.[region_2] = landing.region_2,
      base.[region_3] = landing.region_3,
      base.[telephone_number_1] = landing.telephone_number_1,
      base.[telephone_number_2] = landing.telephone_number_2,
      base.[telephone_number_3] = landing.telephone_number_3,
      base.[loc_information13] = landing.loc_information13,
      base.[loc_information14] = landing.loc_information14,
      base.[loc_information15] = landing.loc_information15,
      base.[loc_information16] = landing.loc_information16,
      base.[loc_information17] = landing.loc_information17,
      base.[attribute_category] = landing.attribute_category,
      base.[attribute1] = landing.attribute1,
      base.[attribute2] = landing.attribute2,
      base.[attribute3] = landing.attribute3,
      base.[attribute4] = landing.attribute4,
      base.[attribute5] = landing.attribute5,
      base.[attribute6] = landing.attribute6,
      base.[attribute7] = landing.attribute7,
      base.[attribute8] = landing.attribute8,
      base.[attribute9] = landing.attribute9,
      base.[attribute10] = landing.attribute10,
      base.[attribute11] = landing.attribute11,
      base.[attribute12] = landing.attribute12,
      base.[attribute13] = landing.attribute13,
      base.[attribute14] = landing.attribute14,
      base.[attribute15] = landing.attribute15,
      base.[attribute16] = landing.attribute16,
      base.[attribute17] = landing.attribute17,
      base.[attribute18] = landing.attribute18,
      base.[attribute19] = landing.attribute19,
      base.[attribute20] = landing.attribute20,
      base.[global_attribute_category] = landing.global_attribute_category,
      base.[global_attribute1] = landing.global_attribute1,
      base.[global_attribute2] = landing.global_attribute2,
      base.[global_attribute3] = landing.global_attribute3,
      base.[global_attribute4] = landing.global_attribute4,
      base.[global_attribute5] = landing.global_attribute5,
      base.[global_attribute6] = landing.global_attribute6,
      base.[global_attribute7] = landing.global_attribute7,
      base.[global_attribute8] = landing.global_attribute8,
      base.[global_attribute9] = landing.global_attribute9,
      base.[global_attribute10] = landing.global_attribute10,
      base.[global_attribute11] = landing.global_attribute11,
      base.[global_attribute12] = landing.global_attribute12,
      base.[global_attribute13] = landing.global_attribute13,
      base.[global_attribute14] = landing.global_attribute14,
      base.[global_attribute15] = landing.global_attribute15,
      base.[global_attribute16] = landing.global_attribute16,
      base.[global_attribute17] = landing.global_attribute17,
      base.[global_attribute18] = landing.global_attribute18,
      base.[global_attribute19] = landing.global_attribute19,
      base.[global_attribute20] = landing.global_attribute20,
      base.[last_update_date] = landing.last_update_date,
      base.[last_updated_by] = landing.last_updated_by,
      base.[last_update_login] = landing.last_update_login,
      base.[created_by] = landing.created_by,
      base.[creation_date] = landing.creation_date,
      base.[entered_by] = landing.entered_by,
      base.[tp_header_id] = landing.tp_header_id,
      base.[ece_tp_location_code] = landing.ece_tp_location_code,
      base.[object_version_number] = landing.object_version_number,
      base.[geometry] = landing.geometry,
      base.[loc_information18] = landing.loc_information18,
      base.[loc_information19] = landing.loc_information19,
      base.[loc_information20] = landing.loc_information20,
      base.[derived_locale] = landing.derived_locale,
      base.[legal_address_flag] = landing.legal_address_flag,
      base.[timezone_code] = landing.timezone_code,
      base.[tax_name#1] = landing.tax_name#1,
      base.[datalakeinserttime] = landing.datalakeinserttime,
      base.[RowHash] = landing.RowHash,
      base.[BaseCreatedDate] = GETDATE(),
      base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[HR_LOCATIONS_ALL_B0] base
JOIN [HR_Landing].dbo.[HR_LOCATIONS_ALL_B0Landing] landing ON base.location_id = landing.location_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
972,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
973,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
974,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
975,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
976,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
977,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
978,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
979,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
980,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
981,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All Error Records,,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
982,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
983,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?,?
GO",DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
984,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
985,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
986,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [location_id],
HASHBYTES('MD5',
(SELECT [location_id]
       , [location_code]
       , [business_group_id]
       , [description]
       , [ship_to_location_id]
       , [ship_to_site_flag]
       , [receiving_site_flag]
       , [bill_to_site_flag]
       , [in_organization_flag]
       , [office_site_flag]
       , [designated_receiver_id]
       , [inventory_organization_id]
       , [inactive_date]
       , [style]
       , [address_line_1]
       , [address_line_2]
       , [address_line_3]
       , [town_or_city]
       , [country]
       , [postal_code]
       , [region_1]
       , [region_2]
       , [region_3]
       , [telephone_number_1]
       , [telephone_number_2]
       , [telephone_number_3]
       , [loc_information13]
       , [loc_information14]
       , [loc_information15]
       , [loc_information16]
       , [loc_information17]
       , [attribute_category]
       , [attribute1]
       , [attribute2]
       , [attribute3]
       , [attribute4]
       , [attribute5]
       , [attribute6]
       , [attribute7]
       , [attribute8]
       , [attribute9]
       , [attribute10]
       , [attribute11]
       , [attribute12]
       , [attribute13]
       , [attribute14]
       , [attribute15]
       , [attribute16]
       , [attribute17]
       , [attribute18]
       , [attribute19]
       , [attribute20]
       , [global_attribute_category]
       , [global_attribute1]
       , [global_attribute2]
       , [global_attribute3]
       , [global_attribute4]
       , [global_attribute5]
       , [global_attribute6]
       , [global_attribute7]
       , [global_attribute8]
       , [global_attribute9]
       , [global_attribute10]
       , [global_attribute11]
       , [global_attribute12]
       , [global_attribute13]
       , [global_attribute14]
       , [global_attribute15]
       , [global_attribute16]
       , [global_attribute17]
       , [global_attribute18]
       , [global_attribute19]
       , [global_attribute20]
       , [entered_by]
       , [tp_header_id]
       , [ece_tp_location_code]
       , [object_version_number]
       , [geometry]
       , [loc_information18]
       , [loc_information19]
       , [loc_information20]
       , [derived_locale]
       , [legal_address_flag]
       , [timezone_code]
       , [tax_name#1] FOR XML RAW)) AS RowHash
FROM [dbo].HR_LOCATIONS_ALL_B0Landing l)src
JOIN [dbo].HR_LOCATIONS_ALL_B0Landing TARGET ON src.[location_id] = TARGET.[location_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_HR_LOCATIONS_ALL_B0
987,Package,Microsoft.Package,HR_LOCATION_EXTRA_INFO_B0,,,,,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
988,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
989,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST- Base,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
990,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
991,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
992,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
993,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
994,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.HR_LOCATION_EXTRA_INFO_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.HR_LOCATION_EXTRA_INFO_B0Landing landing
    WHERE base.  [location_extra_info_id]  = landing.  [location_extra_info_id] 
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
995,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
996,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"
UPDATE base SET 
       base.[location_extra_info_id] = landing.location_extra_info_id
      ,base.[information_type] = landing.information_type
      ,base.[location_id] = landing.location_id
      ,base.[request_id] = landing.request_id
      ,base.[program_application_id] = landing.program_application_id
      ,base.[program_id] = landing.program_id
      ,base.[program_update_date] = landing.program_update_date
      ,base.[lei_attribute_category] = landing.lei_attribute_category
      ,base.[lei_attribute1] = landing.lei_attribute1
      ,base.[lei_attribute2] = landing.lei_attribute2
      ,base.[lei_attribute3] = landing.lei_attribute3
      ,base.[lei_attribute4] = landing.lei_attribute4
      ,base.[lei_attribute5] = landing.lei_attribute5
      ,base.[lei_attribute6] = landing.lei_attribute6
      ,base.[lei_attribute7] = landing.lei_attribute7
      ,base.[lei_attribute8] = landing.lei_attribute8
      ,base.[lei_attribute9] = landing.lei_attribute9
      ,base.[lei_attribute10] = landing.lei_attribute10
      ,base.[lei_attribute11] = landing.lei_attribute11
      ,base.[lei_attribute12] = landing.lei_attribute12
      ,base.[lei_attribute13] = landing.lei_attribute13
      ,base.[lei_attribute14] = landing.lei_attribute14
      ,base.[lei_attribute15] = landing.lei_attribute15
      ,base.[lei_attribute16] = landing.lei_attribute16
      ,base.[lei_attribute17] = landing.lei_attribute17
      ,base.[lei_attribute18] = landing.lei_attribute18
      ,base.[lei_attribute19] = landing.lei_attribute19
      ,base.[lei_attribute20] = landing.lei_attribute20
      ,base.[lei_information_category] = landing.lei_information_category
      ,base.[lei_information1] = landing.lei_information1
      ,base.[lei_information2] = landing.lei_information2
      ,base.[lei_information3] = landing.lei_information3
      ,base.[lei_information4] = landing.lei_information4
      ,base.[lei_information5] = landing.lei_information5
      ,base.[lei_information6] = landing.lei_information6
      ,base.[lei_information7] = landing.lei_information7
      ,base.[lei_information8] = landing.lei_information8
      ,base.[lei_information9] = landing.lei_information9
      ,base.[lei_information10] = landing.lei_information10
      ,base.[lei_information11] = landing.lei_information11
      ,base.[lei_information12] = landing.lei_information12
      ,base.[lei_information13] = landing.lei_information13
      ,base.[lei_information14] = landing.lei_information14
      ,base.[lei_information15] = landing.lei_information15
      ,base.[lei_information16] = landing.lei_information16
      ,base.[lei_information17] = landing.lei_information17
      ,base.[lei_information18] = landing.lei_information18
      ,base.[lei_information19] = landing.lei_information19
      ,base.[lei_information20] = landing.lei_information20
      ,base.[lei_information21] = landing.lei_information21
      ,base.[lei_information22] = landing.lei_information22
      ,base.[lei_information23] = landing.lei_information23
      ,base.[lei_information24] = landing.lei_information24
      ,base.[lei_information25] = landing.lei_information25
      ,base.[lei_information26] = landing.lei_information26
      ,base.[lei_information27] = landing.lei_information27
      ,base.[lei_information28] = landing.lei_information28
      ,base.[lei_information29] = landing.lei_information29
      ,base.[lei_information30] = landing.lei_information30
      ,base.[object_version_number] = landing.object_version_number
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[last_update_login] = landing.last_update_login
      ,base.[created_by] = landing.created_by
      ,base.[creation_date] = landing.creation_date
      ,base.datalakeinserttime = landing.datalakeinserttime
      ,base.RowHash = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[HR_LOCATION_EXTRA_INFO_B0] base
JOIN [HR_Landing].dbo.[HR_LOCATION_EXTRA_INFO_B0Landing] landing 
	ON base.location_extra_info_id = landing.location_extra_info_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
997,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
998,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
999,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1000,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1001,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1002,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1003,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC_ Datalake,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1004,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1005,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1006,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1007,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1008,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1009,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	location_extra_info_id,
	HASHBYTES('MD5',
(SELECT
	[location_extra_info_id]
      ,[information_type]
      ,[location_id]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[lei_attribute_category]
      ,[lei_attribute1]
      ,[lei_attribute2]
      ,[lei_attribute3]
      ,[lei_attribute4]
      ,[lei_attribute5]
      ,[lei_attribute6]
      ,[lei_attribute7]
      ,[lei_attribute8]
      ,[lei_attribute9]
      ,[lei_attribute10]
      ,[lei_attribute11]
      ,[lei_attribute12]
      ,[lei_attribute13]
      ,[lei_attribute14]
      ,[lei_attribute15]
      ,[lei_attribute16]
      ,[lei_attribute17]
      ,[lei_attribute18]
      ,[lei_attribute19]
      ,[lei_attribute20]
      ,[lei_information_category]
      ,[lei_information1]
      ,[lei_information2]
      ,[lei_information3]
      ,[lei_information4]
      ,[lei_information5]
      ,[lei_information6]
      ,[lei_information7]
      ,[lei_information8]
      ,[lei_information9]
      ,[lei_information10]
      ,[lei_information11]
      ,[lei_information12]
      ,[lei_information13]
      ,[lei_information14]
      ,[lei_information15]
      ,[lei_information16]
      ,[lei_information17]
      ,[lei_information18]
      ,[lei_information19]
      ,[lei_information20]
      ,[lei_information21]
      ,[lei_information22]
      ,[lei_information23]
      ,[lei_information24]
      ,[lei_information25]
      ,[lei_information26]
      ,[lei_information27]
      ,[lei_information28]
      ,[lei_information29]
      ,[lei_information30]
      ,[object_version_number]
	FOR XML RAW)) AS RowHash
FROM dbo.HR_LOCATION_EXTRA_INFO_B0Landing l) src
JOIN dbo.HR_LOCATION_EXTRA_INFO_B0Landing target ON src.[location_extra_info_id] = target.[location_extra_info_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_HR_LOCATION_EXTRA_INFO_B0
1010,Package,Microsoft.Package,PayGradeBN,,,,,,DataLakeHRISToBase_PayGradeBN
1011,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PayGradeBN
1012,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",CMD - SCD Update,,DataLakeHRISToBase_PayGradeBN
1013,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",CMD - Update as History Records in BN Table,,DataLakeHRISToBase_PayGradeBN
1014,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PayGradeBN
1015,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - SCD 2 Columns Update,,DataLakeHRISToBase_PayGradeBN
1016,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,DataLakeHRISToBase_PayGradeBN
1017,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PayGradeBN
1018,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table Insert,,DataLakeHRISToBase_PayGradeBN
1019,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,DataLakeHRISToBase_PayGradeBN
1020,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD Insert Count,,DataLakeHRISToBase_PayGradeBN
1021,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD Update,,DataLakeHRISToBase_PayGradeBN
1022,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD Update Count,,DataLakeHRISToBase_PayGradeBN
1023,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_PayGradeBN
1024,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 Table,,DataLakeHRISToBase_PayGradeBN
1025,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PayGradeBN
1026,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_PayGradeBN
1027,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_PayGradeBN
1028,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PayGradeBN
1029,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PayGradeBN
1030,Package\Base - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)

BEGIN
INSERT INTO dbo.ETLBatchControl (TableName) VALUES ( ? )
END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.PayGradeBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeHRISToBase_PayGradeBN
1031,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"UPDATE pgbn 
SET pgbn.Deleted = 'Y',
pgbn.BaseModifiedDate = GETDATE(),
pgbn.UpdateAuditID = ?
FROM dbo.PayGradeBN pgbn
WHERE NOT EXISTS
(
    SELECT 1
    FROM dbo.vPayGradeBN vpgbn
    WHERE pgbn.GradeID = vpgbn.GradeID 
AND pgbn.EffectiveStartDate = vpgbn.EffectiveStartDate 
)
AND pgbn.Deleted IS NULL;

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PayGradeBN
1032,Package\Base - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeHRISToBase_PayGradeBN
1033,Package\Base - Data Load\SQl - Update RowStatus for history records,Microsoft.ExecuteSQLTask,SQl - Update RowStatus for history records,,,,,"UPDATE dbo.PayGradeBN 
SET RowStatus = 'H'
, BaseModifiedDate = GETDATE()
, UpdateAuditID = ?
WHERE CAST(BaseEndDate AS DATE)< CAST(GETDATE() AS DATE)
 AND RowStatus <> 'H'

SELECT @@ROWCOUNT + ? AS UpdateCount;",DataLakeHRISToBase_PayGradeBN
1034,Package,Microsoft.Package,PAY_COST_ALLOCATION_KEYFLEX_B0,,,,,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1035,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1036,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1037,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1038,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1039,Package\Base - Data Load\SQL - Begin Base Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1040,Package\Base - Data Load\SQL - Delete records,Microsoft.ExecuteSQLTask,SQL - Delete records,,,,,"DELETE FROM base
FROM dbo.[PAY_COST_ALLOCATION_KEYFLEX_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PAY_COST_ALLOCATION_KEYFLEX_B0Landing] landing
    WHERE base.cost_allocation_keyflex_id = landing.cost_allocation_keyflex_id
);

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1041,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1042,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1043,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base SET 
	base.concatenated_segments = landing.concatenated_segments,
	base.id_flex_num = landing.id_flex_num,
	base.summary_flag = landing.summary_flag,
	base.enabled_flag = landing.enabled_flag,
	base.start_date_active = landing.start_date_active,
	base.end_date_active = landing.end_date_active,
	base.segment1 = landing.segment1,
	base.segment2 = landing.segment2,
	base.segment3 = landing.segment3,
	base.segment4 = landing.segment4,
	base.segment5 = landing.segment5,
	base.segment6 = landing.segment6,
	base.segment7 = landing.segment7,
	base.segment8 = landing.segment8,
	base.segment9 = landing.segment9,
	base.segment10 = landing.segment10,
	base.segment11 = landing.segment11,
	base.segment12 = landing.segment12,
	base.segment13 = landing.segment13,
	base.segment14 = landing.segment14,
	base.segment15 = landing.segment15,
	base.segment16 = landing.segment16,
	base.segment17 = landing.segment17,
	base.segment18 = landing.segment18,
	base.segment19 = landing.segment19,
	base.segment20 = landing.segment20,
	base.segment21 = landing.segment21,
	base.segment22 = landing.segment22,
	base.segment23 = landing.segment23,
	base.segment24 = landing.segment24,
	base.segment25 = landing.segment25,
	base.segment26 = landing.segment26,
	base.segment27 = landing.segment27,
	base.segment28 = landing.segment28,
	base.segment29 = landing.segment29,
	base.segment30 = landing.segment30,
	base.last_update_date = landing.last_update_date,
	base.last_updated_by = landing.last_updated_by,
	base.last_update_login = landing.last_update_login,
	base.created_by = landing.created_by,
	base.creation_date = landing.creation_date,
	base.datalakeinserttime = landing.datalakeinserttime,
	base.[RowHash] = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PAY_COST_ALLOCATION_KEYFLEX_B0] base
JOIN [HR_Landing].dbo.[PAY_COST_ALLOCATION_KEYFLEX_B0Landing] landing 
	ON base.cost_allocation_keyflex_id = landing.cost_allocation_keyflex_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1044,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1045,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1046,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1047,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1048,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1049,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Add ErrorColumns,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1050,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1051,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1052,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1053,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1054,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1055,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1056,Package\Landing - Data Load\SQL - Update RowHash,Microsoft.ExecuteSQLTask,SQL - Update RowHash,,,,,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	cost_allocation_keyflex_id,
	HASHBYTES('MD5',
(SELECT
	concatenated_segments,
	id_flex_num,
	summary_flag,
	enabled_flag,
	start_date_active,
	end_date_active,
	segment1,
	segment2,
	segment3,
	segment4,
	segment5,
	segment6,
	segment7,
	segment8,
	segment9,
	segment10,
	segment11,
	segment12,
	segment13,
	segment14,
	segment15,
	segment16,
	segment17,
	segment18,
	segment19,
	segment20,
	segment21,
	segment22,
	segment23,
	segment24,
	segment25,
	segment26,
	segment27,
	segment28,
	segment29,
	segment30
	FOR XML RAW)) AS RowHash
FROM dbo.PAY_COST_ALLOCATION_KEYFLEX_B0Landing l) src
JOIN dbo.PAY_COST_ALLOCATION_KEYFLEX_B0Landing target ON src.cost_allocation_keyflex_id = target.cost_allocation_keyflex_id

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PAY_COST_ALLOCATION_KEYFLEX_B0
1057,Package,Microsoft.Package,PAY_GRADE_RULES_F_B0,,,,,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1058,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1059,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1060,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1061,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1062,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1063,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1064,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PAY_GRADE_RULES_F_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PAY_GRADE_RULES_F_B0Landing] landing
    WHERE base.grade_rule_id = landing.grade_rule_id   AND base.effective_start_date = landing.effective_start_date
            AND base.effective_end_date = landing.effective_end_date
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1065,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1066,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[grade_rule_id] = landing.[grade_rule_id],
      base.[effective_start_date] = landing.effective_start_date,
      base.[effective_end_date] = landing.effective_end_date,
      base.[business_group_id] = landing.business_group_id,
      base.[rate_id] = landing.rate_id,
      base.[grade_or_spinal_point_id] = landing.grade_or_spinal_point_id,
      base.[rate_type] = landing.rate_type,
      base.[maximum] = landing.maximum,
      base.[mid_value] = landing.mid_value,
      base.[minimum] = landing.minimum,
      base.[sequence] = landing.sequence,
      base.[value] = landing.value,
      base.[request_id] = landing.request_id,
      base.[program_application_id] = landing.program_application_id,
      base.[program_id] = landing.program_id,
      base.[program_update_date] = landing.program_update_date,
      base.[last_update_date] = landing.last_update_date,
      base.[last_updated_by] = landing.last_updated_by,
      base.[last_update_login] = landing.last_update_login,
      base.[created_by] = landing.created_by,
      base.[creation_date] = landing.creation_date,
      base.[object_version_number] = landing.object_version_number,
      base.[currency_code] = landing.currency_code,
      base.[datalakeinserttime] = landing.datalakeinserttime,
      base.[RowHash] = landing.RowHash,
      base.[BaseCreatedDate] = GETDATE(),
      base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PAY_GRADE_RULES_F_B0] base
JOIN [HR_Landing].dbo.[PAY_GRADE_RULES_F_B0Landing] landing ON base.grade_rule_id = landing.grade_rule_id AND  base.effective_start_date = landing.effective_start_date AND base.effective_end_date = landing.effective_end_date
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1067,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1068,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1069,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1070,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1071,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1072,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1073,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1074,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1075,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1076,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1077,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1078,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1079,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1080,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1081,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [grade_rule_id],[effective_start_date],
	[effective_end_date],
HASHBYTES('MD5',
(SELECT [grade_rule_id],
	[effective_start_date],
	[effective_end_date],
	[business_group_id],
	[rate_id],
	[grade_or_spinal_point_id],
	[rate_type],
	[maximum],
	[mid_value],
	[minimum],
	[sequence],
	[value],
	[request_id],
	[program_application_id],
	[program_id],
	[program_update_date],
	[object_version_number],
	[currency_code] FOR XML RAW)) AS RowHash
FROM [dbo].PAY_GRADE_RULES_F_B0Landing l)src
JOIN [dbo].PAY_GRADE_RULES_F_B0Landing TARGET ON src.[grade_rule_id] = TARGET.[grade_rule_id]
AND src.[effective_start_date] = target.[effective_start_date] AND src.[effective_end_date] = target.[effective_end_date]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PAY_GRADE_RULES_F_B0
1082,Package,Microsoft.Package,PAY_PEOPLE_GROUPS_B0,,,,,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1083,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1084,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1085,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1086,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1087,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1088,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1089,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"
DELETE FROM base
FROM dbo.[PAY_PEOPLE_GROUPS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PAY_PEOPLE_GROUPS_B0Landing] landing
    WHERE base.people_group_id = landing.people_group_id   
);

SELECT @@ROWCOUNT AS DeleteCount ;
",DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1090,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1091,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[people_group_id] = landing.people_group_id
      ,base.[group_name] = landing.group_name
      ,base.[id_flex_num] = landing.id_flex_num
      ,base.[summary_flag] = landing.summary_flag
      ,base.[enabled_flag] = landing.enabled_flag
      ,base.[start_date_active] = landing.start_date_active
      ,base.[end_date_active] = landing.end_date_active
      ,base.[segment1] = landing.segment1
      ,base.[segment2] = landing.segment2
      ,base.[segment3] = landing.segment3
      ,base.[segment4] = landing.segment4
      ,base.[segment5] = landing.segment5
      ,base.[segment6] = landing.segment6
      ,base.[segment7] = landing.segment7
      ,base.[segment8] = landing.segment8
      ,base.[segment9] = landing.segment9
      ,base.[segment10] = landing.segment10
      ,base.[segment11] = landing.segment11
      ,base.[segment12] = landing.segment12
      ,base.[segment13] = landing.segment13
      ,base.[segment14] = landing.segment14
      ,base.[segment15] = landing.segment15
      ,base.[segment16] = landing.segment16
      ,base.[segment17] = landing.segment17
      ,base.[segment18] = landing.segment18
      ,base.[segment19] = landing.segment19
      ,base.[segment20] = landing.segment20
      ,base.[segment21] = landing.segment21
      ,base.[segment22] = landing.segment22
      ,base.[segment23] = landing.segment23
      ,base.[segment24] = landing.segment24
      ,base.[segment25] = landing.segment25
      ,base.[segment26] = landing.segment26
      ,base.[segment27] = landing.segment27
      ,base.[segment28] = landing.segment28
      ,base.[segment29] = landing.segment29
      ,base.[segment30] = landing.segment30
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[creation_date] = landing.creation_date
      ,base.[created_by] = landing.created_by
      ,base.[last_update_login] = landing.last_update_login
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PAY_PEOPLE_GROUPS_B0] base
JOIN [HR_Landing].dbo.[PAY_PEOPLE_GROUPS_B0Landing] landing ON base.people_group_id = landing.people_group_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1092,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1093,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1094,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1095,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1096,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1097,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1098,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1099,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1100,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1101,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1102,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1103,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1104,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1105,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1106,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [people_group_id],
HASHBYTES('MD5',
(SELECT  [people_group_id]
      ,[group_name]
      ,[id_flex_num]
      ,[summary_flag]
      ,[enabled_flag]
      ,[start_date_active]
      ,[end_date_active]
      ,[segment1]
      ,[segment2]
      ,[segment3]
      ,[segment4]
      ,[segment5]
      ,[segment6]
      ,[segment7]
      ,[segment8]
      ,[segment9]
      ,[segment10]
      ,[segment11]
      ,[segment12]
      ,[segment13]
      ,[segment14]
      ,[segment15]
      ,[segment16]
      ,[segment17]
      ,[segment18]
      ,[segment19]
      ,[segment20]
      ,[segment21]
      ,[segment22]
      ,[segment23]
      ,[segment24]
      ,[segment25]
      ,[segment26]
      ,[segment27]
      ,[segment28]
      ,[segment29]
      ,[segment30]
       FOR XML RAW)) AS RowHash
FROM [dbo].PAY_PEOPLE_GROUPS_B0Landing l)src
JOIN [dbo].PAY_PEOPLE_GROUPS_B0Landing TARGET ON src.[people_group_id] = TARGET.[people_group_id]


SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PAY_PEOPLE_GROUPS_B0
1107,Package,Microsoft.Package,PerPeriodsB10,,,,,,DataLakeHRISToBase_PerPeriodsB10
1108,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PerPeriodsB10
1109,Package\Base - Data Load\Merge into PerPeriodsB10 all,Microsoft.ExecuteSQLTask,Merge into PerPeriodsB10 all,,,,,"

declare @AuditId int = ?
declare @PackageName varchar(35) = ?
declare @ExecutionInstanceGuid varchar(200) = ?


-----------------------------------------------------------------------------------------------------------
--Variables
declare @MergeOutput table (
Action_Out VARCHAR(20),
inserted_PerPeriodsID varchar(30),
inserted_Deleted varchar(1),
inserted_InsertAuditId bigint,
inserted_UpdateAuditId bigint,
deleted_PerPeriodsID  varchar(30),
deleted_Deleted  varchar(1),
deleted_InsertAuditId bigint,
deleted_UpdateAuditId bigint);


declare @vInsertedCount  Int
declare @vUpdateCount  Int
declare @vDeleteCount  Int
declare @vSourceCount  Int
declare @vRejectCount  Int
------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
--2.) SQL - Get the LastProcessed Date

declare @TableName varchar(30) = 'PerPeriodsB10'
declare @LastProcessedDate datetime
declare @BaseCreatedDate datetime


IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @TableName)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (@TableName)
	END

UPDATE dbo.ETLBatchControl SET [Status] = 'In Process' WHERE TableName = @TableName

SELECT @LastProcessedDate = LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @TableName
SELECT @BaseCreatedDate = MAX(BaseCreatedDate) FROM dbo.PerPeriodsB10

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
	BEGIN
		SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));
	END



------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------
--3.) Merge into PerPeriodsB10


;with  PP as
(--PPoS
select 
'F' + cast(period_of_service_id as varchar(12)) as 'PerPeriodsID', --8
person_id as person_id,  --9
date_start,  --10
adjusted_svc_date,  --11
actual_termination_date,  --12
leaving_reason,  --13
attribute2 as 'eligible_for_rehire_ind',  --14
attribute3 as 'two_week_notice_ind',  --15
attribute5 as 'regrettable_termination_ind',  --16
attribute4 as 'termination_comments',  --17
notified_termination_date as 'notified_termination_date',  --18
attribute1 as 'last_worked_date'  --19
--CAST(HASHBYTES('MD5', (SELECT t.FlexValueSetName, t.FlexValue, t.[Description] FOR XML RAW)) AS BINARY(16)) AS RowHash
 FROM [HR_Base].[dbo].[PER_PERIODS_OF_SERVICE_B0]

 
 union all
 

--PPoP
 select
'C' + cast(period_of_placement_id as varchar(12)) as 'PerPeriodsID',  --8
person_id,  --9
date_start,  --10
date_start as 'adjusted_svc_date',  --11
actual_termination_date,  --12
termination_reason as 'leaving_reason',  --13
attribute1 as 'eligible_for_rehire_ind',  --14
'N/A' as 'two_week_notice_ind',  --15
'N/A' as 'regrettable_termination_ind',  --16
'N/A' as 'termination_comments',  --17
null as 'notified_termination_date',  --18
'N/A' as 'last_worked_date'  --19
--CAST(HASHBYTES('MD5', (SELECT t.FlexValueSetName, t.FlexValue, t.[Description] FOR XML RAW)) AS BINARY(16)) AS RowHash
FROM [HR_Base].[dbo].[PER_PERIODS_OF_PLACEMENT_B0]


)


Merge into [dbo].[PerPeriodsB10]  AS TARGET
using PP  AS SOURCE  
	on TARGET.PerPeriodsID = SOURCE.PerPeriodsID

WHEN NOT MATCHED BY TARGET 
THEN INSERT 
([PerPeriodsID]
,[PersonId]
,[DateStart]
,[AdjustedSvcDate]
,[ActualTerminationDate]
,[LeavingReason]
,[EligibleForRehireInd]
,[TwoWeekNoticeInd]
,[RegrettableTerminationInd]
,[TerminationComments]
,[NotifiedTerminationDate]
,[LastWorkedDate]
--AUdit columns
,[Deleted]
,[BaseCreatedDate]
,[InsertAuditID]
,[BaseModifiedDate]
,[UpdateAuditID]
)
VALUES 
(SOURCE.[PerPeriodsID]
,SOURCE.[person_id]
,SOURCE.[date_start]
,SOURCE.[adjusted_svc_date]
,SOURCE.[actual_termination_date]
,SOURCE.[leaving_reason]
,SOURCE.[eligible_for_rehire_ind]
,SOURCE.[two_week_notice_ind]
,SOURCE.[regrettable_termination_ind]
,SOURCE.[termination_comments]
,SOURCE.[notified_termination_date]
,SOURCE.[last_worked_date]
-- Audit columns
,Null		   --[Deleted]
,getdate() --[BaseCreatedDate]
,@AuditId  --InsertAuditID 
,getdate()     --[BaseModifiedDate]
,null      --UpdateAuditId

)

----------------------------------------------------------------------------------------------------------
WHEN MATCHED 
and( TARGET.[PersonId] <> SOURCE.person_id 
	or ISNULL(TARGET.[DateStart],'') <> ISNULL(SOURCE.date_start,'')
	or ISNULL(TARGET.[AdjustedSvcDate],'') <> ISNULL( SOURCE.adjusted_svc_date,'')
	or ISNULL(TARGET.[ActualTerminationDate],'') <> ISNULL(SOURCE.actual_termination_date,'')
	or ISNULL(TARGET.[LeavingReason],'') <> ISNULL(SOURCE.leaving_reason,'')
	or ISNULL(TARGET.[EligibleForRehireInd],'') <> ISNULL(SOURCE.eligible_for_rehire_ind,'')
	or ISNULL(TARGET.[TwoWeekNoticeInd],'') <> ISNULL(SOURCE.two_week_notice_ind,'')
	or ISNULL(TARGET.[RegrettableTerminationInd],'') <> ISNULL(SOURCE.regrettable_termination_ind,'')
	or ISNULL(TARGET.[TerminationComments],'') <> ISNULL(SOURCE.termination_comments,'')
	or ISNULL(TARGET.[NotifiedTerminationDate],'') <> ISNULL(SOURCE.notified_termination_date,'')
	or ISNULL(TARGET.[LastWorkedDate],'') <> ISNULL(SOURCE.last_worked_date,''))
THEN UPDATE SET
TARGET.[PersonId] = SOURCE.person_id 
,TARGET.[DateStart] = SOURCE.date_start
,TARGET.[AdjustedSvcDate] = SOURCE.adjusted_svc_date
,TARGET.[ActualTerminationDate] = SOURCE.actual_termination_date
,TARGET.[LeavingReason] = SOURCE.leaving_reason
,TARGET.[EligibleForRehireInd] = SOURCE.eligible_for_rehire_ind
,TARGET.[TwoWeekNoticeInd] = SOURCE.two_week_notice_ind
,TARGET.[RegrettableTerminationInd] = SOURCE.regrettable_termination_ind
,TARGET.[TerminationComments] = SOURCE.termination_comments
,TARGET.[NotifiedTerminationDate] = SOURCE.notified_termination_date
,TARGET.[LastWorkedDate] = SOURCE.last_worked_date
-- Audit columns
--,TARGET.[Deleted] = 'N'
--,TARGET.[BaseCreatedDate]
--,TARGET.[InsertAuditID] = @AuditId
,TARGET.[BaseModifiedDate] = getdate() 
,TARGET.[UpdateAuditID] = @AuditId



----------------------------------------------------------------------------------------------------

--Soft DELETE
WHEN NOT MATCHED BY SOURCE 
and Target.Deleted is null
THEN UPDATE SET
TARGET.[Deleted] = 'Y'
--,TARGET.[BaseCreatedDate] 
--,TARGET.[InsertAuditID] = @AuditId --@InsertAuditID 
,TARGET.[BaseModifiedDate] = getdate()
,TARGET.UpdateAuditId =  @AuditId

---------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------

OUTPUT $action,
inserted.PerPeriodsID as 'inserted_PerPeriodsID',
inserted.Deleted as 'inserted_Deleted',
inserted.InsertAuditId as 'inserted_InsertAuditId',
inserted.UpdateAuditId as 'inserted_UpdateAuditId',
deleted.PerPeriodsID as 'deleted_PerPeriodsID',
deleted.Deleted as 'deleted_Deleted',
deleted.InsertAuditId as 'deleted_InsertAuditId',
deleted.UpdateAuditId as 'deleted_UpdateAuditId'
INTO @MergeOutput;


--select * from @MergeOutput



---------------------------------------------------------------------------
------SQL - Update LastProcessed Date
UPDATE dbo.ETLBatchControl SET
	LastProcessedDate = GETDATE(),
	[Status] = 'Success'
WHERE
	Tablename = 'PerPeriodsB10'

--------------------------------------------------------------------------------------
--------SQL - End Landing Audit Log
select @vInsertedCount = count(*) 
from @MergeOutput
where Action_Out = 'INSERT'
and inserted_InsertAuditId > 0



select @vDeleteCount = count(*) 
from @MergeOutput
where Action_Out = 'UPDATE'
and inserted_Deleted = 'Y'

	

select @vUpdateCount = count(*) 
from @MergeOutput
where Action_Out = 'UPDATE'
and inserted_Deleted is null


select @vSourceCount = isnull(@vInsertedCount + @vDeleteCount + @vUpdateCount,0)



EXECUTE [dbo].[spEndAuditLog] 
@vInsertedCount, --@InsertCount
@vUpdateCount,   --@UpdateCount
@vDeleteCount,   --@DeleteCount
@vSourceCount,   --@SourceCount
0,			     --@RejectCount
@AuditId		 --@AuditId",DataLakeHRISToBase_PerPeriodsB10
1110,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PerPeriodsB10
1111,Package\Base - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"DECLARE @TableName varchar(30) = 'PerPeriodsB10'
DECLARE @LastProcessedDate datetime
DECLARE @BaseCreatedDate datetime


IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = @TableName)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (@TableName)
	END

UPDATE dbo.ETLBatchControl SET [Status] = 'In Process' WHERE TableName = @TableName

SELECT @LastProcessedDate = LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = @TableName
SELECT @BaseCreatedDate = MAX(BaseCreatedDate) FROM dbo.FlexValuesLookupB10

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
	BEGIN
		SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));
	END

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeHRISToBase_PerPeriodsB10
1112,Package,Microsoft.Package,PersonBN,,,,,,DataLakeHRISToBase_PersonBN
1113,Package\Base - B1 Data Load,STOCK:SEQUENCE,Base - B1 Data Load,,,,,,DataLakeHRISToBase_PersonBN
1114,Package\Base - B1 Data Load\DFT - Load new records From B0 into B1,Microsoft.Pipeline,DFT - Load new records From B0 into B1,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base B1 Table,,DataLakeHRISToBase_PersonBN
1115,Package\Base - B1 Data Load\DFT - Load new records From B0 into B1,Microsoft.Pipeline,DFT - Load new records From B0 into B1,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_PersonBN
1116,Package\Base - B1 Data Load\DFT - Load new records From B0 into B1,Microsoft.Pipeline,DFT - Load new records From B0 into B1,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_PersonBN
1117,Package\Base - B1 Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PersonBN
1118,Package\Base - B1 Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PersonBN
1119,Package\Base - B1 Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.PersonBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;

",DataLakeHRISToBase_PersonBN
1120,Package\Base - B1 Data Load\SQL - Truncate B1 table,Microsoft.ExecuteSQLTask,SQL - Truncate B1 table,,,,,TRUNCATE TABLE dbo.PersonB1,DataLakeHRISToBase_PersonBN
1121,Package\Base - BN Data Load,STOCK:SEQUENCE,Base - BN Data Load,,,,,,DataLakeHRISToBase_PersonBN
1122,Package\Base - BN Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base BN Table,,DataLakeHRISToBase_PersonBN
1123,Package\Base - BN Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_PersonBN
1124,Package\Base - BN Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B1 table,,DataLakeHRISToBase_PersonBN
1125,Package\Base - BN Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PersonBN
1126,Package\Base - BN Data Load\SQL - Delete records from PersonBN,Microsoft.ExecuteSQLTask,SQL - Delete records from PersonBN,,,,,"DELETE p
FROM dbo.PersonBN p 
JOIN (SELECT *
FROM HR_Landing.dbo.PersonB1 vpbn
WHERE EXISTS
(
    SELECT 1
    FROM dbo.PersonBN pbn
    WHERE pbn.PersonID = vpbn.PersonID
 AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
)
)A ON p.PersonID = a.PersonID AND p.EffectiveStartDate = a.EffectiveStartDate AND p.BaseEffectiveDate = a.BaseEffectiveDate

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PersonBN
1127,Package\Base - BN Data Load\SQL - Delete records from PersonBN not in source,Microsoft.ExecuteSQLTask,SQL - Delete records from PersonBN not in source,,,,,"DELETE pbn
FROM dbo.PersonBN pbn
WHERE NOT EXISTS
(
    SELECT 1
    FROM dbo.vPersonBN vpbn
    WHERE pbn.PersonID = vpbn.PersonID
	AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
)

SELECT @@ROWCOUNT + ? AS DeleteCount ;",DataLakeHRISToBase_PersonBN
1128,Package\Base - BN Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PersonBN
1129,Package\Base - BN Data Load\SQl - SCD1 Update,Microsoft.ExecuteSQLTask,SQl - SCD1 Update,,,,,"WITH Updates AS 
(
SELECT * 
FROM dbo.vPersonBN vpbn
WHERE EXISTS
(
    SELECT 1
    FROM dbo.PersonBN pbn
    WHERE pbn.PersonID = vpbn.PersonID
	AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate
    AND pbn.BaseEffectiveDate = vpbn.BaseEffectiveDate
	AND pbn.BaseEndDate = vpbn.BaseEndDate
	AND pbn.RowHash <> vpbn.RowHash
)
)

UPDATE [dbo].[PersonBN]
   SET [PersonID] = u.PersonID
      ,[PersonType] = u.PersonType
      ,[PersonName] = u.PersonName
      ,[Title] = u.Title
      ,[PersonFirstName] = u.PersonFirstName
      ,[PersonMiddleName] = u.PersonMiddleName
      ,[PersonLastName] = u.PersonLastName
      ,[PersonSuffix] = u.PersonSuffix
      ,[PersonPreferredName] = u.PersonPreferredName
      ,[SocialSecurityNumber] = u.SocialSecurityNumber
      ,[BirthDate] = u.BirthDate
      ,[EmployeeNumber] = u.EmployeeNumber
      ,[SupervisorNumber] = u.SupervisorNumber
      ,[BonusStartDate] = u.BonusStartDate
      ,[BonusEndDate] = u.BonusEndDate
      ,[BonusPlanName] = u.BonusPlanName
      ,[BonusTarget] = u.BonusTarget
      ,[MaritalStatus] = u.MaritalStatus
      ,[Gender] = u.Gender
      ,[Ethnicity] = u.Ethnicity
      ,[VeteranStatus] = u.VeteranStatus
      ,[HomeAddressLine1] = u.HomeAddressLine1
      ,[HomeAddressLine2] = u.HomeAddressLine2
      ,[HomeCity] = u.HomeCity
      ,[HomeState] = u.HomeState
      ,[HomeZipCode] = u.HomeZipCode
      ,[HomeCounty] = u.HomeCounty
      ,[EmailAddressKinderCare] = u.EmailAddressKinderCare
      ,[EmailAddressPersonal] = u.EmailAddressPersonal
      ,[PhoneNumberKindercareWork] = u.PhoneNumberKindercareWork
      ,[PhoneNumberKinderCareMobile] = u.PhoneNumberKinderCareMobile
      ,[PhoneNumberPersonalHome] = u.PhoneNumberPersonalHome
      ,[PhoneNumberPersonalMobile] = u.PhoneNumberPersonalMobile
      ,[OriginalHireDate] = u.OriginalHireDate
      ,[StartDate] = u.StartDate
      ,[TerminationDate] = u.TerminationDate
      ,[AdjustedServiceDate] = u.AdjustedServiceDate
      ,[DeathDate] = u.DeathDate
      ,[PreviousEmployeeNumber] = u.PreviousEmployeeNumber
      ,[PreviousEmployeeSource] = u.PreviousEmployeeSource
      ,[WOTCNotifiedIndicator] = u.WOTCNotifiedIndicator
      ,[WOTCNumber] = u.WOTCNumber
      ,[CheckSendToLocationID] = u.CheckSendToLocationID
      ,[VestingDate] = u.VestingDate
      ,[MealPeriodWaived] = u.MealPeriodWaived
      ,[AlaskaWaiveDailyOTIndicator] = u.AlaskaWaiveDailyOTIndicator
      ,[PersonAcquisitionDate] = u.PersonAcquisitionDate
      ,[TaleoCandidateID] = u.TaleoCandidateID
      ,[ContingentWorkerEmployeeID] = u.ContingentWorkerEmployeeID
      ,[ContingentWorkerEmployeeNumber] = u.ContingentWorkerEmployeeNumber
      ,[I9ReceivedIndicator] = u.I9ReceivedIndicator
      ,[WorkSchedule] = u.WorkSchedule
      ,[EmployeePerformanceRating] = u.EmployeePerformanceRating
      ,[PerformanceReviewDate] = u.PerformanceReviewDate
      ,[EffectiveStartDate] = u.EffectiveStartDate
      ,[ExpirationDate] = u.ExpirationDate
      ,[BaseEffectiveDate] = u.BaseEffectiveDate
      ,[BaseEndDate] = u.BaseEndDate
      ,[BaseModifiedDate] = GETDATE()
      ,[UpdateAuditID] = ?
      ,[RowHash] = u.RowHash
FROM dbo.PersonBN p
JOIN Updates u ON p.PersonID = u.PersonID AND p.EffectiveStartDate = u.EffectiveStartDate 
		AND p.BaseEffectiveDate = u.BaseEffectiveDate AND p.BaseEndDate = u.BaseEndDate

SELECT @@ROWCOUNT  AS UpdateCount;",DataLakeHRISToBase_PersonBN
1130,Package\Base - BN Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeHRISToBase_PersonBN
1131,Package\Base - BN Data Load\SQl - Update RowStatus for history records,Microsoft.ExecuteSQLTask,SQl - Update RowStatus for history records,,,,,"UPDATE dbo.PersonBN 
SET RowStatus = 'H'
, BaseModifiedDate = GETDATE()
, UpdateAuditID = ?
WHERE
 CAST(BaseEndDate AS DATE)< CAST(GETDATE() AS DATE) 
 AND RowStatus <> 'H'

SELECT @@ROWCOUNT + ? AS UpdateCount;",DataLakeHRISToBase_PersonBN
1132,Package,Microsoft.Package,PER_ADDRESSES_B0,,,,,,DataLakeHRISToBase_PER_ADDRESSES_B0
1133,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_ADDRESSES_B0
1134,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_ADDRESSES_B0
1135,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ADDRESSES_B0
1136,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_ADDRESSES_B0
1137,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ADDRESSES_B0
1138,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ADDRESSES_B0
1139,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_ADDRESSES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ADDRESSES_B0Landing] landing
    WHERE base.address_id= landing.address_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_ADDRESSES_B0
1140,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ADDRESSES_B0
1141,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.address_id = landing.address_id
      ,base.business_group_id = landing.business_group_id
      ,base.person_id = landing.person_id
      ,base.date_from = landing.date_from
      ,base.primary_flag = landing.primary_flag
      ,base.style = landing.style
      ,base.address_line1 = landing.address_line1
      ,base.address_line2 = landing.address_line2
      ,base.address_line3 = landing.address_line3
      ,base.address_type = landing.address_type
      ,base.country = landing.country
      ,base.date_to = landing.date_to
      ,base.postal_code = landing.postal_code
      ,base.region_1 = landing.region_1
      ,base.region_2 = landing.region_2
      ,base.region_3 = landing.region_3
      ,base.telephone_number_1 = landing.telephone_number_1
      ,base.telephone_number_2 = landing.telephone_number_2
      ,base.telephone_number_3 = landing.telephone_number_3
      ,base.town_or_city = landing.town_or_city
      ,base.request_id = landing.request_id
      ,base.program_application_id = landing.program_application_id
      ,base.program_id = landing.program_id
      ,base.program_update_date = landing.program_update_date
      ,base.addr_attribute_category = landing.addr_attribute_category
      ,base.addr_attribute1 = landing.addr_attribute1
      ,base.addr_attribute2 = landing.addr_attribute2
      ,base.addr_attribute3 = landing.addr_attribute3
      ,base.addr_attribute4 = landing.addr_attribute4
      ,base.addr_attribute5 = landing.addr_attribute5
      ,base.addr_attribute6 = landing.addr_attribute6
      ,base.addr_attribute7 = landing.addr_attribute7
      ,base.addr_attribute8 = landing.addr_attribute8
      ,base.addr_attribute9 = landing.addr_attribute9
      ,base.addr_attribute10 = landing.addr_attribute10
      ,base.addr_attribute11 = landing.addr_attribute11
      ,base.addr_attribute12 = landing.addr_attribute12
      ,base.addr_attribute13 = landing.addr_attribute13
      ,base.addr_attribute14 = landing.addr_attribute14
      ,base.addr_attribute15 = landing.addr_attribute15
      ,base.addr_attribute16 = landing.addr_attribute16
      ,base.addr_attribute17 = landing.addr_attribute17
      ,base.addr_attribute18 = landing.addr_attribute18
      ,base.addr_attribute19 = landing.addr_attribute19
      ,base.addr_attribute20 = landing.addr_attribute20
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.object_version_number = landing.object_version_number
      ,base.add_information13 = landing.add_information13
      ,base.add_information14 = landing.add_information14
      ,base.add_information15 = landing.add_information15
      ,base.add_information16 = landing.add_information16
      ,base.add_information17 = landing.add_information17
      ,base.add_information18 = landing.add_information18
      ,base.add_information19 = landing.add_information19
      ,base.add_information20 = landing.add_information20
      ,base.party_id = landing.party_id
      ,base.derived_locale = landing.derived_locale
      ,base.geometry = landing.geometry
      ,base.comments = landing.comments
      ,base.datalakeinserttime= landing.datalakeinserttime
      ,base.RowHash = landing.RowHash
      ,base.BaseCreatedDate = GETDATE()
      ,base.BaseCreatedBy = suser_sname()
FROM [HR_Base].dbo.[PER_ADDRESSES_B0] base
JOIN [HR_Landing].dbo.[PER_ADDRESSES_B0Landing] landing ON base.address_id = landing.address_id
WHERE base.RowHash != landing.RowHash;


SELECT @@ROWCOUNT AS UpdateCount;
",DataLakeHRISToBase_PER_ADDRESSES_B0
1142,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_ADDRESSES_B0
1143,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_ADDRESSES_B0
1144,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_ADDRESSES_B0
1145,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_ADDRESSES_B0
1146,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_ADDRESSES_B0
1147,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_ADDRESSES_B0
1148,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_ADDRESSES_B0
1149,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_PER_ADDRESSES_B0
1150,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_ADDRESSES_B0
1151,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_ADDRESSES_B0
1152,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ADDRESSES_B0
1153,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ADDRESSES_B0
1154,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ADDRESSES_B0
1155,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_ADDRESSES_B0
1156,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [address_id],
HASHBYTES('MD5',
(SELECT [address_id]
      ,[business_group_id]
      ,[person_id]
      ,[date_from]
      ,[primary_flag]
      ,[style]
      ,[address_line1]
      ,[address_line2]
      ,[address_line3]
      ,[address_type]
      ,[country]
      ,[date_to]
      ,[postal_code]
      ,[region_1]
      ,[region_2]
      ,[region_3]
      ,[telephone_number_1]
      ,[telephone_number_2]
      ,[telephone_number_3]
      ,[town_or_city]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[addr_attribute_category]
      ,[addr_attribute1]
      ,[addr_attribute2]
      ,[addr_attribute3]
      ,[addr_attribute4]
      ,[addr_attribute5]
      ,[addr_attribute6]
      ,[addr_attribute7]
      ,[addr_attribute8]
      ,[addr_attribute9]
      ,[addr_attribute10]
      ,[addr_attribute11]
      ,[addr_attribute12]
      ,[addr_attribute13]
      ,[addr_attribute14]
      ,[addr_attribute15]
      ,[addr_attribute16]
      ,[addr_attribute17]
      ,[addr_attribute18]
      ,[addr_attribute19]
      ,[addr_attribute20]
      ,[object_version_number]
      ,[add_information13]
      ,[add_information14]
      ,[add_information15]
      ,[add_information16]
      ,[add_information17]
      ,[add_information18]
      ,[add_information19]
      ,[add_information20]
      ,[party_id]
      ,[derived_locale]
      ,[geometry]
      ,[comments]
       FOR XML RAW)) AS RowHash
FROM [dbo].PER_ADDRESSES_B0Landing l)src
JOIN [dbo].PER_ADDRESSES_B0Landing TARGET ON src.[address_id] = TARGET.[address_id]


SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ADDRESSES_B0
1157,Package,Microsoft.Package,PER_ALL_ASSIGNMENTS_F_B0,,,,,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1158,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1159,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1160,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1161,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1162,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1163,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1164,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_ALL_ASSIGNMENTS_F_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ALL_ASSIGNMENTS_F_B0PreLanding] landing
    WHERE base.assignment_id = landing.assignment_id
   AND  base.effective_start_date = landing.effective_start_date
   AND base.effective_end_date = landing.effective_end_date
);

SELECT @@ROWCOUNT AS DeleteCount ;
",DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1165,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1166,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.assignment_id = landing.assignment_id
      ,base.effective_start_date = landing.effective_start_date
      ,base.effective_end_date = landing.effective_end_date
      ,base.business_group_id = landing.business_group_id
      ,base.recruiter_id = landing.recruiter_id
      ,base.grade_id = landing.grade_id
      ,base.position_id = landing.position_id
      ,base.job_id = landing.job_id
      ,base.assignment_status_type_id = landing.assignment_status_type_id
      ,base.payroll_id = landing.payroll_id
      ,base.location_id = landing.location_id
      ,base.person_referred_by_id = landing.person_referred_by_id
      ,base.supervisor_id = landing.supervisor_id
      ,base.special_ceiling_step_id = landing.special_ceiling_step_id
      ,base.person_id = landing.person_id
      ,base.recruitment_activity_id = landing.recruitment_activity_id
      ,base.source_organization_id = landing.source_organization_id
      ,base.organization_id = landing.organization_id
      ,base.people_group_id = landing.people_group_id
      ,base.soft_coding_keyflex_id = landing.soft_coding_keyflex_id
      ,base.vacancy_id = landing.vacancy_id
      ,base.pay_basis_id = landing.pay_basis_id
      ,base.assignment_sequence = landing.assignment_sequence
      ,base.assignment_type = landing.assignment_type
      ,base.primary_flag = landing.primary_flag
      ,base.application_id = landing.application_id
      ,base.assignment_number = landing.assignment_number
      ,base.change_reason = landing.change_reason
      ,base.comment_id = landing.comment_id
      ,base.date_probation_end = landing.date_probation_end
      ,base.default_code_comb_id = landing.default_code_comb_id
      ,base.employment_category = landing.employment_category
      ,base.frequency = landing.frequency
      ,base.internal_address_line = landing.internal_address_line
      ,base.manager_flag = landing.manager_flag
      ,base.normal_hours = landing.normal_hours
      ,base.perf_review_period = landing.perf_review_period
      ,base.perf_review_period_frequency = landing.perf_review_period_frequency
      ,base.period_of_service_id = landing.period_of_service_id
      ,base.probation_period = landing.probation_period
      ,base.probation_unit = landing.probation_unit
      ,base.sal_review_period = landing.sal_review_period
      ,base.sal_review_period_frequency = landing.sal_review_period_frequency
      ,base.set_of_books_id = landing.set_of_books_id
      ,base.source_type = landing.source_type
      ,base.time_normal_finish = landing.time_normal_finish
      ,base.time_normal_start = landing.time_normal_start
      ,base.bargaining_unit_code = landing.bargaining_unit_code
      ,base.labour_union_member_flag = landing.labour_union_member_flag
      ,base.hourly_salaried_code = landing.hourly_salaried_code
      ,base.contract_id = landing.contract_id
      ,base.collective_agreement_id = landing.collective_agreement_id
      ,base.cagr_id_flex_num = landing.cagr_id_flex_num
      ,base.cagr_grade_def_id = landing.cagr_grade_def_id
      ,base.establishment_id = landing.establishment_id
      ,base.request_id = landing.request_id
      ,base.program_application_id = landing.program_application_id
      ,base.program_id = landing.program_id
      ,base.program_update_date = landing.program_update_date
      ,base.ass_attribute_category = landing.ass_attribute_category
      ,base.ass_attribute1 = landing.ass_attribute1
      ,base.ass_attribute2 = landing.ass_attribute2
      ,base.ass_attribute3 = landing.ass_attribute3
      ,base.ass_attribute4 = landing.ass_attribute4
      ,base.ass_attribute5 = landing.ass_attribute5
      ,base.ass_attribute6 = landing.ass_attribute6
      ,base.ass_attribute7 = landing.ass_attribute7
      ,base.ass_attribute8 = landing.ass_attribute8
      ,base.ass_attribute9 = landing.ass_attribute9
      ,base.ass_attribute10 = landing.ass_attribute10
      ,base.ass_attribute11 = landing.ass_attribute11
      ,base.ass_attribute12 = landing.ass_attribute12
      ,base.ass_attribute13 = landing.ass_attribute13
      ,base.ass_attribute14 = landing.ass_attribute14
      ,base.ass_attribute15 = landing.ass_attribute15
      ,base.ass_attribute16 = landing.ass_attribute16
      ,base.ass_attribute17 = landing.ass_attribute17
      ,base.ass_attribute18 = landing.ass_attribute18
      ,base.ass_attribute19 = landing.ass_attribute19
      ,base.ass_attribute20 = landing.ass_attribute20
      ,base.ass_attribute21 = landing.ass_attribute21
      ,base.ass_attribute22 = landing.ass_attribute22
      ,base.ass_attribute23 = landing.ass_attribute23
      ,base.ass_attribute24 = landing.ass_attribute24
      ,base.ass_attribute25 = landing.ass_attribute25
      ,base.ass_attribute26 = landing.ass_attribute26
      ,base.ass_attribute27 = landing.ass_attribute27
      ,base.ass_attribute28 = landing.ass_attribute28
      ,base.ass_attribute29 = landing.ass_attribute29
      ,base.ass_attribute30 = landing.ass_attribute30
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.title = landing.title
      ,base.object_version_number = landing.object_version_number
      ,base.notice_period = landing.notice_period
      ,base.notice_period_uom = landing.notice_period_uom
      ,base.employee_category = landing.employee_category
      ,base.work_at_home = landing.work_at_home
      ,base.job_post_source_name = landing.job_post_source_name
      ,base.posting_content_id = landing.posting_content_id
      ,base.period_of_placement_date_start = landing.period_of_placement_date_start
      ,base.vendor_id = landing.vendor_id
      ,base.vendor_employee_number = landing.vendor_employee_number
      ,base.vendor_assignment_number = landing.vendor_assignment_number
      ,base.assignment_category = landing.assignment_category
      ,base.project_title = landing.project_title
      ,base.applicant_rank = landing.applicant_rank
      ,base.vendor_site_id = landing.vendor_site_id
      ,base.po_header_id = landing.po_header_id
      ,base.po_line_id = landing.po_line_id
      ,base.projected_assignment_end = landing.projected_assignment_end
      ,base.grade_ladder_pgm_id = landing.grade_ladder_pgm_id
      ,base.supervisor_assignment_id = landing.supervisor_assignment_id
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [PER_ALL_ASSIGNMENTS_F_B0] base
JOIN [HR_Landing].dbo.[PER_ALL_ASSIGNMENTS_F_B0Landing] landing ON base.assignment_id = landing.assignment_id
 AND  base.effective_start_date = landing.effective_start_date
 AND base.effective_end_date = landing.effective_end_date
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;
",DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1167,Package\First landing - Data Load,STOCK:SEQUENCE,First landing - Data Load,,,,,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1168,Package\First landing - Data Load\DFT - Load the Pre Landing table,Microsoft.Pipeline,DFT - Load the Pre Landing table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DS - PreLanding Table,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1169,Package\First landing - Data Load\DFT - Load the Pre Landing table,Microsoft.Pipeline,DFT - Load the Pre Landing table,Attunity.SSISODBCSrc,,ODBC Source,ODBC Source,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1170,Package\First landing - Data Load\DFT - Load the Pre Landing table,Microsoft.Pipeline,DFT - Load the Pre Landing table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1171,Package\First landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1172,Package\First landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1173,Package\First landing - Data Load\SQL - Truncate First Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate First Landing Table,,,,,User::vPreLandingTruncateQuery,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1174,Package\First landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE Target
SET Target.RowHash = SRC.RowHash
FROM
(
    SELECT assignment_id,
 effective_start_date,
 effective_end_date,
           HASHBYTES(   'MD5',
           (
               SELECT  [assignment_id]
                      ,[effective_start_date]
                      ,[effective_end_date]
                      ,[business_group_id]
                      ,[recruiter_id]
                      ,[grade_id]
                      ,[position_id]
                      ,[job_id]
                      ,[assignment_status_type_id]
                      ,[payroll_id]
                      ,[location_id]
                      ,[person_referred_by_id]
                      ,[supervisor_id]
                      ,[special_ceiling_step_id]
                      ,[person_id]
                      ,[recruitment_activity_id]
                      ,[source_organization_id]
                      ,[organization_id]
                      ,[people_group_id]
                      ,[soft_coding_keyflex_id]
                      ,[vacancy_id]
                      ,[pay_basis_id]
                      ,[assignment_sequence]
                      ,[assignment_type]
                      ,[primary_flag]
                      ,[application_id]
                      ,[assignment_number]
                      ,[change_reason]
                      ,[comment_id]
                      ,[date_probation_end]
                      ,[default_code_comb_id]
                      ,[employment_category]
                      ,[frequency]
                      ,[internal_address_line]
                      ,[manager_flag]
                      ,[normal_hours]
                      ,[perf_review_period]
                      ,[perf_review_period_frequency]
                      ,[period_of_service_id]
                      ,[probation_period]
                      ,[probation_unit]
                      ,[sal_review_period]
                      ,[sal_review_period_frequency]
                      ,[set_of_books_id]
                      ,[source_type]
                      ,[time_normal_finish]
                      ,[time_normal_start]
                      ,[bargaining_unit_code]
                      ,[labour_union_member_flag]
                      ,[hourly_salaried_code]
                      ,[contract_id]
                      ,[collective_agreement_id]
                      ,[cagr_id_flex_num]
                      ,[cagr_grade_def_id]
                      ,[establishment_id]
                      ,[request_id]
                      ,[program_application_id]
                      ,[program_id]
                      ,[program_update_date]
                      ,[ass_attribute_category]
                      ,[ass_attribute1]
                      ,[ass_attribute2]
                      ,[ass_attribute3]
                      ,[ass_attribute4]
                      ,[ass_attribute5]
                      ,[ass_attribute6]
                      ,[ass_attribute7]
                      ,[ass_attribute8]
                      ,[ass_attribute9]
                      ,[ass_attribute10]
                      ,[ass_attribute11]
                      ,[ass_attribute12]
                      ,[ass_attribute13]
                      ,[ass_attribute14]
                      ,[ass_attribute15]
                      ,[ass_attribute16]
                      ,[ass_attribute17]
                      ,[ass_attribute18]
                      ,[ass_attribute19]
                      ,[ass_attribute20]
                      ,[ass_attribute21]
                      ,[ass_attribute22]
                      ,[ass_attribute23]
                      ,[ass_attribute24]
                      ,[ass_attribute25]
                      ,[ass_attribute26]
                      ,[ass_attribute27]
                      ,[ass_attribute28]
                      ,[ass_attribute29]
                      ,[ass_attribute30]
                      ,[title]
                      ,[object_version_number]
                      ,[notice_period]
                      ,[notice_period_uom]
                      ,[employee_category]
                      ,[work_at_home]
                      ,[job_post_source_name]
                      ,[posting_content_id]
                      ,[period_of_placement_date_start]
                      ,[vendor_id]
                      ,[vendor_employee_number]
                      ,[vendor_assignment_number]
                      ,[assignment_category]
                      ,[project_title]
                      ,[applicant_rank]
                      ,[vendor_site_id]
                      ,[po_header_id]
                      ,[po_line_id]
                      ,[projected_assignment_end]
                      ,[grade_ladder_pgm_id]
                      ,[supervisor_assignment_id] FOR XML RAW			 
           )					 
                    ) AS RowHash			 
    FROM [dbo].[PER_ALL_ASSIGNMENTS_F_B0PreLanding]
) SRC										 
    JOIN [dbo].[PER_ALL_ASSIGNMENTS_F_B0PreLanding] Target
        ON SRC.assignment_id = Target.assignment_id 	 
           AND SRC.effective_start_date = Target.effective_start_date
           AND SRC.effective_end_date = Target.effective_end_date;

SELECT @@ROWCOUNT AS UpdateCount;			 ",DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1175,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1176,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1177,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1178,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1179,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1180,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1181,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1182,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SR - PreLanding Table,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1183,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1184,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1185,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1186,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1187,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1188,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_ALL_ASSIGNMENTS_F_B0
1189,Package,Microsoft.Package,PER_ALL_PEOPLE_F_B0,,,,,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1190,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1191,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseTable,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1192,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1193,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1194,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1195,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1196,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.PER_ALL_PEOPLE_F_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.PER_ALL_PEOPLE_F_B0PreLanding  landing
    WHERE base.person_id = landing.person_id
and base.effective_start_date= landing.effective_start_date
	AND base.effective_end_date = landing.effective_end_date
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1197,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1198,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
SET
Base.effective_start_date = Landing.effective_start_date
,Base.effective_end_date = Landing.effective_end_date
,Base.business_group_id = Landing.business_group_id
,Base.person_type_id = Landing.person_type_id
,Base.last_name = Landing.last_name
,Base.start_date = Landing.start_date
,Base.applicant_number = Landing.applicant_number
,Base.background_check_status = Landing.background_check_status
,Base.background_date_check = Landing.background_date_check
,Base.blood_type = Landing.blood_type
,Base.comment_id = Landing.comment_id
,Base.correspondence_language = Landing.correspondence_language
,Base.current_applicant_flag = Landing.current_applicant_flag
,Base.current_emp_or_apl_flag = Landing.current_emp_or_apl_flag
,Base.current_employee_flag = Landing.current_employee_flag
,Base.date_employee_data_verified = Landing.date_employee_data_verified
,Base.date_of_birth = Landing.date_of_birth
,Base.email_address = Landing.email_address
,Base.employee_number = Landing.employee_number
,Base.expense_check_send_to_address = Landing.expense_check_send_to_address
,Base.fast_path_employee = Landing.fast_path_employee
,Base.first_name = Landing.first_name
,Base.fte_capacity = Landing.fte_capacity
,Base.full_name = Landing.full_name
,Base.hold_applicant_date_until = Landing.hold_applicant_date_until
,Base.honors = Landing.honors
,Base.internal_location = Landing.internal_location
,Base.known_as = Landing.known_as
,Base.last_medical_test_by = Landing.last_medical_test_by
,Base.last_medical_test_date = Landing.last_medical_test_date
,Base.mailstop = Landing.mailstop
,Base.marital_status = Landing.marital_status
,Base.middle_names = Landing.middle_names
,Base.nationality = Landing.nationality
,Base.national_identifier = Landing.national_identifier
,Base.office_number = Landing.office_number
,Base.on_military_service = Landing.on_military_service
,Base.order_name = Landing.order_name
,Base.pre_name_adjunct = Landing.pre_name_adjunct
,Base.previous_last_name = Landing.previous_last_name
,Base.projected_start_date = Landing.projected_start_date
,Base.rehire_authorizor = Landing.rehire_authorizor
,Base.rehire_reason = Landing.rehire_reason
,Base.rehire_recommendation = Landing.rehire_recommendation
,Base.resume_exists = Landing.resume_exists
,Base.resume_last_updated = Landing.resume_last_updated
,Base.registered_disabled_flag = Landing.registered_disabled_flag
,Base.second_passport_exists = Landing.second_passport_exists
,Base.sex = Landing.sex
,Base.student_status = Landing.student_status
,Base.suffix = Landing.suffix
,Base.title = Landing.title
,Base.vendor_id = Landing.vendor_id
,Base.work_schedule = Landing.work_schedule
,Base.work_telephone = Landing.work_telephone
,Base.coord_ben_med_pln_no = Landing.coord_ben_med_pln_no
,Base.coord_ben_no_cvg_flag = Landing.coord_ben_no_cvg_flag
,Base.dpdnt_adoption_date = Landing.dpdnt_adoption_date
,Base.dpdnt_vlntry_svce_flag = Landing.dpdnt_vlntry_svce_flag
,Base.receipt_of_death_cert_date = Landing.receipt_of_death_cert_date
,Base.uses_tobacco_flag = Landing.uses_tobacco_flag
,Base.benefit_group_id = Landing.benefit_group_id
,Base.request_id = Landing.request_id
,Base.program_application_id = Landing.program_application_id
,Base.program_id = Landing.program_id
,Base.program_update_date = Landing.program_update_date
,Base.attribute_category = Landing.attribute_category
,Base.attribute1 = Landing.attribute1
,Base.attribute2 = Landing.attribute2
,Base.attribute3 = Landing.attribute3
,Base.attribute4 = Landing.attribute4
,Base.attribute5 = Landing.attribute5
,Base.attribute6 = Landing.attribute6
,Base.attribute7 = Landing.attribute7
,Base.attribute8 = Landing.attribute8
,Base.attribute9 = Landing.attribute9
,Base.attribute10 = Landing.attribute10
,Base.attribute11 = Landing.attribute11
,Base.attribute12 = Landing.attribute12
,Base.attribute13 = Landing.attribute13
,Base.attribute14 = Landing.attribute14
,Base.attribute15 = Landing.attribute15
,Base.attribute16 = Landing.attribute16
,Base.attribute17 = Landing.attribute17
,Base.attribute18 = Landing.attribute18
,Base.attribute19 = Landing.attribute19
,Base.attribute20 = Landing.attribute20
,Base.attribute21 = Landing.attribute21
,Base.attribute22 = Landing.attribute22
,Base.attribute23 = Landing.attribute23
,Base.attribute24 = Landing.attribute24
,Base.attribute25 = Landing.attribute25
,Base.attribute26 = Landing.attribute26
,Base.attribute27 = Landing.attribute27
,Base.attribute28 = Landing.attribute28
,Base.attribute29 = Landing.attribute29
,Base.attribute30 = Landing.attribute30
,Base.last_update_date = Landing.last_update_date
,Base.last_updated_by = Landing.last_updated_by
,Base.last_update_login = Landing.last_update_login
,Base.created_by = Landing.created_by
,Base.creation_date = Landing.creation_date
,Base.per_information_category = Landing.per_information_category
,Base.per_information1 = Landing.per_information1
,Base.per_information2 = Landing.per_information2
,Base.per_information3 = Landing.per_information3
,Base.per_information4 = Landing.per_information4
,Base.per_information5 = Landing.per_information5
,Base.per_information6 = Landing.per_information6
,Base.per_information7 = Landing.per_information7
,Base.per_information8 = Landing.per_information8
,Base.per_information9 = Landing.per_information9
,Base.per_information10 = Landing.per_information10
,Base.per_information11 = Landing.per_information11
,Base.per_information12 = Landing.per_information12
,Base.per_information13 = Landing.per_information13
,Base.per_information14 = Landing.per_information14
,Base.per_information15 = Landing.per_information15
,Base.per_information16 = Landing.per_information16
,Base.per_information17 = Landing.per_information17
,Base.per_information18 = Landing.per_information18
,Base.per_information19 = Landing.per_information19
,Base.per_information20 = Landing.per_information20
,Base.per_information21 = Landing.per_information21
,Base.per_information22 = Landing.per_information22
,Base.per_information23 = Landing.per_information23
,Base.per_information24 = Landing.per_information24
,Base.per_information25 = Landing.per_information25
,Base.per_information26 = Landing.per_information26
,Base.per_information27 = Landing.per_information27
,Base.per_information28 = Landing.per_information28
,Base.per_information29 = Landing.per_information29
,Base.per_information30 = Landing.per_information30
,Base.object_version_number = Landing.object_version_number
,Base.date_of_death = Landing.date_of_death
,Base.original_date_of_hire = Landing.original_date_of_hire
,Base.town_of_birth = Landing.town_of_birth
,Base.region_of_birth = Landing.region_of_birth
,Base.country_of_birth = Landing.country_of_birth
,Base.global_person_id = Landing.global_person_id
,Base.coord_ben_med_pl_name = Landing.coord_ben_med_pl_name
,Base.coord_ben_med_insr_crr_name = Landing.coord_ben_med_insr_crr_name
,Base.coord_ben_med_insr_crr_ident = Landing.coord_ben_med_insr_crr_ident
,Base.coord_ben_med_ext_er = Landing.coord_ben_med_ext_er
,Base.coord_ben_med_cvg_strt_dt = Landing.coord_ben_med_cvg_strt_dt
,Base.coord_ben_med_cvg_end_dt = Landing.coord_ben_med_cvg_end_dt
,Base.party_id = Landing.party_id
,Base.npw_number = Landing.npw_number
,Base.current_npw_flag = Landing.current_npw_flag
,Base.global_name = Landing.global_name
,Base.local_name = Landing.local_name
,Base.[RowHash] = landing.RowHash
,Base.[BaseCreatedDate] = GETDATE()
,Base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_ALL_PEOPLE_F_B0] base
    JOIN [HR_Landing].dbo.[PER_ALL_PEOPLE_F_B0Landing] landing
        ON base.person_id = landing.person_id
	and base.effective_start_date= landing.effective_start_date
	AND base.effective_end_date = landing.effective_end_date
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1199,Package\First landing - Data Load,STOCK:SEQUENCE,First landing - Data Load,,,,,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1200,Package\First landing - Data Load\DFT - Load the Pre Landing table,Microsoft.Pipeline,DFT - Load the Pre Landing table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLE DB Destination,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1201,Package\First landing - Data Load\DFT - Load the Pre Landing table,Microsoft.Pipeline,DFT - Load the Pre Landing table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1202,Package\First landing - Data Load\DFT - Load the Pre Landing table,Microsoft.Pipeline,DFT - Load the Pre Landing table,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1203,Package\First landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1204,Package\First landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1205,Package\First landing - Data Load\SQL - Truncate First Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate First Landing Table,,,,,User::vPreLandingTruncateQuery,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1206,Package\First landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE Target
SET Target.RowHash = SRC.RowHash
FROM
(
    SELECT person_id,
 effective_start_date,
 effective_end_date,
           HASHBYTES(   'MD5',
           (
               SELECT [person_id],
                      [effective_start_date],
                      [effective_end_date],
                      [business_group_id],
                      [person_type_id],
                      [last_name],
                      [start_date],
                      [applicant_number],
                      [background_check_status],
                      [background_date_check],
                      [blood_type],
                      [comment_id],
                      [correspondence_language],
                      [current_applicant_flag],
                      [current_emp_or_apl_flag],
                      [current_employee_flag],
                      [date_employee_data_verified],
                      [date_of_birth],
                      [email_address],
                      [employee_number],
                      [expense_check_send_to_address],
                      [fast_path_employee],
                      [first_name],
                      [fte_capacity],
                      [full_name],
                      [hold_applicant_date_until],
                      [honors],
                      [internal_location],
                      [known_as],
                      [last_medical_test_by],
                      [last_medical_test_date],
                      [mailstop],
                      [marital_status],
                      [middle_names],
                      [nationality],
                      [national_identifier],
                      [office_number],
                      [on_military_service],
                      [order_name],
                      [pre_name_adjunct],
                      [previous_last_name],
                      [projected_start_date],
                      [rehire_authorizor],
                      [rehire_reason],
                      [rehire_recommendation],
                      [resume_exists],
                      [resume_last_updated],
                      [registered_disabled_flag],
                      [second_passport_exists],
                      [sex],
                      [student_status],
                      [suffix],
                      [title],
                      [vendor_id],
                      [work_schedule],
                      [work_telephone],
                      [coord_ben_med_pln_no],
                      [coord_ben_no_cvg_flag],
                      [dpdnt_adoption_date],
                      [dpdnt_vlntry_svce_flag],
                      [receipt_of_death_cert_date],
                      [uses_tobacco_flag],
                      [benefit_group_id],
                      [request_id],
                      [program_application_id],
                      [program_id],
                      [program_update_date],
                      [attribute_category],
                      [attribute1],
                      [attribute2],
                      [attribute3],
                      [attribute4],
                      [attribute5],
                      [attribute6],
                      [attribute7],
                      [attribute8],
                      [attribute9],
                      [attribute10],
                      [attribute11],
                      [attribute12],
                      [attribute13],
                      [attribute14],
                      [attribute15],
                      [attribute16],
                      [attribute17],
                      [attribute18],
                      [attribute19],
                      [attribute20],
                      [attribute21],
                      [attribute22],
                      [attribute23],
                      [attribute24],
                      [attribute25],
                      [attribute26],
                      [attribute27],
                      [attribute28],
                      [attribute29],
                      [attribute30],
                      [per_information_category],
                      [per_information1],
                      [per_information2],
                      [per_information3],
                      [per_information4],
                      [per_information5],
                      [per_information6],
                      [per_information7],
                      [per_information8],
                      [per_information9],
                      [per_information10],
                      [per_information11],
                      [per_information12],
                      [per_information13],
                      [per_information14],
                      [per_information15],
                      [per_information16],
                      [per_information17],
                      [per_information18],
                      [per_information19],
                      [per_information20],
                      [per_information21],
                      [per_information22],
                      [per_information23],
                      [per_information24],
                      [per_information25],
                      [per_information26],
                      [per_information27],
                      [per_information28],
                      [per_information29],
                      [per_information30],
                      [object_version_number],
                      [date_of_death],
                      [original_date_of_hire],
                      [town_of_birth],
                      [region_of_birth],
                      [country_of_birth],
                      [global_person_id],
                      [coord_ben_med_pl_name],
                      [coord_ben_med_insr_crr_name],
                      [coord_ben_med_insr_crr_ident],
                      [coord_ben_med_ext_er],
                      [coord_ben_med_cvg_strt_dt],
                      [coord_ben_med_cvg_end_dt],
                      [party_id],
                      [npw_number],
                      [current_npw_flag],
                      [global_name],
                      [local_name]
               FOR XML RAW
           )
                    ) AS RowHash
    FROM [dbo].[PER_ALL_PEOPLE_F_B0PreLanding]
) SRC
    JOIN [dbo].[PER_ALL_PEOPLE_F_B0PreLanding] Target
        ON SRC.person_id = Target.person_id
           AND  SRC.effective_start_date= Target.effective_start_date
           AND SRC.effective_end_date = Target.effective_end_date;
SELECT @@ROWCOUNT AS UpdateCount;


",DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1207,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1208,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1209,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1210,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1211,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - landing,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1212,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1213,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLE DB Source,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1214,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1215,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1216,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All Error Records,,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1217,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1218,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1219,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1220,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_ALL_PEOPLE_F_B0
1221,Package,Microsoft.Package,PER_ANALYSIS_CRITERIA_B0,,,,,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1222,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1223,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1224,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1225,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1226,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1227,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1228,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"
DELETE FROM base
FROM dbo.[PER_ANALYSIS_CRITERIA_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ANALYSIS_CRITERIA_B0Landing] landing
    WHERE base.analysis_criteria_id= landing.analysis_criteria_id
);

SELECT @@ROWCOUNT AS DeleteCount ;
",DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1229,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1230,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[analysis_criteria_id] = landing.analysis_criteria_id
      ,base.[request_id] = landing.request_id
      ,base.[program_application_id] = landing.program_application_id
      ,base.[program_id] = landing.program_id
      ,base.[program_update_date] = landing.program_update_date
      ,base.[id_flex_num] = landing.id_flex_num
	 ,base.[summary_flag] = landing.summary_flag
	 ,base.[enabled_flag] = landing.enabled_flag
	 ,base.[start_date_active] = landing.start_date_active
      ,base.[end_date_active] = landing.end_date_active
      ,base.[segment1] = landing.segment1
      ,base.[segment2] = landing.segment2
      ,base.[segment3] = landing.segment3
      ,base.[segment4] = landing.segment4
      ,base.[segment5] = landing.segment5
      ,base.[segment6] = landing.segment6
      ,base.[segment7] = landing.segment7
      ,base.[segment8] = landing.segment8
      ,base.[segment9] = landing.segment9
      ,base.[segment10] = landing.segment10
      ,base.[segment11] = landing.segment11
      ,base.[segment12] = landing.segment12
      ,base.[segment13] = landing.segment13
      ,base.[segment14] = landing.segment14
      ,base.[segment15] = landing.segment15
      ,base.[segment16] = landing.segment16
      ,base.[segment17] = landing.segment17
      ,base.[segment18] = landing.segment18
      ,base.[segment19] = landing.segment19
      ,base.[segment20] = landing.segment20
      ,base.[segment21] = landing.segment21
      ,base.[segment22] = landing.segment22
      ,base.[segment23] = landing.segment23
      ,base.[segment24] = landing.segment24
      ,base.[segment25] = landing.segment25
      ,base.[segment26] = landing.segment26
      ,base.[segment27] = landing.segment27
      ,base.[segment28] = landing.segment28
      ,base.[segment29] = landing.segment29
      ,base.[segment30] = landing.segment30
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[creation_date] = landing.creation_date
      ,base.[created_by] = landing.created_by
      ,base.[last_update_login] = landing.last_update_login
	 ,base.[object_version_number] = landing.object_version_number
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_ANALYSIS_CRITERIA_B0] base
JOIN [HR_Landing].dbo.[PER_ANALYSIS_CRITERIA_B0Landing] landing ON base.analysis_criteria_id = landing.analysis_criteria_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1231,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1232,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1233,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1234,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1235,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1236,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1237,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1238,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1239,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1240,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1241,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1242,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1243,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1244,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1245,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [analysis_criteria_id],
HASHBYTES('MD5',
(SELECT  [analysis_criteria_id]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
	 ,[id_flex_num]
	 ,[summary_flag]
	 ,[enabled_flag]
      ,[start_date_active]
      ,[end_date_active]
      ,[segment1]
      ,[segment2]
      ,[segment3]
      ,[segment4]
      ,[segment5]
      ,[segment6]
      ,[segment7]
      ,[segment8]
      ,[segment9]
      ,[segment10]
      ,[segment11]
      ,[segment12]
      ,[segment13]
      ,[segment14]
      ,[segment15]
      ,[segment16]
      ,[segment17]
      ,[segment18]
      ,[segment19]
      ,[segment20]
      ,[segment21]
      ,[segment22]
      ,[segment23]
      ,[segment24]
      ,[segment25]
      ,[segment26]
      ,[segment27]
      ,[segment28]
      ,[segment29]
      ,[segment30]
	 ,[object_version_number]
       FOR XML RAW)) AS RowHash
FROM [dbo].PER_ANALYSIS_CRITERIA_B0Landing l)src
JOIN [dbo].PER_ANALYSIS_CRITERIA_B0Landing TARGET ON src.[analysis_criteria_id] = TARGET.[analysis_criteria_id]


SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ANALYSIS_CRITERIA_B0
1246,Package,Microsoft.Package,PER_ASSIGNMENT_STATUS_TYPES_B0,,,,,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1247,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1248,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1249,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1250,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1251,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1252,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1253,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_ASSIGNMENT_STATUS_TYPES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ASSIGNMENT_STATUS_TYPES_B0Landing] landing
    WHERE base.[assignment_status_type_id] = landing.[assignment_status_type_id]
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1254,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1255,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET  base.[assignment_status_type_id] =  landing.[assignment_status_type_id]
      , base.[business_group_id]         =  landing.[business_group_id]
      , base.[legislation_code]          =  landing.[legislation_code]
      , base.[active_flag]               =  landing.[active_flag]
      , base.[default_flag]              =  landing.[default_flag]
      , base.[primary_flag]              =  landing.[primary_flag]
      , base.[user_status]               =  landing.[user_status]
      , base.[pay_system_status]         =  landing.[pay_system_status]
      , base.[per_system_status]         =  landing.[per_system_status]
      , base.[last_update_date]          =  landing.[last_update_date]
      , base.[last_updated_by]           =  landing.[last_updated_by]
      , base.[last_update_login]         =  landing.[last_update_login]
      , base.[created_by]                =  landing.[created_by]
      , base.[creation_date]             =  landing.[creation_date]
      , base.[zd_edition_name]           =  landing.[zd_edition_name]
      , base.[datalakeinserttime]        =  landing.[datalakeinserttime]
      , base.[RowHash]                   =  landing.[RowHash]
      , base.[BaseCreatedDate]           =  GETDATE()
      , base.[BaseCreatedBy]             =  suser_sname()
FROM [HR_Base].dbo.[PER_ASSIGNMENT_STATUS_TYPES_B0] base
JOIN [HR_Landing].dbo.[PER_ASSIGNMENT_STATUS_TYPES_B0Landing] landing ON base.[assignment_status_type_id] = landing.[assignment_status_type_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1256,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1257,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1258,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1259,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1260,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1261,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1262,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1263,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1264,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1265,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1266,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1267,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1268,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1269,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1270,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [assignment_status_type_id],
HASHBYTES('MD5',
(SELECT [assignment_status_type_id]
      ,[business_group_id]
      ,[legislation_code]
      ,[active_flag]
      ,[default_flag]
      ,[primary_flag]
      ,[user_status]
      ,[pay_system_status]
      ,[per_system_status]
      ,[zd_edition_name] FOR XML RAW)) AS RowHash
FROM [dbo].PER_ASSIGNMENT_STATUS_TYPES_B0Landing l)src
JOIN [dbo].PER_ASSIGNMENT_STATUS_TYPES_B0Landing TARGET ON src.[assignment_status_type_id] = TARGET.[assignment_status_type_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ASSIGNMENT_STATUS_TYPES_B0
1271,Package,Microsoft.Package,PER_COMPETENCES_B0,,,,,,DataLakeHRISToBase_PER_COMPETENCES_B0
1272,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_COMPETENCES_B0
1273,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_COMPETENCES_B0
1274,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_COMPETENCES_B0
1275,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_COMPETENCES_B0
1276,Package\Base - Data Load\SQL - Begin Base Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_COMPETENCES_B0
1277,Package\Base - Data Load\SQL - Delete records,Microsoft.ExecuteSQLTask,SQL - Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_COMPETENCES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_COMPETENCES_B0Landing] landing
    WHERE base.competence_id = landing.competence_id
);

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeHRISToBase_PER_COMPETENCES_B0
1278,Package\Base - Data Load\SQL - End Base Audit Log,Microsoft.ExecuteSQLTask,SQL - End Base Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_COMPETENCES_B0
1279,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_COMPETENCES_B0
1280,Package\Base - Data Load\SQL - Update Modified Records,Microsoft.ExecuteSQLTask,SQL - Update Modified Records,,,,,"UPDATE base 
   SET 
       base.[competence_id] = landing.competence_id
      ,base.[business_group_id] = landing.business_group_id
      ,base.[object_version_number] = landing.object_version_number
      ,base.[name] = landing.[name]
      ,base.[description] = landing.description
      ,base.[date_from] = landing.date_from
      ,base.[date_to] = landing.date_to
      ,base.[behavioural_indicator] = landing.behavioural_indicator
      ,base.[certification_required] = landing.certification_required
      ,base.[evaluation_method] = landing.evaluation_method
      ,base.[renewal_period_frequency] = landing.renewal_period_frequency
      ,base.[renewal_period_units] = landing.renewal_period_units
      ,base.[max_level] = landing.max_level
      ,base.[min_level] = landing.min_level
      ,base.[rating_scale_id] = landing.rating_scale_id
      ,base.[attribute_category] = landing.attribute_category
      ,base.[attribute1] = landing.attribute1
      ,base.[attribute2] = landing.attribute2
      ,base.[attribute3] = landing.attribute3
      ,base.[attribute4] = landing.attribute4
      ,base.[attribute5] = landing.attribute5
      ,base.[attribute6] = landing.attribute6
      ,base.[attribute7] = landing.attribute7
      ,base.[attribute8] = landing.attribute8
      ,base.[attribute9] = landing.attribute9
      ,base.[attribute10] = landing.attribute10
      ,base.[attribute11] = landing.attribute11
      ,base.[attribute12] = landing.attribute12
      ,base.[attribute13] = landing.attribute13
      ,base.[attribute14] = landing.attribute14
      ,base.[attribute15] = landing.attribute15
      ,base.[attribute16] = landing.attribute16
      ,base.[attribute17] = landing.attribute17
      ,base.[attribute18] = landing.attribute18
      ,base.[attribute19] = landing.attribute19
      ,base.[attribute20] = landing.attribute20
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_update_login] = landing.last_update_login
      ,base.[created_by] = landing.created_by
      ,base.[creation_date] = landing.creation_date
      ,base.[competence_definition_id] = landing.competence_definition_id
      ,base.[competence_alias] = landing.competence_alias
      ,base.[competence_cluster] = landing.competence_cluster
      ,base.[unit_standard_id] = landing.unit_standard_id
      ,base.[credit_type] = landing.credit_type
      ,base.[credits] = landing.credits
      ,base.[level_type] = landing.level_type
      ,base.[level_number] = landing.level_number
      ,base.[field] = landing.field
      ,base.[sub_field] = landing.sub_field
      ,base.[provider] = landing.provider
      ,base.[qa_organization] = landing.qa_organization
      ,base.[information_category] = landing.information_category
      ,base.[information1] = landing.information1
      ,base.[information2] = landing.information2
      ,base.[information3] = landing.information3
      ,base.[information4] = landing.information4
      ,base.[information5] = landing.information5
      ,base.[information6] = landing.information6
      ,base.[information7] = landing.information7
      ,base.[information8] = landing.information8
      ,base.[information9] = landing.information9
      ,base.[information10] = landing.information10
      ,base.[information11] = landing.information11
      ,base.[information12] = landing.information12
      ,base.[information13] = landing.information13
      ,base.[information14] = landing.information14
      ,base.[information15] = landing.information15
      ,base.[information16] = landing.information16
      ,base.[information17] = landing.information17
      ,base.[information18] = landing.information18
      ,base.[information19] = landing.information19
      ,base.[information20] = landing.information20
      ,base.datalakeinserttime = landing.datalakeinserttime
	  ,base.RowHash = landing.RowHash
	  ,base.[BaseCreatedDate] = GETDATE()
	  ,base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_COMPETENCES_B0] base
JOIN [HR_Landing].dbo.[PER_COMPETENCES_B0Landing] landing 
	ON base.competence_id = landing.competence_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;



",DataLakeHRISToBase_PER_COMPETENCES_B0
1281,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_COMPETENCES_B0
1282,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_COMPETENCES_B0
1283,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing0,,DataLakeHRISToBase_PER_COMPETENCES_B0
1284,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_COMPETENCES_B0
1285,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_COMPETENCES_B0
1286,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_COMPETENCES_B0
1287,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_PER_COMPETENCES_B0
1288,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_COMPETENCES_B0
1289,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_COMPETENCES_B0
1290,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_COMPETENCES_B0
1291,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_COMPETENCES_B0
1292,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_COMPETENCES_B0
1293,Package\Landing - Data Load\SQL - Update RowHash,Microsoft.ExecuteSQLTask,SQL - Update RowHash,,,,,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	competence_id,
	HASHBYTES('MD5',
(SELECT
	[competence_id],
	[business_group_id],
	[object_version_number],
	[name],
	[description],
	[date_from],
	[date_to],
	[behavioural_indicator],
	[certification_required],
	[evaluation_method],
	[renewal_period_frequency],
	[renewal_period_units],
	[max_level],
	[min_level],
	[rating_scale_id],
	[attribute_category],
	[attribute1],
	[attribute2],
	[attribute3],
	[attribute4],
	[attribute5], 
	[attribute6], 
	[attribute7], 
	[attribute8], 
	[attribute9], 
	[attribute10],
	[attribute11],
	[attribute12],
	[attribute13],
	[attribute14],
	[attribute15],
	[attribute16],
	[attribute17],
	[attribute18],
	[attribute19],
	[attribute20],
	[competence_definition_id],
	[competence_alias],
	[competence_cluster],
	[unit_standard_id],
	[credit_type],
	[credits],
	[level_type],
	[level_number],
	[field],
	[sub_field],
	[provider],
	[qa_organization],
	[information_category],
	[information1],
	[information2],
	[information3],
	[information4],
	[information5],
	[information6],
	[information7],
	[information8],
	[information9],
	[information10],
	[information11],
	[information12],
	[information13],
	[information14],
	[information15],
	[information16],
	[information17],
	[information18],
	[information19],
	[information20]
	FOR XML RAW)) AS RowHash
FROM dbo.PER_COMPETENCES_B0Landing l) src
JOIN dbo.PER_COMPETENCES_B0Landing target ON src.[competence_id] = target.[competence_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_COMPETENCES_B0
1294,Package,Microsoft.Package,PER_COMPETENCE_ELEMENTS_B0,,,,,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1295,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1296,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1297,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1298,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1299,Package\Base - Data Load\SQL - Begin Base Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1300,Package\Base - Data Load\SQL - Delete records,Microsoft.ExecuteSQLTask,SQL - Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_COMPETENCE_ELEMENTS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_COMPETENCE_ELEMENTS_B0Landing] landing
    WHERE base.competence_element_id = landing.competence_element_id
);

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1301,Package\Base - Data Load\SQL - End Base Audit Log,Microsoft.ExecuteSQLTask,SQL - End Base Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1302,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1303,Package\Base - Data Load\SQL - Update Modified Records,Microsoft.ExecuteSQLTask,SQL - Update Modified Records,,,,,"UPDATE base SET 
	base.competence_element_id = landing.competence_element_id,
	base.business_group_id = landing.business_group_id,
	base.object_version_number = landing.object_version_number,
	base.[type] = landing.[type],
	base.competence_id = landing.competence_id,
	base.member_competence_set_id = landing.member_competence_set_id,
	base.proficiency_level_id = landing.proficiency_level_id,
	base.high_proficiency_level_id = landing.high_proficiency_level_id,
	base.weighting_level_id = landing.weighting_level_id,
	base.rating_level_id = landing.rating_level_id,
	base.person_id = landing.person_id,
	base.enterprise_id = landing.enterprise_id,
	base.job_id = landing.job_id,
	base.valid_grade_id = landing.valid_grade_id,
	base.position_id = landing.position_id,
	base.organization_id = landing.organization_id,
	base.work_item_id = landing.work_item_id,
	base.competence_set_id = landing.competence_set_id,
	base.parent_competence_element_id = landing.parent_competence_element_id,
	base.activity_version_id = landing.activity_version_id,
	base.assessment_id = landing.assessment_id,
	base.assessment_type_id = landing.assessment_type_id,
	base.mandatory = landing.mandatory,
	base.effective_date_from = landing.effective_date_from,
	base.effective_date_to = landing.effective_date_to,
	base.group_competence_type = landing.group_competence_type,
	base.competence_type = landing.competence_type,
	base.sequence_number = landing.sequence_number,
	base.normal_elapse_duration = landing.normal_elapse_duration,
	base.normal_elapse_duration_unit = landing.normal_elapse_duration_unit,
	base.source_of_proficiency_level = landing.source_of_proficiency_level,
	base.line_score = landing.line_score,
	base.certification_date = landing.certification_date,
	base.certification_method = landing.certification_method,
	base.next_certification_date = landing.next_certification_date,
	base.attribute_category = landing.attribute_category,
	base.attribute1 = landing.attribute1,
	base.attribute2 = landing.attribute2,
	base.attribute3 = landing.attribute3,
	base.attribute4 = landing.attribute4,
	base.attribute5 = landing.attribute5,
	base.attribute6 = landing.attribute6,
	base.attribute7 = landing.attribute7,
	base.attribute8 = landing.attribute8,
	base.attribute9 = landing.attribute9,
	base.attribute10 = landing.attribute10,
	base.attribute11 = landing.attribute11,
	base.attribute12 = landing.attribute12,
	base.attribute13 = landing.attribute13,
	base.attribute14 = landing.attribute14,
	base.attribute15 = landing.attribute15,
	base.attribute16 = landing.attribute16,
	base.attribute17 = landing.attribute17,
	base.attribute18 = landing.attribute18,
	base.attribute19 = landing.attribute19,
	base.attribute20 = landing.attribute20,
	base.last_update_date = landing.last_update_date,
	base.last_updated_by = landing.last_updated_by,
	base.last_update_login = landing.last_update_login,
	base.created_by = landing.created_by,
	base.creation_date = landing.creation_date,
	base.[object_id] = landing.[object_id],
	base.[object_name] = landing.[object_name],
	base.party_id = landing.party_id,
	base.qualification_type_id = landing.qualification_type_id,
	base.unit_standard_type = landing.unit_standard_type,
	base.[status] = landing.[status],
	base.information_category = landing.information_category,
	base.information1 = landing.information1,
	base.information2 = landing.information2,
	base.information3 = landing.information3,
	base.information4 = landing.information4,
	base.information5 = landing.information5,
	base.information6 = landing.information6,
	base.information7 = landing.information7,
	base.information8 = landing.information8,
	base.information9 = landing.information9,
	base.information10 = landing.information10,
	base.information11 = landing.information11,
	base.information12 = landing.information12,
	base.information13 = landing.information13,
	base.information14 = landing.information14,
	base.information15 = landing.information15,
	base.information16 = landing.information16,
	base.information17 = landing.information17,
	base.information18 = landing.information18,
	base.information19 = landing.information19,
	base.information20 = landing.information20,
	base.achieved_date = landing.achieved_date,
	base.appr_line_score = landing.appr_line_score,
	base.[comments#1] = landing.[comments#1],
	base.datalakeinserttime = landing.datalakeinserttime,
	base.RowHash = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_COMPETENCE_ELEMENTS_B0] base
JOIN [HR_Landing].dbo.[PER_COMPETENCE_ELEMENTS_B0Landing] landing 
	ON base.competence_element_id = landing.competence_element_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;

",DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1304,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1305,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1306,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1307,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1308,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1309,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Add ErrorColumns,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1310,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1311,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1312,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1313,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1314,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1315,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1316,Package\Landing - Data Load\SQL - Update RowHash,Microsoft.ExecuteSQLTask,SQL - Update RowHash,,,,,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	competence_element_id,
	HASHBYTES('MD5',
(SELECT
	competence_element_id,
	business_group_id,
	object_version_number,
	[type],
	competence_id,
	member_competence_set_id,
	proficiency_level_id,
	high_proficiency_level_id,
	weighting_level_id,
	rating_level_id,
	person_id,
	enterprise_id,
	job_id,
	valid_grade_id,
	position_id,
	organization_id,
	work_item_id,
	competence_set_id,
	parent_competence_element_id,
	activity_version_id,
	assessment_id,
	assessment_type_id,
	mandatory,
	effective_date_from,
	effective_date_to,
	group_competence_type,
	competence_type,
	sequence_number,
	normal_elapse_duration,
	normal_elapse_duration_unit,
	source_of_proficiency_level,
	line_score,
	certification_date,
	certification_method,
	next_certification_date,
	attribute_category,
	attribute1,
	attribute2,
	attribute3,
	attribute4,
	attribute5,
	attribute6,
	attribute7,
	attribute8,
	attribute9,
	attribute10,
	attribute11,
	attribute12,
	attribute13,
	attribute14,
	attribute15,
	attribute16,
	attribute17,
	attribute18,
	attribute19,
	attribute20,
	[object_id],
	[object_name],
	party_id,
	qualification_type_id,
	unit_standard_type,
	[status],
	information_category,
	information1,
	information2,
	information3,
	information4,
	information5,
	information6,
	information7,
	information8,
	information9,
	information10,
	information11,
	information12,
	information13,
	information14,
	information15,
	information16,
	information17,
	information18,
	information19,
	information20,
	achieved_date,
	appr_line_score,
	[comments#1]
	FOR XML RAW)) AS RowHash
FROM dbo.PER_COMPETENCE_ELEMENTS_B0Landing l) src
JOIN dbo.PER_COMPETENCE_ELEMENTS_B0Landing target ON src.[competence_element_id] = target.[competence_element_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_COMPETENCE_ELEMENTS_B0
1317,Package,Microsoft.Package,PER_GRADES_B0,,,,,,DataLakeHRISToBase_PER_GRADES_B0
1318,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_GRADES_B0
1319,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_GRADES_B0
1320,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_GRADES_B0
1321,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_GRADES_B0
1322,Package\Base - Data Load\SQL - Begin Base Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_GRADES_B0
1323,Package\Base - Data Load\SQL - Delete records,Microsoft.ExecuteSQLTask,SQL - Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_GRADES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_GRADES_B0Landing] landing
    WHERE base.grade_id = landing.grade_id
);

SELECT @@ROWCOUNT AS DeleteCount;",DataLakeHRISToBase_PER_GRADES_B0
1324,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_GRADES_B0
1325,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_GRADES_B0
1326,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base SET 
	base.business_group_id = landing.business_group_id,
	base.grade_definition_id = landing.grade_definition_id,
	base.date_from = landing.date_from,
	base.[sequence] = landing.[sequence],
	base.date_to = landing.date_to,
	base.[name] = landing.[name],
	base.request_id = landing.request_id,
	base.program_application_id = landing.program_application_id,
	base.program_id = landing.program_id,
	base.program_update_date = landing.program_update_date,
	base.attribute_category = landing.attribute_category,
	base.attribute1 = landing.attribute1,
	base.attribute2 = landing.attribute2,
	base.attribute3 = landing.attribute3,
	base.attribute4 = landing.attribute4,
	base.attribute5 = landing.attribute5,
	base.attribute6 = landing.attribute6,
	base.attribute7 = landing.attribute7,
	base.attribute8 = landing.attribute8,
	base.attribute9 = landing.attribute9,
	base.attribute10 = landing.attribute10,
	base.attribute11 = landing.attribute11,
	base.attribute12 = landing.attribute12,
	base.attribute13 = landing.attribute13,
	base.attribute14 = landing.attribute14,
	base.attribute15 = landing.attribute15,
	base.attribute16 = landing.attribute16,
	base.attribute17 = landing.attribute17,
	base.attribute18 = landing.attribute18,
	base.attribute19 = landing.attribute19,
	base.attribute20 = landing.attribute20,
	base.last_update_date = landing.last_update_date,
	base.last_updated_by = landing.last_updated_by,
	base.last_update_login = landing.last_update_login,
	base.created_by = landing.created_by,
	base.creation_date = landing.creation_date,
	base.information_category = landing.information_category,
	base.information1 = landing.information1,
	base.information2 = landing.information2,
	base.information3 = landing.information3,
	base.information4 = landing.information4,
	base.information5 = landing.information5,
	base.information6 = landing.information6,
	base.information7 = landing.information7,
	base.information8 = landing.information8,
	base.information9 = landing.information9,
	base.information10 = landing.information10,
	base.information11 = landing.information11,
	base.information12 = landing.information12,
	base.information13 = landing.information13,
	base.information14 = landing.information14,
	base.information15 = landing.information15,
	base.information16 = landing.information16,
	base.information17 = landing.information17,
	base.information18 = landing.information18,
	base.information19 = landing.information19,
	base.information20 = landing.information20,
	base.object_version_number = landing.object_version_number,
	base.short_name = landing.short_name,
	base.comments = landing.comments,
	base.datalakeinserttime = landing.datalakeinserttime,
	base.[RowHash] = landing.RowHash,
	base.[BaseCreatedDate] = GETDATE(),
	base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_GRADES_B0] base
JOIN [HR_Landing].dbo.[PER_GRADES_B0Landing] landing 
	ON base.grade_id = landing.grade_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;
",DataLakeHRISToBase_PER_GRADES_B0
1327,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_GRADES_B0
1328,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_GRADES_B0
1329,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_GRADES_B0
1330,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_GRADES_B0
1331,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_GRADES_B0
1332,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_GRADES_B0
1333,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_GRADES_B0
1334,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake table,,DataLakeHRISToBase_PER_GRADES_B0
1335,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_GRADES_B0
1336,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All 1,,DataLakeHRISToBase_PER_GRADES_B0
1337,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_GRADES_B0
1338,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_GRADES_B0
1339,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_GRADES_B0
1340,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_GRADES_B0
1341,Package\Landing - Data Load\SQL - Update RowHash,Microsoft.ExecuteSQLTask,SQL - Update RowHash,,,,,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	grade_id,
	HASHBYTES('MD5',
(SELECT
	grade_id,
	business_group_id,
	grade_definition_id,
	date_from,
	[sequence],
	date_to,
	[name],
	request_id,
	program_application_id,
	program_id,
	program_update_date,
	attribute_category,
	attribute1,
	attribute2,
	attribute3,
	attribute4,
	attribute5,
	attribute6,
	attribute7,
	attribute8,
	attribute9,
	attribute10,
	attribute11,
	attribute12,
	attribute13,
	attribute14,
	attribute15,
	attribute16,
	attribute17,
	attribute18,
	attribute19,
	attribute20,
	information_category,
	information1,
	information2,
	information3,
	information4,
	information5,
	information6,
	information7,
	information8,
	information9,
	information10,
	information11,
	information12,
	information13,
	information14,
	information15,
	information16,
	information17,
	information18,
	information19,
	information20,
	object_version_number,
	short_name,
	comments
	FOR XML RAW)) AS RowHash
FROM dbo.PER_GRADES_B0Landing l) src
JOIN dbo.PER_GRADES_B0Landing target ON src.grade_id = target.grade_id

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_GRADES_B0
1342,Package,Microsoft.Package,PER_JOBS_B0,,,,,,DataLakeHRISToBase_PER_JOBS_B0
1343,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_JOBS_B0
1344,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BASE table,,DataLakeHRISToBase_PER_JOBS_B0
1345,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_JOBS_B0
1346,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_JOBS_B0
1347,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_JOBS_B0
1348,Package\Base - Data Load\SQL - End Base Audit Log,Microsoft.ExecuteSQLTask,SQL - End Base Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_JOBS_B0
1349,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.PER_JOBS_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.PER_JOBS_B0Landing landing
    WHERE base.job_id = landing.job_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_JOBS_B0
1350,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_JOBS_B0
1351,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
SET BASE.[job_id]  =  Landing.[job_id]
,BASE.[business_group_id]  =  Landing.[business_group_id]
,BASE.[job_definition_id]  =  Landing.[job_definition_id]
,BASE.[date_from]  =  Landing.[date_from]
,BASE.[date_to]  =  Landing.[date_to]
,BASE.[name]  =  Landing.[name]
,BASE.[request_id]  =  Landing.[request_id]
,BASE.[program_application_id]  =  Landing.[program_application_id]
,BASE.[program_id]  =  Landing.[program_id]
,BASE.[program_update_date]  =  Landing.[program_update_date]
,BASE.[attribute_category]  =  Landing.[attribute_category]
,BASE.[attribute1]  =  Landing.[attribute1]
,BASE.[attribute2]  =  Landing.[attribute2]
,BASE.[attribute3]  =  Landing.[attribute3]
,BASE.[attribute4]  =  Landing.[attribute4]
,BASE.[attribute5]  =  Landing.[attribute5]
,BASE.[attribute6]  =  Landing.[attribute6]
,BASE.[attribute7]  =  Landing.[attribute7]
,BASE.[attribute8]  =  Landing.[attribute8]
,BASE.[attribute9]  =  Landing.[attribute9]
,BASE.[attribute10]  =  Landing.[attribute10]
,BASE.[attribute11]  =  Landing.[attribute11]
,BASE.[attribute12]  =  Landing.[attribute12]
,BASE.[attribute13]  =  Landing.[attribute13]
,BASE.[attribute14]  =  Landing.[attribute14]
,BASE.[attribute15]  =  Landing.[attribute15]
,BASE.[attribute16]  =  Landing.[attribute16]
,BASE.[attribute17]  =  Landing.[attribute17]
,BASE.[attribute18]  =  Landing.[attribute18]
,BASE.[attribute19]  =  Landing.[attribute19]
,BASE.[attribute20]  =  Landing.[attribute20]
,BASE.[last_update_date]  =  Landing.[last_update_date]
,BASE.[last_updated_by]  =  Landing.[last_updated_by]
,BASE.[last_update_login]  =  Landing.[last_update_login]
,BASE.[created_by]  =  Landing.[created_by]
,BASE.[creation_date]  =  Landing.[creation_date]
,BASE.[job_information_category]  =  Landing.[job_information_category]
,BASE.[job_information1]  =  Landing.[job_information1]
,BASE.[job_information2]  =  Landing.[job_information2]
,BASE.[job_information3]  =  Landing.[job_information3]
,BASE.[job_information4]  =  Landing.[job_information4]
,BASE.[job_information5]  =  Landing.[job_information5]
,BASE.[job_information6]  =  Landing.[job_information6]
,BASE.[job_information7]  =  Landing.[job_information7]
,BASE.[job_information8]  =  Landing.[job_information8]
,BASE.[job_information9]  =  Landing.[job_information9]
,BASE.[job_information10]  =  Landing.[job_information10]
,BASE.[job_information11]  =  Landing.[job_information11]
,BASE.[job_information12]  =  Landing.[job_information12]
,BASE.[job_information13]  =  Landing.[job_information13]
,BASE.[job_information14]  =  Landing.[job_information14]
,BASE.[job_information15]  =  Landing.[job_information15]
,BASE.[object_version_number]  =  Landing.[object_version_number]
,BASE.[job_information16]  =  Landing.[job_information16]
,BASE.[job_information17]  =  Landing.[job_information17]
,BASE.[job_information18]  =  Landing.[job_information18]
,BASE.[job_information19]  =  Landing.[job_information19]
,BASE.[job_information20]  =  Landing.[job_information20]
,BASE.[benchmark_job_flag]  =  Landing.[benchmark_job_flag]
,BASE.[benchmark_job_id]  =  Landing.[benchmark_job_id]
,BASE.[emp_rights_flag]  =  Landing.[emp_rights_flag]
,BASE.[job_group_id]  =  Landing.[job_group_id]
,BASE.[approval_authority]  =  Landing.[approval_authority]
,BASE.[comments]  =  Landing.[comments]
,BASE.[datalakeinserttime]  =  Landing.[datalakeinserttime]

   , base.[RowHash] = landing.[RowHash],
    base.[BaseCreatedDate] = GETDATE(),
    base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_JOBS_B0] base
    JOIN [HR_Landing].dbo.[PER_JOBS_B0Landing] landing
        ON base.job_id = landing.job_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_JOBS_B0
1352,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_JOBS_B0
1353,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_JOBS_B0
1354,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_JOBS_B0
1355,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_JOBS_B0
1356,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_JOBS_B0
1357,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST_ Landing,,DataLakeHRISToBase_PER_JOBS_B0
1358,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_JOBS_B0
1359,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Datalake,,DataLakeHRISToBase_PER_JOBS_B0
1360,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_JOBS_B0
1361,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_JOBS_B0
1362,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_JOBS_B0
1363,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_JOBS_B0
1364,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_JOBS_B0
1365,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_JOBS_B0
1366,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE TARGET 
SET target.RowHash=SRC.RowHash
FROM 
(SELECT Job_id,
HASHBYTES('MD5',


(SELECT  [job_id]
      ,[business_group_id]
      ,[job_definition_id]
      ,[date_from]
      ,[date_to]
      ,[name]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[job_information_category]
      ,[job_information1]
      ,[job_information2]
      ,[job_information3]
      ,[job_information4]
      ,[job_information5]
      ,[job_information6]
      ,[job_information7]
      ,[job_information8]
      ,[job_information9]
      ,[job_information10]
      ,[job_information11]
      ,[job_information12]
      ,[job_information13]
      ,[job_information14]
      ,[job_information15]
      ,[object_version_number]
      ,[job_information16]
      ,[job_information17]
      ,[job_information18]
      ,[job_information19]
      ,[job_information20]
      ,[benchmark_job_flag]
      ,[benchmark_job_id]
      ,[emp_rights_flag]
      ,[job_group_id]
      ,[approval_authority]
      ,[comments] FOR XML RAW)) AS RowHash

  FROM [HR_Landing].[dbo].[PER_JOBS_B0Landing]) SRC
  JOIN [HR_Landing].[dbo].[PER_JOBS_B0Landing] Target ON SRC.Job_id=Target.Job_id


   SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_JOBS_B0
1367,Package,Microsoft.Package,PER_JOB_GROUPS_B0,,,,,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1368,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1369,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1370,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1371,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1372,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_JOB_GROUPS_B0
1373,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_JOB_GROUPS_B0
1374,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_JOB_GROUPS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_JOB_GROUPS_B0Landing] landing
    WHERE base.job_group_id = landing.job_group_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_JOB_GROUPS_B0
1375,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1376,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET  base.job_group_id = landing.job_group_id
      , base.business_group_id = landing.business_group_id
      , base.legislation_code = landing.legislation_code
      , base.internal_name = landing.internal_name
      , base.displayed_name = landing.displayed_name
      , base.id_flex_num = landing.id_flex_num
      , base.master_flag = landing.master_flag
      , base.object_version_number = landing.object_version_number
      , base.[last_update_date] = landing.last_update_date
      , base.[last_updated_by] = landing.last_updated_by
      , base.[last_update_login] = landing.last_update_login
      , base.[created_by] = landing.created_by
      , base.[creation_date] = landing.creation_date
      , base.[datalakeinserttime] = landing.datalakeinserttime
      , base.[RowHash] = landing.RowHash
      , base.[BaseCreatedDate] = GETDATE()
      , base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_JOB_GROUPS_B0] base
JOIN [HR_Landing].dbo.[PER_JOB_GROUPS_B0Landing] landing ON base.job_group_id = landing.job_group_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_JOB_GROUPS_B0
1377,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1378,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1379,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1380,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1381,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1382,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1383,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1384,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1385,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_JOB_GROUPS_B0
1386,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_JOB_GROUPS_B0
1387,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1388,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_JOB_GROUPS_B0
1389,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [job_group_id],
HASHBYTES('MD5',
(SELECT [job_group_id]
      ,[business_group_id]
      ,[legislation_code]
      ,[internal_name]
      ,[displayed_name]
      ,[id_flex_num]
      ,[master_flag]
      ,[object_version_number]
FOR XML RAW)) AS RowHash
FROM [dbo].PER_JOB_GROUPS_B0Landing l)src
JOIN [dbo].PER_JOB_GROUPS_B0Landing TARGET ON src.[job_group_id] = TARGET.[job_group_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_JOB_GROUPS_B0
1390,Package,Microsoft.Package,PER_ORGANIZATION_STRUCTURES_B0,,,,,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1391,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1392,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1393,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1394,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1395,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1396,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1397,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_ORGANIZATION_STRUCTURES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_ORGANIZATION_STRUCTURES_B0Landing] landing
    WHERE base.organization_structure_id = landing.organization_structure_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1398,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1399,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET  base.[organization_structure_id]		=   landing.[organization_structure_id]
      , base.[business_group_id]				=   landing.[business_group_id]
      , base.[name]								=   landing.[name]
      , base.[primary_structure_flag]			=   landing.[primary_structure_flag]
      , base.[request_id]						=   landing.[request_id]
      , base.[program_application_id]			=   landing.[program_application_id]
      , base.[program_id]						=   landing.[program_id]
      , base.[program_update_date]				=   landing.[program_update_date]
      , base.[attribute_category]				=   landing.[attribute_category]
      , base.[attribute1]						=   landing.[attribute1]
      , base.[attribute2]						=   landing.[attribute2]
      , base.[attribute3]						=   landing.[attribute3]
      , base.[attribute4]						=   landing.[attribute4]
      , base.[attribute5]						=   landing.[attribute5]
      , base.[attribute6]						=   landing.[attribute6]
      , base.[attribute7]						=   landing.[attribute7]
      , base.[attribute8]						=   landing.[attribute8]
      , base.[attribute9]						=   landing.[attribute9]
      , base.[attribute10]						=   landing.[attribute10]
      , base.[attribute11]						=   landing.[attribute11]
      , base.[attribute12]						=   landing.[attribute12]
      , base.[attribute13]						=   landing.[attribute13]
      , base.[attribute14]						=   landing.[attribute14]
      , base.[attribute15]						=   landing.[attribute15]
      , base.[attribute16]						=   landing.[attribute16]
      , base.[attribute17]						=   landing.[attribute17]
      , base.[attribute18]						=   landing.[attribute18]
      , base.[attribute19]						=   landing.[attribute19]
      , base.[attribute20]						=   landing.[attribute20]
      , base.[last_update_date]					=   landing.[last_update_date]
      , base.[last_updated_by]					=   landing.[last_updated_by]
      , base.[last_update_login]				=   landing.[last_update_login]
      , base.[created_by]						=   landing.[created_by]
      , base.[creation_date]					=   landing.[creation_date]
      , base.[position_control_structure_flg]	=   landing.[position_control_structure_flg]
      , base.[object_version_number]			=   landing.[object_version_number]
      , base.[comments]							=   landing.[comments]
      , base.[datalakeinserttime]				=   landing.datalakeinserttime
      , base.[RowHash]							=   landing.RowHash
      , base.[BaseCreatedDate]					=   GETDATE()
      , base.[BaseCreatedBy]					=   SUSER_SNAME()
FROM [PER_ORGANIZATION_STRUCTURES_B0] base
JOIN [HR_Landing].dbo.[PER_ORGANIZATION_STRUCTURES_B0Landing] landing ON base.organization_structure_id = landing.organization_structure_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1400,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1401,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1402,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1403,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1404,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1405,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1406,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1407,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1408,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1409,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1410,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1411,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1412,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [organization_structure_id],
HASHBYTES('MD5',
(SELECT [organization_structure_id]
      ,[business_group_id]
      ,[name]
      ,[primary_structure_flag]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[position_control_structure_flg]
      ,[object_version_number]
      ,[comments] FOR XML RAW)) AS RowHash
FROM [dbo].PER_ORGANIZATION_STRUCTURES_B0Landing l)src
JOIN [dbo].PER_ORGANIZATION_STRUCTURES_B0Landing TARGET ON src.[organization_structure_id] = TARGET.[organization_structure_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ORGANIZATION_STRUCTURES_B0
1413,Package,Microsoft.Package,PER_ORG_STRUCTURE_ELEMENTS_B0,,,,,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1414,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1415,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST- Base,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1416,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1417,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1418,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1419,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1420,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.Per_Org_Structure_Elements_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.Per_Org_Structure_Elements_B0Landing landing
    WHERE base.  [org_structure_element_id]  = landing.  [org_structure_element_id] 
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1421,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1422,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
SET base.[org_structure_element_id] = landing.[org_structure_element_id],
    base.[business_group_id] = landing.[business_group_id],
    base.[organization_id_parent] = landing.[organization_id_parent],
    base.[org_structure_version_id] = landing.[org_structure_version_id],
    base.[organization_id_child] = landing.[organization_id_child],
    base.[request_id] = landing.[request_id],
    base.[program_application_id] = landing.[program_application_id],
    base.[program_id] = landing.[program_id],
    base.[program_update_date] = landing.[program_update_date],
    base.[last_update_date] = landing.[last_update_date],
    base.[last_updated_by] = landing.[last_updated_by],
    base.[last_update_login] = landing.[last_update_login],
    base.[created_by] = landing.[created_by],
    base.[creation_date] = landing.[creation_date],
    base.[object_version_number] = landing.[object_version_number],
    base.[position_control_enabled_flag] = landing.[position_control_enabled_flag],
    base.[party_id] = landing.[party_id],
    base.[datalakeinserttime] = landing.[datalakeinserttime],
    base.[RowHash] = landing.[RowHash],
    base.[BaseCreatedDate] = GETDATE(),
    base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[Per_Org_Structure_Elements_B0] base
    JOIN [HR_Landing].dbo.[Per_Org_Structure_Elements_B0Landing] landing
        ON base.[org_structure_element_id] = landing.[org_structure_element_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1423,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1424,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1425,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1426,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1427,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1428,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1429,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC_ Datalake,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1430,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1431,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1432,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1433,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1434,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1435,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE TARGET 
SET target.RowHash=SRC.RowHash
FROM 
(SELECT [org_structure_element_id],
HASHBYTES('MD5',
(SELECT [org_structure_element_id]
      ,[business_group_id]
      ,[organization_id_parent]
      ,[org_structure_version_id]
      ,[organization_id_child]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[last_update_date]
      ,[last_updated_by]
      ,[last_update_login]
      ,[created_by]
      ,[creation_date]
      ,[object_version_number]
      ,[position_control_enabled_flag]
      ,[party_id] FOR XML RAW)) AS RowHash
      
  FROM [dbo].[Per_Org_Structure_Elements_B0Landing]) SRC 
 JOIN [dbo].[Per_Org_Structure_Elements_B0Landing] TARGET ON SRC.[org_structure_element_id]=Target.[org_structure_element_id]

 SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ORG_STRUCTURE_ELEMENTS_B0
1436,Package,Microsoft.Package,PER_ORG_STRUCTURE_VERSIONS_B0,,,,,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1437,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1438,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST- Base,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1439,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1440,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1441,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1442,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1443,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.PER_ORG_STRUCTURE_VERSIONS_B0 BASE
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.PER_ORG_STRUCTURE_VERSIONS_B0Landing landing
    WHERE base.  [org_structure_version_id]  = landing.  [org_structure_version_id] 
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1444,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1445,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"
UPDATE base SET 
      base.[org_structure_version_id] = landing.org_structure_version_id
      ,base.[business_group_id] = landing.business_group_id
      ,base.[organization_structure_id] = landing.organization_structure_id
      ,base.[date_from] = landing.date_from
      ,base.[version_number] = landing.version_number
      ,base.[copy_structure_version_id] = landing.copy_structure_version_id
      ,base.[date_to] = landing.date_to
      ,base.[request_id] = landing.request_id
      ,base.[program_application_id] = landing.program_application_id
      ,base.[program_id] = landing.program_id
      ,base.[program_update_date] = landing.program_update_date
      ,base.[last_update_date] = landing.last_update_date
      ,base.[last_updated_by] = landing.last_updated_by
      ,base.[last_update_login] = landing.last_update_login
      ,base.[created_by] = landing.created_by
      ,base.[creation_date] = landing.creation_date
      ,base.[object_version_number] = landing.object_version_number
      ,base.[topnode_pos_ctrl_enabled_flag] = landing.topnode_pos_ctrl_enabled_flag
      ,base.datalakeinserttime = landing.datalakeinserttime
      ,base.RowHash = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = SUSER_SNAME()
FROM [HR_Base].dbo.[PER_ORG_STRUCTURE_VERSIONS_B0] base
JOIN [HR_Landing].dbo.[PER_ORG_STRUCTURE_VERSIONS_B0Landing] landing 
	ON base.org_structure_version_id = landing.org_structure_version_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1446,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1447,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1448,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1449,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1450,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1451,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1452,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC_ Datalake,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1453,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1454,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1455,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1456,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1457,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1458,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target SET 
	target.RowHash = src.RowHash
FROM 
(SELECT 
	org_structure_version_id,
	HASHBYTES('MD5',
(SELECT
	   [org_structure_version_id]
      ,[business_group_id]
      ,[organization_structure_id]
      ,[date_from]
      ,[version_number]
      ,[copy_structure_version_id]
      ,[date_to]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[object_version_number]
      ,[topnode_pos_ctrl_enabled_flag]
	FOR XML RAW)) AS RowHash
FROM dbo.PER_ORG_STRUCTURE_VERSIONS_B0Landing l) src
JOIN dbo.PER_ORG_STRUCTURE_VERSIONS_B0Landing target ON src.[org_structure_version_id] = target.[org_structure_version_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_ORG_STRUCTURE_VERSIONS_B0
1459,Package,Microsoft.Package,PER_PAY_BASES_B0,,,,,,DataLakeHRISToBase_PER_PAY_BASES_B0
1460,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_PAY_BASES_B0
1461,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_PAY_BASES_B0
1462,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_PAY_BASES_B0
1463,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_PAY_BASES_B0
1464,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PAY_BASES_B0
1465,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PAY_BASES_B0
1466,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_PAY_BASES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PAY_BASES_B0Landing] landing
    WHERE base.pay_basis_id = landing.pay_basis_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_PAY_BASES_B0
1467,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PAY_BASES_B0
1468,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[pay_basis_id]				     =  landing.[pay_basis_id]				
	   , base.[input_value_id]				 =  landing.[input_value_id]			
	   , base.[rate_id]					     =  landing.[rate_id]					
	   , base.[business_group_id]			 =  landing.[business_group_id]			
	   , base.[name]						 =  landing.[name]						
	   , base.[pay_basis]					 =  landing.[pay_basis]					
	   , base.[rate_basis]					 =  landing.[rate_basis]				
	   , base.[annualized_hours]			 =  landing.[annualized_hours]			
	   , base.[pay_annualization_factor]	 =  landing.[pay_annualization_factor]	
	   , base.[grade_annualization_factor]	 =  landing.[grade_annualization_factor]
	   , base.[attribute_category]			 =  landing.[attribute_category]		
	   , base.[attribute1]					 =  landing.[attribute1]				
	   , base.[attribute2]					 =  landing.[attribute2]				
	   , base.[attribute3]					 =  landing.[attribute3]				
	   , base.[attribute4]					 =  landing.[attribute4]				
	   , base.[attribute5]					 =  landing.[attribute5]				
	   , base.[attribute6]					 =  landing.[attribute6]				
	   , base.[attribute7]					 =  landing.[attribute7]				
	   , base.[attribute8]					 =  landing.[attribute8]				
	   , base.[attribute9]					 =  landing.[attribute9]				
	   , base.[attribute10]				     =  landing.[attribute10]				
	   , base.[attribute11]				     =  landing.[attribute11]				
	   , base.[attribute12]				     =  landing.[attribute12]				
	   , base.[attribute13]				     =  landing.[attribute13]				
	   , base.[attribute14]				     =  landing.[attribute14]				
	   , base.[attribute15]				     =  landing.[attribute15]				
	   , base.[attribute16]				     =  landing.[attribute16]				
	   , base.[attribute17]				     =  landing.[attribute17]				
	   , base.[attribute18]				     =  landing.[attribute18]				
	   , base.[attribute19]				     =  landing.[attribute19]				
	   , base.[attribute20]				     =  landing.[attribute20]				
	   , base.[last_update_date]			 =  landing.[last_update_date]			
	   , base.[last_updated_by]			     =  landing.[last_updated_by]			
	   , base.[last_update_login]			 =  landing.[last_update_login]			
	   , base.[created_by]				   	 =  landing.[created_by]				
	   , base.[creation_date]				 =  landing.[creation_date]				
	   , base.[information_category]		 =  landing.[information_category]		
	   , base.[information1]				 =  landing.[information1]				
	   , base.[information2]				 =  landing.[information2]				
	   , base.[information3]				 =  landing.[information3]				
	   , base.[information4]				 =  landing.[information4]				
	   , base.[information5]				 =  landing.[information5]				
	   , base.[information6]				 =  landing.[information6]				
	   , base.[information7]				 =  landing.[information7]				
	   , base.[information8]				 =  landing.[information8]				
	   , base.[information9]				 =  landing.[information9]				
	   , base.[information10]				 =  landing.[information10]				
	   , base.[information11]				 =  landing.[information11]				
	   , base.[information12]				 =  landing.[information12]				
	   , base.[information13]				 =  landing.[information13]				
	   , base.[information14]				 =  landing.[information14]				
	   , base.[information15]				 =  landing.[information15]				
	   , base.[information16]				 =  landing.[information16]				
	   , base.[information17]				 =  landing.[information17]				
	   , base.[information18]				 =  landing.[information18]				
	   , base.[information19]				 =  landing.[information19]				
	   , base.[information20]				 =  landing.[information20]				
	   , base.[object_version_number]		 =  landing.[object_version_number]		
	   , base.[comments]					 =  landing.[comments]					
       , base.[datalakeinserttime]           =  landing.datalakeinserttime
       , base.[RowHash]                      =  landing.RowHash
       , base.[BaseCreatedDate]              =  GETDATE()
       , base.[BaseCreatedBy]               =  suser_sname()
FROM [HR_Base].dbo.[PER_PAY_BASES_B0] base
JOIN [HR_Landing].dbo.[PER_PAY_BASES_B0Landing] landing ON base.pay_basis_id = landing.pay_basis_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PAY_BASES_B0
1469,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_PAY_BASES_B0
1470,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_PAY_BASES_B0
1471,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_PAY_BASES_B0
1472,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_PAY_BASES_B0
1473,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_PAY_BASES_B0
1474,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_PAY_BASES_B0
1475,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_PAY_BASES_B0
1476,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_PAY_BASES_B0
1477,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_PAY_BASES_B0
1478,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_PAY_BASES_B0
1479,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PAY_BASES_B0
1480,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PAY_BASES_B0
1481,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PAY_BASES_B0
1482,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_PAY_BASES_B0
1483,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [pay_basis_id],
HASHBYTES('MD5',
(SELECT  [pay_basis_id]				
       , [input_value_id]			
       , [rate_id]					
       , [business_group_id]			
       , [name]						
       , [pay_basis]					
       , [rate_basis]				
       , [annualized_hours]			
       , [pay_annualization_factor]	
       , [grade_annualization_factor]
       , [attribute_category]		
       , [attribute1]				
       , [attribute2]				
       , [attribute3]				
       , [attribute4]				
       , [attribute5]				
       , [attribute6]				
       , [attribute7]				
       , [attribute8]				
       , [attribute9]				
       , [attribute10]				
       , [attribute11]				
       , [attribute12]				
       , [attribute13]				
       , [attribute14]				
       , [attribute15]				
       , [attribute16]				
       , [attribute17]				
       , [attribute18]				
       , [attribute19]				
       , [attribute20]								
       , [information_category]		
       , [information1]				
       , [information2]				
       , [information3]				
       , [information4]				
       , [information5]				
       , [information6]				
       , [information7]				
       , [information8]				
       , [information9]				
       , [information10]				
       , [information11]				
       , [information12]				
       , [information13]				
       , [information14]				
       , [information15]				
       , [information16]				
       , [information17]				
       , [information18]				
       , [information19]				
       , [information20]				
       , [object_version_number]		
       , [comments] FOR XML RAW)) AS RowHash
FROM [dbo].PER_PAY_BASES_B0Landing l)src
JOIN [dbo].PER_PAY_BASES_B0Landing TARGET ON src.[pay_basis_id] = TARGET.[pay_basis_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PAY_BASES_B0
1484,Package,Microsoft.Package,PER_PAY_PROPOSALS_B0,,,,,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1485,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1486,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1487,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1488,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1489,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1490,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1491,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"
DELETE FROM base
FROM dbo.[PER_PAY_PROPOSALS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PAY_PROPOSALS_B0Landing] landing
    WHERE base.pay_proposal_id = landing.pay_proposal_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1492,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1493,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.pay_proposal_id = landing.pay_proposal_id
      ,base.object_version_number = landing.object_version_number
      ,base.assignment_id = landing.assignment_id
      ,base.event_id = landing.event_id
      ,base.business_group_id = landing.business_group_id
      ,base.change_date = landing.change_date
      ,base.last_change_date = landing.last_change_date
      ,base.next_perf_review_date = landing.next_perf_review_date
      ,base.next_sal_review_date = landing.next_sal_review_date
      ,base.performance_rating = landing.performance_rating
      ,base.proposal_reason = landing.proposal_reason
      ,base.proposed_salary_n = landing.proposed_salary_n
      ,base.review_date = landing.review_date
      ,base.approved = landing.approved
      ,base.multiple_components = landing.multiple_components
      ,base.forced_ranking = landing.forced_ranking
      ,base.performance_review_id = landing.performance_review_id
      ,base.attribute_category = landing.attribute_category
      ,base.attribute1 = landing.attribute1
      ,base.attribute2 = landing.attribute2
      ,base.attribute3 = landing.attribute3
      ,base.attribute4 = landing.attribute4
      ,base.attribute5 = landing.attribute5
      ,base.attribute6 = landing.attribute6
      ,base.attribute7 = landing.attribute7
      ,base.attribute8 = landing.attribute8
      ,base.attribute9 = landing.attribute9
      ,base.attribute10 = landing.attribute10
      ,base.attribute11 = landing.attribute11
      ,base.attribute12 = landing.attribute12
      ,base.attribute13 = landing.attribute13
      ,base.attribute14 = landing.attribute14
      ,base.attribute15 = landing.attribute15
      ,base.attribute16 = landing.attribute16
      ,base.attribute17 = landing.attribute17
      ,base.attribute18 = landing.attribute18
      ,base.attribute19 = landing.attribute19
      ,base.attribute20 = landing.attribute20
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.proposed_salary = landing.proposed_salary
      ,base.comments = landing.comments
      ,base.date_to = landing.date_to
      , base.[datalakeinserttime]           =  landing.datalakeinserttime
      , base.[RowHash]                      =  landing.RowHash
      , base.[BaseCreatedDate]              =  GETDATE()
      , base.[BaseCreatedBy]               =  suser_sname()
FROM [HR_Base].dbo.[PER_PAY_PROPOSALS_B0] base
JOIN [HR_Landing].dbo.[PER_PAY_PROPOSALS_B0Landing] landing ON base.pay_proposal_id = landing.pay_proposal_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1494,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1495,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1496,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1497,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1498,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1499,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1500,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1501,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1502,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1503,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1504,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1505,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1506,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1507,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1508,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [pay_proposal_id],
HASHBYTES('MD5',
(SELECT  [pay_proposal_id]
      ,[object_version_number]
      ,[assignment_id]
      ,[event_id]
      ,[business_group_id]
      ,[change_date]
      ,[last_change_date]
      ,[next_perf_review_date]
      ,[next_sal_review_date]
      ,[performance_rating]
      ,[proposal_reason]
      ,[proposed_salary_n]
      ,[review_date]
      ,[approved]
      ,[multiple_components]
      ,[forced_ranking]
      ,[performance_review_id]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[proposed_salary]
      ,[comments]
      ,[date_to]  FOR XML RAW)) AS RowHash
FROM [dbo].PER_PAY_PROPOSALS_B0Landing l)src
JOIN [dbo].PER_PAY_PROPOSALS_B0Landing TARGET ON src.[pay_proposal_id] = TARGET.pay_proposal_id

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PAY_PROPOSALS_B0
1509,Package,Microsoft.Package,PER_PERFORMANCE_REVIEWS_B0,,,,,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1510,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1511,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1512,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1513,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1514,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1515,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1516,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_PERFORMANCE_REVIEWS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERFORMANCE_REVIEWS_B0Landing] landing
    WHERE base.performance_review_id = landing.performance_review_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1517,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1518,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[performance_review_id] = landing.performance_review_id,
      base.[event_id] = landing.event_id,
      base.[review_date] = landing.review_date,
      base.[performance_rating] = landing.performance_rating,
      base.[next_perf_review_date] = landing.next_perf_review_date,
      base.[attribute_category] = landing.attribute_category,
      base.[attribute1] = landing.attribute1,
      base.[attribute2] = landing.attribute2,
      base.[attribute3] = landing.attribute3,
      base.[attribute4] = landing.attribute4,
      base.[attribute5] = landing.attribute5,
      base.[attribute6] = landing.attribute6,
      base.[attribute7] = landing.attribute7,
      base.[attribute8] = landing.attribute8,
      base.[attribute9] = landing.attribute9,
      base.[attribute10] = landing.attribute10,
      base.[attribute11] = landing.attribute11,
      base.[attribute12] = landing.attribute12,
      base.[attribute13] = landing.attribute13,
      base.[attribute14] = landing.attribute14,
      base.[attribute15] = landing.attribute15,
      base.[attribute16] = landing.attribute16,
      base.[attribute17] = landing.attribute17,
      base.[attribute18] = landing.attribute18,
      base.[attribute19] = landing.attribute19,
      base.[attribute20] = landing.attribute20,
      base.[attribute21] = landing.attribute21,
      base.[attribute22] = landing.attribute22,
      base.[attribute23] = landing.attribute23,
      base.[attribute24] = landing.attribute24,
      base.[attribute25] = landing.attribute25,
      base.[attribute26] = landing.attribute26,
      base.[attribute27] = landing.attribute27,
      base.[attribute28] = landing.attribute28,
      base.[attribute29] = landing.attribute29,
      base.[attribute30] = landing.attribute30,
      base.[object_version_number] = landing.object_version_number,
      base.[last_update_date] = landing.last_update_date,
      base.[last_updated_by] = landing.last_updated_by,
      base.[last_update_login] = landing.last_update_login,
      base.[created_by] = landing.created_by,
      base.[creation_date] = landing.creation_date,
      base.[datalakeinserttime] = landing.datalakeinserttime,
      base.[RowHash] = landing.RowHash,
      base.[BaseCreatedDate] = GETDATE(),
      base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_PERFORMANCE_REVIEWS_B0] base
JOIN [HR_Landing].dbo.[PER_PERFORMANCE_REVIEWS_B0Landing] landing ON base.performance_review_id = landing.performance_review_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1519,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1520,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1521,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1522,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1523,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1524,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1525,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1526,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1527,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1528,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1529,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1530,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1531,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1532,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1533,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [performance_review_id],
HASHBYTES('MD5',
(SELECT [performance_review_id]
      ,[person_id]
      ,[event_id]
      ,[review_date]
      ,[performance_rating]
      ,[next_perf_review_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[attribute21]
      ,[attribute22]
      ,[attribute23]
      ,[attribute24]
      ,[attribute25]
      ,[attribute26]
      ,[attribute27]
      ,[attribute28]
      ,[attribute29]
      ,[attribute30]
      ,[object_version_number]
      FOR XML RAW)) AS RowHash
FROM [dbo].PER_PERFORMANCE_REVIEWS_B0Landing l)src
JOIN [dbo].PER_PERFORMANCE_REVIEWS_B0Landing TARGET ON src.[performance_review_id] = TARGET.[performance_review_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERFORMANCE_REVIEWS_B0
1534,Package,Microsoft.Package,PER_PERIODS_OF_PLACEMENT_B0,,,,,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1535,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1536,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1537,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1538,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1539,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1540,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1541,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_PERIODS_OF_PLACEMENT_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERIODS_OF_PLACEMENT_B0Landing] landing
    WHERE base.period_of_placement_id = landing.period_of_placement_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1542,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1543,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"



UPDATE base
   SET
       base.period_of_placement_id = landing.period_of_placement_id
      ,base.object_version_number = landing.object_version_number
      ,base.business_group_id = landing.business_group_id
      ,base.person_id = landing.person_id
      ,base.date_start = landing.date_start
      ,base.actual_termination_date = landing.actual_termination_date
      ,base.projected_termination_date = landing.projected_termination_date
      ,base.termination_reason = landing.termination_reason
      ,base.attribute_category = landing.attribute_category
      ,base.attribute1 = landing.attribute1
      ,base.attribute2 = landing.attribute2
      ,base.attribute3 = landing.attribute3
      ,base.attribute4 = landing.attribute4
      ,base.attribute5 = landing.attribute5
      ,base.attribute6 = landing.attribute6
      ,base.attribute7 = landing.attribute7
      ,base.attribute8 = landing.attribute8
      ,base.attribute9 = landing.attribute9
      ,base.attribute10 = landing.attribute10
      ,base.attribute11 = landing.attribute11
      ,base.attribute12 = landing.attribute12
      ,base.attribute13 = landing.attribute13
      ,base.attribute14 = landing.attribute14
      ,base.attribute15 = landing.attribute15
      ,base.attribute16 = landing.attribute16
      ,base.attribute17 = landing.attribute17
      ,base.attribute18 = landing.attribute18
      ,base.attribute19 = landing.attribute19
      ,base.attribute20 = landing.attribute20
      ,base.attribute21 = landing.attribute21
      ,base.attribute22 = landing.attribute22
      ,base.attribute23 = landing.attribute23
      ,base.attribute24 = landing.attribute24
      ,base.attribute25 = landing.attribute25
      ,base.attribute26 = landing.attribute26
      ,base.attribute27 = landing.attribute27
      ,base.attribute28 = landing.attribute28
      ,base.attribute29 = landing.attribute29
      ,base.attribute30 = landing.attribute30
      ,base.information_category = landing.information_category
      ,base.information1 = landing.information1
      ,base.information2 = landing.information2
      ,base.information3 = landing.information3
      ,base.information4 = landing.information4
      ,base.information5 = landing.information5
      ,base.information6 = landing.information6
      ,base.information7 = landing.information7
      ,base.information8 = landing.information8
      ,base.information9 = landing.information9
      ,base.information10 = landing.information10
      ,base.information11 = landing.information11
      ,base.information12 = landing.information12
      ,base.information13 = landing.information13
      ,base.information14 = landing.information14
      ,base.information15 = landing.information15
      ,base.information16 = landing.information16
      ,base.information17 = landing.information17
      ,base.information18 = landing.information18
      ,base.information19 = landing.information19
      ,base.information20 = landing.information20
      ,base.information21 = landing.information21
      ,base.information22 = landing.information22
      ,base.information23 = landing.information23
      ,base.information24 = landing.information24
      ,base.information25 = landing.information25
      ,base.information26 = landing.information26
      ,base.information27 = landing.information27
      ,base.information28 = landing.information28
      ,base.information29 = landing.information29
      ,base.information30 = landing.information30
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_date = landing.last_update_date
      ,base.last_update_login = landing.last_update_login
      ,base.final_process_date = landing.final_process_date
      ,base.last_standard_process_date = landing.last_standard_process_date
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_PERIODS_OF_PLACEMENT_B0] base
JOIN [HR_Landing].dbo.[PER_PERIODS_OF_PLACEMENT_B0Landing] landing ON base.period_of_placement_id = landing.period_of_placement_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1544,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1545,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1546,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1547,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1548,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1549,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1550,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1551,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1552,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1553,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1554,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1555,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1556,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1557,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1558,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [period_of_placement_id],
HASHBYTES('MD5',
(SELECT [period_of_placement_id]
      ,[object_version_number]
      ,[business_group_id]
      ,[person_id]
      ,[date_start]
      ,[actual_termination_date]
      ,[projected_termination_date]
      ,[termination_reason]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[attribute21]
      ,[attribute22]
      ,[attribute23]
      ,[attribute24]
      ,[attribute25]
      ,[attribute26]
      ,[attribute27]
      ,[attribute28]
      ,[attribute29]
      ,[attribute30]
      ,[information_category]
      ,[information1]
      ,[information2]
      ,[information3]
      ,[information4]
      ,[information5]
      ,[information6]
      ,[information7]
      ,[information8]
      ,[information9]
      ,[information10]
      ,[information11]
      ,[information12]
      ,[information13]
      ,[information14]
      ,[information15]
      ,[information16]
      ,[information17]
      ,[information18]
      ,[information19]
      ,[information20]
      ,[information21]
      ,[information22]
      ,[information23]
      ,[information24]
      ,[information25]
      ,[information26]
      ,[information27]
      ,[information28]
      ,[information29]
      ,[information30]
      ,[final_process_date]
      ,[last_standard_process_date]
      FOR XML RAW)) AS RowHash
FROM [dbo].[PER_PERIODS_OF_PLACEMENT_B0Landing] l)src
JOIN [dbo].[PER_PERIODS_OF_PLACEMENT_B0Landing] TARGET ON src.[period_of_placement_id] = TARGET.[period_of_placement_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERIODS_OF_PLACEMENT_B0
1559,Package,Microsoft.Package,PER_PERIODS_OF_SERVICE_B0,,,,,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1560,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1561,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1562,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1563,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1564,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1565,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1566,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_PERIODS_OF_SERVICE_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERIODS_OF_SERVICE_B0Landing] landing
    WHERE base.period_of_service_id = landing.period_of_service_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1567,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1568,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.period_of_service_id = landing.period_of_service_id
      ,base.business_group_id = landing.business_group_id
      ,base.termination_accepted_person_id = landing.termination_accepted_person_id
      ,base.person_id = landing.person_id
      ,base.date_start = landing.date_start
      ,base.accepted_termination_date = landing.accepted_termination_date
      ,base.actual_termination_date = landing.actual_termination_date
      ,base.final_process_date = landing.final_process_date
      ,base.last_standard_process_date = landing.last_standard_process_date
      ,base.leaving_reason = landing.leaving_reason
      ,base.notified_termination_date = landing.notified_termination_date
      ,base.projected_termination_date = landing.projected_termination_date
      ,base.adjusted_svc_date = landing.adjusted_svc_date
      ,base.request_id = landing.request_id
      ,base.program_application_id = landing.program_application_id
      ,base.program_id = landing.program_id
      ,base.program_update_date = landing.program_update_date
      ,base.attribute_category = landing.attribute_category
      ,base.attribute1 = landing.attribute1
      ,base.attribute2 = landing.attribute2
      ,base.attribute3 = landing.attribute3
      ,base.attribute4 = landing.attribute4
      ,base.attribute5 = landing.attribute5
      ,base.attribute6 = landing.attribute6
      ,base.attribute7 = landing.attribute7
      ,base.attribute8 = landing.attribute8
      ,base.attribute9 = landing.attribute9
      ,base.attribute10 = landing.attribute10
      ,base.attribute11 = landing.attribute11
      ,base.attribute12 = landing.attribute12
      ,base.attribute13 = landing.attribute13
      ,base.attribute14 = landing.attribute14
      ,base.attribute15 = landing.attribute15
      ,base.attribute16 = landing.attribute16
      ,base.attribute17 = landing.attribute17
      ,base.attribute18 = landing.attribute18
      ,base.attribute19 = landing.attribute19
      ,base.attribute20 = landing.attribute20
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.object_version_number = landing.object_version_number
      ,base.prior_employment_ssp_paid_to = landing.prior_employment_ssp_paid_to
      ,base.prior_employment_ssp_weeks = landing.prior_employment_ssp_weeks
      ,base.pds_information_category = landing.pds_information_category
      ,base.pds_information1 = landing.pds_information1
      ,base.pds_information2 = landing.pds_information2
      ,base.pds_information3 = landing.pds_information3
      ,base.pds_information4 = landing.pds_information4
      ,base.pds_information5 = landing.pds_information5
      ,base.pds_information6 = landing.pds_information6
      ,base.pds_information7 = landing.pds_information7
      ,base.pds_information8 = landing.pds_information8
      ,base.pds_information9 = landing.pds_information9
      ,base.pds_information10 = landing.pds_information10
      ,base.pds_information11 = landing.pds_information11
      ,base.pds_information12 = landing.pds_information12
      ,base.pds_information13 = landing.pds_information13
      ,base.pds_information14 = landing.pds_information14
      ,base.pds_information15 = landing.pds_information15
      ,base.pds_information16 = landing.pds_information16
      ,base.pds_information17 = landing.pds_information17
      ,base.pds_information18 = landing.pds_information18
      ,base.pds_information19 = landing.pds_information19
      ,base.pds_information20 = landing.pds_information20
      ,base.pds_information21 = landing.pds_information21
      ,base.pds_information22 = landing.pds_information22
      ,base.pds_information23 = landing.pds_information23
      ,base.pds_information24 = landing.pds_information24
      ,base.pds_information25 = landing.pds_information25
      ,base.pds_information26 = landing.pds_information26
      ,base.pds_information27 = landing.pds_information27
      ,base.pds_information28 = landing.pds_information28
      ,base.pds_information29 = landing.pds_information29
      ,base.pds_information30 = landing.pds_information30
      ,base.comments = landing.comments
      ,base.[datalakeinserttime] = landing.datalakeinserttime
      ,base.[RowHash] = landing.RowHash
      ,base.[BaseCreatedDate] = GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_PERIODS_OF_SERVICE_B0] base
JOIN [HR_Landing].dbo.[PER_PERIODS_OF_SERVICE_B0Landing] landing ON base.period_of_service_id = landing.period_of_service_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1569,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1570,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1571,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1572,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1573,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1574,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1575,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1576,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1577,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1578,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1579,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1580,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1581,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1582,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1583,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [period_of_service_id],
HASHBYTES('MD5',
(SELECT [period_of_service_id]
      ,[business_group_id]
      ,[termination_accepted_person_id]
      ,[person_id]
      ,[date_start]
      ,[accepted_termination_date]
      ,[actual_termination_date]
      ,[final_process_date]
      ,[last_standard_process_date]
      ,[leaving_reason]
      ,[notified_termination_date]
      ,[projected_termination_date]
      ,[adjusted_svc_date]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[object_version_number]
      ,[prior_employment_ssp_paid_to]
      ,[prior_employment_ssp_weeks]
      ,[pds_information_category]
      ,[pds_information1]
      ,[pds_information2]
      ,[pds_information3]
      ,[pds_information4]
      ,[pds_information5]
      ,[pds_information6]
      ,[pds_information7]
      ,[pds_information8]
      ,[pds_information9]
      ,[pds_information10]
      ,[pds_information11]
      ,[pds_information12]
      ,[pds_information13]
      ,[pds_information14]
      ,[pds_information15]
      ,[pds_information16]
      ,[pds_information17]
      ,[pds_information18]
      ,[pds_information19]
      ,[pds_information20]
      ,[pds_information21]
      ,[pds_information22]
      ,[pds_information23]
      ,[pds_information24]
      ,[pds_information25]
      ,[pds_information26]
      ,[pds_information27]
      ,[pds_information28]
      ,[pds_information29]
      ,[pds_information30]
      ,[comments]
      FOR XML RAW)) AS RowHash
FROM [dbo].PER_PERIODS_OF_SERVICE_B0Landing l)src
JOIN [dbo].PER_PERIODS_OF_SERVICE_B0Landing TARGET ON src.[period_of_service_id] = TARGET.[period_of_service_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERIODS_OF_SERVICE_B0
1584,Package,Microsoft.Package,PER_PERSON_ANALYSES_B0,,,,,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1585,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1586,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1587,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1588,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1589,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1590,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1591,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_PERSON_ANALYSES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERSON_ANALYSES_B0Landing] landing
    WHERE base.person_analysis_id = landing.person_analysis_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1592,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1593,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[person_analysis_id]      = landing.person_analysis_id
      , base.[business_group_id]	  =   landing.[business_group_id]		
      , base.[analysis_criteria_id]	  =   landing.[analysis_criteria_id]	
      , base.[person_id]			  =   landing.[person_id]				
      , base.[date_from]			  =   landing.[date_from]				
      , base.[date_to]				  =   landing.[date_to]				
      , base.[id_flex_num]			  =   landing.[id_flex_num]			
      , base.[request_id]			  =   landing.[request_id]				
      , base.[program_application_id] =   landing.[program_application_id]	
      , base.[program_id]			  =   landing.[program_id]				
      , base.[program_update_date]	  =   landing.[program_update_date]	
      , base.[attribute_category]	  =   landing.[attribute_category] 		
      , base.[attribute1]			  =   landing.[attribute1]				
      , base.[attribute2]			  =   landing.[attribute2]				
      , base.[attribute3]			  =   landing.[attribute3]				
      , base.[attribute4]			  =   landing.[attribute4]				
      , base.[attribute5]			  =   landing.[attribute5]				
      , base.[attribute6]			  =   landing.[attribute6]				
      , base.[attribute7]			  =   landing.[attribute7]				
      , base.[attribute8]			  =   landing.[attribute8]				
      , base.[attribute9]			  =   landing.[attribute9]				
      , base.[attribute10]			  =   landing.[attribute10]			
      , base.[attribute11]			  =   landing.[attribute11]			
      , base.[attribute12]			  =   landing.[attribute12]			
      , base.[attribute13]			  =   landing.[attribute13]			
      , base.[attribute14]			  =   landing.[attribute14]			
      , base.[attribute15]			  =   landing.[attribute15]			
      , base.[attribute16]			  =   landing.[attribute16]			
      , base.[attribute17]			  =   landing.[attribute17]			
      , base.[attribute18]			  =   landing.[attribute18]			
      , base.[attribute19]			  =   landing.[attribute19]			
      , base.[attribute20]			  =   landing.[attribute20]			
      , base.[last_update_date]		  =   landing.[last_update_date]		
      , base.[last_updated_by]		  =   landing.[last_updated_by]		
      , base.[last_update_login]	  =   landing.[last_update_login]		
      , base.[created_by]			  =   landing.[created_by]				
      , base.[creation_date]		  =   landing.[creation_date]			
      , base.[object_version_number]  =   landing.[object_version_number]	
      , base.[party_id]				  =   landing.[party_id]				
      , base.[comments]				  =   landing.[comments]				
      , base.[datalakeinserttime]	  =   landing.[datalakeinserttime]		
      , base.[RowHash]				  =   landing.[RowHash]				
      , base.[BaseCreatedDate]		  =   GETDATE()			
      , base.[BaseCreatedBy]		  =   suser_sname()	
FROM [dbo].[PER_PERSON_ANALYSES_B0] base
JOIN [HR_Landing].dbo.[PER_PERSON_ANALYSES_B0Landing] landing ON base.person_analysis_id = landing.person_analysis_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1594,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1595,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1596,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1597,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1598,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1599,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1600,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1601,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1602,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1603,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1604,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1605,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1606,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1607,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1608,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [person_analysis_id],
HASHBYTES('MD5',
(SELECT [person_analysis_id]
      ,[business_group_id]
      ,[analysis_criteria_id]
      ,[person_id]
      ,[date_from]
      ,[date_to]
      ,[id_flex_num]
      ,[request_id]
      ,[program_application_id]
      ,[program_id]
      ,[program_update_date]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[object_version_number]
      ,[party_id]
      ,[comments]
  FOR XML RAW)) AS RowHash
FROM [dbo].PER_PERSON_ANALYSES_B0Landing l)src
JOIN [dbo].PER_PERSON_ANALYSES_B0Landing TARGET ON src.[person_analysis_id] = TARGET.[person_analysis_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERSON_ANALYSES_B0
1609,Package,Microsoft.Package,PER_PERSON_TYPES_B0,,,,,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1610,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1611,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1612,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1613,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1614,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERSON_TYPES_B0
1615,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERSON_TYPES_B0
1616,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_PERSON_TYPES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PERSON_TYPES_B0Landing] landing
    WHERE base.person_type_id = landing.person_type_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_PERSON_TYPES_B0
1617,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1618,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[person_type_id] = landing.person_type_id
      , base.[business_group_id] = landing.business_group_id
      , base.[active_flag] = landing.active_flag
      , base.[default_flag] = landing.default_flag
      , base.[system_person_type] = landing.system_person_type
      , base.[user_person_type] = landing.user_person_type
      , base.[last_update_date] = landing.last_update_date
      , base.[last_updated_by] = landing.last_updated_by
      , base.[last_update_login] = landing.last_update_login
      , base.[created_by] = landing.created_by
      , base.[creation_date] = landing.creation_date
      , base.[seeded_person_type_key] = landing.seeded_person_type_key
      , base.[zd_edition_name] = landing.zd_edition_name
      , base.[datalakeinserttime] = landing.datalakeinserttime
      , base.[RowHash] = landing.RowHash
      , base.[BaseCreatedDate] = GETDATE()
      , base.[BaseCreatedBy] = suser_sname()
FROM [dbo].[PER_PERSON_TYPES_B0] base
JOIN [HR_Landing].dbo.[PER_PERSON_TYPES_B0Landing] landing ON base.person_type_id = landing.person_type_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERSON_TYPES_B0
1619,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1620,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1621,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1622,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1623,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1624,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1625,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1626,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1627,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1628,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1629,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PERSON_TYPES_B0
1630,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_PERSON_TYPES_B0
1631,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1632,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_PERSON_TYPES_B0
1633,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [person_type_id],
HASHBYTES('MD5',
(SELECT [person_type_id]
      ,[business_group_id]
      ,[active_flag]
      ,[default_flag]
      ,[system_person_type]
      ,[user_person_type]
      ,[seeded_person_type_key]
      ,[zd_edition_name]
 FOR XML RAW)) AS RowHash
FROM [dbo].PER_PERSON_TYPES_B0Landing l)src
JOIN [dbo].PER_PERSON_TYPES_B0Landing TARGET ON src.[person_type_id] = TARGET.[person_type_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PERSON_TYPES_B0
1634,Package,Microsoft.Package,PER_PHONES_B0,,,,,,DataLakeHRISToBase_PER_PHONES_B0
1635,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_PHONES_B0
1636,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_PHONES_B0
1637,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_PHONES_B0
1638,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_PHONES_B0
1639,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PHONES_B0
1640,Package\Base - Data Load\SQL - End Audit Log,Microsoft.ExecuteSQLTask,SQL - End Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?,?
GO",DataLakeHRISToBase_PER_PHONES_B0
1641,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_PHONES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_PHONES_B0Landing] landing
    WHERE base.phone_id = landing.phone_id
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_PHONES_B0
1642,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PHONES_B0
1643,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[phone_id] =			 landing.phone_id,
      base.[date_from] =			 landing.date_from,
      base.[date_to] =				 landing.date_to, 
      base.[phone_type] =			 landing.phone_type, 
      base.[phone_number] =			 landing.phone_number, 
      base.[parent_id] =			 landing.parent_id, 
      base.[parent_table] =			 landing.parent_table,
      base.[attribute_category] =	 landing.attribute_category,
      base.[attribute1] =			 landing.attribute1,
      base.[attribute2] =			 landing.attribute2,
      base.[attribute3] =			 landing.attribute3,
      base.[attribute4] =			 landing.attribute4,
      base.[attribute5] =			 landing.attribute5,
      base.[attribute6] =			 landing.attribute6,
      base.[attribute7] =			 landing.attribute7,
      base.[attribute8] =			 landing.attribute8,
      base.[attribute9] =			 landing.attribute9,
      base.[attribute10] =			 landing.attribute10,
      base.[attribute11] =			 landing.attribute11,
      base.[attribute12] =			 landing.attribute12,
      base.[attribute13] =			 landing.attribute13,
      base.[attribute14] =			 landing.attribute14,
      base.[attribute15] =			 landing.attribute15,
      base.[attribute16] =			 landing.attribute16,
      base.[attribute17] =			 landing.attribute17,
      base.[attribute18] =			 landing.attribute18,
      base.[attribute19] =			 landing.attribute19,
      base.[attribute20] =			 landing.attribute20,
      base.[attribute21] =			 landing.attribute21,
      base.[attribute22] =			 landing.attribute22,
      base.[attribute23] =			 landing.attribute23,
      base.[attribute24] =			 landing.attribute24,
      base.[attribute25] =			 landing.attribute25,
      base.[attribute26] =			 landing.attribute26,
      base.[attribute27] =			 landing.attribute27,
      base.[attribute28] =			 landing.attribute28,
      base.[attribute29] =			 landing.attribute29,
      base.[attribute30] =			 landing.attribute30,
      base.[created_by] =			 landing.created_by, 
      base.[creation_date] =		 landing.creation_date,
      base.[last_updated_by] =		 landing.last_updated_by,
      base.[last_update_date] =		 landing.last_update_date,
      base.[last_update_login] =	 landing.last_update_login,
      base.[object_version_number] = landing.object_version_number,
      base.[party_id] =				 landing.party_id, 
      base.[validity] =				 landing.validity, 
      base.[datalakeinserttime] =	 landing.datalakeinserttime,
      base.[RowHash] =				 landing.RowHash,
      base.[BaseCreatedDate] =		 GETDATE(),
      base.[BaseCreatedBy] =		 suser_sname()
FROM [HR_Base].dbo.[PER_PHONES_B0] base
JOIN [HR_Landing].dbo.[PER_PHONES_B0Landing] landing ON base.phone_id = landing.phone_id
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PHONES_B0
1644,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_PHONES_B0
1645,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_PHONES_B0
1646,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_PHONES_B0
1647,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_PHONES_B0
1648,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_PHONES_B0
1649,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_PHONES_B0
1650,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_PHONES_B0
1651,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_PHONES_B0
1652,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_PHONES_B0
1653,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All Error Records,,DataLakeHRISToBase_PER_PHONES_B0
1654,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_PHONES_B0
1655,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?,?
GO",DataLakeHRISToBase_PER_PHONES_B0
1656,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_PHONES_B0
1657,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_PHONES_B0
1658,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [phone_id],
HASHBYTES('MD5',
(SELECT  [phone_id]
		, [date_from]
		, [date_to]
		, [phone_type]
		, [phone_number]
		, [parent_id]
		, [parent_table]
		, [attribute_category]
		, [attribute1]
		, [attribute2]
		, [attribute3]
		, [attribute4]
		, [attribute5]
		, [attribute6]
		, [attribute7]
		, [attribute8]
		, [attribute9]
		, [attribute10]
		, [attribute11]
		, [attribute12]
		, [attribute13]
		, [attribute14]
		, [attribute15]
		, [attribute16]
		, [attribute17]
		, [attribute18]
		, [attribute19]
		, [attribute20]
		, [attribute21]
		, [attribute22]
		, [attribute23]
		, [attribute24]
		, [attribute25]
		, [attribute26]
		, [attribute27]
		, [attribute28]
		, [attribute29]
		, [attribute30]
		, [object_version_number]
		, [party_id]
		, [validity] FOR XML RAW)) AS RowHash
FROM [dbo].PER_PHONES_B0Landing l)src
JOIN [dbo].PER_PHONES_B0Landing TARGET ON src.[phone_id] = TARGET.[phone_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_PHONES_B0
1659,Package,Microsoft.Package,PER_QUALIFICATIONS_B0,,,,,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1660,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1661,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1662,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1663,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1664,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1665,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1666,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_QUALIFICATIONS_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_QUALIFICATIONS_B0Landing] landing
    WHERE base.[qualification_id] = landing.[qualification_id]
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1667,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1668,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.[qualification_id]				= landing.qualification_id
      ,base.[business_group_id]				= landing.business_group_id
      ,base.[object_version_number]			= landing.object_version_number
      ,base.[person_id]						= landing.person_id
      ,base.[title]							= landing.title
      ,base.[grade_attained]				= landing.grade_attained
      ,base.[status]						= landing.status
      ,base.[awarded_date]					= landing.awarded_date
      ,base.[fee]							= landing.fee
      ,base.[fee_currency]					= landing.fee_currency
      ,base.[training_completed_amount]		= landing.training_completed_amount
      ,base.[reimbursement_arrangements]	= landing.reimbursement_arrangements
      ,base.[training_completed_units]		= landing.training_completed_units
      ,base.[total_training_amount]			= landing.total_training_amount
      ,base.[start_date]					= landing.start_date
      ,base.[end_date]						= landing.end_date
      ,base.[license_number]				= landing.license_number
      ,base.[expiry_date]					= landing.expiry_date
      ,base.[license_restrictions]			= landing.license_restrictions
      ,base.[projected_completion_date]		= landing.projected_completion_date
      ,base.[awarding_body]					= landing.awarding_body
      ,base.[tuition_method]				= landing.tuition_method
      ,base.[group_ranking]					= landing.group_ranking
      ,base.[comments]						= landing.comments
      ,base.[qualification_type_id]			= landing.qualification_type_id
      ,base.[attendance_id]					= landing.attendance_id
      ,base.[attribute_category]			= landing.attribute_category
      ,base.[attribute1]					= landing.attribute1
      ,base.[attribute2]					= landing.attribute2
      ,base.[attribute3]					= landing.attribute3
      ,base.[attribute4]					= landing.attribute4
      ,base.[attribute5]					= landing.attribute5
      ,base.[attribute6]					= landing.attribute6
      ,base.[attribute7]					= landing.attribute7
      ,base.[attribute8]					= landing.attribute8
      ,base.[attribute9]					= landing.attribute9
      ,base.[attribute10]					= landing.attribute10
      ,base.[attribute11]					= landing.attribute11
      ,base.[attribute12]					= landing.attribute12
      ,base.[attribute13]					= landing.attribute13
      ,base.[attribute14]					= landing.attribute14
      ,base.[attribute15]					= landing.attribute15
      ,base.[attribute16]					= landing.attribute16
      ,base.[attribute17]					= landing.attribute17
      ,base.[attribute18]					= landing.attribute18
      ,base.[attribute19]					= landing.attribute19
      ,base.[attribute20]					= landing.attribute20
      ,base.[last_update_date]				= landing.last_update_date
      ,base.[last_updated_by]				= landing.last_updated_by
      ,base.[last_update_login]				= landing.last_update_login
      ,base.[created_by]					= landing.created_by
      ,base.[creation_date]					= landing.creation_date
      ,base.[party_id]						= landing.party_id
      ,base.[professional_body_name]		= landing.professional_body_name
      ,base.[membership_number]				= landing.membership_number
      ,base.[membership_category]			= landing.membership_category
      ,base.[subscription_payment_method]	= landing.subscription_payment_method
      ,base.[qua_information_category]		= landing.qua_information_category
      ,base.[qua_information1]				= landing.qua_information1
      ,base.[qua_information2]				= landing.qua_information2
      ,base.[qua_information3]				= landing.qua_information3
      ,base.[qua_information4]				= landing.qua_information4
      ,base.[qua_information5]				= landing.qua_information5
      ,base.[qua_information6]				= landing.qua_information6
      ,base.[qua_information7]				= landing.qua_information7
      ,base.[qua_information8]				= landing.qua_information8
      ,base.[qua_information9]				= landing.qua_information9
      ,base.[qua_information10]				= landing.qua_information10
      ,base.[qua_information11]				= landing.qua_information11
      ,base.[qua_information12]				= landing.qua_information12
      ,base.[qua_information13]				= landing.qua_information13
      ,base.[qua_information14]				= landing.qua_information14
      ,base.[qua_information15]				= landing.qua_information15
      ,base.[qua_information16]				= landing.qua_information16
      ,base.[qua_information17]				= landing.qua_information17
      ,base.[qua_information18]				= landing.qua_information18
      ,base.[qua_information19]				= landing.qua_information19
      ,base.[qua_information20]				= landing.qua_information20
      ,base.[datalakeinserttime]			= landing.[datalakeinserttime]
      ,base.[RowHash]						= landing.[RowHash]
      ,base.[BaseCreatedDate]				= GETDATE()
      ,base.[BaseCreatedBy]					= suser_sname()
FROM [HR_Base].dbo.[PER_QUALIFICATIONS_B0] base
JOIN [HR_Landing].dbo.[PER_QUALIFICATIONS_B0Landing] landing ON base.[qualification_id] = landing.[qualification_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1669,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1670,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1671,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1672,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1673,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1674,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1675,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1676,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1677,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1678,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records,,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1679,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1680,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1681,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1682,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1683,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [qualification_id],
HASHBYTES('MD5',
(SELECT [qualification_id]
      ,[business_group_id]
      ,[object_version_number]
      ,[person_id]
      ,[title]
      ,[grade_attained]
      ,[status]
      ,[awarded_date]
      ,[fee]
      ,[fee_currency]
      ,[training_completed_amount]
      ,[reimbursement_arrangements]
      ,[training_completed_units]
      ,[total_training_amount]
      ,[start_date]
      ,[end_date]
      ,[license_number]
      ,[expiry_date]
      ,[license_restrictions]
      ,[projected_completion_date]
      ,[awarding_body]
      ,[tuition_method]
      ,[group_ranking]
      ,[comments]
      ,[qualification_type_id]
      ,[attendance_id]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[last_update_date]
      ,[last_updated_by]
      ,[last_update_login]
      ,[created_by]
      ,[creation_date]
      ,[party_id]
      ,[professional_body_name]
      ,[membership_number]
      ,[membership_category]
      ,[subscription_payment_method]
      ,[qua_information_category]
      ,[qua_information1]
      ,[qua_information2]
      ,[qua_information3]
      ,[qua_information4]
      ,[qua_information5]
      ,[qua_information6]
      ,[qua_information7]
      ,[qua_information8]
      ,[qua_information9]
      ,[qua_information10]
      ,[qua_information11]
      ,[qua_information12]
      ,[qua_information13]
      ,[qua_information14]
      ,[qua_information15]
      ,[qua_information16]
      ,[qua_information17]
      ,[qua_information18]
      ,[qua_information19]
      ,[qua_information20] FOR XML RAW)) AS RowHash
FROM [dbo].PER_QUALIFICATIONS_B0Landing l)src
JOIN [dbo].PER_QUALIFICATIONS_B0Landing TARGET ON src.[qualification_id] = TARGET.[qualification_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_QUALIFICATIONS_B0
1684,Package,Microsoft.Package,PER_QUALIFICATION_TYPES_B0,,,,,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1685,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1686,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1687,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Row Count,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1688,Package\Base - Data Load\DFT - Load Base Table,Microsoft.Pipeline,DFT - Load Base Table,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Landing Table,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1689,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1690,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1691,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"DELETE FROM base
FROM dbo.[PER_QUALIFICATION_TYPES_B0] base
WHERE NOT EXISTS
(
    SELECT 1
    FROM [HR_Landing].dbo.[PER_QUALIFICATION_TYPES_B0Landing] landing
    WHERE base.[qualification_type_id] = landing.[qualification_type_id]
);

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1692,Package\Base - Data Load\SQL - Source Count,Microsoft.ExecuteSQLTask,SQL - Source Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1693,Package\Base - Data Load\SQL - Update modified records,Microsoft.ExecuteSQLTask,SQL - Update modified records,,,,,"UPDATE base
   SET base.qualification_type_id = landing.qualification_type_id
      ,base.name = landing.name
      ,base.category = landing.category
      ,base.rank = landing.rank
      ,base.object_version_number = landing.object_version_number
      ,base.attribute_category = landing.attribute_category
      ,base.attribute1 = landing.attribute1
      ,base.attribute2 = landing.attribute2
      ,base.attribute3 = landing.attribute3
      ,base.attribute4 = landing.attribute4
      ,base.attribute5 = landing.attribute5
      ,base.attribute6 = landing.attribute6
      ,base.attribute7 = landing.attribute7
      ,base.attribute8 = landing.attribute8
      ,base.attribute9 = landing.attribute9
      ,base.attribute10 = landing.attribute10
      ,base.attribute11 = landing.attribute11
      ,base.attribute12 = landing.attribute12
      ,base.attribute13 = landing.attribute13
      ,base.attribute14 = landing.attribute14
      ,base.attribute15 = landing.attribute15
      ,base.attribute16 = landing.attribute16
      ,base.attribute17 = landing.attribute17
      ,base.attribute18 = landing.attribute18
      ,base.attribute19 = landing.attribute19
      ,base.attribute20 = landing.attribute20
      ,base.last_update_date = landing.last_update_date
      ,base.last_updated_by = landing.last_updated_by
      ,base.last_update_login = landing.last_update_login
      ,base.created_by = landing.created_by
      ,base.creation_date = landing.creation_date
      ,base.information1 = landing.information1
      ,base.information2 = landing.information2
      ,base.information3 = landing.information3
      ,base.information4 = landing.information4
      ,base.information5 = landing.information5
      ,base.information6 = landing.information6
      ,base.information7 = landing.information7
      ,base.information8 = landing.information8
      ,base.information9 = landing.information9
      ,base.information10 = landing.information10
      ,base.information11 = landing.information11
      ,base.information12 = landing.information12
      ,base.information13 = landing.information13
      ,base.information14 = landing.information14
      ,base.information15 = landing.information15
      ,base.information16 = landing.information16
      ,base.information17 = landing.information17
      ,base.information18 = landing.information18
      ,base.information19 = landing.information19
      ,base.information20 = landing.information20
      ,base.information21 = landing.information21
      ,base.information22 = landing.information22
      ,base.information23 = landing.information23
      ,base.information24 = landing.information24
      ,base.information25 = landing.information25
      ,base.information26 = landing.information26
      ,base.information27 = landing.information27
      ,base.information28 = landing.information28
      ,base.information29 = landing.information29
      ,base.information30 = landing.information30
      ,base.information_category = landing.information_category
      ,base.qual_framework_id = landing.qual_framework_id
      ,base.qualification_type = landing.qualification_type
      ,base.credit_type = landing.credit_type
      ,base.credits = landing.credits
      ,base.level_type = landing.level_type
      ,base.level_number = landing.level_number
      ,base.field = landing.field
      ,base.sub_field = landing.sub_field
      ,base.provider = landing.provider
      ,base.qa_organization = landing.qa_organization
      ,base.zd_edition_name = landing.zd_edition_name
      ,base.[datalakeinserttime] = landing.[datalakeinserttime]
      ,base.[RowHash] = landing.[RowHash]
      ,base.[BaseCreatedDate]	= GETDATE()
      ,base.[BaseCreatedBy] = suser_sname()
FROM [HR_Base].dbo.[PER_QUALIFICATION_TYPES_B0] base
JOIN [HR_Landing].dbo.[PER_QUALIFICATION_TYPES_B0Landing] landing ON base.[qualification_type_id] = landing.[qualification_type_id]
WHERE base.RowHash != landing.RowHash;

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1694,Package\Landing - Data Load,STOCK:SEQUENCE,Landing - Data Load,,,,,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1695,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Reject Count,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1696,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1697,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - Rejection Columns,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1698,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Landing,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1699,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - RejectionLog,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1700,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.ManagedComponentHost,"Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12","Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an ""income"" column or add values in two columns and calculate the average of the sum.",SC - Derive ErrorColumnDesription and ErrorDescription,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1701,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Attunity.SSISODBCSrc,,ODBC Source,SRC - Data Lake Table,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1702,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1703,Package\Landing - Data Load\DFT - Load Data From Data Lake into Landing,Microsoft.Pipeline,DFT - Load Data From Data Lake into Landing,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",UnionAll - All the error records1,,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1704,Package\Landing - Data Load\SQL - Begin Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Landing Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1705,Package\Landing - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1706,Package\Landing - Data Load\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,,User::vLandingCountQuery,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1707,Package\Landing - Data Load\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,User::vLandingTruncateQuery,DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1708,Package\Landing - Data Load\SQL - Update RowHash Column in Landing Table,Microsoft.ExecuteSQLTask,SQL - Update RowHash Column in Landing Table,,,,,"UPDATE target
SET target.RowHash = src.RowHash
FROM 
(SELECT [qualification_type_id],
HASHBYTES('MD5',
(SELECT [qualification_type_id]
      ,[name]
      ,[category]
      ,[rank]
      ,[object_version_number]
      ,[attribute_category]
      ,[attribute1]
      ,[attribute2]
      ,[attribute3]
      ,[attribute4]
      ,[attribute5]
      ,[attribute6]
      ,[attribute7]
      ,[attribute8]
      ,[attribute9]
      ,[attribute10]
      ,[attribute11]
      ,[attribute12]
      ,[attribute13]
      ,[attribute14]
      ,[attribute15]
      ,[attribute16]
      ,[attribute17]
      ,[attribute18]
      ,[attribute19]
      ,[attribute20]
      ,[information1]
      ,[information2]
      ,[information3]
      ,[information4]
      ,[information5]
      ,[information6]
      ,[information7]
      ,[information8]
      ,[information9]
      ,[information10]
      ,[information11]
      ,[information12]
      ,[information13]
      ,[information14]
      ,[information15]
      ,[information16]
      ,[information17]
      ,[information18]
      ,[information19]
      ,[information20]
      ,[information21]
      ,[information22]
      ,[information23]
      ,[information24]
      ,[information25]
      ,[information26]
      ,[information27]
      ,[information28]
      ,[information29]
      ,[information30]
      ,[information_category]
      ,[qual_framework_id]
      ,[qualification_type]
      ,[credit_type]
      ,[credits]
      ,[level_type]
      ,[level_number]
      ,[field]
      ,[sub_field]
      ,[provider]
      ,[qa_organization]
      ,[zd_edition_name]
      FOR XML RAW)) AS RowHash
FROM [dbo].PER_QUALIFICATION_TYPES_B0Landing l)src
JOIN [dbo].PER_QUALIFICATION_TYPES_B0Landing TARGET ON src.[qualification_type_id] = TARGET.[qualification_type_id]

SELECT @@ROWCOUNT AS UpdateCount;",DataLakeHRISToBase_PER_QUALIFICATION_TYPES_B0
1709,Package,Microsoft.Package,PositionBN,,,,,,DataLakeHRISToBase_PositionBN
1710,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_PositionBN
1711,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",CMD - SCD Update,,DataLakeHRISToBase_PositionBN
1712,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",CMD - Update as History records in BN table 1,,DataLakeHRISToBase_PositionBN
1713,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DataLakeHRISToBase_PositionBN
1714,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - SCD 2 columns Update,,DataLakeHRISToBase_PositionBN
1715,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,DataLakeHRISToBase_PositionBN
1716,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PositionBN
1717,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table Insert,,DataLakeHRISToBase_PositionBN
1718,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,DataLakeHRISToBase_PositionBN
1719,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD Insert Count,,DataLakeHRISToBase_PositionBN
1720,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD Update,,DataLakeHRISToBase_PositionBN
1721,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD Update Count,,DataLakeHRISToBase_PositionBN
1722,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_PositionBN
1723,Package\Base - Data Load\DFT - Insert Updated record as SCD 2,Microsoft.Pipeline,DFT - Insert Updated record as SCD 2,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_PositionBN
1724,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Base Table,,DataLakeHRISToBase_PositionBN
1725,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_PositionBN
1726,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Base B0 table,,DataLakeHRISToBase_PositionBN
1727,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_PositionBN
1728,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_PositionBN
1729,Package\Base - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
	BEGIN
		INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
	END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.PositionBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;

",DataLakeHRISToBase_PositionBN
1730,Package\Base - Data Load\SQL - Soft Delete records,Microsoft.ExecuteSQLTask,SQL - Soft Delete records,,,,,"UPDATE pbn 
SET pbn.Deleted = 'Y',
pbn.BaseModifiedDate = GETDATE(),
pbn.UpdateAuditID = ?
FROM dbo.PositionBN pbn
WHERE NOT EXISTS
(
    SELECT 1
    FROM dbo.vPositionBN vpbn
    WHERE pbn.PositionID = vpbn.PositionID
AND pbn.EffectiveStartDate = vpbn.EffectiveStartDate 

)
AND pbn.Deleted IS NULL;

SELECT @@ROWCOUNT AS DeleteCount ;",DataLakeHRISToBase_PositionBN
1731,Package\Base - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeHRISToBase_PositionBN
1732,Package\Base - Data Load\SQl - Update RowStatus for history records,Microsoft.ExecuteSQLTask,SQl - Update RowStatus for history records,,,,,"UPDATE dbo.PositionBN 
SET RowStatus = 'H'
, BaseModifiedDate = GETDATE()
, UpdateAuditID = ?
WHERE
	CAST(BaseEndDate AS DATE)< CAST(GETDATE() AS DATE) 
	AND RowStatus <> 'H'

SELECT @@ROWCOUNT + ? AS UpdateCount;",DataLakeHRISToBase_PositionBN
1733,Package,Microsoft.Package,TerminationBN,,,,,,DataLakeHRISToBase_TerminationBN
1734,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_TerminationBN
1735,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST- TerminationBN,,DataLakeHRISToBase_TerminationBN
1736,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,DataLakeHRISToBase_TerminationBN
1737,Package\Base - Data Load\DFT - Load new records From B0 into BN,Microsoft.Pipeline,DFT - Load new records From B0 into BN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - B0 Query,,DataLakeHRISToBase_TerminationBN
1738,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_TerminationBN
1739,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_TerminationBN
1740,Package\Base - Data Load\SQL - Get the LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Get the LastProcessed Date,,,,,"IF NOT EXISTS (SELECT 1 FROM dbo.ETLBatchControl WHERE TableName = ?)
 BEGIN
  INSERT INTO dbo.ETLBatchControl (TableName) VALUES (?)
 END

DECLARE @LastProcessedDate DATETIME = (SELECT LastProcessedDate FROM dbo.ETLBatchControl WHERE TableName = ?);
DECLARE @BaseCreatedDate DATETIME = (SELECT MAX(BaseCreatedDate) FROM dbo.AccreditationBN);

IF @LastProcessedDate IS NULL OR @BaseCreatedDate IS NULL
SET @LastProcessedDate = (SELECT CAST('1900-01-01' AS DATE));

SELECT @LastProcessedDate AS LastProcessedDate;",DataLakeHRISToBase_TerminationBN
1741,Package\Base - Data Load\SQl - Soft Delete From TerminationBN,Microsoft.ExecuteSQLTask,SQl - Soft Delete From TerminationBN,,,,,"DECLARE @InsertAuditID bigint = ?

;WITH PerPeriodOfService AS
(
	SELECT
		Pps.PerPeriodsID AS period_of_service_id
	FROM
		dbo.PerPeriodsB10 AS Pps WITH (NOLOCK)
		LEFT JOIN
		dbo.FND_LOOKUP_VALUES_B0 AS Lkp WITH (NOLOCK)
			ON Pps.LeavingReason = Lkp.lookup_code
	WHERE
		Pps.PersonID IS NOT NULL
		AND Pps.ActualTerminationDate IS NOT NULL
)
UPDATE Trmn SET
	Trmn.Deleted = 'Y',
	Trmn.BaseModifiedDate = GETDATE(),
	Trmn.UpdateAuditID = @InsertAuditID
FROM
	dbo.TerminationBN AS Trmn
	WHERE NOT EXISTS
	(
		SELECT 1
		FROM dbo.PerPeriodsB10 AS pps WITH (NOLOCK)
		WHERE pps.PerPeriodsID = Trmn.PeriodofServiceID
	)
	AND Trmn.Deleted IS NULL;

SELECT @@RowCount AS DeleteCount;",DataLakeHRISToBase_TerminationBN
1742,Package\Base - Data Load\SQL - Update LastProcessed Date,Microsoft.ExecuteSQLTask,SQL - Update LastProcessed Date,,,,,"
UPDATE  dbo.ETLBatchControl 
SET LastProcessedDate = GETDATE()
, Status = 'Success'
WHERE Tablename = ?;",DataLakeHRISToBase_TerminationBN
1743,Package\Base - Data Load\SQl - Update Modified Records,Microsoft.ExecuteSQLTask,SQl - Update Modified Records,,,,,"DECLARE @InsertAuditID bigint = ?
DECLARE @LastProcessedDate datetime = ?

;WITH B0Query AS
(
	SELECT
		Pps.PerPeriodsID AS period_of_service_id,
		CASE
			WHEN Lkp.meaning IS NULL THEN 'Unknown (' + ISNULL(Pps.LeavingReason, 'N/A') + ')'
			ELSE Lkp.meaning
		END AS [Termination Reason],
		CASE
			WHEN Lkp.attribute2 IS NULL THEN 'Unknown (' + ISNULL(Pps.LeavingReason, 'N/A') + ')'
			ELSE Lkp.attribute2
		END AS [Termination Type],
		CASE
			WHEN Pps.EligibleForRehireInd IS NULL THEN 'Unknown'
			ELSE Pps.EligibleForRehireInd
		END AS [Eligible FOR Rehire Indicator],
		CASE
			WHEN Pps.TwoWeekNoticeInd = 'Y' THEN 'Yes'
			WHEN Pps.TwoWeekNoticeInd = 'N' THEN 'No'
			WHEN Pps.TwoWeekNoticeInd IS NULL THEN 'Unknown'
			ELSE Pps.TwoWeekNoticeInd
		END AS [Two Week Notice Indicator],
		CASE
			WHEN Pps.RegrettableTerminationInd = 'Y' THEN 'Yes'
			WHEN Pps.RegrettableTerminationInd = 'N' THEN 'No'
			WHEN Pps.RegrettableTerminationInd IS NULL THEN 'Unknown'
			ELSE Pps.RegrettableTerminationInd
		END AS [Regrettable Termination Indicator],
		CASE
			WHEN Pps.TerminationComments IS NULL THEN 'N/A'
			ELSE Pps.TerminationComments
		END AS [Termination Comments],
		Pps.NotifiedTerminationDate AS [Termination Notified Date],
		Pps.LastWorkedDate AS [Last Worked Date]
	FROM
		dbo.PerPeriodsB10 AS Pps WITH (NOLOCK)
		LEFT JOIN
		dbo.FND_LOOKUP_VALUES_B0 AS Lkp WITH (NOLOCK)
			ON Pps.LeavingReason = Lkp.lookup_code AND
			Lkp.lookup_type = 'LEAV_REAS' AND
			Lkp.deleted = 'N' AND
			Lkp.view_application_id = 3
	WHERE
		--(Lkp.BaseCreatedDate > @LastProcessedDate OR Pps.BaseCreatedDate > @LastProcessedDate)
		(Lkp.BaseCreatedDate > @LastProcessedDate OR Pps.BaseModifiedDate > @LastProcessedDate)
		AND Pps.ActualTerminationDate IS NOT NULL
),
RowHashtoB0 AS
(
	SELECT
		A.period_of_service_id,
		A.[Termination Reason],
		A.[Termination Type],
		A.[Eligible FOR Rehire Indicator],
		A.[Two Week Notice Indicator],
		A.[Regrettable Termination Indicator],
		A.[Termination Comments],
		A.[Termination Notified Date],
		A.[Last Worked Date],
		CAST(HASHBYTES('MD5',
			(SELECT
				A.period_of_service_id,
				A.[Termination Reason],
				A.[Termination Type],
				A.[Eligible FOR Rehire Indicator],
				A.[Two Week Notice Indicator],
				A.[Regrettable Termination Indicator],
				A.[Termination Comments],
				A.[Termination Notified Date],
				A.[Last Worked Date] FOR XML RAW)) AS BINARY(16)
			) AS RowHash
			--GETDATE() AS BaseCreatedDate,
			--GETDATE() AS BaseModifiedDate
	FROM
		B0Query AS A 
),
TerminationBNUpdate AS
(
	SELECT
		*
	FROM
		RowHashtoB0 AS B0
	WHERE
		EXISTS 
		(
			SELECT 1 
			FROM dbo.TerminationBN WITH (NOLOCK)
			WHERE
				PeriodofServiceID = B0.period_of_service_id
				AND RowHash <> B0.RowHash
		)
)
UPDATE BN SET
	[TerminationReason]				= Upd.[Termination Reason],
	[TerminationType]				= Upd.[Termination Type],
	[EligibleforRehireIndicator]			= Upd.[Eligible FOR Rehire Indicator],
	[TwoWeekNoticeIndicator]			= Upd.[Two Week Notice Indicator],           
	[RegrettableTerminationIndicator]		= Upd.[Regrettable Termination Indicator],
	[TerminationComments]			= Upd.[Termination Comments],
	[TerminationNotifiedDate]			= Upd.[Termination Notified Date],
	[LastWorkedDate]				= Upd.[Last Worked Date],       
	[BaseModifiedDate]				= GETDATE(),
	[UpdateAuditID]				= @InsertAuditID,
	[RowHash]				= upd.RowHash
FROM
	dbo.TerminationBN AS BN 
	INNER JOIN
	TerminationBNUpdate AS Upd
		ON BN.PeriodofServiceID = Upd.period_of_service_id
	
SELECT @@ROWCOUNT AS UpdateCount",DataLakeHRISToBase_TerminationBN
1744,Package,Microsoft.Package,TimeInBN,,,,,,DataLakeHRISToBase_TimeInBN
1745,Package\Base - Data Load,STOCK:SEQUENCE,Base - Data Load,,,,,,DataLakeHRISToBase_TimeInBN
1746,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Compare Values,,DataLakeHRISToBase_TimeInBN
1747,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - InsertAuditID Column,,DataLakeHRISToBase_TimeInBN
1748,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - Insert,,DataLakeHRISToBase_TimeInBN
1749,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",DST - Update,,DataLakeHRISToBase_TimeInBN
1750,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DataLakeHRISToBase_TimeInBN
1751,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,DataLakeHRISToBase_TimeInBN
1752,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - tfnHR_BaseGenerate_TimeInBN,,DataLakeHRISToBase_TimeInBN
1753,Package\Base - Data Load\DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.Pipeline,DFT - Load Data From tfnHR_BaseGenerate_TimeInBN,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,DataLakeHRISToBase_TimeInBN
1754,Package\Base - Data Load\SQL - Begin Base Load Audit Log,Microsoft.ExecuteSQLTask,SQL - Begin Base Load Audit Log,,,,,"EXECUTE [dbo].[spBeginAuditLog] ? OUTPUT, ?, ?
GO",DataLakeHRISToBase_TimeInBN
1755,Package\Base - Data Load\SQL - End Landing Audit Log,Microsoft.ExecuteSQLTask,SQL - End Landing Audit Log,,,,,"EXECUTE [dbo].[spEndAuditLog] ?, ?, ?, ?, ?, ?
GO",DataLakeHRISToBase_TimeInBN
1756,Package,Microsoft.Package,ARBalance,,,,,,DWMartIncrementalLoad_ARBalance
1757,Package\SEQ - ARBalance,STOCK:SEQUENCE,SEQ - ARBalance,,,,,,DWMartIncrementalLoad_ARBalance
1758,Package\SEQ - ARBalance\Foreach Loop - ARBalance,STOCK:FOREACHLOOP,Foreach Loop - ARBalance,,,,,,DWMartIncrementalLoad_ARBalance
1759,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_ARBalance
1760,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_ARBalance
1761,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_ARBalance
1762,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_ARBalance
1763,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_ARBalance
1764,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_ARBalance
1765,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_ARBalance
1766,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_ARBalance
1767,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_ARBalance
1768,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_ARBalance
1769,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_ARBalance
1770,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_ARBalance
1771,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_ARBalance
1772,Package\SEQ - ARBalance\Foreach Loop - ARBalance\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_ARBalance
1773,Package\SEQ - ARBalance\Foreach Loop - ARBalance\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_ARBalance
1774,Package\SEQ - ARBalance\Foreach Loop - ARBalance\SQL - End ARBalance Audit Log,Microsoft.ExecuteSQLTask,SQL - End ARBalance Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_ARBalance
1775,Package\SEQ - ARBalance\Foreach Loop - ARBalance\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_ARBalance
1776,Package\SEQ - ARBalance\Foreach Loop - ARBalance\SQL - Start ARBalance Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARBalance Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_ARBalance
1777,Package\SEQ - ARBalance\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_ARBalance
1778,Package\SEQ - ARBalance\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
AND FiscalWeekStartDate < ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_ARBalance
1779,Package\SEQ - ARBalance\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_ARBalance
1780,Package\SEQ - ARBalance\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_ARBalance
1781,Package\SQL - End ARBalance Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End ARBalance Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_ARBalance
1782,Package\SQL - Start ARBalance Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start ARBalance Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_ARBalance
1783,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_ARBalance
1784,Package,Microsoft.Package,Calculated,,,,,,DWMartIncrementalLoad_Calculated
1785,Package\SEQ - Calculated,STOCK:SEQUENCE,SEQ - Calculated,,,,,,DWMartIncrementalLoad_Calculated
1786,Package\SEQ - Calculated\Foreach Loop - Calculated,STOCK:FOREACHLOOP,Foreach Loop - Calculated,,,,,,DWMartIncrementalLoad_Calculated
1787,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_Calculated
1788,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_Calculated
1789,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_Calculated
1790,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_Calculated
1791,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - CalculatedLanding,,DWMartIncrementalLoad_Calculated
1792,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_Calculated
1793,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_Calculated
1794,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_Calculated
1795,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_Calculated
1796,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_Calculated
1797,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_Calculated
1798,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_Calculated
1799,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_Calculated
1800,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_Calculated
1801,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - CalculatedLanding,,DWMartIncrementalLoad_Calculated
1802,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_Calculated
1803,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_Calculated
1804,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_Calculated
1805,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_Calculated
1806,Package\SEQ - Calculated\Foreach Loop - Calculated\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_Calculated
1807,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_Calculated
1808,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL - End Calculated Audit Log,Microsoft.ExecuteSQLTask,SQL - End Calculated Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_Calculated
1809,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL - End Calculated Audit Log Plan,Microsoft.ExecuteSQLTask,SQL - End Calculated Audit Log Plan,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_Calculated
1810,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_Calculated
1811,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_Calculated
1812,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_Calculated
1813,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_Calculated
1814,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL - Start Calculated Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Calculated Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_Calculated
1815,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL - Truncate CalculatedLanding,Microsoft.ExecuteSQLTask,SQL - Truncate CalculatedLanding,,,,,truncate table [dbo].[CalculatedLanding],DWMartIncrementalLoad_Calculated
1816,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL- Load FactWeeklyMeasure,Microsoft.ExecuteSQLTask,SQL- Load FactWeeklyMeasure,,,,,exec [dbo].[spFactWeeklyMeasureLoad_Calculated] ?,DWMartIncrementalLoad_Calculated
1817,Package\SEQ - Calculated\Foreach Loop - Calculated\SQL- Load FactWeeklyMeasure Plan,Microsoft.ExecuteSQLTask,SQL- Load FactWeeklyMeasure Plan,,,,,exec [dbo].[spFactWeeklyMeasureLoad_Calculated] ?,DWMartIncrementalLoad_Calculated
1818,Package\SEQ - Calculated\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_Calculated
1819,Package\SEQ - Calculated\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_Calculated
1820,Package\SEQ - Calculated\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_Calculated
1821,Package\SEQ - Calculated\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_Calculated
1822,Package\SQL - End Calculated Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End Calculated Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_Calculated
1823,Package\SQL - Start Calculated Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start Calculated Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_Calculated
1824,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_Calculated
1825,Package,Microsoft.Package,CenterStatusSnapshot,,,,,,DWMartIncrementalLoad_CenterStatusSnapshot
1826,Package\SEQ-CenterStatusSnapshot,STOCK:SEQUENCE,SEQ-CenterStatusSnapshot,,,,,,DWMartIncrementalLoad_CenterStatusSnapshot
1827,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus,STOCK:SEQUENCE,SEQ - LifeCycleStatus,,,,,,DWMartIncrementalLoad_CenterStatusSnapshot
1828,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus,STOCK:FOREACHLOOP,Foreach Loop - LifeCycleStatus,,,,,,DWMartIncrementalLoad_CenterStatusSnapshot
1829,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1830,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1831,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_CenterStatusSnapshot
1832,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_CenterStatusSnapshot
1833,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1834,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_CenterStatusSnapshot
1835,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1836,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1837,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1838,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_CenterStatusSnapshot
1839,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_CenterStatusSnapshot
1840,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_CenterStatusSnapshot
1841,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_CenterStatusSnapshot
1842,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1843,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1844,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1845,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1846,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1847,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1848,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1849,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_CenterStatusSnapshot
1850,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_CenterStatusSnapshot
1851,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1852,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_CenterStatusSnapshot
1853,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1854,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1855,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1856,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_CenterStatusSnapshot
1857,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_CenterStatusSnapshot
1858,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_CenterStatusSnapshot
1859,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_CenterStatusSnapshot
1860,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1861,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1862,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1863,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1864,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure Plan,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1865,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_CenterStatusSnapshot
1866,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - End LifeCycleStatus Audit Log,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatus Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_CenterStatusSnapshot
1867,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - End LifeCycleStatus Audit Log Plan,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatus Audit Log Plan,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_CenterStatusSnapshot
1868,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_CenterStatusSnapshot
1869,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1870,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1871,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1872,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Start LifeCycleStatus Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LifeCycleStatus Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_CenterStatusSnapshot
1873,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_CenterStatusSnapshot
1874,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_CenterStatusSnapshot
1875,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_CenterStatusSnapshot
1876,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_CenterStatusSnapshot
1877,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity,STOCK:SEQUENCE,SEQ - LifeCycleStatus BuildingCapacity,,,,,,DWMartIncrementalLoad_CenterStatusSnapshot
1878,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus,STOCK:FOREACHLOOP,Foreach Loop - LifeCycleStatus,,,,,,DWMartIncrementalLoad_CenterStatusSnapshot
1879,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1880,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1881,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_CenterStatusSnapshot
1882,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_CenterStatusSnapshot
1883,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1884,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_CenterStatusSnapshot
1885,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1886,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1887,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1888,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_CenterStatusSnapshot
1889,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_CenterStatusSnapshot
1890,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_CenterStatusSnapshot
1891,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_CenterStatusSnapshot
1892,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1893,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1894,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1895,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1896,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1897,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted  ",DWMartIncrementalLoad_CenterStatusSnapshot
1898,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\SQL - End LifeCycleStatus Audit Log,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatus Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_CenterStatusSnapshot
1899,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_CenterStatusSnapshot
1900,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1901,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1902,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1903,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\Foreach Loop - LifeCycleStatus\SQL - Start LifeCycleStatus Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LifeCycleStatus Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_CenterStatusSnapshot
1904,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_CenterStatusSnapshot
1905,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
AND FiscalWeekStartDate < ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_CenterStatusSnapshot
1906,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_CenterStatusSnapshot
1907,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus BuildingCapacity\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_CenterStatusSnapshot
1908,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational,STOCK:SEQUENCE,SEQ - LifeCycleStatus Operational,,,,,,DWMartIncrementalLoad_CenterStatusSnapshot
1909,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus,STOCK:FOREACHLOOP,Foreach Loop - LifeCycleStatus,,,,,,DWMartIncrementalLoad_CenterStatusSnapshot
1910,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1911,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1912,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_CenterStatusSnapshot
1913,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_CenterStatusSnapshot
1914,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1915,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_CenterStatusSnapshot
1916,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1917,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1918,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1919,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_CenterStatusSnapshot
1920,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_CenterStatusSnapshot
1921,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_CenterStatusSnapshot
1922,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_CenterStatusSnapshot
1923,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1924,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1925,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1926,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1927,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1928,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1929,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_CenterStatusSnapshot
1930,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_CenterStatusSnapshot
1931,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_CenterStatusSnapshot
1932,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1933,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_CenterStatusSnapshot
1934,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1935,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1936,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_CenterStatusSnapshot
1937,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_CenterStatusSnapshot
1938,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_CenterStatusSnapshot
1939,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_CenterStatusSnapshot
1940,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_CenterStatusSnapshot
1941,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_CenterStatusSnapshot
1942,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1943,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_CenterStatusSnapshot
1944,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1945,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure_Plan,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure_Plan,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_CenterStatusSnapshot
1946,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_CenterStatusSnapshot
1947,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\SQL - End LifeCycleStatus Audit Log,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatus Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_CenterStatusSnapshot
1948,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\SQL - End LifeCycleStatus Audit Log Plan,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatus Audit Log Plan,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_CenterStatusSnapshot
1949,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_CenterStatusSnapshot
1950,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1951,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1952,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1953,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\Foreach Loop - LifeCycleStatus\SQL - Start LifeCycleStatus Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LifeCycleStatus Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_CenterStatusSnapshot
1954,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_CenterStatusSnapshot
1955,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_CenterStatusSnapshot
1956,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_CenterStatusSnapshot
1957,Package\SEQ-CenterStatusSnapshot\SEQ - LifeCycleStatus Operational\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_CenterStatusSnapshot
1958,Package\SQL - End LifeCycleStatus Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatus Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_CenterStatusSnapshot
1959,Package\SQL - Start LifeCycleStatus Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LifeCycleStatus Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_CenterStatusSnapshot
1960,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_CenterStatusSnapshot
1961,Package,Microsoft.Package,DailyFTE,,,,,,DWMartIncrementalLoad_DailyFTE
1962,Package\SEQ - DailyFTE,STOCK:SEQUENCE,SEQ - DailyFTE,,,,,,DWMartIncrementalLoad_DailyFTE
1963,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate,STOCK:FOREACHLOOP,Foreach - Fiscal WeekEndDate,,,,,,DWMartIncrementalLoad_DailyFTE
1964,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Assigning Delete Query,STOCK:FOREACHLOOP,Assigning Delete Query,,,,,,DWMartIncrementalLoad_DailyFTE
1965,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DWMartIncrementalLoad_DailyFTE
1966,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load FactFTE,Microsoft.Pipeline,DFT - Load FactFTE,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_DailyFTE
1967,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load FactFTE,Microsoft.Pipeline,DFT - Load FactFTE,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,DWMartIncrementalLoad_DailyFTE
1968,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load FactFTE,Microsoft.Pipeline,DFT - Load FactFTE,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactFTE,,DWMartIncrementalLoad_DailyFTE
1969,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load FactFTE,Microsoft.Pipeline,DFT - Load FactFTE,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - BaseDailyMeasureFTELanding,,DWMartIncrementalLoad_DailyFTE
1970,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load Landing,Microsoft.Pipeline,DFT - Load Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_DailyFTE
1971,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load Landing,Microsoft.Pipeline,DFT - Load Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseDailyMeasureFTELanding,,DWMartIncrementalLoad_DailyFTE
1972,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load Landing,Microsoft.Pipeline,DFT - Load Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - BaseDailyMeasureFTE,,DWMartIncrementalLoad_DailyFTE
1973,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\Foreach Loop Container\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,TRUNCATE TABLE BaseDailyMeasureFTELanding;,DWMartIncrementalLoad_DailyFTE
1974,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\SQL - Assigning Source Query,Microsoft.ExecuteSQLTask,SQL - Assigning Source Query,,,,,"DECLARE @Date TABLE
(
    FullDate DATETIME NULL
);
DECLARE @InsertQuery NVARCHAR(MAX);

INSERT INTO @Date
(
    FullDate
)

SELECT DISTINCT
       b.FullDate
FROM dbo.BaseDailyMeasureFTE (NOLOCK) AS b
WHERE   FiscalWeekEndDate = ?
  UNION 
SELECT b.FullDate
FROM dbo.BaseDailyMeasureFTE (NOLOCK) AS b
WHERE b.FullDate > ?
 AND FiscalWeekEndDate = ? 

 SET @InsertQuery = N'SELECT BaseDailyMeasureFTEID, FullDate, FiscalWeekEndDate, StudentID, SponsorID, PartnerID, TuitionAssistanceProviderID, CostCenterNumber, AccountSubaccountID
, TierID, ProgramID, SessionID, ScheduleWeekName, LifecycleStatusName, MeasureName
, DataScenarioName, Value1, SourceSystem, COALESCE(CSSCenterNumber, -2) CSSCenterNumber, COALESCE(CSSFamilyNumber, -2)CSSFamilyNumber
, COALESCE(CSSStudentNumber, -2)CSSStudentNumber, COALESCE(CSSTierNumber, -1)CSSTierNumber, CSSProgramName
, CSSSessionName, BaseCreatedDate
FROM dbo.BaseDailyMeasureFTE' +   N' WHERE FullDate IN ( '
 + STUFF( (SELECT ',' + '''' + CONVERT(VARCHAR,Fulldate,23) +''''
 FROM @Date FOR XML PATH ('')),1,1,'') + N' )'

SELECT @InsertQuery",DWMartIncrementalLoad_DailyFTE
1975,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\SQL - Delete from the FactFTE if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactFTE if the data is present,,,,,User::vDeleteStatement,DWMartIncrementalLoad_DailyFTE
1976,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\SQL - Delete Statement,Microsoft.ExecuteSQLTask,SQL - Delete Statement,,,,,"DECLARE @Date TABLE
(
    DateKey VARCHAR(15) NULL
);
DECLARE @DatestoDelete VARCHAR(MAX);

INSERT INTO @Date
(
    DateKey
)


SELECT DISTINCT
       REPLACE(b.FullDate, '-', '') AS DateKey
FROM dbo.BaseDailyMeasureFTE (NOLOCK) AS b
WHERE   FiscalWeekEndDate = ?
  UNION 
SELECT REPLACE(b.FullDate, '-', '') AS DateKey
FROM dbo.BaseDailyMeasureFTE (NOLOCK) AS b
WHERE b.FullDate > ?
 AND FiscalWeekEndDate = ? 
ORDER BY Datekey


 SET @DatestoDelete = 'DELETE FROM dbo.FactFTE WHERE DateKey IN ('
-- SELECT @DatestoDelete
+ STUFF( (SELECT ',' + DateKey
FROM @Date FOR XML PATH ('')),1,1,'') + ' );'  + ' SELECT @@ROWCOUNT AS DeleteCount '
SELECT CAST(@DatestoDelete  AS VARCHAR(MAX)) ",DWMartIncrementalLoad_DailyFTE
1977,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\SQL - End DailyFTE Audit Log,Microsoft.ExecuteSQLTask,SQL - End DailyFTE Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_DailyFTE
1978,Package\SEQ - DailyFTE\Foreach - Fiscal WeekEndDate\SQL - Start DailyFTE Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DailyFTE Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_DailyFTE
1979,Package\SEQ - DailyFTE\SQL - Get Base Dates,Microsoft.ExecuteSQLTask,SQL - Get Base Dates,,,,,"SELECT DISTINCT FiscalWeekEndDate
FROM dbo.BaseDailyMeasureFTE (NOLOCK) AS b
WHERE BaseCreatedDate > ? AND b.FiscalWeekEndDate >='01-08-2011'
UNION
SELECT DISTINCT FiscalWeekEndDate
FROM dbo.BaseDailyMeasureFTE (NOLOCK) AS b
WHERE b.FullDate > ? AND BaseCreatedDate > ?  AND b.FiscalWeekEndDate >='01-08-2011'
ORDER BY  FiscalWeekEndDate",DWMartIncrementalLoad_DailyFTE
1980,Package\SEQ - DailyFTE\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,," DECLARE @LastProcessFiscalWeekEndDate datetime, @LastProcessDate datetime, @LastsuccessfulDate DateTime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekEndDate = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;

WITH LatestJobAuditBySuccessfulRun AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditBySuccessfulRun AS lja ON lja.LatestJobAudit = ja.AuditId;


SELECT ISNULL(@LastProcessFiscalWeekEndDate, '2011-01-08') AS LastProcessFiscalWeekEndDate, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate, ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate;",DWMartIncrementalLoad_DailyFTE
1981,Package\SQL - End DailyFTE Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End DailyFTE Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_DailyFTE
1982,Package\SQL - Start DailyFTE Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DailyFTE Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_DailyFTE
1983,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_DailyFTE
1984,Package,Microsoft.Package,DailyNetRevenue,,,,,,DWMartIncrementalLoad_DailyNetRevenue
1985,Package\SEQ - DailyNetRevenue,STOCK:SEQUENCE,SEQ - DailyNetRevenue,,,,,,DWMartIncrementalLoad_DailyNetRevenue
1986,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate,STOCK:FOREACHLOOP,Foreach - Fiscal WeekEndDate,,,,,,DWMartIncrementalLoad_DailyNetRevenue
1987,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Assigning Delete Query,STOCK:FOREACHLOOP,Assigning Delete Query,,,,,,DWMartIncrementalLoad_DailyNetRevenue
1988,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Foreach Loop Container,STOCK:FOREACHLOOP,Foreach Loop Container,,,,,,DWMartIncrementalLoad_DailyNetRevenue
1989,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load FactNetRevnue,Microsoft.Pipeline,DFT - Load FactNetRevnue,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_DailyNetRevenue
1990,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load FactNetRevnue,Microsoft.Pipeline,DFT - Load FactNetRevnue,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,DWMartIncrementalLoad_DailyNetRevenue
1991,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load FactNetRevnue,Microsoft.Pipeline,DFT - Load FactNetRevnue,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactNetRevenue,,DWMartIncrementalLoad_DailyNetRevenue
1992,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load FactNetRevnue,Microsoft.Pipeline,DFT - Load FactNetRevnue,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - BaseDailyMeasureNetRevenueLanding,,DWMartIncrementalLoad_DailyNetRevenue
1993,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load Landing,Microsoft.Pipeline,DFT - Load Landing,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_DailyNetRevenue
1994,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load Landing,Microsoft.Pipeline,DFT - Load Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - BaseDailyMeasureNetRevenueLanding,,DWMartIncrementalLoad_DailyNetRevenue
1995,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Foreach Loop Container\DFT - Load Landing,Microsoft.Pipeline,DFT - Load Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - BaseDailyMeasureNetRevenue,,DWMartIncrementalLoad_DailyNetRevenue
1996,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\Foreach Loop Container\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,TRUNCATE TABLE BaseDailyMeasureNetRevenueLanding;,DWMartIncrementalLoad_DailyNetRevenue
1997,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\SQL - Assigning Source Query,Microsoft.ExecuteSQLTask,SQL - Assigning Source Query,,,,,"DECLARE @Date TABLE
(
    FullDate DATETIME NULL
);
DECLARE @InsertQuery NVARCHAR(MAX);

INSERT INTO @Date
(
    FullDate
)

SELECT DISTINCT
       b.FullDate
FROM dbo.BaseDailyMeasureNetRevenue (NOLOCK) AS b
WHERE BaseCreatedDate > ?
      AND FiscalWeekEndDate = ?
  UNION 
SELECT b.FullDate
FROM dbo.BaseDailyMeasureNetRevenue (NOLOCK) AS b
WHERE b.FullDate > ?
 AND FiscalWeekEndDate = ? 

 SET @InsertQuery = N'SELECT BaseDailyMeasureNetRevID, FullDate, FiscalWeekEndDate, StudentID, SponsorID, PartnerID, TuitionAssistanceProviderID, CostCenterNumber, AccountSubaccountID
, TierID, ProgramID, SessionID, ScheduleWeekName, LifecycleStatusName, TransactionNumber, MeasureName
, DataScenarioName, Value1, SourceSystem, COALESCE(CSSCenterNumber, -2) CSSCenterNumber, COALESCE(CSSFamilyNumber, -2)CSSFamilyNumber
, COALESCE(CSSStudentNumber, -2)CSSStudentNumber, COALESCE(CSSCustomerCode, ''-2'')CSSCustomerCode, COALESCE(CSSTierNumber, -1)CSSTierNumber, CSSProgramName
, CSSSessionName, BaseCreatedDate
FROM dbo.BaseDailyMeasureNetRevenue' +   N' WHERE FullDate IN ( '
 + STUFF( (SELECT ',' + '''' + CONVERT(VARCHAR,Fulldate,23) +''''
 FROM @Date FOR XML PATH ('')),1,1,'') + N' )'

SELECT @InsertQuery",DWMartIncrementalLoad_DailyNetRevenue
1998,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\SQL - Delete from the FactNetRevenue if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactNetRevenue if the data is present,,,,,User::vDeleteStatement,DWMartIncrementalLoad_DailyNetRevenue
1999,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\SQL - Delete Statement,Microsoft.ExecuteSQLTask,SQL - Delete Statement,,,,,"DECLARE @Date TABLE
(
    DateKey VARCHAR(15) NULL
);
DECLARE @DatestoDelete VARCHAR(MAX);

INSERT INTO @Date
(
    DateKey
)


SELECT DISTINCT
       REPLACE(b.FullDate, '-', '') AS DateKey
FROM dbo.BaseDailyMeasureNetRevenue (NOLOCK) AS b
WHERE BaseCreatedDate > ?
      AND FiscalWeekEndDate = ?
  UNION 
SELECT REPLACE(b.FullDate, '-', '') AS DateKey
FROM dbo.BaseDailyMeasureNetRevenue (NOLOCK) AS b
WHERE b.FullDate > ?
 AND FiscalWeekEndDate = ? 
ORDER BY Datekey


 SET @DatestoDelete = 'DELETE FROM dbo.FactNetRevenue WHERE DateKey IN ('
-- SELECT @DatestoDelete
+ STUFF( (SELECT ',' + DateKey
FROM @Date FOR XML PATH ('')),1,1,'') + ' );'  + ' SELECT @@ROWCOUNT AS DeleteCount '
SELECT CAST(@DatestoDelete  AS VARCHAR(MAX)) ",DWMartIncrementalLoad_DailyNetRevenue
2000,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\SQL - End DailyRevenue Audit Log,Microsoft.ExecuteSQLTask,SQL - End DailyRevenue Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_DailyNetRevenue
2001,Package\SEQ - DailyNetRevenue\Foreach - Fiscal WeekEndDate\SQL - Start DailyNetRevenue Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DailyNetRevenue Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_DailyNetRevenue
2002,Package\SEQ - DailyNetRevenue\SQL - Get Base Dates,Microsoft.ExecuteSQLTask,SQL - Get Base Dates,,,,,"SELECT DISTINCT FiscalWeekEndDate
FROM dbo.BaseDailyMeasureNetRevenue (NOLOCK) AS b
WHERE BaseCreatedDate > ?  AND b.FiscalWeekEndDate>='01-08-2011'
UNION
SELECT DISTINCT FiscalWeekEndDate
FROM dbo.BaseDailyMeasureNetRevenue (NOLOCK) AS b
WHERE b.FullDate > ? AND BaseCreatedDate > ?  AND b.FiscalWeekEndDate>='01-08-2011'
ORDER BY  FiscalWeekEndDate",DWMartIncrementalLoad_DailyNetRevenue
2003,Package\SEQ - DailyNetRevenue\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,," DECLARE @LastProcessFiscalWeekEndDate datetime, @LastProcessDate datetime, @LastsuccessfulDate DateTime;
WITH LatestJobAuditByTaskName AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastProcessFiscalWeekEndDate = ja.BatchSplitByValue, @LastProcessDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditByTaskName AS lja ON lja.LatestJobAudit = ja.AuditId;
WITH LatestJobAuditBySuccessfulRun AS (
   SELECT TaskName, MAX(AuditId) AS LatestJobAudit
      FROM dbo.AuditLog (NOLOCK)
      WHERE (StatusCode = 1) AND (TaskName = ?)
      GROUP BY TaskName)
SELECT @LastsuccessfulDate = ja.StartTime
   FROM dbo.AuditLog (NOLOCK) AS ja 
      INNER JOIN LatestJobAuditBySuccessfulRun AS lja ON lja.LatestJobAudit = ja.AuditId;
SELECT ISNULL(@LastProcessFiscalWeekEndDate, '2011-01-08') AS LastProcessFiscalWeekEndDate, ISNULL(@LastProcessDate, '01-08-2011') AS LastProcessDate, ISNULL(@LastsuccessfulDate, '01-08-2011') AS LastsuccessfulDate;
",DWMartIncrementalLoad_DailyNetRevenue
2004,Package\SQL - End DailyNetRevenue Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End DailyNetRevenue Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_DailyNetRevenue
2005,Package\SQL - Start DailyNetRevenue Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start DailyNetRevenue Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_DailyNetRevenue
2006,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_DailyNetRevenue
2007,Package,Microsoft.Package,DimCostCenter,,,,,,DWMartIncrementalLoad_DimCostCenter
2008,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,DWMartIncrementalLoad_DimCostCenter
2009,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,DWMartIncrementalLoad_DimCostCenter
2010,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,DWMartIncrementalLoad_DimCostCenter
2011,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimCostCenter,,DWMartIncrementalLoad_DimCostCenter
2012,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - tfnGL_StagingGenerate_CostCenter(),,DWMartIncrementalLoad_DimCostCenter
2013,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,DWMartIncrementalLoad_DimCostCenter
2014,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD1 Update Count,,DWMartIncrementalLoad_DimCostCenter
2015,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,DWMartIncrementalLoad_DimCostCenter
2016,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,DWMartIncrementalLoad_DimCostCenter
2017,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,DWMartIncrementalLoad_DimCostCenter
2018,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD1 Update,,DWMartIncrementalLoad_DimCostCenter
2019,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,DWMartIncrementalLoad_DimCostCenter
2020,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DWMartIncrementalLoad_DimCostCenter
2021,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,DWMartIncrementalLoad_DimCostCenter
2022,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,DWMartIncrementalLoad_DimCostCenter
2023,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimCostCenter_DM_Data,,DWMartIncrementalLoad_DimCostCenter
2024,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,DWMartIncrementalLoad_DimCostCenter
2025,Package\SQL - Begin DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimCostCenter ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",DWMartIncrementalLoad_DimCostCenter
2026,Package\SQL - End DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimCostCenter ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",DWMartIncrementalLoad_DimCostCenter
2027,Package,Microsoft.Package,DimDataScenario,,,,,,DWMartIncrementalLoad_DimDataScenario
2028,Package\SQL - End DimDataScenario Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimDataScenario Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",DWMartIncrementalLoad_DimDataScenario
2029,Package\SQL - Get Deleted Count,Microsoft.ExecuteSQLTask,SQL - Get Deleted Count,,,,," SELECT COUNT(1) AS DeleteCount 
From dbo.DimDataScenario",DWMartIncrementalLoad_DimDataScenario
2030,Package\SQL - Insert data into DimDtaScenario,Microsoft.ExecuteSQLTask,SQL - Insert data into DimDtaScenario,,,,,"WITH DataScenario
     AS (
     SELECT 1 AS Id,
            'Actual' AS DataScenarioName,
            'Actual' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'A' AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 2 AS Id,
            'Plan' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'B' AS GLActualFlag,
            1101 AS GLBudgetVersionID
     UNION
     SELECT 3 AS Id,
            'Plan Var' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 4 AS Id,
            'Plan Var %' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 5 AS Id,
            'Forecast' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'B' AS GLActualFlag,
            1181 AS GLBudgetVersionID
     UNION
     SELECT 6 AS Id,
            'Forecast Var' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 7 AS Id,
            'Forecast Var %' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 8 AS Id,
            'Target' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 9 AS Id,
            'Target Var' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 10 AS Id,
            'Target Var %' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionIDUNION
     UNION
     SELECT 11 AS Id,
            'LY' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 12 AS Id,
            'LY Var' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 13 AS Id,
            'LY Var %' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID)
     INSERT INTO [dbo].[DimDataScenario]
     ([DataScenarioName],
      [DataScenarioType],
      [DataScenarioSubtype],
      [GLActualFlag],
      [GLBudgetVersionID],
      [EffectiveFrom],
      [EffectiveTo],
      [ETLJobID]
     )
            SELECT COALESCE(DataScenarioName, 'Unknown Scenario') AS DataScenarioName,
                   COALESCE(DataScenarioType, 'Unknown Scenario Type') AS DataScenarioType,
                   COALESCE(DataScenarioSubtype, 'Unknown Scenario Subtype') AS DataScenarioSubtype,
                   GLActualFlag,
                   GLBudgetVersionID,
                   '1900-01-01',
                   '12/31/9999 23:59:59.999',
                   ?
            FROM DataScenario
            ORDER BY Id;
SELECT @@ROWCOUNT + 1 AS SourceCount;
",DWMartIncrementalLoad_DimDataScenario
2031,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"DBCC CHECKIDENT('[DimDataScenario]', RESEED, 1);
SET IDENTITY_INSERT dbo.DimDataScenario ON;
INSERT INTO [dbo].[DimDataScenario]
([DataScenarioKey],
 [DataScenarioName],
 [DataScenarioType],
 [DataScenarioSubtype],
 [GLActualFlag],
 [GLBudgetVersionID],
 [Deleted],
 [EffectiveFrom],
 [EffectiveTo],
 [ETLJobID]
)
       SELECT-1,
             'Unknown Scenario',
             'Unknown Scenario Type',
             'Unknown Scenario Subtype',
             NULL,
             NULL,
             NULL,
             '1900-01-01',
             '12/31/9999 23:59:59.999',
             ?
       UNION
       SELECT-2,
             'Not Applicable Scenario',
             'Not Applicable Scenario Type',
             'Not Applicable Scenario Subtype',
             NULL,
             NULL,
             NULL,
             '1900-01-01',
             '12/31/9999 23:59:59.999',
             ?;
SET IDENTITY_INSERT dbo.DimDataScenario OFF;",DWMartIncrementalLoad_DimDataScenario
2032,Package\SQL - Start DimDataScenario Auditlog,Microsoft.ExecuteSQLTask,SQL - Start DimDataScenario Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",DWMartIncrementalLoad_DimDataScenario
2033,Package\SQL - Truncate DimDataScenario,Microsoft.ExecuteSQLTask,SQL - Truncate DimDataScenario,,,,, TRUNCATE TABLE dbo.DimDataScenario,DWMartIncrementalLoad_DimDataScenario
2034,Package,Microsoft.Package,DimDate,,,,,,DWMartIncrementalLoad_DimDate
2035,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimDate,,DWMartIncrementalLoad_DimDate
2036,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DWMartIncrementalLoad_DimDate
2037,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,DWMartIncrementalLoad_DimDate
2038,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,DWMartIncrementalLoad_DimDate
2039,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - SQL Command,,DWMartIncrementalLoad_DimDate
2040,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,," 

DELETE FROM [dbo].[DimDate]
             WHERE [DateKey] < 0;


             INSERT INTO [dbo].[DimDate]
             ([DateKey],
              [FullDate],
		    [FiscalWeekNumber],
		    [FiscalWeekName],
		    [FiscalWeekStartDateKey],
              [FiscalWeekEndDateKey],
              [HolidayName],
              [HolidayFiscalWeekFlag],
             [FiscalDayNumber],
             [FiscalDayOfWeekNumber],
            [FiscalDayOfPeriodNumber],
            [FiscalDayOfQuarterNumber],
            [FiscalDayOfYearNumber],
              [FiscalWeekOfPeriodNumber],
              [FiscalWeekOfPeriodName],
              [FiscalWeekOfQuarterNumber],
              [FiscalWeekOfQuarterName],
              [FiscalWeekOfYearNumber],
              [FiscalWeekOfYearName],
              [FiscalWeekSequenceNumber],
              [FiscalWeekStartDate],
              [FiscalWeekEndDate],
              [FiscalPeriodNumber],
              [FiscalPeriodName],
              [FiscalPeriodType],
              [FiscalPeriodOfYearNumber],
              [FiscalPeriodOfYearName],
              [FiscalPeriodSequenceNumber],
              [FiscalPeriodStartDate],
              [FiscalPeriodEndDate],
              [FiscalQuarterNumber],
              [FiscalQuarterName],
              [FiscalQuarterOfYearNumber],
              [FiscalQuarterOfYearName],
              [FiscalQuarterSequenceNumber],
              [FiscalQuarterStartDate],
              [FiscalQuarterEndDate],
              [FiscalYearNumber],
              [FiscalYearName],
              [FiscalYearStartDate],
		    [FiscalYearEndDate],
		    [EffectiveFrom],
		    [EffectiveTo],
		    [RowStatus],
		    [ETLJobID]
              )
                    SELECT-1, --[DateKey]
                          '19000101', --[FullDate]
					 -1, --[FiscalWeekNumber]
                          'Unknown Fiscal Week', --[FiscalWeekName]
					 -1,   ---[FiscalWeekStartDateKey]
					 -1,   ---[FiscalWeekEndDateKey]
                          'Unknown Holiday', --[HolidayName]
                          'Unknown Holiday Fiscal Week', --[HolidayFiscalWeekFlag]
						  -1,--- [FiscalDayNumber] 
	                      -1, ---[FiscalDayOfWeekNumber] 
	                      -1, ----[FiscalDayOfPeriodNumber] 
	                      -1, ---[FiscalDayOfQuarterNumber] 
	                      -1, ---[FiscalDayOfYearNumber] 
                          -1, --[FiscalWeekOfPeriodNumber]
                          'Unknown Fiscal Week of Period', --[FiscalWeekOfPeriodName]
                          -1, --[FiscalWeekOfQuarterNumber]
                          'Unknown Fiscal Week of Quarter', --[FiscalWeekOfQuarterName]
                          -1, --[FiscalWeekOfYearNumber]
                          'Unknown Fiscal Week of Year', --[FiscalWeekOfYearName]
                          -1, --[FiscalWeekSequenceNumber]
                          '19000101', --[FiscalWeekStartDate]
                          '19000101', --[FiscalWeekEndDate]
                          -1, --[FiscalPeriodNumber]
                          'Unknown Fiscal Period', --[FiscalPeriodName]
                          'Unknown', --[FiscalPeriodType]
                          -1, --[FiscalPeriodOfYearNumber]
                          'Unknown Fiscal Period of Year', --[FiscalPeriodOfYearName]
                          -1, --[FiscalPeriodSequenceNumber]
                          '19000101', --[FiscalPeriodStartDate]
                          '19000101', --[FiscalPeriodEndDate]
                          -1, --[FiscalQuarterNumber]
                          'Unknown Fiscal Quarter', --[FiscalQuarterName]
                          -1, --[FiscalQuarterOfYearNumber]
                          'Unknown Fiscal Quarter of Year', --[FiscalQuarterOfYearName]
                          -1, --[FiscalQuarterSequenceNumber]
                          '19000101', --[FiscalQuarterStartDate]
                          '19000101', --[FiscalQuarterEndDate]
                          -1, --[FiscalYearNumber]
                          'Unknown Fiscal Year', --[FiscalYearName]
                          '19000101', --[FIscalYearStartDate]
                          '19000101', --[FiscalYearEndDate]
					 '1900-01-01' , --[EffectiveFrom]
					 '12/31/9999 23:59:59.999', ---- [EffectiveTo]
					 'Active', ---RowStatus
					 ?   ---ETLJobID
                          
                    UNION
                    SELECT-2, --[DateKey]
                          '19000102', --[FullDate]
                          -2, --[FiscalWeekNumber]
                          'Not Applicable Fiscal Week', --[FiscalWeekName]
					 -2, --- [FiscalWeekStartDateKey]
                          -2, --- [FiscalWeekEndDateKey]
                          'Not Applicable Holiday', --[HolidayName]
                          'Not Applicable Holiday Fiscal Week', --[HolidayFiscalWeekFlag]
						  -2,--- [FiscalDayNumber] 
	                      -2, ---[FiscalDayOfWeekNumber] 
	                      -2, ----[FiscalDayOfPeriodNumber] 
	                      -2, ---[FiscalDayOfQuarterNumber] 
	                      -2, ---[FiscalDayOfYearNumber] 
                          -2, --[FiscalWeekOfPeriodNumber]
                          'Not Applicable Fiscal Week of Period', --[FiscalWeekOfPeriodName]
                          -2, --[FiscalWeekOfQuarterNumber]
                          'Not Applicable Fiscal Week of Quarter', --[FiscalWeekOfQuarterName]
                          -2, --[FiscalWeekOfYearNumber]
                          'Not Applicable Fiscal Week of Year', --[FiscalWeekOfYearName]
                          -2, --[FiscalWeekSequenceNumber]
                          '19000102', --[FiscalWeekStartDate]
                          '19000102', --[FiscalWeekEndDate]
                          -2, --[FiscalPeriodNumber]
                          'Not Applicable Fiscal Period', --[FiscalPeriodName]
                          'N/A', --[FiscalPeriodType]
                          -2, --[FiscalPeriodOfYearNumber]
                          'Not Applicable Fiscal Period of Year', --[FiscalPeriodOfYearName]
                          -2, --[FiscalPeriodSequenceNumber]
                          '19000102', --[FiscalPeriodStartDate]
                          '19000102', --[FiscalPeriodEndDate]
                          -2, --[FiscalQuarterNumber]
                          'Not Applicable Fiscal Quarter', --[FiscalQuarterName]
                          -2, --[FiscalQuarterOfYearNumber]
                          'Not Applicable Fiscal Quarter of Year', --[FiscalQuarterOfYearName]
                          -2, --[FiscalQuarterSequenceNumber]
                          '19000102', --[FiscalQuarterStartDate]
                          '19000102', --[FiscalQuarterEndDate]
                          -2, --[FiscalYearNumber]
                          'Not Applicable Fiscal Year', --[FiscalYearName]
                          '19000102', --[FIscalYearStartDate]
                          '19000102', --[FiscalYearEndDate]
                           '1900-01-02', --[EffectiveFrom]
					  '12/31/9999 23:59:59.999', ---- [EffectiveTo]
					 'Active', ---RowStatus;
                           ? --ETLJobID
           ",DWMartIncrementalLoad_DimDate
2041,Package,Microsoft.Package,DimMeasure,,,,,,DWMartIncrementalLoad_DimMeasure
2042,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,DWMartIncrementalLoad_DimMeasure
2043,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Delete Count,,DWMartIncrementalLoad_DimMeasure
2044,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,DWMartIncrementalLoad_DimMeasure
2045,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column 1,,DWMartIncrementalLoad_DimMeasure
2046,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimMeasure Merge Insert,,DWMartIncrementalLoad_DimMeasure
2047,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DWMartIncrementalLoad_DimMeasure
2048,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Merge Delete,,DWMartIncrementalLoad_DimMeasure
2049,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Merge Join,,DWMartIncrementalLoad_DimMeasure
2050,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Merge Update,,DWMartIncrementalLoad_DimMeasure
2051,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimMeasure,,DWMartIncrementalLoad_DimMeasure
2052,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimMeasureLanding,,DWMartIncrementalLoad_DimMeasure
2053,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,DWMartIncrementalLoad_DimMeasure
2054,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimMeasure,,DWMartIncrementalLoad_DimMeasure
2055,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimMeasureLanding,,DWMartIncrementalLoad_DimMeasure
2056,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,DWMartIncrementalLoad_DimMeasure
2057,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.DataConvert,Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,Data Conversion,Data Conversion,,DWMartIncrementalLoad_DimMeasure
2058,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimMeasureLanding,,DWMartIncrementalLoad_DimMeasure
2059,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,DWMartIncrementalLoad_DimMeasure
2060,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.ExcelSource,Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,Excel Source,SRC - Measures File,,DWMartIncrementalLoad_DimMeasure
2061,Package\DimMeasureLanding,Microsoft.ExecuteSQLTask,DimMeasureLanding,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",DWMartIncrementalLoad_DimMeasure
2062,Package\SQL - End DimMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimMeasure Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",DWMartIncrementalLoad_DimMeasure
2063,Package\SQL - End DimMeasureLanding Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimMeasureLanding Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",DWMartIncrementalLoad_DimMeasure
2064,Package\SQL - Get Insert count for Landing Table,Microsoft.ExecuteSQLTask,SQL - Get Insert count for Landing Table,,,,,SELECT COUNT(1) AS vInsertCount FROM DimMeasureLanding(NOLOCK),DWMartIncrementalLoad_DimMeasure
2065,Package\SQL - Start the AuditLog for DimMeasure,Microsoft.ExecuteSQLTask,SQL - Start the AuditLog for DimMeasure,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",DWMartIncrementalLoad_DimMeasure
2066,Package\Truncate DimMeasureLanding,Microsoft.ExecuteSQLTask,Truncate DimMeasureLanding,,,,,Truncate table DimMeasureLanding,DWMartIncrementalLoad_DimMeasure
2067,Package,Microsoft.Package,DimTimeCalculation,,,,,,DWMartIncrementalLoad_DimTimeCalculation
2068,Package\EST - Load DimTimeCalculation,Microsoft.ExecuteSQLTask,EST - Load DimTimeCalculation,,,,,"DECLARE @DelCount INT, @InsCount INT, @AudID INT

SET @AudID = ?
SET @DelCount = (SELECT COUNT(1) FROM dbo.DimTimeCalculation)

TRUNCATE TABLE dbo.DimTimeCalculation

SET IDENTITY_INSERT dbo.DimTimeCalculation ON;


;WITH DimTimeCalc
AS (
	    SELECT -2 AS TCKey,	'Not Applicable Time Calculation' AS CalcName
		UNION ALL
		SELECT -1 AS TCKey,	'Unknown Time Calculation' AS CalcName
		UNION ALL
		SELECT 1 AS TCKey, 'Selection' AS CalcName
		UNION ALL
		SELECT 2 AS TCKey, 'PTD' AS CalcName
		UNION ALL
		SELECT 3 AS TCKey, 'QTD' AS CalcName
		UNION ALL
		SELECT 5 AS TCKey, 'YTD' AS CalcName
)
--SELECT * FROM DimTimeCalc+

INSERT INTO [dbo].[DimTimeCalculation]
(	  [TimeCalculationKey]
	 ,[TimeCalculationName]
     ,[EDWEffectiveFrom]
     ,[EDWEffectiveTo]
     ,[EDWRowStatus]
     ,[ETLJobID]			)
SELECT TCKey AS TimeCalculationKey,
       CalcName AS TimeCalculationName,
       CAST('1900-01-01 00:00:00.000' AS DATE) AS EffectiveFrom,
	   CAST('9999-12-31 23:59:59.999' AS DATE) AS EffectiveTo,
	   'A' AS RowStatus,
       @AudID As ETLJobID
FROM DimTimeCalc
ORDER BY TCKey;


--Get Insert Count
SET @InsCount = (SELECT COUNT(1) FROM dbo.DimTimeCalculation)


SET IDENTITY_INSERT dbo.DimTimeCalculation OFF;

SELECT @InsCount AS InsCount, @DelCount AS DelCount;",DWMartIncrementalLoad_DimTimeCalculation
2069,Package\SQL - End Auditlog,Microsoft.ExecuteSQLTask,SQL - End Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",DWMartIncrementalLoad_DimTimeCalculation
2070,Package\SQL - Start Auditlog,Microsoft.ExecuteSQLTask,SQL - Start Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",DWMartIncrementalLoad_DimTimeCalculation
2071,Package,Microsoft.Package,DWMarParentPackage,,,,,,DWMartIncrementalLoad_DWMarParentPackage
2072,Package,Microsoft.Package,DWMartParentPackage,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2073,Package\Sequence Container,STOCK:SEQUENCE,Sequence Container,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2074,Package\Sequence Container\Dimensions,STOCK:SEQUENCE,Dimensions,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2075,Package\Sequence Container\Dimensions\DimCostCenter,Microsoft.ExecutePackageTask,DimCostCenter,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2076,Package\Sequence Container\Dimensions\DimDataScenario,Microsoft.ExecutePackageTask,DimDataScenario,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2077,Package\Sequence Container\Dimensions\DimDate,Microsoft.ExecutePackageTask,DimDate,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2078,Package\Sequence Container\Dimensions\DimMeasure,Microsoft.ExecutePackageTask,DimMeasure,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2079,Package\Sequence Container\Dimensions\DimTimeCalculation,Microsoft.ExecutePackageTask,DimTimeCalculation,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2080,Package\Sequence Container\Dimensions\ReportMeasure,Microsoft.ExecutePackageTask,ReportMeasure,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2081,Package\Sequence Container\Fact Load,STOCK:SEQUENCE,Fact Load,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2082,Package\Sequence Container\Fact Load\ARBalance,Microsoft.ExecutePackageTask,ARBalance,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2083,Package\Sequence Container\Fact Load\FTESnapshot,Microsoft.ExecutePackageTask,FTESnapshot,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2084,Package\Sequence Container\Fact Load\GLBalancePlanAllocation_FTE,Microsoft.ExecutePackageTask,GLBalancePlanAllocation_FTE,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2085,Package\Sequence Container\Fact Load\GLBalancePlanAllocation_LaborHours,Microsoft.ExecutePackageTask,GLBalancePlanAllocation_LaborHours,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2086,Package\Sequence Container\Fact Load\GLBalancePlanAllocation_LaborSalary,Microsoft.ExecutePackageTask,GLBalancePlanAllocation_LaborSalary,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2087,Package\Sequence Container\Fact Load\GLBalancePlanAllocation_NetRevenue,Microsoft.ExecutePackageTask,GLBalancePlanAllocation_NetRevenue,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2088,Package\Sequence Container\Fact Load\LaborHours,Microsoft.ExecutePackageTask,LaborHours,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2089,Package\Sequence Container\Fact Load\LaborSalary,Microsoft.ExecutePackageTask,LaborSalary,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2090,Package\Sequence Container\Fact Load\LeadEvent,Microsoft.ExecutePackageTask,LeadEvent,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2091,Package\Sequence Container\Fact Load\LifeCycleStatus,Microsoft.ExecutePackageTask,LifeCycleStatus,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2092,Package\Sequence Container\Fact Load\NetRevenue,Microsoft.ExecutePackageTask,NetRevenue,,,,,,DWMartIncrementalLoad_DWMartParentPackage
2093,Package\SQL - Package Completion,Microsoft.ExecuteSQLTask,SQL - Package Completion,,,,,Select 'Complete',DWMartIncrementalLoad_DWMartParentPackage
2094,Package\SQL - Package Duration,Microsoft.ExecuteSQLTask,SQL - Package Duration,,,,,"SELECT CAST(CAST(DATEADD(SECOND, ?, 0) AS TIME) as varchar(8))",DWMartIncrementalLoad_DWMartParentPackage
2095,Package,Microsoft.Package,FTESnapshot,,,,,,DWMartIncrementalLoad_FTESnapshot
2096,Package\SEQ - FTESnapshot,STOCK:SEQUENCE,SEQ - FTESnapshot,,,,,,DWMartIncrementalLoad_FTESnapshot
2097,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot,STOCK:FOREACHLOOP,Foreach Loop - FTESnapshot,,,,,,DWMartIncrementalLoad_FTESnapshot
2098,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_FTESnapshot
2099,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_FTESnapshot
2100,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split - Split Weekly Avg Measures Out,,DWMartIncrementalLoad_FTESnapshot
2101,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_FTESnapshot
2102,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values - Other Measures",,DWMartIncrementalLoad_FTESnapshot
2103,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values - Weekly Avg Measures",,DWMartIncrementalLoad_FTESnapshot
2104,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FTESnapshotLanding,,DWMartIncrementalLoad_FTESnapshot
2105,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_FTESnapshot
2106,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_FTESnapshot
2107,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_FTESnapshot
2108,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_FTESnapshot
2109,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_FTESnapshot
2110,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\DFT - Load FTESnapshotLanding,Microsoft.Pipeline,DFT - Load FTESnapshotLanding,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DWMartIncrementalLoad_FTESnapshot
2111,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_FTESnapshot
2112,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\SQL - End FTESnapshot Audit Log,Microsoft.ExecuteSQLTask,SQL - End FTESnapshot Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_FTESnapshot
2113,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\SQL - Get FiscalWeekEndDateKey and FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey and FiscalWeekNumbers,,,,,"SELECT DISTINCT DateKey AS DateKey, FiscalWeekOfPeriodNumber,
FiscalWeekOfQuarterNumber,
FiscalWeekOfYearNumber
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_FTESnapshot
2114,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_FTESnapshot
2115,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_FTESnapshot
2116,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_FTESnapshot
2117,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\SQL - Start FTESnapshot  Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESnapshot  Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_FTESnapshot
2118,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\SQL - Truncate FTESnapshotLanding,Microsoft.ExecuteSQLTask,SQL - Truncate FTESnapshotLanding,,,,,truncate table [dbo].[FTESnapshotLanding],DWMartIncrementalLoad_FTESnapshot
2119,Package\SEQ - FTESnapshot\Foreach Loop - FTESnapshot\SQL- Load FactWeeklyMeasure,Microsoft.ExecuteSQLTask,SQL- Load FactWeeklyMeasure,,,,,exec [dbo].[spFactWeeklyMeasureLoad_FTESnapshot] ?,DWMartIncrementalLoad_FTESnapshot
2120,Package\SEQ - FTESnapshot\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_FTESnapshot
2121,Package\SEQ - FTESnapshot\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
AND FiscalWeekStartDate < ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_FTESnapshot
2122,Package\SEQ - FTESnapshot\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_FTESnapshot
2123,Package\SEQ - FTESnapshot\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_FTESnapshot
2124,Package\SQL - End FTESnapshot Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End FTESnapshot Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_FTESnapshot
2125,Package\SQL - Start FTESnapshot Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FTESnapshot Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_FTESnapshot
2126,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_FTESnapshot
2127,Package,Microsoft.Package,GLBalancePlanAllocation_FTE,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2128,Package\SEQ - GLBalancePlanAllocation_FTE,STOCK:SEQUENCE,SEQ - GLBalancePlanAllocation_FTE,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2129,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE,STOCK:FOREACHLOOP,Foreach Loop - GLBalancePlanAllocation_FTE,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2130,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2131,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2132,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split - Split Weekly Avg Measures Out,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2133,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2134,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values - Other Measures",,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2135,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values - Weekly Avg Measures",,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2136,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2137,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2138,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2139,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2140,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2141,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2142,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2143,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2144,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2145,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2146,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2147,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2148,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2149,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2150,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2151,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2152,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\SQL - End GLBalancePlanAllocation_FTE Audit Log,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_FTE Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2153,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\SQL - Get FiscalWeekEndDateKey and FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey and FiscalWeekNumbers,,,,,"SELECT DISTINCT DateKey AS DateKey, FiscalWeekOfPeriodNumber,
FiscalWeekOfQuarterNumber,
FiscalWeekOfYearNumber
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2154,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2155,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2156,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2157,Package\SEQ - GLBalancePlanAllocation_FTE\Foreach Loop - GLBalancePlanAllocation_FTE\SQL - Start GLBalancePlanAllocation_FTE Audit Log,Microsoft.ExecuteSQLTask,SQL - Start GLBalancePlanAllocation_FTE Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2158,Package\SEQ - GLBalancePlanAllocation_FTE\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2159,Package\SEQ - GLBalancePlanAllocation_FTE\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2160,Package\SEQ - GLBalancePlanAllocation_FTE\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2161,Package\SEQ - GLBalancePlanAllocation_FTE\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2162,Package\SQL - End GLBalancePlanAllocation_FTE Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_FTE Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2163,Package\SQL - Start GLBalancePlanAllocation_FTE Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start GLBalancePlanAllocation_FTE Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2164,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_FTE
2165,Package,Microsoft.Package,GLBalancePlanAllocation_LaborHours,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2166,Package\SEQ - GLBalancePlanAllocation_LaborHours,STOCK:SEQUENCE,SEQ - GLBalancePlanAllocation_LaborHours,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2167,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours,STOCK:FOREACHLOOP,Foreach Loop - GLBalancePlanAllocation_LaborHours,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2168,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2169,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2170,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2171,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2172,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2173,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2174,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2175,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2176,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2177,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2178,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2179,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2180,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2181,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2182,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2183,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2184,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2185,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2186,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2187,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\SQL - End GLBalancePlanAllocation_LaborHours Audit Log,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_LaborHours Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2188,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2189,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2190,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2191,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2192,Package\SEQ - GLBalancePlanAllocation_LaborHours\Foreach Loop - GLBalancePlanAllocation_LaborHours\SQL - Start GLBalancePlanAllocation_LaborHours Audit Log,Microsoft.ExecuteSQLTask,SQL - Start GLBalancePlanAllocation_LaborHours Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2193,Package\SEQ - GLBalancePlanAllocation_LaborHours\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2194,Package\SEQ - GLBalancePlanAllocation_LaborHours\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2195,Package\SEQ - GLBalancePlanAllocation_LaborHours\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2196,Package\SEQ - GLBalancePlanAllocation_LaborHours\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2197,Package\SQL - End GLBalancePlanAllocation_LaborHours Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_LaborHours Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2198,Package\SQL - Start GLBalancePlanAllocation_LaborHours Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start GLBalancePlanAllocation_LaborHours Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2199,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborHours
2200,Package,Microsoft.Package,GLBalancePlanAllocation_LaborSalary,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2201,Package\SEQ - GLBalancePlanAllocation_LaborSalary,STOCK:SEQUENCE,SEQ - GLBalancePlanAllocation_LaborSalary,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2202,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary,STOCK:FOREACHLOOP,Foreach Loop - GLBalancePlanAllocation_LaborSalary,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2203,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2204,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2205,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2206,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2207,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2208,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2209,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2210,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2211,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2212,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2213,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2214,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2215,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2216,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2217,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2218,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2219,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2220,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2221,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2222,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\SQL - End GLBalancePlanAllocation_LaborSalary Audit Log,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_LaborSalary Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2223,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2224,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2225,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2226,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2227,Package\SEQ - GLBalancePlanAllocation_LaborSalary\Foreach Loop - GLBalancePlanAllocation_LaborSalary\SQL - Start GLBalancePlanAllocation_LaborSalary Audit Log,Microsoft.ExecuteSQLTask,SQL - Start GLBalancePlanAllocation_LaborSalary Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2228,Package\SEQ - GLBalancePlanAllocation_LaborSalary\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2229,Package\SEQ - GLBalancePlanAllocation_LaborSalary\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2230,Package\SEQ - GLBalancePlanAllocation_LaborSalary\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2231,Package\SEQ - GLBalancePlanAllocation_LaborSalary\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2232,Package\SQL - End GLBalancePlanAllocation_LaborSalary Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_LaborSalary Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2233,Package\SQL - Start GLBalancePlanAllocation_LaborSalary Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start GLBalancePlanAllocation_LaborSalary Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2234,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_LaborSalary
2235,Package,Microsoft.Package,GLBalancePlanAllocation_NetRevenue,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2236,Package\SEQ - GLBalancePlanAllocation_NetRevenue,STOCK:SEQUENCE,SEQ - GLBalancePlanAllocation_NetRevenue,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2237,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue,STOCK:FOREACHLOOP,Foreach Loop - GLBalancePlanAllocation_NetRevenue,,,,,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2238,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2239,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2240,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2241,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2242,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - GLBalancePlanAllocation_NetRevenueLanding,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2243,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2244,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2245,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2246,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2247,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2248,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2249,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\SQL - End GLBalancePlanAllocation_NetRevenue Audit Log,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_NetRevenue Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2250,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2251,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2252,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2253,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2254,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\SQL - Start GLBalancePlanAllocation_NetRevenue Audit Log,Microsoft.ExecuteSQLTask,SQL - Start GLBalancePlanAllocation_NetRevenue Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2255,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\SQL - Truncate GLBalancePlanAllocation_NetRevenueLanding,Microsoft.ExecuteSQLTask,SQL - Truncate GLBalancePlanAllocation_NetRevenueLanding,,,,,truncate table [dbo].[GLBalancePlanAllocation_NetRevenueLanding],DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2256,Package\SEQ - GLBalancePlanAllocation_NetRevenue\Foreach Loop - GLBalancePlanAllocation_NetRevenue\SQL- Load FactWeeklyMeasure,Microsoft.ExecuteSQLTask,SQL- Load FactWeeklyMeasure,,,,,exec [dbo].[spFactWeeklyMeasureLoad_GLBalancePlanAllocation_NetRevenue] ?,DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2257,Package\SEQ - GLBalancePlanAllocation_NetRevenue\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2258,Package\SEQ - GLBalancePlanAllocation_NetRevenue\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2259,Package\SEQ - GLBalancePlanAllocation_NetRevenue\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2260,Package\SEQ - GLBalancePlanAllocation_NetRevenue\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2261,Package\SQL - End GLBalancePlanAllocation_NetRevenue Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End GLBalancePlanAllocation_NetRevenue Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2262,Package\SQL - Start GLBalancePlanAllocation_NetRevenue Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start GLBalancePlanAllocation_NetRevenue Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2263,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_GLBalancePlanAllocation_NetRevenue
2264,Package,Microsoft.Package,LaborHours,,,,,,DWMartIncrementalLoad_LaborHours
2265,Package\SEQ - LaborHours,STOCK:SEQUENCE,SEQ - LaborHours,,,,,,DWMartIncrementalLoad_LaborHours
2266,Package\SEQ - LaborHours\Foreach Loop - LaborHours,STOCK:FOREACHLOOP,Foreach Loop - LaborHours,,,,,,DWMartIncrementalLoad_LaborHours
2267,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_LaborHours
2268,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_LaborHours
2269,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_LaborHours
2270,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_LaborHours
2271,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - LaborHoursLanding,,DWMartIncrementalLoad_LaborHours
2272,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_LaborHours
2273,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_LaborHours
2274,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_LaborHours
2275,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_LaborHours
2276,Package\SEQ - LaborHours\Foreach Loop - LaborHours\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_LaborHours
2277,Package\SEQ - LaborHours\Foreach Loop - LaborHours\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_LaborHours
2278,Package\SEQ - LaborHours\Foreach Loop - LaborHours\SQL - End LaborHours Audit Log,Microsoft.ExecuteSQLTask,SQL - End LaborHours Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_LaborHours
2279,Package\SEQ - LaborHours\Foreach Loop - LaborHours\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_LaborHours
2280,Package\SEQ - LaborHours\Foreach Loop - LaborHours\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LaborHours
2281,Package\SEQ - LaborHours\Foreach Loop - LaborHours\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LaborHours
2282,Package\SEQ - LaborHours\Foreach Loop - LaborHours\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LaborHours
2283,Package\SEQ - LaborHours\Foreach Loop - LaborHours\SQL - Start LaborHours Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHours Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_LaborHours
2284,Package\SEQ - LaborHours\Foreach Loop - LaborHours\SQL - Truncate LaborHoursLanding,Microsoft.ExecuteSQLTask,SQL - Truncate LaborHoursLanding,,,,,truncate table  [dbo].[LaborHoursLanding],DWMartIncrementalLoad_LaborHours
2285,Package\SEQ - LaborHours\Foreach Loop - LaborHours\SQL- Load FactWeeklyMeasure,Microsoft.ExecuteSQLTask,SQL- Load FactWeeklyMeasure,,,,,exec [dbo].[spFactWeeklyMeasureLoad_LaborHours] ?,DWMartIncrementalLoad_LaborHours
2286,Package\SEQ - LaborHours\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_LaborHours
2287,Package\SEQ - LaborHours\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
AND FiscalWeekStartDate < ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_LaborHours
2288,Package\SEQ - LaborHours\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_LaborHours
2289,Package\SEQ - LaborHours\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_LaborHours
2290,Package\SQL - End LaborHours Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End LaborHours Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_LaborHours
2291,Package\SQL - Start LaborHours Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborHours Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_LaborHours
2292,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_LaborHours
2293,Package,Microsoft.Package,LaborSalary,,,,,,DWMartIncrementalLoad_LaborSalary
2294,Package\LaborSalary,STOCK:SEQUENCE,LaborSalary,,,,,,DWMartIncrementalLoad_LaborSalary
2295,Package\LaborSalary\SEQ - LaborSalary,STOCK:SEQUENCE,SEQ - LaborSalary,,,,,,DWMartIncrementalLoad_LaborSalary
2296,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary,STOCK:FOREACHLOOP,Foreach Loop - LaborSalary,,,,,,DWMartIncrementalLoad_LaborSalary
2297,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_LaborSalary
2298,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_LaborSalary
2299,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_LaborSalary
2300,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_LaborSalary
2301,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_LaborSalary
2302,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_LaborSalary
2303,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_LaborSalary
2304,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_LaborSalary
2305,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_LaborSalary
2306,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_LaborSalary
2307,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_LaborSalary
2308,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_LaborSalary
2309,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_LaborSalary
2310,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_LaborSalary
2311,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_LaborSalary
2312,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_LaborSalary
2313,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_LaborSalary
2314,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_LaborSalary
2315,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_LaborSalary
2316,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\SQL - End LaborSalary Audit Log,Microsoft.ExecuteSQLTask,SQL - End LaborSalary Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_LaborSalary
2317,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_LaborSalary
2318,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LaborSalary
2319,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LaborSalary
2320,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LaborSalary
2321,Package\LaborSalary\SEQ - LaborSalary\Foreach Loop - LaborSalary\SQL - Start LaborSalary Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalary Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_LaborSalary
2322,Package\LaborSalary\SEQ - LaborSalary\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_LaborSalary
2323,Package\LaborSalary\SEQ - LaborSalary\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
AND FiscalWeekStartDate < ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_LaborSalary
2324,Package\LaborSalary\SEQ - LaborSalary\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_LaborSalary
2325,Package\LaborSalary\SEQ - LaborSalary\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_LaborSalary
2326,Package\LaborSalary\SQL - End LaborSalary Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End LaborSalary Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_LaborSalary
2327,Package\LaborSalary\SQL - Start LaborSalary Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LaborSalary Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_LaborSalary
2328,"Package\LaborSalary\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_LaborSalary
2329,Package,Microsoft.Package,LeadEvent,,,,,,DWMartIncrementalLoad_LeadEvent
2330,Package\SEQ - LeadEvent,STOCK:SEQUENCE,SEQ - LeadEvent,,,,,,DWMartIncrementalLoad_LeadEvent
2331,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent,STOCK:FOREACHLOOP,Foreach Loop - LeadEvent,,,,,,DWMartIncrementalLoad_LeadEvent
2332,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_LeadEvent
2333,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_LeadEvent
2334,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_LeadEvent
2335,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_LeadEvent
2336,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasureLanding,,DWMartIncrementalLoad_LeadEvent
2337,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Outter Merge Join,,DWMartIncrementalLoad_LeadEvent
2338,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_LeadEvent
2339,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_LeadEvent
2340,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_LeadEvent
2341,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_LeadEvent
2342,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_LeadEvent
2343,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\SQL - End LeadEvent Audit Log,Microsoft.ExecuteSQLTask,SQL - End LeadEvent Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_LeadEvent
2344,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_LeadEvent
2345,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LeadEvent
2346,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LeadEvent
2347,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LeadEvent
2348,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\SQL - Start LeadEvent Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LeadEvent Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_LeadEvent
2349,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\Truncate FactWeeklyMeasureLanding,Microsoft.ExecuteSQLTask,Truncate FactWeeklyMeasureLanding,,,,,truncate table [dbo].[FactWeeklyMeasureLanding],DWMartIncrementalLoad_LeadEvent
2350,Package\SEQ - LeadEvent\Foreach Loop - LeadEvent\Updatedimkeys,Microsoft.ExecuteSQLTask,Updatedimkeys,,,,,exec [dbo].[spupdate_FactWeeklyMeasure_Dimkey] ?,DWMartIncrementalLoad_LeadEvent
2351,Package\SEQ - LeadEvent\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_LeadEvent
2352,Package\SEQ - LeadEvent\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
AND FiscalWeekStartDate < ?
--where fiscalweekenddate='2011-02-05'
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_LeadEvent
2353,Package\SEQ - LeadEvent\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_LeadEvent
2354,Package\SEQ - LeadEvent\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_LeadEvent
2355,Package\SQL - End LeadEvent Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End LeadEvent Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_LeadEvent
2356,Package\SQL - Start LeadEvent Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LeadEvent Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_LeadEvent
2357,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_LeadEvent
2358,Package,Microsoft.Package,LifeCycleStatus,,,,,,DWMartIncrementalLoad_LifeCycleStatus
2359,Package\SEQ - LifeCycleStatus,STOCK:SEQUENCE,SEQ - LifeCycleStatus,,,,,,DWMartIncrementalLoad_LifeCycleStatus
2360,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus,STOCK:FOREACHLOOP,Foreach Loop - LifeCycleStatus,,,,,,DWMartIncrementalLoad_LifeCycleStatus
2361,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_LifeCycleStatus
2362,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_LifeCycleStatus
2363,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_LifeCycleStatus
2364,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_LifeCycleStatus
2365,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_LifeCycleStatus
2366,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_LifeCycleStatus
2367,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_LifeCycleStatus
2368,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_LifeCycleStatus
2369,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_LifeCycleStatus
2370,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_LifeCycleStatus
2371,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_LifeCycleStatus
2372,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_LifeCycleStatus
2373,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_LifeCycleStatus
2374,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_LifeCycleStatus
2375,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_LifeCycleStatus
2376,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_LifeCycleStatus
2377,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_LifeCycleStatus
2378,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_LifeCycleStatus
2379,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_LifeCycleStatus
2380,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - End LifeCycleStatus Audit Log,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatus Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_LifeCycleStatus
2381,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_LifeCycleStatus
2382,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LifeCycleStatus
2383,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LifeCycleStatus
2384,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_LifeCycleStatus
2385,Package\SEQ - LifeCycleStatus\Foreach Loop - LifeCycleStatus\SQL - Start LifeCycleStatus Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LifeCycleStatus Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_LifeCycleStatus
2386,Package\SEQ - LifeCycleStatus\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_LifeCycleStatus
2387,Package\SEQ - LifeCycleStatus\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
AND FiscalWeekStartDate < ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_LifeCycleStatus
2388,Package\SEQ - LifeCycleStatus\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_LifeCycleStatus
2389,Package\SEQ - LifeCycleStatus\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_LifeCycleStatus
2390,Package\SQL - End LifeCycleStatus Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End LifeCycleStatus Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_LifeCycleStatus
2391,Package\SQL - Start LifeCycleStatus Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start LifeCycleStatus Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_LifeCycleStatus
2392,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_LifeCycleStatus
2393,Package,Microsoft.Package,NetRevenue,,,,,,DWMartIncrementalLoad_NetRevenue
2394,Package\SEQ - NetRevenue,STOCK:SEQUENCE,SEQ - NetRevenue,,,,,,DWMartIncrementalLoad_NetRevenue
2395,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue,STOCK:FOREACHLOOP,Foreach Loop - NetRevenue,,,,,,DWMartIncrementalLoad_NetRevenue
2396,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,DWMartIncrementalLoad_NetRevenue
2397,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,DWMartIncrementalLoad_NetRevenue
2398,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Columns - Conformed Names,,DWMartIncrementalLoad_NetRevenue
2399,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.","Derived Columns - Conformed Names, PTD, QTD and YTD Values",,DWMartIncrementalLoad_NetRevenue
2400,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactWeeklyMeasure,,DWMartIncrementalLoad_NetRevenue
2401,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Full Outter Merge Join,,DWMartIncrementalLoad_NetRevenue
2402,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Left Merge Join to DimCostCenter,,DWMartIncrementalLoad_NetRevenue
2403,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - DataScenarioKey,,DWMartIncrementalLoad_NetRevenue
2404,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - MeasureKey,,DWMartIncrementalLoad_NetRevenue
2405,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort,,DWMartIncrementalLoad_NetRevenue
2406,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Base Weekly Measure,,DWMartIncrementalLoad_NetRevenue
2407,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimCostCenter By CostCenterNumber,,DWMartIncrementalLoad_NetRevenue
2408,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - Weekly Mesaure,,DWMartIncrementalLoad_NetRevenue
2409,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimCostCenter,,DWMartIncrementalLoad_NetRevenue
2410,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Fact BaseWeeklyMeasure,,DWMartIncrementalLoad_NetRevenue
2411,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactWeeklyMeasure,,DWMartIncrementalLoad_NetRevenue
2412,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched DataScenarioNames,,DWMartIncrementalLoad_NetRevenue
2413,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\DFT - Load FactWeeklyMeasure,Microsoft.Pipeline,DFT - Load FactWeeklyMeasure,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union Matched and Unmatched MeasureNames,,DWMartIncrementalLoad_NetRevenue
2414,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\SQL - Delete from the FactWeeklyMeasure if the data is present,Microsoft.ExecuteSQLTask,SQL - Delete from the FactWeeklyMeasure if the data is present,,,,,"DELETE   f 
FROM FactWeeklyMeasure f
WHERE FiscalWeekKey = ? AND SourceSystem = ?

SELECT @@ROWCOUNT AS Deleted",DWMartIncrementalLoad_NetRevenue
2415,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\SQL - End NetRevenue Audit Log,Microsoft.ExecuteSQLTask,SQL - End NetRevenue Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_NetRevenue
2416,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\SQL - Get FiscalWeekEndDateKey,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekEndDateKey,,,,,"SELECT DISTINCT DateKey AS DateKey
FROM  dbo.DimDate(NOLOCK)
WHERE FullDate = ?;
",DWMartIncrementalLoad_NetRevenue
2417,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\SQL - Get IsFirstWeekOfPeriod,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfPeriod,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfPeriodNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfPeriod
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_NetRevenue
2418,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\SQL - Get IsFirstWeekOfQuarter,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfQuarter,,,,,"SELECT DISTINCT  (CASE
           WHEN FiscalWeekOfQuarterNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfQuarter
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_NetRevenue
2419,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\SQL - Get IsFirstWeekOfYear,Microsoft.ExecuteSQLTask,SQL - Get IsFirstWeekOfYear,,,,,"SELECT DISTINCT (CASE
           WHEN FiscalWeekOfYearNumber = 1
           THEN 1
           ELSE 0
       END) AS IsFirstWeekOfYear
FROM  dbo.DimDate(NOLOCK)
WHERE FiscalWeekEndDate = ?;",DWMartIncrementalLoad_NetRevenue
2420,Package\SEQ - NetRevenue\Foreach Loop - NetRevenue\SQL - Start NetRevenue Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetRevenue Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?,?,?;",DWMartIncrementalLoad_NetRevenue
2421,Package\SEQ - NetRevenue\SQL - Get BaseFiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get BaseFiscalWeekNumbers,,,,," SELECT COALESCE(MIN(FiscalWeekEndDate),'9999-12-31') FROM dbo.BaseWeeklyMeasure(NOLOCK) WHERE BaseCreatedDate > ? AND SourceSystem = ?",DWMartIncrementalLoad_NetRevenue
2422,Package\SEQ - NetRevenue\SQL - Get FiscalWeekNumbers,Microsoft.ExecuteSQLTask,SQL - Get FiscalWeekNumbers,,,,,"SELECT FiscalWeekEndDate AS FiscalWeekEndDateRange 
FROM DimDate(NOLOCK)
WHERE FiscalWeekEndDate >= ?
AND FiscalWeekStartDate < ?
GROUP BY FiscalWeekEndDate
ORDER BY FiscalWeekEndDate",DWMartIncrementalLoad_NetRevenue
2423,Package\SEQ - NetRevenue\SQL - Get Last Processed Date from EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Get Last Processed Date from EDWETLBatchControl,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",DWMartIncrementalLoad_NetRevenue
2424,Package\SEQ - NetRevenue\SQL - Update Last Processed Date in ETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update Last Processed Date in ETLBatchControl,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",DWMartIncrementalLoad_NetRevenue
2425,Package\SQL - End NetRevenue Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End NetRevenue Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",DWMartIncrementalLoad_NetRevenue
2426,Package\SQL - Start NetRevenue Package Audit Log,Microsoft.ExecuteSQLTask,SQL - Start NetRevenue Package Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_NetRevenue
2427,"Package\SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",Microsoft.ExecuteSQLTask,"SQL - Update Total Source, Insert, Update, Delete Counts in the AuditLog",,,,,"SELECT SUM(SourceCount) AS TotalSourceCount, SUM(InsertCount) AS TotalInsertCount, SUM(UpdateCount) AS TotalUpdateCount, SUM(DeleteCount) AS TotalDeleteCount
FROM AuditLog(NOLOCK)
WHERE ExecutionID = ?",DWMartIncrementalLoad_NetRevenue
2428,Package,Microsoft.Package,ReportMeasure,,,,,,DWMartIncrementalLoad_ReportMeasure
2429,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.DataConvert,Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,Data Conversion,Data Conversion,,DWMartIncrementalLoad_ReportMeasure
2430,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - ReportMeasure,,DWMartIncrementalLoad_ReportMeasure
2431,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,DWMartIncrementalLoad_ReportMeasure
2432,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,DWMartIncrementalLoad_ReportMeasure
2433,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.ExcelSource,Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,Excel Source,SRC - ReportMeasure,,DWMartIncrementalLoad_ReportMeasure
2434,Package\SQL - End ReportMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportMeasure Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",DWMartIncrementalLoad_ReportMeasure
2435,Package\SQL - Start ReportMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - Start ReportMeasure Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",DWMartIncrementalLoad_ReportMeasure
2436,Package\SQL - Truncate ReportMeasure table,Microsoft.ExecuteSQLTask,SQL - Truncate ReportMeasure table,,,,,TRUNCATE TABLE [dbo].[ReportMeasure],DWMartIncrementalLoad_ReportMeasure
2437,Package\SQL - Upsert Mart ReportMeasure,Microsoft.ExecuteSQLTask,SQL - Upsert Mart ReportMeasure,,,,,"DECLARE @SummaryOfChanges TABLE (Change VARCHAR(20));
DECLARE @InsertCount INT,
		@UpdateCount INT,
		@DeleteCount INT;

MERGE [DW_Mart].[dbo].[ReportMeasure] AS [T]
USING (
	SELECT
		[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
		[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
	FROM [DW_Landing].[dbo].[ReportMeasure]
) AS [S]
	(
		[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
		[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
	)
	ON
		[T].[ReportID] = [S].[ReportID]
		AND [T].[MeasureOrder] = [S].[MeasureOrder]
		AND [T].[MeasureLabel] = [S].[MeasureLabel]
WHEN MATCHED
	THEN
		UPDATE
			SET [ReportName] = [S].[ReportName],
				[MeasureName] = [S].[MeasureName],
				[NumberFormat] = [S].[NumberFormat],
				[IsHeader] = [S].[IsHeader],
				[PageOrder] = [S].[PageOrder],
				[PageName] = [S].[PageName],
				[HasRightBorder] = [S].[HasRightBorder],
				[Font] = [S].[Font],
				[PlanDisplay] = [S].[PlanDisplay],
				[PlanVarDisplay] = [S].[PlanVarDisplay],
				[PlanVarPctDisplay] = [S].[PlanVarPctDisplay],
				[LYDisplay] = [S].[LYDisplay],
				[LYVarDisplay] = [S].[LYVarDisplay],
				[LYVarPctDisplay] = [S].[LYVarPctDisplay],
				[ActualToDateDisplay] = [S].[ActualToDateDisplay],
				[PlanVarInverse] = [S].[PlanVarInverse],
				[LYVarInverse] = [S].[LYVarInverse],
				[AbsDivisor] = [S].[AbsDivisor],
				[TargetForPlan] = [S].[TargetForPlan]

WHEN NOT MATCHED BY TARGET
	THEN
		INSERT (
			[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
			[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
		)
		VALUES (
			[S].[ReportID], [S].[ReportName], [S].[MeasureOrder], [S].[MeasureLabel], [S].[MeasureName], [S].[NumberFormat], [S].[IsHeader], [S].[PageOrder], [S].[PageName], [S].[HasRightBorder], [S].[Font],
			[S].[PlanDisplay], [S].[PlanVarDisplay], [S].[PlanVarPctDisplay], [S].[LYDisplay], [S].[LYVarDisplay], [S].[LYVarPctDisplay], [S].[ActualToDateDisplay], [S].[PlanVarInverse], [S].[LYVarInverse],
			[S].[AbsDivisor], [S].[TargetForPlan], GETDATE()
		)
WHEN NOT MATCHED BY SOURCE
	THEN
		DELETE
OUTPUT $action
INTO @SummaryOfChanges;

SELECT @InsertCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'INSERT';
SELECT @UpdateCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'UPDATE';
SELECT @DeleteCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'DELETE';

SELECT
	@InsertCount AS [InsertCount],
	@UpdateCount AS [UpdateCount],
	@DeleteCount AS [DeleteCount];",DWMartIncrementalLoad_ReportMeasure
2438,Package,Microsoft.Package,ReportProfile,,,,,,DWMartIncrementalLoad_ReportProfile
2439,Package\DFT - ReportProfile,Microsoft.Pipeline,DFT - ReportProfile,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST- ReportProfile,,DWMartIncrementalLoad_ReportProfile
2440,Package\DFT - ReportProfile,Microsoft.Pipeline,DFT - ReportProfile,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",SourceCount,,DWMartIncrementalLoad_ReportProfile
2441,Package\DFT - ReportProfile,Microsoft.Pipeline,DFT - ReportProfile,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,Src- ReportProfile Table,,DWMartIncrementalLoad_ReportProfile
2442,Package\SQL - End DimDataScenario Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimDataScenario Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",DWMartIncrementalLoad_ReportProfile
2443,Package\SQL - Get Delete Count,Microsoft.ExecuteSQLTask,SQL - Get Delete Count,,,,, SELECT COUNT(1) AS DeleteCount  From [dbo].[ReportProfile],DWMartIncrementalLoad_ReportProfile
2444,Package\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,, SELECT COUNT(1) AS InsertCount  From [dbo].[ReportProfile],DWMartIncrementalLoad_ReportProfile
2445,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"SET IDENTITY_INSERT [dbo].[ReportProfile] ON;
INSERT INTO [dbo].[ReportProfile]
([ReportProfileKey], 
 [ReportProfileID], 
 [ReportProfileName], 
 [ReportProfileLogoImage], 
 [ReportProfileSmallImage], 
 [ReportProfileLegalNoticeDescription], 
 [MartCreatedDate]
)
       SELECT-1, 
             -1, 
             '-1', 
             0x00, 
             0x00, 
             'Unknown Description', 
             GETDATE()
       UNION
       SELECT-2, 
             -2, 
             '-2', 
             0x00, 
             0x00, 
             'Not Applicable Description', 
             GETDATE();
SET IDENTITY_INSERT [dbo].[ReportProfile] OFF;",DWMartIncrementalLoad_ReportProfile
2446,Package\SQL - Start Report Profile Auditlog,Microsoft.ExecuteSQLTask,SQL - Start Report Profile Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",DWMartIncrementalLoad_ReportProfile
2447,Package\SQL - Truncate Table,Microsoft.ExecuteSQLTask,SQL - Truncate Table,,,,, TRUNCATE TABLE dbo.ReportProfile,DWMartIncrementalLoad_ReportProfile
2448,Package,Microsoft.Package,SubscriptionSummary,,,,,,DWMartIncrementalLoad_SubscriptionSummary
2449,Package\DFT - SubscriptionLogs,Microsoft.Pipeline,DFT - SubscriptionLogs,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,DWMartIncrementalLoad_SubscriptionSummary
2450,Package\DFT - SubscriptionLogs,Microsoft.Pipeline,DFT - SubscriptionLogs,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - SubscriptionLogs,,DWMartIncrementalLoad_SubscriptionSummary
2451,Package\DFT - SubscriptionLogs,Microsoft.Pipeline,DFT - SubscriptionLogs,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,DWMartIncrementalLoad_SubscriptionSummary
2452,Package\DFT - SubscriptionLogs,Microsoft.Pipeline,DFT - SubscriptionLogs,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - SubscriptionSentEmail,,DWMartIncrementalLoad_SubscriptionSummary
2453,Package\DFT - SubscriptionSentEmail,Microsoft.Pipeline,DFT - SubscriptionSentEmail,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,DWMartIncrementalLoad_SubscriptionSummary
2454,Package\DFT - SubscriptionSentEmail,Microsoft.Pipeline,DFT - SubscriptionSentEmail,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - SubscriptonEmails,,DWMartIncrementalLoad_SubscriptionSummary
2455,Package\DFT - SubscriptionSentEmail,Microsoft.Pipeline,DFT - SubscriptionSentEmail,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,DWMartIncrementalLoad_SubscriptionSummary
2456,Package\DFT - SubscriptionSentEmail,Microsoft.Pipeline,DFT - SubscriptionSentEmail,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC- Email,,DWMartIncrementalLoad_SubscriptionSummary
2457,Package\SQL - Get LastProcessedDate,Microsoft.ExecuteSQLTask,SQL - Get LastProcessedDate,,,,,"Select isnull(Max(CreatedDate),'2020-01-01') As LastProcessedDate from DW_Mart.[dbo].[SubScriptionlogs]",DWMartIncrementalLoad_SubscriptionSummary
2458,Package\Update Status,Microsoft.ExecuteSQLTask,Update Status,,,,,"UPDATE [dbo].[SubScriptionlogs]
  SET 
      [Status] = 'Success'
WHERE [TimeStart] IS NOT NULL;
UPDATE [dbo].[SubScriptionlogs]
  SET 
      [Status] = 'Failed'
WHERE [TimeStart] IS NULL;
",DWMartIncrementalLoad_SubscriptionSummary
2459,Package,Microsoft.Package,DimARAgencyTypeCSS,,,,,,StagingtoEDWCSS_DimARAgencyTypeCSS
2460,Package\Excecute CSS_Staging to EDW DimARAgencyType load,STOCK:SEQUENCE,Excecute CSS_Staging to EDW DimARAgencyType load,,,,,,StagingtoEDWCSS_DimARAgencyTypeCSS
2461,Package\Excecute CSS_Staging to EDW DimARAgencyType load\Execute spCSS_StagingToEDW_DimARAgencyType,Microsoft.ExecuteSQLTask,Execute spCSS_StagingToEDW_DimARAgencyType,,,,,EXEC dbo.spCSS_StagingToEDW_DimARAgencyType,StagingtoEDWCSS_DimARAgencyTypeCSS
2462,Package,Microsoft.Package,DimDiscountTypeCSS,,,,,,StagingtoEDWCSS_DimDiscountTypeCSS
2463,Package\Execute CSS_Staging To EDW DimDiscountType,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimDiscountType,,,,,,StagingtoEDWCSS_DimDiscountTypeCSS
2464,Package\Execute CSS_Staging To EDW DimDiscountType\SQL - spCSS_StagingTransform_DimDiscountType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingTransform_DimDiscountType,,,,,EXEC dbo.spCSS_StagingTransform_DimDiscountType;,StagingtoEDWCSS_DimDiscountTypeCSS
2465,Package,Microsoft.Package,DimFeeTypeCSS,,,,,,StagingtoEDWCSS_DimFeeTypeCSS
2466,Package\Execute spCSS_StagingToEDW_DimFeeType,STOCK:SEQUENCE,Execute spCSS_StagingToEDW_DimFeeType,,,,,,StagingtoEDWCSS_DimFeeTypeCSS
2467,Package\Execute spCSS_StagingToEDW_DimFeeType\SQL - spCSS_StagingToEDW_DimFeeType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimFeeType,,,,,EXEC dbo.spCSS_StagingToEDW_DimFeeType;,StagingtoEDWCSS_DimFeeTypeCSS
2468,Package,Microsoft.Package,DimMartSponsorCSS,,,,,,StagingtoEDWCSS_DimMartSponsorCSS
2469,Package\DFT - DimStponsorSS,Microsoft.Pipeline,DFT - DimStponsorSS,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingtoEDWCSS_DimMartSponsorCSS
2470,Package\DFT - DimStponsorSS,Microsoft.Pipeline,DFT - DimStponsorSS,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimSponsor,,StagingtoEDWCSS_DimMartSponsorCSS
2471,Package\DFT - DimStponsorSS,Microsoft.Pipeline,DFT - DimStponsorSS,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingtoEDWCSS_DimMartSponsorCSS
2472,Package\DFT - DimStponsorSS,Microsoft.Pipeline,DFT - DimStponsorSS,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - CSS Sponsor,,StagingtoEDWCSS_DimMartSponsorCSS
2473,Package\SQL - Begin DimSponsorCSS ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimSponsorCSS ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingtoEDWCSS_DimMartSponsorCSS
2474,Package\SQL - End DimSponsor ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimSponsor ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingtoEDWCSS_DimMartSponsorCSS
2475,Package\SQL - InsertCount,Microsoft.ExecuteSQLTask,SQL - InsertCount,,,,,"SELECT COUNT(*) AS vInsertCount
FROM dbo.DimSponsor
WHERE ETLJobID = ?",StagingtoEDWCSS_DimMartSponsorCSS
2476,Package,Microsoft.Package,DimMartStudentCSS,,,,,,StagingtoEDWCSS_DimMartStudentCSS
2477,Package\DFT - DimStudentCSS,Microsoft.Pipeline,DFT - DimStudentCSS,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingtoEDWCSS_DimMartStudentCSS
2478,Package\DFT - DimStudentCSS,Microsoft.Pipeline,DFT - DimStudentCSS,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimStudent,,StagingtoEDWCSS_DimMartStudentCSS
2479,Package\DFT - DimStudentCSS,Microsoft.Pipeline,DFT - DimStudentCSS,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingtoEDWCSS_DimMartStudentCSS
2480,Package\DFT - DimStudentCSS,Microsoft.Pipeline,DFT - DimStudentCSS,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Csxstudr,,StagingtoEDWCSS_DimMartStudentCSS
2481,Package\SQL - Begin DimStudentCSS ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimStudentCSS ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingtoEDWCSS_DimMartStudentCSS
2482,Package\SQL - End DimStudent ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimStudent ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingtoEDWCSS_DimMartStudentCSS
2483,Package\SQL - InsertCount,Microsoft.ExecuteSQLTask,SQL - InsertCount,,,,,"SELECT COUNT(*) AS vInsertCount
FROM dbo.DimStudent 
WHERE ETLJobID = ?",StagingtoEDWCSS_DimMartStudentCSS
2484,Package,Microsoft.Package,DimMartTuitionAssistanceProviderCSS,,,,,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
2485,Package\DFT - Insert CSS data,Microsoft.Pipeline,DFT - Insert CSS data,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
2486,Package\DFT - Insert CSS data,Microsoft.Pipeline,DFT - Insert CSS data,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimTuitionAssistanceProvider,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
2487,Package\DFT - Insert CSS data,Microsoft.Pipeline,DFT - Insert CSS data,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
2488,Package\DFT - Insert CSS data,Microsoft.Pipeline,DFT - Insert CSS data,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC- CSS DimTuitionAssistanceProvider,,StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
2489,Package\SQL - Begin DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimProgram ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
2490,Package\SQL - CSS Insert Count,Microsoft.ExecuteSQLTask,SQL - CSS Insert Count,,,,,SELECT COUNT(1) AS IC FROM  [dbo].[DimTuitionAssistanceProvider] WHERE SourceSystem ='CSS',StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
2491,Package\SQL - End DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimProgram ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingtoEDWCSS_DimMartTuitionAssistanceProviderCSS
2492,Package,Microsoft.Package,DimPaymentType,,,,,,StagingtoEDWCSS_DimPaymentTypeCSS
2493,Package\Execute CSS_Staging To EDW DimPaymentType load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimPaymentType load,,,,,,StagingtoEDWCSS_DimPaymentTypeCSS
2494,Package\Execute CSS_Staging To EDW DimPaymentType load\SQL - spCSS_StagingToEDW_DimPaymentType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimPaymentType,,,,,EXEC DBO.spCSS_StagingToEDW_DimPaymentType;,StagingtoEDWCSS_DimPaymentTypeCSS
2495,Package,Microsoft.Package,DimProgramCSS,,,,,,StagingtoEDWCSS_DimProgramCSS
2496,Package\Execute CSS_Staging To EDW DimProgram,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimProgram,,,,,,StagingtoEDWCSS_DimProgramCSS
2497,Package\Execute CSS_Staging To EDW DimProgram\SQL - spCSS_StagingTransform_DimProgram,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingTransform_DimProgram,,,,,EXEC dbo.spCSS_StagingTransform_DimProgram;,StagingtoEDWCSS_DimProgramCSS
2498,Package,Microsoft.Package,DimSessionCSS,,,,,,StagingtoEDWCSS_DimSessionCSS
2499,Package\Excecute CSS_staging to EDW DimSession,STOCK:SEQUENCE,Excecute CSS_staging to EDW DimSession,,,,,,StagingtoEDWCSS_DimSessionCSS
2500,Package\Excecute CSS_staging to EDW DimSession\Execute spCSS_StagingToEDW_DimSession,Microsoft.ExecuteSQLTask,Execute spCSS_StagingToEDW_DimSession,,,,,EXEC dbo.spCSS_StagingToEDW_DimSession,StagingtoEDWCSS_DimSessionCSS
2501,Package,Microsoft.Package,DimSponsorCSS,,,,,,StagingtoEDWCSS_DimSponsorCSS
2502,Package\Executes spCSS_StagingToEDW_DimSponsor,STOCK:SEQUENCE,Executes spCSS_StagingToEDW_DimSponsor,,,,,,StagingtoEDWCSS_DimSponsorCSS
2503,Package\Executes spCSS_StagingToEDW_DimSponsor\SQL_spCSS_StagingToEDW_DimSponsor,Microsoft.ExecuteSQLTask,SQL_spCSS_StagingToEDW_DimSponsor,,,,,Execute [dbo].[spCSS_StagingToEDW_DimSponsor],StagingtoEDWCSS_DimSponsorCSS
2504,Package,Microsoft.Package,DimStudentCSS,,,,,,StagingtoEDWCSS_DimStudentCSS
2505,Package\Execute CSS DimStudent EDW load,STOCK:SEQUENCE,Execute CSS DimStudent EDW load,,,,,,StagingtoEDWCSS_DimStudentCSS
2506,Package\Execute CSS DimStudent EDW load\SQL - spCSS_StagingToEDW_DimStudent,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimStudent,,,,,EXEC dbo.spCSS_StagingToEDW_DimStudent,StagingtoEDWCSS_DimStudentCSS
2507,Package,Microsoft.Package,DimTierCSS,,,,,,StagingtoEDWCSS_DimTierCSS
2508,Package\Execute DimTier CCS load to EDW,STOCK:SEQUENCE,Execute DimTier CCS load to EDW,,,,,,StagingtoEDWCSS_DimTierCSS
2509,Package\Execute DimTier CCS load to EDW\SQL - spCSS_StagingToEDW_DimTier,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTier,,,,,EXEC dbo.spCSS_StagingToEDW_DimTier,StagingtoEDWCSS_DimTierCSS
2510,Package,Microsoft.Package,DimTransactionCodeCSS,,,,,,StagingtoEDWCSS_DimTransactionCodeCSS
2511,Package\Execute CSS_Staging To EDW DimTransactionCode load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimTransactionCode load,,,,,,StagingtoEDWCSS_DimTransactionCodeCSS
2512,Package\Execute CSS_Staging To EDW DimTransactionCode load\SQL - spCSS_StagingToEDW_DimTransactionCode,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTransactionCode,,,,,EXEC dbo.spCSS_StagingToEDW_DimTransactionCode;,StagingtoEDWCSS_DimTransactionCodeCSS
2513,Package,Microsoft.Package,DimTuitionAssistanceProviderCSS,,,,,,StagingtoEDWCSS_DimTuitionAssistanceProviderCSS
2514,Package\Execute spCSS_StagingToEDW_DimTuitionAssistanceProvider,STOCK:SEQUENCE,Execute spCSS_StagingToEDW_DimTuitionAssistanceProvider,,,,,,StagingtoEDWCSS_DimTuitionAssistanceProviderCSS
2515,Package\Execute spCSS_StagingToEDW_DimTuitionAssistanceProvider\SRC - spCSS_StagingToEDW_DimTuitionAssistanceProvider,Microsoft.ExecuteSQLTask,SRC - spCSS_StagingToEDW_DimTuitionAssistanceProvider,,,,,EXEC dbo.spCSS_StagingToEDW_DimTuitionAssistanceProvider;,StagingtoEDWCSS_DimTuitionAssistanceProviderCSS
2516,Package,Microsoft.Package,FactFTESnapshotCSS,,,,,,StagingtoEDWCSS_FactFTESnapshotCSS
2517,Package\Execute CSS_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactFTESnapshot load,,,,,,StagingtoEDWCSS_FactFTESnapshotCSS
2518,Package\Execute CSS_Staging To EDW FactFTESnapshot load\Execute spCSS_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo].[spCSS_BatchLoad_StagingToEDW_FactFTESnapshot],StagingtoEDWCSS_FactFTESnapshotCSS
2519,Package,Microsoft.Package,FactLaborHourActual,,,,,,StagingtoEDWCSS_FactLaborHourTarget
2520,Package\Execute CSS_Staging To EDW FactLaborHourTarget,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactLaborHourTarget,,,,,,StagingtoEDWCSS_FactLaborHourTarget
2521,Package\Execute CSS_Staging To EDW FactLaborHourTarget\Execute spCSS_BatchLoad_StagingToEDW_FactLaborHourTarget,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactLaborHourTarget,,,,,EXEC spCSS_BatchLoad_StagingToEDW_FactLaborHourTarget,StagingtoEDWCSS_FactLaborHourTarget
2522,Package,Microsoft.Package,FactLifeCycleStatusSnapshot,,,,,,StagingtoEDWCSS_FactLifeCycleStatusSnapshot
2523,Package\Execute CSS_Staging To EDW FactLifeCycleStatusSnapshot,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactLifeCycleStatusSnapshot,,,,,,StagingtoEDWCSS_FactLifeCycleStatusSnapshot
2524,Package\Execute CSS_Staging To EDW FactLifeCycleStatusSnapshot\Execute spCSS_BatchLoad_StagingToEDW_FactLifeCycleStatusSnapshot,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactLifeCycleStatusSnapshot,,,,,EXEC spCSS_BatchLoad_StagingToEDW_FactLifeCycleStatusSnapshot,StagingtoEDWCSS_FactLifeCycleStatusSnapshot
2525,Package,Microsoft.Package,FactNetRevenueCSS,,,,,,StagingtoEDWCSS_FactNetRevenueCSS
2526,Package\Execute CSS_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute CSS_Staging to EDW FactNetRevenue load,,,,,,StagingtoEDWCSS_FactNetRevenueCSS
2527,Package\Execute CSS_Staging to EDW FactNetRevenue load\Execute spCSS_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC spCSS_BatchLoad_StagingToEDW_FactNetRevenue,StagingtoEDWCSS_FactNetRevenueCSS
2528,Package,Microsoft.Package,BridgeCompanyRollup,,,,,,StagingToEDW_BridgeCompanyRollup
2529,Package\Executes GL_Staging to Staging EDW BRidge Company Rollup,STOCK:SEQUENCE,Executes GL_Staging to Staging EDW BRidge Company Rollup,,,,,,StagingToEDW_BridgeCompanyRollup
2530,Package\Executes GL_Staging to Staging EDW BRidge Company Rollup\SQL_spGL_StagingToEDW_BridgeCompanyRollup,Microsoft.ExecuteSQLTask,SQL_spGL_StagingToEDW_BridgeCompanyRollup,,,,,Execute [dbo].[spGL_StagingToEDW_BridgeCompanyRollup],StagingToEDW_BridgeCompanyRollup
2531,Package,Microsoft.Package,BridgeSecurityPersonHRISGroup,,,,,,StagingToEDW_BridgeSecurityPersonHRISGroup
2532,Package\Executes HR_Staging to Staging EDW BridgeSecurityPersonHRISGroup,STOCK:SEQUENCE,Executes HR_Staging to Staging EDW BridgeSecurityPersonHRISGroup,,,,,,StagingToEDW_BridgeSecurityPersonHRISGroup
2533,Package\Executes HR_Staging to Staging EDW BridgeSecurityPersonHRISGroup\SQL_spHR_StagingToEDW_BridgeSecurityPersonHRISGroup,Microsoft.ExecuteSQLTask,SQL_spHR_StagingToEDW_BridgeSecurityPersonHRISGroup,,,,,Execute [dbo].[spHR_StagingToEDW_BridgeSecurityPersonHRISGroup],StagingToEDW_BridgeSecurityPersonHRISGroup
2534,Package,Microsoft.Package,BridgeSecurityPersonOrg,,,,,,StagingToEDW_BridgeSecurityPersonOrg
2535,Package\Executes HR_Staging to EDW BridgeSecurityPersonOrg,STOCK:SEQUENCE,Executes HR_Staging to EDW BridgeSecurityPersonOrg,,,,,,StagingToEDW_BridgeSecurityPersonOrg
2536,Package\Executes HR_Staging to EDW BridgeSecurityPersonOrg\SQL - Exec spHR_StagingToEDW_BridgeSecurityPersonOrg,Microsoft.ExecuteSQLTask,SQL - Exec spHR_StagingToEDW_BridgeSecurityPersonOrg,,,,,Execute [dbo].[spHR_StagingToEDW_BridgeSecurityPersonOrg],StagingToEDW_BridgeSecurityPersonOrg
2537,Package,Microsoft.Package,CompNonCompStatus,,,,,,StagingToEDW_CompNonCompStatus
2538,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Insert Count,,StagingToEDW_CompNonCompStatus
2539,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",CNT - Source Count,,StagingToEDW_CompNonCompStatus
2540,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingToEDW_CompNonCompStatus
2541,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - CompNonCompStatus,,StagingToEDW_CompNonCompStatus
2542,Package\DFT Load DW_Mart CompNonCompStatus,Microsoft.Pipeline,DFT Load DW_Mart CompNonCompStatus,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - vCostCenterCurrent & Date Dim,,StagingToEDW_CompNonCompStatus
2543,Package\SQL - Begin CompNonComp ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin CompNonComp ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",StagingToEDW_CompNonCompStatus
2544,Package\SQL - Delete last 180 days from DW_Mart CompNonCompStatus table,Microsoft.ExecuteSQLTask,SQL - Delete last 180 days from DW_Mart CompNonCompStatus table,,,,,"DELETE FROM CompNonCompStatus
WHERE FiscalWeekEndDate >= ?

Select @@Rowcount as DeleteCount",StagingToEDW_CompNonCompStatus
2545,Package\SQL - End CompNonComp ETL Audit,Microsoft.ExecuteSQLTask,SQL - End CompNonComp ETL Audit,,,,,"Execute spEndAuditLog ?,0,?,?,?;",StagingToEDW_CompNonCompStatus
2546,Package\SQL - Get the FiscalWeekEndDate,Microsoft.ExecuteSQLTask,SQL - Get the FiscalWeekEndDate,,,,,"IF ? ='01/01/1900'  
SELECT MIN(d.FiscalWeekEndDate) AS FiscalWeekEndDate
FROM DimDate d
WHERE ( d.FullDate >= DATEADD( dd, -180, CAST( GETDATE() AS DATE ) ) ) AND ( d.FullDate <= GETDATE() )
ELSE
SELECT MIN(d.FiscalWeekEndDate) AS FiscalWeekEndDate
FROM DimDate d
WHERE ( d.FullDate >= DATEADD(dd, -180, CAST( ? AS DATE) ) ) AND ( d.FullDate <= GETDATE() )",StagingToEDW_CompNonCompStatus
2547,Package,Microsoft.Package,DimAccountSubAccount,,,,,,StagingToEDW_DimAccountSubAccount
2548,Package\Excecute GL_Staging to EDW DimAccountSubAccount load,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimAccountSubAccount load,,,,,,StagingToEDW_DimAccountSubAccount
2549,Package\Excecute GL_Staging to EDW DimAccountSubAccount load\Execute spGL_StagingToEDW_DimAccountSubAccount,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimAccountSubAccount,,,,,EXEC dbo.spGL_StagingToEDW_DimAccountSubAccount,StagingToEDW_DimAccountSubAccount
2550,Package,Microsoft.Package,DimAdjustmentReason,,,,,,StagingToEDW_DimAdjustmentReason
2551,Package\Execute CMS_Staging to EDW DimAdjustmentReason load,STOCK:SEQUENCE,Execute CMS_Staging to EDW DimAdjustmentReason load,,,,,,StagingToEDW_DimAdjustmentReason
2552,Package\Execute CMS_Staging to EDW DimAdjustmentReason load\Execute spCMS_StagingToEDW_DimAdjustmentReason,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimAdjustmentReason,,,,,EXEC dbo.spCMS_StagingToEDW_DimAdjustmentReason,StagingToEDW_DimAdjustmentReason
2553,Package,Microsoft.Package,DimARAgencyType,,,,,,StagingToEDW_DimARAgencyType
2554,Package\Excecute CMS_Staging to EDW DimARAgencyType load,STOCK:SEQUENCE,Excecute CMS_Staging to EDW DimARAgencyType load,,,,,,StagingToEDW_DimARAgencyType
2555,Package\Excecute CMS_Staging to EDW DimARAgencyType load\Execute spCMS_StagingToEDW_DimARAgencyType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimARAgencyType,,,,,EXEC dbo.spCMS_StagingToEDW_DimARAgencyType,StagingToEDW_DimARAgencyType
2556,Package,Microsoft.Package,DimAssessmentType,,,,,,StagingToEDW_DimAssessmentType
2557,Package\Execute HR_Staging to EDW DimAssessmentType load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimAssessmentType load,,,,,,StagingToEDW_DimAssessmentType
2558,Package\Execute HR_Staging to EDW DimAssessmentType load\Execute spHR_StagingToEDW_DimAssessmentType,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimAssessmentType,,,,,EXEC dbo.spHR_StagingToEDW_DimAssessmentType,StagingToEDW_DimAssessmentType
2559,Package,Microsoft.Package,DimAssignmentType,,,,,,StagingToEDW_DimAssignmentType
2560,Package\Execute HR_Staging to EDW DimAssignmentType load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimAssignmentType load,,,,,,StagingToEDW_DimAssignmentType
2561,Package\Execute HR_Staging to EDW DimAssignmentType load\Execute spHR_StagingToEDW_DimAssignmentType,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimAssignmentType,,,,,EXEC dbo.spHR_StagingToEDW_DimAssignmentType,StagingToEDW_DimAssignmentType
2562,Package,Microsoft.Package,DimClassroom,,,,,,StagingToEDW_DimClassroom
2563,Package\Execute CMS_Staging to EDW DimClassroom load,STOCK:SEQUENCE,Execute CMS_Staging to EDW DimClassroom load,,,,,,StagingToEDW_DimClassroom
2564,Package\Execute CMS_Staging to EDW DimClassroom load\Execute spCMS_StagingToEDW_DimClassroom,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimClassroom,,,,,EXEC dbo.spCMS_StagingToEDW_DimClassroom,StagingToEDW_DimClassroom
2565,Package\Execute CSS_Staging to EDW DimClassroom load 1,STOCK:SEQUENCE,Execute CSS_Staging to EDW DimClassroom load 1,,,,,,StagingToEDW_DimClassroom
2566,Package\Execute CSS_Staging to EDW DimClassroom load 1\Execute spCSS_StagingToEDW_DimClassroom,Microsoft.ExecuteSQLTask,Execute spCSS_StagingToEDW_DimClassroom,,,,,EXEC dbo.spCSS_StagingToEDW_DimClassroom,StagingToEDW_DimClassroom
2567,Package,Microsoft.Package,DimCompany,,,,,,StagingToEDW_DimCompany
2568,Package\Excecute GL_Staging to EDW DimCompany load,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimCompany load,,,,,,StagingToEDW_DimCompany
2569,Package\Excecute GL_Staging to EDW DimCompany load\Execute spGL_StagingToEDW_DimCompany,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimCompany,,,,,EXEC spGL_StagingToEDW_DimCompany,StagingToEDW_DimCompany
2570,Package,Microsoft.Package,DimCompanyRollup,,,,,,StagingToEDW_DimCompanyRollup
2571,Package\Executes spGL_StagingToEDW_DimCompanyRollup,STOCK:SEQUENCE,Executes spGL_StagingToEDW_DimCompanyRollup,,,,,,StagingToEDW_DimCompanyRollup
2572,Package\Executes spGL_StagingToEDW_DimCompanyRollup\SQL_spGL_StagingToEDW_DimCompanyRollup,Microsoft.ExecuteSQLTask,SQL_spGL_StagingToEDW_DimCompanyRollup,,,,,Execute [dbo].[spGL_StagingToEDW_DimCompanyRollup],StagingToEDW_DimCompanyRollup
2573,Package,Microsoft.Package,DimComplianceItem,,,,,,StagingToEDW_DimComplianceItem
2574,Package\Execute HR_Staging to EDW DimComplianceItem load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimComplianceItem load,,,,,,StagingToEDW_DimComplianceItem
2575,Package\Execute HR_Staging to EDW DimComplianceItem load\Execute spHR_StagingToEDW_DimComplianceItem,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimComplianceItem,,,,,EXEC [dbo].[spHR_StagingToEDW_DimComplianceItem],StagingToEDW_DimComplianceItem
2576,Package,Microsoft.Package,DimComplianceRating,,,,,,StagingToEDW_DimComplianceRating
2577,Package\Execute HR_Staging to EDW DimComplianceRating load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimComplianceRating load,,,,,,StagingToEDW_DimComplianceRating
2578,Package\Execute HR_Staging to EDW DimComplianceRating load\Execute spHR_StagingToEDW_DimComplianceRating,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimComplianceRating,,,,,EXEC dbo.spHR_StagingToEDW_DimComplianceRating,StagingToEDW_DimComplianceRating
2579,Package,Microsoft.Package,DimCostCenter,,,,,,StagingToEDW_DimCostCenter
2580,Package\Excecute GL_Staging to EDW DimCostCenter load,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimCostCenter load,,,,,,StagingToEDW_DimCostCenter
2581,Package\Excecute GL_Staging to EDW DimCostCenter load\Execute spGL_StagingToEDW_DimCostCenter,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimCostCenter,,,,,EXEC dbo.spGL_StagingToEDW_DimCostCenter,StagingToEDW_DimCostCenter
2582,Package,Microsoft.Package,DimCostCenterType,,,,,,StagingToEDW_DimCostCenterType
2583,Package\Excecute GL_staging to EDW DimCostCenterType load,STOCK:SEQUENCE,Excecute GL_staging to EDW DimCostCenterType load,,,,,,StagingToEDW_DimCostCenterType
2584,Package\Excecute GL_staging to EDW DimCostCenterType load\Execute spGL_StagingToEDW_DimCostCenterType,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimCostCenterType,,,,,EXEC dbo.spGL_StagingToEDW_DimCostCenterType,StagingToEDW_DimCostCenterType
2585,Package,Microsoft.Package,DimCreditmemoType,,,,,,StagingToEDW_DimCreditmemoType
2586,Package\Chnage History,STOCK:SEQUENCE,Chnage History,,,,,,StagingToEDW_DimCreditmemoType
2587,Package\SQL - Execute Staging To EDW DimCreditMemoType load,STOCK:SEQUENCE,SQL - Execute Staging To EDW DimCreditMemoType load,,,,,,StagingToEDW_DimCreditmemoType
2588,Package\SQL - Execute Staging To EDW DimCreditMemoType load\Execute spCMS_StagingToEDW_DimCreditMemoType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimCreditMemoType,,,,,EXEC dbo.spCMS_StagingToEDW_DimCreditMemoType,StagingToEDW_DimCreditmemoType
2589,Package,Microsoft.Package,DimDataScenario,,,,,,StagingToEDW_DimDataScenario
2590,Package\SQL - End DimDataScenario Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimDataScenario Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimDataScenario
2591,Package\SQL - Get Deleted Count,Microsoft.ExecuteSQLTask,SQL - Get Deleted Count,,,,," SELECT COUNT(1) AS DeleteCount 
From dbo.DimDataScenario",StagingToEDW_DimDataScenario
2592,Package\SQL - Insert data into DimDtaScenario,Microsoft.ExecuteSQLTask,SQL - Insert data into DimDtaScenario,,,,,"WITH DataScenario
     AS (
     SELECT 1 AS Id,
            'Actual' AS DataScenarioName,
            'Actual' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'A' AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 2 AS Id,
            'Plan' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'B' AS GLActualFlag,
            1101 AS GLBudgetVersionID
     UNION
     SELECT 3 AS Id,
            'Plan Var' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 4 AS Id,
            'Plan Var %' AS DataScenarioName,
            'Plan' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 5 AS Id,
            'Forecast' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            'B' AS GLActualFlag,
            1181 AS GLBudgetVersionID
     UNION
     SELECT 6 AS Id,
            'Forecast Var' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 7 AS Id,
            'Forecast Var %' AS DataScenarioName,
            'Forecast' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 8 AS Id,
            'Target' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 9 AS Id,
            'Target Var' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 10 AS Id,
            'Target Var %' AS DataScenarioName,
            'Target' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionIDUNION
     UNION
     SELECT 11 AS Id,
            'LY' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 12 AS Id,
            'LY Var' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario v Actual' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID
     UNION
     SELECT 13 AS Id,
            'LY Var %' AS DataScenarioName,
            'Last Year' AS DataScenarioType,
            'Scenario v Actual %' AS DataScenarioSubtype,
            NULL AS GLActualFlag,
            NULL AS GLBudgetVersionID)
     INSERT INTO [dbo].[DimDataScenario]
     ([DataScenarioName],
      [DataScenarioType],
      [DataScenarioSubtype],
      [GLActualFlag],
      [GLBudgetVersionID],
      [EffectiveFrom],
      [EffectiveTo],
      [ETLJobID]
     )
            SELECT COALESCE(DataScenarioName, 'Unknown Scenario') AS DataScenarioName,
                   COALESCE(DataScenarioType, 'Unknown Scenario Type') AS DataScenarioType,
                   COALESCE(DataScenarioSubtype, 'Unknown Scenario Subtype') AS DataScenarioSubtype,
                   GLActualFlag,
                   GLBudgetVersionID,
                   '1900-01-01',
                   '12/31/9999 23:59:59.999',
                   ?
            FROM DataScenario
            ORDER BY Id;
SELECT @@ROWCOUNT + 1 AS SourceCount;
",StagingToEDW_DimDataScenario
2593,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"DBCC CHECKIDENT('[DimDataScenario]', RESEED, 1);
SET IDENTITY_INSERT dbo.DimDataScenario ON;
INSERT INTO [dbo].[DimDataScenario]
([DataScenarioKey],
 [DataScenarioName],
 [DataScenarioType],
 [DataScenarioSubtype],
 [GLActualFlag],
 [GLBudgetVersionID],
 [Deleted],
 [EffectiveFrom],
 [EffectiveTo],
 [ETLJobID]
)
       SELECT-1,
             'Unknown Scenario',
             'Unknown Scenario Type',
             'Unknown Scenario Subtype',
             NULL,
             NULL,
             NULL,
             '1900-01-01',
             '12/31/9999 23:59:59.999',
             ?
       UNION
       SELECT-2,
             'Not Applicable Scenario',
             'Not Applicable Scenario Type',
             'Not Applicable Scenario Subtype',
             NULL,
             NULL,
             NULL,
             '1900-01-01',
             '12/31/9999 23:59:59.999',
             ?;
SET IDENTITY_INSERT dbo.DimDataScenario OFF;",StagingToEDW_DimDataScenario
2594,Package\SQL - Start DimDataScenario Auditlog,Microsoft.ExecuteSQLTask,SQL - Start DimDataScenario Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimDataScenario
2595,Package\SQL - Truncate DimDataScenario,Microsoft.ExecuteSQLTask,SQL - Truncate DimDataScenario,,,,, TRUNCATE TABLE dbo.DimDataScenario,StagingToEDW_DimDataScenario
2596,Package,Microsoft.Package,DimDate,,,,,,StagingToEDW_DimDate
2597,Package\Excecute GL_staging to EDW DimDate load,STOCK:SEQUENCE,Excecute GL_staging to EDW DimDate load,,,,,,StagingToEDW_DimDate
2598,Package\Excecute GL_staging to EDW DimDate load\Execute spGL_StagingToEDW_DimDate,Microsoft.ExecuteSQLTask,Execute spGL_StagingToEDW_DimDate,,,,,EXEC dbo.spGL_StagingToEDW_DimDate,StagingToEDW_DimDate
2599,Package,Microsoft.Package,DimDate_DM,,,,,,StagingToEDW_DimDate_DM
2600,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimDate,,StagingToEDW_DimDate_DM
2601,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,StagingToEDW_DimDate_DM
2602,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,StagingToEDW_DimDate_DM
2603,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_DimDate_DM
2604,Package\DFT - Load DimDate,Microsoft.Pipeline,DFT - Load DimDate,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - SQL Command,,StagingToEDW_DimDate_DM
2605,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,," 

DELETE FROM [dbo].[DimDate]
             WHERE [DateKey] < 0;


             INSERT INTO [dbo].[DimDate]
             ([DateKey],
              [FullDate],
		    [FiscalWeekNumber],
		    [FiscalWeekName],
		    [FiscalWeekStartDateKey],
              [FiscalWeekEndDateKey],
              [HolidayName],
              [HolidayFiscalWeekFlag],
             [FiscalDayNumber],
             [FiscalDayOfWeekNumber],
            [FiscalDayOfPeriodNumber],
            [FiscalDayOfQuarterNumber],
            [FiscalDayOfYearNumber],
              [FiscalWeekOfPeriodNumber],
              [FiscalWeekOfPeriodName],
              [FiscalWeekOfQuarterNumber],
              [FiscalWeekOfQuarterName],
              [FiscalWeekOfYearNumber],
              [FiscalWeekOfYearName],
              [FiscalWeekSequenceNumber],
              [FiscalWeekStartDate],
              [FiscalWeekEndDate],
              [FiscalPeriodNumber],
              [FiscalPeriodName],
              [FiscalPeriodType],
              [FiscalPeriodOfYearNumber],
              [FiscalPeriodOfYearName],
              [FiscalPeriodSequenceNumber],
              [FiscalPeriodStartDate],
              [FiscalPeriodEndDate],
              [FiscalQuarterNumber],
              [FiscalQuarterName],
              [FiscalQuarterOfYearNumber],
              [FiscalQuarterOfYearName],
              [FiscalQuarterSequenceNumber],
              [FiscalQuarterStartDate],
              [FiscalQuarterEndDate],
              [FiscalYearNumber],
              [FiscalYearName],
              [FiscalYearStartDate],
		    [FiscalYearEndDate],
		    [EffectiveFrom],
		    [EffectiveTo],
		    [RowStatus],
		    [ETLJobID]
              )
                    SELECT-1, --[DateKey]
                          '19000101', --[FullDate]
					 -1, --[FiscalWeekNumber]
                          'Unknown Fiscal Week', --[FiscalWeekName]
					 -1,   ---[FiscalWeekStartDateKey]
					 -1,   ---[FiscalWeekEndDateKey]
                          'Unknown Holiday', --[HolidayName]
                          'Unknown Holiday Fiscal Week', --[HolidayFiscalWeekFlag]
						  -1,--- [FiscalDayNumber] 
	                      -1, ---[FiscalDayOfWeekNumber] 
	                      -1, ----[FiscalDayOfPeriodNumber] 
	                      -1, ---[FiscalDayOfQuarterNumber] 
	                      -1, ---[FiscalDayOfYearNumber] 
                          -1, --[FiscalWeekOfPeriodNumber]
                          'Unknown Fiscal Week of Period', --[FiscalWeekOfPeriodName]
                          -1, --[FiscalWeekOfQuarterNumber]
                          'Unknown Fiscal Week of Quarter', --[FiscalWeekOfQuarterName]
                          -1, --[FiscalWeekOfYearNumber]
                          'Unknown Fiscal Week of Year', --[FiscalWeekOfYearName]
                          -1, --[FiscalWeekSequenceNumber]
                          '19000101', --[FiscalWeekStartDate]
                          '19000101', --[FiscalWeekEndDate]
                          -1, --[FiscalPeriodNumber]
                          'Unknown Fiscal Period', --[FiscalPeriodName]
                          'Unknown', --[FiscalPeriodType]
                          -1, --[FiscalPeriodOfYearNumber]
                          'Unknown Fiscal Period of Year', --[FiscalPeriodOfYearName]
                          -1, --[FiscalPeriodSequenceNumber]
                          '19000101', --[FiscalPeriodStartDate]
                          '19000101', --[FiscalPeriodEndDate]
                          -1, --[FiscalQuarterNumber]
                          'Unknown Fiscal Quarter', --[FiscalQuarterName]
                          -1, --[FiscalQuarterOfYearNumber]
                          'Unknown Fiscal Quarter of Year', --[FiscalQuarterOfYearName]
                          -1, --[FiscalQuarterSequenceNumber]
                          '19000101', --[FiscalQuarterStartDate]
                          '19000101', --[FiscalQuarterEndDate]
                          -1, --[FiscalYearNumber]
                          'Unknown Fiscal Year', --[FiscalYearName]
                          '19000101', --[FIscalYearStartDate]
                          '19000101', --[FiscalYearEndDate]
					 '1900-01-01' , --[EffectiveFrom]
					 '12/31/9999 23:59:59.999', ---- [EffectiveTo]
					 'Active', ---RowStatus
					 ?   ---ETLJobID
                          
                    UNION
                    SELECT-2, --[DateKey]
                          '19000102', --[FullDate]
                          -2, --[FiscalWeekNumber]
                          'Not Applicable Fiscal Week', --[FiscalWeekName]
					 -2, --- [FiscalWeekStartDateKey]
                          -2, --- [FiscalWeekEndDateKey]
                          'Not Applicable Holiday', --[HolidayName]
                          'Not Applicable Holiday Fiscal Week', --[HolidayFiscalWeekFlag]
						  -2,--- [FiscalDayNumber] 
	                      -2, ---[FiscalDayOfWeekNumber] 
	                      -2, ----[FiscalDayOfPeriodNumber] 
	                      -2, ---[FiscalDayOfQuarterNumber] 
	                      -2, ---[FiscalDayOfYearNumber] 
                          -2, --[FiscalWeekOfPeriodNumber]
                          'Not Applicable Fiscal Week of Period', --[FiscalWeekOfPeriodName]
                          -2, --[FiscalWeekOfQuarterNumber]
                          'Not Applicable Fiscal Week of Quarter', --[FiscalWeekOfQuarterName]
                          -2, --[FiscalWeekOfYearNumber]
                          'Not Applicable Fiscal Week of Year', --[FiscalWeekOfYearName]
                          -2, --[FiscalWeekSequenceNumber]
                          '19000102', --[FiscalWeekStartDate]
                          '19000102', --[FiscalWeekEndDate]
                          -2, --[FiscalPeriodNumber]
                          'Not Applicable Fiscal Period', --[FiscalPeriodName]
                          'N/A', --[FiscalPeriodType]
                          -2, --[FiscalPeriodOfYearNumber]
                          'Not Applicable Fiscal Period of Year', --[FiscalPeriodOfYearName]
                          -2, --[FiscalPeriodSequenceNumber]
                          '19000102', --[FiscalPeriodStartDate]
                          '19000102', --[FiscalPeriodEndDate]
                          -2, --[FiscalQuarterNumber]
                          'Not Applicable Fiscal Quarter', --[FiscalQuarterName]
                          -2, --[FiscalQuarterOfYearNumber]
                          'Not Applicable Fiscal Quarter of Year', --[FiscalQuarterOfYearName]
                          -2, --[FiscalQuarterSequenceNumber]
                          '19000102', --[FiscalQuarterStartDate]
                          '19000102', --[FiscalQuarterEndDate]
                          -2, --[FiscalYearNumber]
                          'Not Applicable Fiscal Year', --[FiscalYearName]
                          '19000102', --[FIscalYearStartDate]
                          '19000102', --[FiscalYearEndDate]
                           '1900-01-02', --[EffectiveFrom]
					  '12/31/9999 23:59:59.999', ---- [EffectiveTo]
					 'Active', ---RowStatus;
                           ? --ETLJobID
           ",StagingToEDW_DimDate_DM
2606,Package,Microsoft.Package,DimDiscountType,,,,,,StagingToEDW_DimDiscountType
2607,Package\Excecute CMS_staging to EDW DimDiscountType,STOCK:SEQUENCE,Excecute CMS_staging to EDW DimDiscountType,,,,,,StagingToEDW_DimDiscountType
2608,Package\Excecute CMS_staging to EDW DimDiscountType\Execute spCMS_StagingToEDW_DimDiscountType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimDiscountType,,,,,EXEC dbo.spCMS_StagingToEDW_DimDiscountType,StagingToEDW_DimDiscountType
2609,Package,Microsoft.Package,DimFeeType,,,,,,StagingToEDW_DimFeeType
2610,Package\Execute CMS_Staging to EDW DimFeeType load,STOCK:SEQUENCE,Execute CMS_Staging to EDW DimFeeType load,,,,,,StagingToEDW_DimFeeType
2611,Package\Execute CMS_Staging to EDW DimFeeType load\Execute spCMS_StagingToEDW_DimFeeType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimFeeType,,,,,EXEC dbo.spCMS_StagingToEDW_DimFeeType,StagingToEDW_DimFeeType
2612,Package,Microsoft.Package,DimHRUser,,,,,,StagingToEDW_DimHRUser
2613,Package\Executes spHR_StagingToEDW_DimHRUser,STOCK:SEQUENCE,Executes spHR_StagingToEDW_DimHRUser,,,,,,StagingToEDW_DimHRUser
2614,Package\Executes spHR_StagingToEDW_DimHRUser\SQL_spHR_StagingToEDW_DimHRUser,Microsoft.ExecuteSQLTask,SQL_spHR_StagingToEDW_DimHRUser,,,,,Exec [dbo].[spHR_StagingToEDW_DimHRUser],StagingToEDW_DimHRUser
2615,Package,Microsoft.Package,DimInvoiceType,,,,,,StagingToEDW_DimInvoiceType
2616,Package\Excecute CMS_staging to EDW DimInvoiceType,STOCK:SEQUENCE,Excecute CMS_staging to EDW DimInvoiceType,,,,,,StagingToEDW_DimInvoiceType
2617,Package\Excecute CMS_staging to EDW DimInvoiceType\Execute spCMS_StagingToEDW_DimInvoiceType,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimInvoiceType,,,,,EXEC dbo.spCMS_StagingToEDW_DimInvoiceType,StagingToEDW_DimInvoiceType
2618,Package,Microsoft.Package,DimLead,,,,,,StagingToEDW_DimLead
2619,Package\Execute SalesForce_Staging to EDW DimLead load,STOCK:SEQUENCE,Execute SalesForce_Staging to EDW DimLead load,,,,,,StagingToEDW_DimLead
2620,Package\Execute SalesForce_Staging to EDW DimLead load\Execute spSalesForce_StagingToEDW_DimLead,Microsoft.ExecuteSQLTask,Execute spSalesForce_StagingToEDW_DimLead,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimLead,StagingToEDW_DimLead
2621,Package,Microsoft.Package,DimLeadEventType,,,,,,StagingToEDW_DimLeadEventType
2622,Package\Execute DimLeadEventType load,STOCK:SEQUENCE,Execute DimLeadEventType load,,,,,,StagingToEDW_DimLeadEventType
2623,Package\Execute DimLeadEventType load\SQL - spBING_EDW_Generate_DimLeadEventType,Microsoft.ExecuteSQLTask,SQL - spBING_EDW_Generate_DimLeadEventType,,,,,EXEC dbo.spBING_EDW_Generate_DimLeadEventType,StagingToEDW_DimLeadEventType
2624,Package,Microsoft.Package,DimLeadType,,,,,,StagingToEDW_DimLeadType
2625,Package\Execute SalesForce_Staging to EDW DimLeadType load,STOCK:SEQUENCE,Execute SalesForce_Staging to EDW DimLeadType load,,,,,,StagingToEDW_DimLeadType
2626,Package\Execute SalesForce_Staging to EDW DimLeadType load\Execute spSalesForce_StagingToEDW_DimLeadType,Microsoft.ExecuteSQLTask,Execute spSalesForce_StagingToEDW_DimLeadType,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimLeadType,StagingToEDW_DimLeadType
2627,Package,Microsoft.Package,DimLeaveReason,,,,,,StagingToEDW_DimLeaveReason
2628,Package\Execute HR_Staging to EDW DimLeaveReason load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimLeaveReason load,,,,,,StagingToEDW_DimLeaveReason
2629,Package\Execute HR_Staging to EDW DimLeaveReason load\Execute spHR_StagingToEDW_DimLeaveReason,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimLeaveReason,,,,,EXEC dbo.spHR_StagingToEDW_DimLeaveReason,StagingToEDW_DimLeaveReason
2630,Package,Microsoft.Package,DimLeaveType,,,,,,StagingToEDW_DimLeaveType
2631,Package\Execute HR_Staging to EDW DimLeaveType load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimLeaveType load,,,,,,StagingToEDW_DimLeaveType
2632,Package\Execute HR_Staging to EDW DimLeaveType load\Execute spHR_StagingToEDW_DimLeaveType,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimLeaveType,,,,,EXEC [dbo].[spHR_StagingToEDW_DimLeaveType] ,StagingToEDW_DimLeaveType
2633,Package,Microsoft.Package,DimLifecycleStatus,,,,,,StagingToEDW_DimLifecycleStatus
2634,Package\SQL - End DimLifecycleStatus Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimLifecycleStatus Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimLifecycleStatus
2635,Package\SQL - Get Deleted Count,Microsoft.ExecuteSQLTask,SQL - Get Deleted Count,,,,," SELECT COUNT(1) AS DeleteCount 
From dbo.DimLifecycleStatus",StagingToEDW_DimLifecycleStatus
2636,Package\SQL - Insert data into DimLifecycleStatus,Microsoft.ExecuteSQLTask,SQL - Insert data into DimLifecycleStatus,,,,,"SET IDENTITY_INSERT dbo.DimLifecycleStatus ON;

WITH LifecycleStatus
                  AS (
                  SELECT-1 AS LifecycleStatusKey,
                        'Unknown Lifecycle Status' AS LifecycleStatusName,
	        'A' AS RowStatus
                  UNION
                  SELECT-2 AS LifecycleStatusKey,
                        'Not Applicable Lifecycle Status' AS LifecycleStatusName,
	        'A' AS RowStatus
                  UNION
                  SELECT 1 AS LifecycleStatusKey,
                         'Pre-Enrolled (New)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 2 AS LifecycleStatusKey,
                         'Pre-Enrolled (Existing)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 3 AS LifecycleStatusKey,
                         'New' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 4 AS LifecycleStatusKey,
                         'Transferred' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 5 AS LifecycleStatusKey,
                         'Enrolled' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 6 AS LifecycleStatusKey,
                         'Reserved' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 7 AS LifecycleStatusKey,
                         'At-Risk (Disenrollment)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 8 AS LifecycleStatusKey,
                         'At-Risk (A/R)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 9 AS LifecycleStatusKey,
                         'Re-Enrolled (Short Term)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 10 AS LifecycleStatusKey,
                         'Re-Enrolled (Long Term)' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 11 AS LifecycleStatusKey,
                         'Withdrawing' AS LifecycleStatusName,
	         'A' AS RowStatus
                  UNION
                  SELECT 12 AS LifecycleStatusKey,
                         'Withdrawn' AS LifecycleStatusName,
	         'A' AS RowStatus)
                  INSERT INTO dbo.DimLifecycleStatus
                  ([LifecycleStatusKey],
                   [LifecycleStatusName],
	   [RowStatus],
                   [ETLJobID]
                  )
                         SELECT LifecycleStatusKey,
                                LifecycleStatusName,
                                RowStatus,
		?
                         FROM LifecycleStatus;

SELECT @@ROWCOUNT  AS SourceCount;

SET IDENTITY_INSERT dbo.DimLifecycleStatus OFF;",StagingToEDW_DimLifecycleStatus
2637,Package\SQL - Start DimLifecycleStatus Auditlog,Microsoft.ExecuteSQLTask,SQL - Start DimLifecycleStatus Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",StagingToEDW_DimLifecycleStatus
2638,Package\SQL - Truncate DimLifecycleStatus,Microsoft.ExecuteSQLTask,SQL - Truncate DimLifecycleStatus,,,,, TRUNCATE TABLE dbo.DimLifecycleStatus,StagingToEDW_DimLifecycleStatus
2639,Package,Microsoft.Package,DimLocation,,,,,,StagingToEDW_DimLocation
2640,Package\Excecute HR_Staging to EDW DimLocation load,STOCK:SEQUENCE,Excecute HR_Staging to EDW DimLocation load,,,,,,StagingToEDW_DimLocation
2641,Package\Excecute HR_Staging to EDW DimLocation load\Execute spHR_StagingToEDW_DimLocation,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimLocation,,,,,EXEC spHR_StagingToEDW_DimLocation,StagingToEDW_DimLocation
2642,Package,Microsoft.Package,DimMartAccountSubAccount,,,,,,StagingToEDW_DimMartAccountSubAccount
2643,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartAccountSubAccount
2644,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartAccountSubAccount
2645,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartAccountSubAccount
2646,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,StagingToEDW_DimMartAccountSubAccount
2647,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup - SCD Columns,,StagingToEDW_DimMartAccountSubAccount
2648,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimAccountSubaccount,,StagingToEDW_DimMartAccountSubAccount
2649,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - ASA,,StagingToEDW_DimMartAccountSubAccount
2650,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartAccountSubAccount
2651,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartAccountSubAccount
2652,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartAccountSubAccount
2653,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartAccountSubAccount
2654,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartAccountSubAccount
2655,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartAccountSubAccount
2656,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartAccountSubAccount
2657,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimAccountSubaccount_DM_Data,,StagingToEDW_DimMartAccountSubAccount
2658,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartAccountSubAccount
2659,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Delete Count,,StagingToEDW_DimMartAccountSubAccount
2660,Package\SQL - Assigning value to the SQl Variable,Microsoft.ExecuteSQLTask,SQL - Assigning value to the SQl Variable,,,,,"DECLARE @Field MartLookup;
INSERT INTO @Field (FieldPath)
(SELECT FieldPath
FROM dbo.MartASALookup);

DECLARE @vSQL MartLookup;
INSERT @vSQL
EXEC dbo.spGL_Generate_ASA_SQLStatement @Field;

DECLARE @vSQLCommand VARCHAR(4000);
SET @vSQLCommand = (SELECT FieldPath FROM @vSQL)

SELECT @vSQLCommand AS vSQLCommand;",StagingToEDW_DimMartAccountSubAccount
2661,Package\SQL - Begin AccountSubaccountLanding Audit,Microsoft.ExecuteSQLTask,SQL - Begin AccountSubaccountLanding Audit,,,,,"Execute dbo.spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartAccountSubAccount
2662,Package\SQL - Begin DimAccountSubAccount ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimAccountSubAccount ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartAccountSubAccount
2663,Package\SQL - End AccountSubaccount Audit,Microsoft.ExecuteSQLTask,SQL - End AccountSubaccount Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartAccountSubAccount
2664,Package\SQL - End DimAccountSubAccount ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimAccountSubAccount ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartAccountSubAccount
2665,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
(
    SELECT 1
    FROM dbo.DimAccountSubaccount
    WHERE AccountSubaccountKey < 0
)
BEGIN
    PRINT 'No Insert';
END;
ELSE
BEGIN
    SET IDENTITY_INSERT dbo.DimAccountSubaccount ON;

    INSERT INTO [dbo].[DimAccountSubaccount]
    (
        [AccountSubaccountKey],
        [AccountSubaccountID],
        [AccountSubaccountName],
        [AccountID],
        [AccountName],
        [SubaccountID],
        [SubaccountName],
        [ASATuitionType],
        [ASAFieldDepth],
        [ASAFieldLevel1ID],
        [ASAFieldLevel1Name],
        [ASAFieldLevel1Unary],
        [ASAFieldLevel1Sort],
        [ASAFieldLevel2ID],
        [ASAFieldLevel2Name],
        [ASAFieldLevel2Unary],
        [ASAFieldLevel2Sort],
        [ASAFieldLevel3ID],
        [ASAFieldLevel3Name],
        [ASAFieldLevel3Unary],
        [ASAFieldLevel3Sort],
        [ASAFieldLevel4ID],
        [ASAFieldLevel4Name],
        [ASAFieldLevel4Unary],
        [ASAFieldLevel4Sort],
        [ASAFieldLevel5ID],
        [ASAFieldLevel5Name],
        [ASAFieldLevel5Unary],
        [ASAFieldLevel5Sort],
        [ASAFieldLevel6ID],
        [ASAFieldLevel6Name],
        [ASAFieldLevel6Unary],
        [ASAFieldLevel6Sort],
        [ASAFieldLevel7ID],
        [ASAFieldLevel7Name],
        [ASAFieldLevel7Unary],
        [ASAFieldLevel7Sort],
        [ASAFieldLevel8ID],
        [ASAFieldLevel8Name],
        [ASAFieldLevel8Unary],
        [ASAFieldLevel8Sort],
        [ASAFieldLevel9ID],
        [ASAFieldLevel9Name],
        [ASAFieldLevel9Unary],
        [ASAFieldLevel9Sort],
        [ASAFieldLevel10ID],
        [ASAFieldLevel10Name],
        [ASAFieldLevel10Unary],
        [ASAFieldLevel10Sort],
        [ASAFieldLevel11ID],
        [ASAFieldLevel11Name],
        [ASAFieldLevel11Unary],
        [ASAFieldLevel11Sort],
        [ASAFieldLevel12ID],
        [ASAFieldLevel12Name],
        [ASAFieldLevel12Unary],
        [ASAFieldLevel12Sort],
        [SourceSystem],
        [EffectiveFrom],
        [EffectiveTo],
        [CreatedDate],
        [ModifiedDate],
        [DeletedDate],
        [RowStatus],
        [ETLJobID]
    )
    SELECT -1,
           -1,
           'Unknown AccountSubaccountName',
           -1,
           'Unknown AccountName',
           -1,
           'Unknown SubaccountName',
           'Unknown ASATuitionType',
           -1,                           -- [ASAFieldDepth]
           '0000.000000',                -- [ASAFieldLevel1ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel1Name]	
           1,                            -- [ASAFieldLevel1Unary]	
           99999,                        -- [ASAFieldLevel1Sort]
           '0000.000000',                -- [ASAFieldLevel2ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel2Name]	
           1,                            -- [ASAFieldLevel2Unary]	
           99999,                        -- [ASAFieldLevel2Sort]
           '0000.000000',                -- [ASAFieldLevel3ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel3Name]	
           1,                            -- [ASAFieldLevel3Unary]	
           99999,                        -- [ASAFieldLevel3Sort]
           '0000.000000',                -- [ASAFieldLevel4ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel4Name]	
           1,                            -- [ASAFieldLevel4Unary]	
           99999,                        -- [ASAFieldLevel4Sort]
           '0000.000000',                -- [ASAFieldLevel5ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel5Name]	
           1,                            -- [ASAFieldLevel5Unary]	
           99999,                        -- [ASAFieldLevel5Sort]
           '0000.000000',                -- [ASAFieldLevel6ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel6Name]	
           1,                            -- [ASAFieldLevel6Unary]	
           99999,                        -- [ASAFieldLevel6Sort]
           '0000.000000',                -- [ASAFieldLevel7ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel7Name]	
           1,                            -- [ASAFieldLevel7Unary]	
           99999,                        -- [ASAFieldLevel7Sort]
           '0000.000000',                -- [ASAFieldLevel8ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel8Name]	
           1,                            -- [ASAFieldLevel8Unary]	
           99999,                        -- [ASAFieldLevel8Sort]
           '0000.000000',                -- [ASAFieldLevel9ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel9Name]	
           1,                            -- [ASAFieldLevel9Unary]	
           99999,                        -- [ASAFieldLevel9Sort]
           '0000.000000',                -- [ASAFieldLevel10ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
           1,                            -- [ASAFieldLevel10Unary]	
           99999,                        -- [ASAFieldLevel10Sort]
           '0000.000000',                -- [ASAFieldLevel11ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
           1,                            -- [ASAFieldLevel11Unary]	
           99999,                        -- [ASAFieldLevel11Sort]
           '0000.000000',                -- [ASAFieldLevel12ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
           1,                            -- [ASAFieldLevel12Unary]	
           99999,                        -- [ASAFieldLevel12Sort]
           'UNK',
           '1900-01-01',
           '9999-12-31 23:59:59.999',
           GETDATE(),
           GETDATE(),
           NULL,
           'A',
           ?
    UNION
    SELECT -2,
           -2,
           'Unknown AccountSubaccountName',
           -2,
           'Unknown AccountName',
           -2,
           'Unknown SubaccountName',
           'Unknown ASATuitionType',
           -1,                           -- [ASAFieldDepth]
           '0000.000000',                -- [ASAFieldLevel1ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel1Name]	
           1,                            -- [ASAFieldLevel1Unary]	
           99999,                        -- [ASAFieldLevel1Sort]
           '0000.000000',                -- [ASAFieldLevel2ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel2Name]	
           1,                            -- [ASAFieldLevel2Unary]	
           99999,                        -- [ASAFieldLevel2Sort]
           '0000.000000',                -- [ASAFieldLevel3ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel3Name]	
           1,                            -- [ASAFieldLevel3Unary]	
           99999,                        -- [ASAFieldLevel3Sort]
           '0000.000000',                -- [ASAFieldLevel4ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel4Name]	
           1,                            -- [ASAFieldLevel4Unary]	
           99999,                        -- [ASAFieldLevel4Sort]
           '0000.000000',                -- [ASAFieldLevel5ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel5Name]	
           1,                            -- [ASAFieldLevel5Unary]	
           99999,                        -- [ASAFieldLevel5Sort]
           '0000.000000',                -- [ASAFieldLevel6ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel6Name]	
           1,                            -- [ASAFieldLevel6Unary]	
           99999,                        -- [ASAFieldLevel6Sort]
           '0000.000000',                -- [ASAFieldLevel7ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel7Name]	
           1,                            -- [ASAFieldLevel7Unary]	
           99999,                        -- [ASAFieldLevel7Sort]
           '0000.000000',                -- [ASAFieldLevel8ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel8Name]	
           1,                            -- [ASAFieldLevel8Unary]	
           99999,                        -- [ASAFieldLevel8Sort]
           '0000.000000',                -- [ASAFieldLevel9ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel9Name]	
           1,                            -- [ASAFieldLevel9Unary]	
           99999,                        -- [ASAFieldLevel9Sort]
           '0000.000000',                -- [ASAFieldLevel10ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
           1,                            -- [ASAFieldLevel10Unary]	
           99999,                        -- [ASAFieldLevel10Sort]
           '0000.000000',                -- [ASAFieldLevel11ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
           1,                            -- [ASAFieldLevel11Unary]	
           99999,                        -- [ASAFieldLevel11Sort]
           '0000.000000',                -- [ASAFieldLevel12ID]	
           'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
           1,                            -- [ASAFieldLevel12Unary]	
           99999,                        -- [ASAFieldLevel12Sort]
           'UNK',
           '1900-01-01',
           '9999-12-31 23:59:59.999',
           GETDATE(),
           GETDATE(),
           NULL,
           'A',
           ?;

    SET IDENTITY_INSERT dbo.DimAccountSubaccount OFF;
END;",StagingToEDW_DimMartAccountSubAccount
2666,Package\SQL - Load AccountSubaccountLanding,Microsoft.ExecuteSQLTask,SQL - Load AccountSubaccountLanding,,,,,"EXECUTE [spGL_Staging_AccountSubAccountLanding] 
NULL, ? OUTPUT, ? OUTPUT
GO
",StagingToEDW_DimMartAccountSubAccount
2667,Package,Microsoft.Package,DimMartCostCenter,,,,,,StagingToEDW_DimMartCostCenter
2668,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartCostCenter
2669,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartCostCenter
2670,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartCostCenter
2671,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimCostCenter,,StagingToEDW_DimMartCostCenter
2672,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - tfnGL_StagingGenerate_CostCenter(),,StagingToEDW_DimMartCostCenter
2673,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartCostCenter
2674,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD1 Update Count,,StagingToEDW_DimMartCostCenter
2675,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartCostCenter
2676,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartCostCenter
2677,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartCostCenter
2678,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD1 Update,,StagingToEDW_DimMartCostCenter
2679,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartCostCenter
2680,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartCostCenter
2681,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLE DB Destination,,StagingToEDW_DimMartCostCenter
2682,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB - SRC DimCostCenter,,StagingToEDW_DimMartCostCenter
2683,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartCostCenter
2684,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartCostCenter
2685,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimCostCenter_DM_Data,,StagingToEDW_DimMartCostCenter
2686,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartCostCenter
2687,Package\EPT - Call CompNonCompStatus Package,Microsoft.ExecutePackageTask,EPT - Call CompNonCompStatus Package,,,,,,StagingToEDW_DimMartCostCenter
2688,Package\Insert Seed Records,Microsoft.ExecuteSQLTask,Insert Seed Records,,,,,"DECLARE @AuditID int = ?

SET IDENTITY_INSERT dbo.DimCostCenter ON 

IF NOT EXISTS (SELECT 1 FROM dbo.DimCostCenter WHERE CostCenterNumber = -1)
	BEGIN
		INSERT INTO dbo.DimCostCenter
		(
			CostCenterKey,
			CostCenterNumber,
			CostCenterName,
			CompanyID,
			CostCenterTypeID,
			CostCenterTypeName,
			BusinessUnitCode,
			BusinessUnitName,
			OrganizationLevelCode,
			OrganizationLevelName,
			FunctionCode,
			FunctionName,
			LineOfBusinessCode,
			LineOfBusinessName,
			LineOfBusinessCategoryCode,
			LineOfBusinessCategoryName,
			LineOfBusinessSubcategoryCode,
			LineOfBusinessSubcategoryName,
			CCHierarchyLevel1Name,
			CCHierarchyLevel2Name,
			CCHierarchyLevel3Name,
			CCHierarchyLevel4Name,
			CCHierarchyLevel5Name,
			CCHierarchyLevel6Name,
			CCHierarchyLevel7Name,
			CCHierarchyLevel8Name,
			CCHierarchyLevel9Name,
			CCHierarchyLevel10Name,
			CCHierarchyLevel11Name,
			CCOpenDate,
			CCClosedDate,
			CCReopenDate,
			CCReopenDateType,
			CCClassification,
			CCStatus,
			CCConsolidation,
			CCFlexAttribute1,
			CCFlexAttribute2,
			CCFlexAttribute3,
			CCFlexAttribute4,
			CCFlexAttribute5,
			OrgID,
			ParentOrgID,
			DefaultLocationID,
			OrgNumber,
			OrgHierarchyLevel1Name,
			OrgHierarchyLevel2Name,
			OrgHierarchyLevel3Name,
			OrgHierarchyLevel4Name,
			OrgHierarchyLevel5Name,
			OrgHierarchyLevel6Name,
			OrgHierarchyLevel7Name,
			OrgHierarchyLevel8Name,
			OrgHierarchyLevel9Name,
			OrgHierarchyLevel10Name,
			OrgHierarchyLevel11Name,
			AllName,
			ExecutiveFunctionName,
			ExecutiveFunctionLeaderName,
			ExecutiveSubFunctionName,
			ExecutiveSubFunctionLeaderName,
			CorporateFunctionName,
			CorporateSubFunctionName,
			DivisionName,
			DivisionLeaderName,
			RegionNumber,
			RegionName,
			RegionLeaderName,
			MarketNumber,
			MarketName,
			MarketLeaderName,
			SubMarketNumber,
			SubMarketName,
			SubMarketLeaderName,
			DistrictNumber,
			DistrictName,
			InterimDistrictNumber,
			InterimDistrictName,
			DistrictLeaderName,
			ActingDistrictLeaderName,
			InterimDistrictLeaderName,
			GroupNumber,
			GroupName,
			GroupLeaderName,
			SubgroupNumber,
			SubGroupName,
			SubGroupLeaderName,
			CampusNumber,
			CampusName,
			CampusLeaderName,
			CenterLeaderName,
			ActingCenterLeaderName,
			CategoryName,
			TypeCode,
			TypeName,
			PartnerGroupCode,
			PartnerGroupName,
			CenterGroupCode,
			CenterGroupName,
			DivisionLegacyName,
			BrandCode,
			BrandName,
			OrgFlexAttribute1,
			OrgFlexAttribute2,
			OrgFlexAttribute3,
			OrgFlexAttribute4,
			OrgFlexAttribute5,
			CenterCMSID,
			CenterCSSID,
			SiteHorizonID,
			CenterEnrollmentSourceSystem,
			CenterCMSMigrationDate,
			CenterCMSMigrationStatus,
			CenterLicensedCapacity,
			CenterBackupCareFlag,
			CenterChildCareSelectFlag,
			CenterPublicAllowedFlag,
			CenterOpenTime,
			CenterCloseTime,
			CenterStudentMinimumAge,
			CenterStudentMaximumAge,
			CenterOpenSunFlag,
			CenterOpenMonFlag,
			CenterOpenTueFlag,
			CenterOpenWedFlag,
			CenterOpenThuFlag,
			CenterOpenFriFlag,
			CenterOpenSatFlag,
			CenterFoodProgramStartDate,
			CenterFoodProgramEndDate,
			CenterRegistrationType,
			SiteSchoolDistrict,
			SiteClassYear,
			CenterURL,
			CenterMenuURL,
			CenterHasBreakfastFlag,
			CenterHasMorningSlackFlag,
			CenterHasLunchFlag,
			CenterHasAfternoonSnackFlag,
			CenterSpeaksASLFlag,
			CenterSpeaksArabicFlag,
			CenterSpeaksFrenchFlag,
			CenterSpeaksGermanFlag,
			CenterSpeaksHindiFlag,
			CenterSpeaksMandarinFlag,
			CenterSpeaksPunjabiFlag,
			CenterSpeaksSpanishFlag,
			CenterSpeaksOtherLanguages,
			CenterAccreditationAgencyCode,
			CenterAccreditationStartDate,
			CenterAccreditationExpirationDate,
			CenterAccreditationNextActivity,
			CenterAccreditationNextActivityDueDate,
			CenterAccreditationPrimaryStatus,
			CenterAccreditationProgramID,
			CenterQRISRating,
			CenterQRISRatingStartDate,
			CenterQRISRatingExpirationDate,
			CenterLatitude,
			City,
			[State],
			Zipcode,
			CenterOperationalCapacity,
			CenterLongitude,
			CenterCurrentHumanSigmaScore,
			CenterPreviousHumanSigmaScore,
			EDWEffectiveFrom,
			EDWEffectiveTo,
			EDWCreatedDate,
			EDWModifiedDate,
			EDWDeletedDate,
			EDWRowStatus,
			ETLJobId,
			Address1,
			Address2,
			Address3,
			County,
			Country,
			Timezone,
			PhoneNumber,
			Fax
		)
		VALUES
		(
			-1,
			'-1',
			'Unknown CostCenterName',
			'-1',
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			-1,
			-1,
			-1,
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'-1',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			-1,
			'-1',
			-1,
			'UNK',
			'1900-01-01',
			NULL,
			-1,
			'Unknown',
			'Unknown',
			'Unknown',
			NULL,
			NULL,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'Unknown',
			'Unknown',
			-1,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'Unknown',
			'1900-01-01',
			'Unknown',
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			-1,
			'Unknown',
			NULL,
			'Unknown',
			-1,
			-1,
			'Unknown',
			'Unknown',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			NULL,
			'A',
			@AuditID,
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown',
			'Unknown'
		)
	END

IF NOT EXISTS (SELECT 1 FROM dbo.DimCostCenter WHERE CostCenterNumber = -2)
	BEGIN
		INSERT INTO dbo.DimCostCenter
		(
			CostCenterKey,
			CostCenterNumber,
			CostCenterName,
			CompanyID,
			CostCenterTypeID,
			CostCenterTypeName,
			BusinessUnitCode,
			BusinessUnitName,
			OrganizationLevelCode,
			OrganizationLevelName,
			FunctionCode,
			FunctionName,
			LineOfBusinessCode,
			LineOfBusinessName,
			LineOfBusinessCategoryCode,
			LineOfBusinessCategoryName,
			LineOfBusinessSubcategoryCode,
			LineOfBusinessSubcategoryName,
			CCHierarchyLevel1Name,
			CCHierarchyLevel2Name,
			CCHierarchyLevel3Name,
			CCHierarchyLevel4Name,
			CCHierarchyLevel5Name,
			CCHierarchyLevel6Name,
			CCHierarchyLevel7Name,
			CCHierarchyLevel8Name,
			CCHierarchyLevel9Name,
			CCHierarchyLevel10Name,
			CCHierarchyLevel11Name,
			CCOpenDate,
			CCClosedDate,
			CCReopenDate,
			CCReopenDateType,
			CCClassification,
			CCStatus,
			CCConsolidation,
			CCFlexAttribute1,
			CCFlexAttribute2,
			CCFlexAttribute3,
			CCFlexAttribute4,
			CCFlexAttribute5,
			OrgID,
			ParentOrgID,
			DefaultLocationID,
			OrgNumber,
			OrgHierarchyLevel1Name,
			OrgHierarchyLevel2Name,
			OrgHierarchyLevel3Name,
			OrgHierarchyLevel4Name,
			OrgHierarchyLevel5Name,
			OrgHierarchyLevel6Name,
			OrgHierarchyLevel7Name,
			OrgHierarchyLevel8Name,
			OrgHierarchyLevel9Name,
			OrgHierarchyLevel10Name,
			OrgHierarchyLevel11Name,
			AllName,
			ExecutiveFunctionName,
			ExecutiveFunctionLeaderName,
			ExecutiveSubFunctionName,
			ExecutiveSubFunctionLeaderName,
			CorporateFunctionName,
			CorporateSubFunctionName,
			DivisionName,
			DivisionLeaderName,
			RegionNumber,
			RegionName,
			RegionLeaderName,
			MarketNumber,
			MarketName,
			MarketLeaderName,
			SubMarketNumber,
			SubMarketName,
			SubMarketLeaderName,
			DistrictNumber,
			DistrictName,
			InterimDistrictNumber,
			InterimDistrictName,
			DistrictLeaderName,
			ActingDistrictLeaderName,
			InterimDistrictLeaderName,
			GroupNumber,
			GroupName,
			GroupLeaderName,
			SubgroupNumber,
			SubGroupName,
			SubGroupLeaderName,
			CampusNumber,
			CampusName,
			CampusLeaderName,
			CenterLeaderName,
			ActingCenterLeaderName,
			CategoryName,
			TypeCode,
			TypeName,
			PartnerGroupCode,
			PartnerGroupName,
			CenterGroupCode,
			CenterGroupName,
			DivisionLegacyName,
			BrandCode,
			BrandName,
			OrgFlexAttribute1,
			OrgFlexAttribute2,
			OrgFlexAttribute3,
			OrgFlexAttribute4,
			OrgFlexAttribute5,
			CenterCMSID,
			CenterCSSID,
			SiteHorizonID,
			CenterEnrollmentSourceSystem,
			CenterCMSMigrationDate,
			CenterCMSMigrationStatus,
			CenterLicensedCapacity,
			CenterBackupCareFlag,
			CenterChildCareSelectFlag,
			CenterPublicAllowedFlag,
			CenterOpenTime,
			CenterCloseTime,
			CenterStudentMinimumAge,
			CenterStudentMaximumAge,
			CenterOpenSunFlag,
			CenterOpenMonFlag,
			CenterOpenTueFlag,
			CenterOpenWedFlag,
			CenterOpenThuFlag,
			CenterOpenFriFlag,
			CenterOpenSatFlag,
			CenterFoodProgramStartDate,
			CenterFoodProgramEndDate,
			CenterRegistrationType,
			SiteSchoolDistrict,
			SiteClassYear,
			CenterURL,
			CenterMenuURL,
			CenterHasBreakfastFlag,
			CenterHasMorningSlackFlag,
			CenterHasLunchFlag,
			CenterHasAfternoonSnackFlag,
			CenterSpeaksASLFlag,
			CenterSpeaksArabicFlag,
			CenterSpeaksFrenchFlag,
			CenterSpeaksGermanFlag,
			CenterSpeaksHindiFlag,
			CenterSpeaksMandarinFlag,
			CenterSpeaksPunjabiFlag,
			CenterSpeaksSpanishFlag,
			CenterSpeaksOtherLanguages,
			CenterAccreditationAgencyCode,
			CenterAccreditationStartDate,
			CenterAccreditationExpirationDate,
			CenterAccreditationNextActivity,
			CenterAccreditationNextActivityDueDate,
			CenterAccreditationPrimaryStatus,
			CenterAccreditationProgramID,
			CenterQRISRating,
			CenterQRISRatingStartDate,
			CenterQRISRatingExpirationDate,
			CenterLatitude,
			City,
			[State],
			Zipcode,
			CenterOperationalCapacity,
			CenterLongitude,
			CenterCurrentHumanSigmaScore,
			CenterPreviousHumanSigmaScore,
			EDWEffectiveFrom,
			EDWEffectiveTo,
			EDWCreatedDate,
			EDWModifiedDate,
			EDWDeletedDate,
			EDWRowStatus,
			ETLJobId,
			Address1,
			Address2,
			Address3,
			County,
			Country,
			Timezone,
			PhoneNumber,
			Fax
		)
		VALUES
		(
			-2,
			'-2',
			'Not Applicable CostCenterName',
			'-2',
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			-2,
			-2,
			-2,
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'-2',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			-2,
			'-2',
			-2,
			'N/A',
			'1900-01-01',
			NULL,
			-2,
			'N/A',
			'N/A',
			'N/A',
			NULL,
			NULL,
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'N/A',
			'N/A',
			-2,
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'N/A',
			'1900-01-01',
			'N/A',
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			-2,
			'N/A',
			NULL,
			'N/A',
			-2,
			-2,
			'N/A',
			'N/A',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			'1900-01-01',
			NULL,
			'A',
			@AuditID,
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A',
			'N/A'
		)
	END

SET IDENTITY_INSERT dbo.DimCostCenter OFF
",StagingToEDW_DimMartCostCenter
2689,Package\Loaddimmartcostcenter,Microsoft.ExecuteSQLTask,Loaddimmartcostcenter,,,,,exec  [dbo].[spBING_EDW_Generate_DimCostCenter],StagingToEDW_DimMartCostCenter
2690,Package\SQL - Begin DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimCostCenter ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimMartCostCenter
2691,Package\SQL - End DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimCostCenter ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartCostCenter
2692,Package\SQL - Update the EffectiveFrom,Microsoft.ExecuteSQLTask,SQL - Update the EffectiveFrom,,,,,"UPDATE A
SET A.EDWEffectiveFrom = B.EDWEffectiveTo
FROM DW_MART..DimCostCenter A
    INNER JOIN
    (
        SELECT *
        FROM
        (
            SELECT *,
                   ROW_NUMBER() OVER (PARTITION BY B.CostCenterNumber ORDER BY B.EDWEffectiveTo DESC) AS RW
            FROM DW_MART..DimCostCenter B
            WHERE B.CostCenterNumber IN
                  (
                      SELECT CostCenterNumber
                      FROM DW_MART..DimCostCenter
                      WHERE EDWEffectiveFrom = '1900-01-01 00:00:00.000'
                      GROUP BY CostCenterNumber
                      HAVING COUNT(1) > 1
                  )
                  AND B.EDWRowStatus = 'H'
        ) A
        WHERE A.RW = 1
    ) B
        ON A.CostCenterNumber = B.CostCenterNumber
           AND A.EDWEffectiveFrom = '1900-01-01 00:00:00.000'
           AND A.EDWEffectiveTo = '9999-12-31 23:59:59.999';
",StagingToEDW_DimMartCostCenter
2693,Package\truncate staging,Microsoft.ExecuteSQLTask,truncate staging,,,,,truncate table dbo.DimMartCostcenterLanding,StagingToEDW_DimMartCostCenter
2694,Package,Microsoft.Package,DimMartPartner,,,,,,StagingToEDW_DimMartPartner
2695,Package\DFT - DimPartnertLanding,Microsoft.Pipeline,DFT - DimPartnertLanding,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartPartner
2696,Package\DFT - DimPartnertLanding,Microsoft.Pipeline,DFT - DimPartnertLanding,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimPartnerLanding,,StagingToEDW_DimMartPartner
2697,Package\DFT - DimPartnertLanding,Microsoft.Pipeline,DFT - DimPartnertLanding,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Partner,,StagingToEDW_DimMartPartner
2698,Package\DFT - DimPartnertLanding,Microsoft.Pipeline,DFT - DimPartnertLanding,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartPartner
2699,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartPartner
2700,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartPartner
2701,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimPartner_DM_Data,,StagingToEDW_DimMartPartner
2702,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartPartner
2703,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Delete Count,,StagingToEDW_DimMartPartner
2704,Package\SQL - End DimPartner ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimPartner ETL Audit,,,,,"UPDATE AuditLog
SET DeleteCount = ?
WHERE AuditID = ?",StagingToEDW_DimMartPartner
2705,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimPartner WHERE PartnerKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimPartner ON;

INSERT INTO [dbo].[DimPartner]
		([PartnerKey]
		,[PartnerID]
		,[PartnerName]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID])
	SELECT-1,
			-1,
			'Unknown PartnerName',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			0
	UNION
	SELECT-2,
			-2,
			'Not Applicable PartnerName',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			0
SET IDENTITY_INSERT dbo.DimPartner OFF;
END;",StagingToEDW_DimMartPartner
2706,Package\SQL - SpDimPartnerLoad,Microsoft.ExecuteSQLTask,SQL - SpDimPartnerLoad,,,,,"EXECUTE [dbo].[spDimPartnerLoad] null, null, ?, ? output;",StagingToEDW_DimMartPartner
2707,Package\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,Truncate table DimPartnerLanding,StagingToEDW_DimMartPartner
2708,Package,Microsoft.Package,DimMartProgram,,,,,,StagingToEDW_DimMartProgram
2709,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartProgram
2710,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartProgram
2711,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartProgram
2712,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimProgram,,StagingToEDW_DimMartProgram
2713,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Program,,StagingToEDW_DimMartProgram
2714,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartProgram
2715,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartProgram
2716,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartProgram
2717,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartProgram
2718,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartProgram
2719,Package\DFT - DimProgram,Microsoft.Pipeline,DFT - DimProgram,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartProgram
2720,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartProgram
2721,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartProgram
2722,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimProgram_DM_Data,,StagingToEDW_DimMartProgram
2723,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartProgram
2724,Package\SQL - Begin DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimProgram ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartProgram
2725,Package\SQL - End DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimProgram ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartProgram
2726,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimProgram WHERE ProgramKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
             SET IDENTITY_INSERT dbo.DimProgram ON;
             INSERT INTO [dbo].[DimProgram]
             ([ProgramKey],
              [ProgramID],
              [ProgramName],
              [SourceSystem],
              [EffectiveFrom],
              [EffectiveTo],
              [CreatedDate],
              [ModifiedDate],
              [DeletedDate],
              [RowStatus],
              [ETLJobID]
             )
                    SELECT-1,
                          -1,
                          'Unknown Program',
                          'UNK',
                          '1900-01-01 00:00:00.000',
                          '9999-12-31 23:59:59.999',
                          GETDATE(),
                          GETDATE(),
                          NULL,
                         'A',
                         ?
                    UNION
                    SELECT-2,
                          -2,
                          'Not Applicable Program',
	          'UNK',
                          '1900-01-01 00:00:00.000',
                          '9999-12-31 23:59:59.999',
                          GETDATE(),
                          GETDATE(),
                          NULL,
                         'A',
                         ?;
        
                         SET IDENTITY_INSERT dbo.DimProgram OFF;
						 END;

						",StagingToEDW_DimMartProgram
2727,Package,Microsoft.Package,DimMartSession,,,,,,StagingToEDW_DimMartSession
2728,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartSession
2729,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartSession
2730,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartSession
2731,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimSession,,StagingToEDW_DimMartSession
2732,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Session,,StagingToEDW_DimMartSession
2733,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartSession
2734,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartSession
2735,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartSession
2736,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartSession
2737,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartSession
2738,Package\DFT - DimSession,Microsoft.Pipeline,DFT - DimSession,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartSession
2739,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartSession
2740,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartSession
2741,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimSession_DM_Data,,StagingToEDW_DimMartSession
2742,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartSession
2743,Package\SQL - Begin DimSession ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimSession ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartSession
2744,Package\SQL - End DimSession ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimSession ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartSession
2745,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimSession WHERE SessionKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimSession ON;

INSERT INTO [dbo].[DimSession]
		([SessionKey]
		,[SessionID]
		,[SessionName]
		,[SourceSystem]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID])
	SELECT-1,
			-1,
			'Unknown SessionName',
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
	UNION
	SELECT-2,
			-2, 
			'Not Applicable SessionName',
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;

SET IDENTITY_INSERT dbo.DimSession OFF;
END;",StagingToEDW_DimMartSession
2746,Package,Microsoft.Package,DimMartSponsor,,,,,,StagingToEDW_DimMartSponsor
2747,Package\DFT - DimSponsor,Microsoft.Pipeline,DFT - DimSponsor,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartSponsor
2748,Package\DFT - DimSponsor,Microsoft.Pipeline,DFT - DimSponsor,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,Dst - DimSponsorLanding,,StagingToEDW_DimMartSponsor
2749,Package\DFT - DimSponsor,Microsoft.Pipeline,DFT - DimSponsor,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC- SourceCount,,StagingToEDW_DimMartSponsor
2750,Package\DFT - DimSponsor,Microsoft.Pipeline,DFT - DimSponsor,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - Sponsor,,StagingToEDW_DimMartSponsor
2751,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartSponsor
2752,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartSponsor
2753,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimSponsor_DM_Data,,StagingToEDW_DimMartSponsor
2754,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartSponsor
2755,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Delete Count,,StagingToEDW_DimMartSponsor
2756,Package\SQL - End DimSponsor ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimSponsor ETL Audit,,,,,"UPDATE AuditLog
SET DeleteCount = ?
WHERE AuditID = ?",StagingToEDW_DimMartSponsor
2757,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"
  IF EXISTS
( SELECT 1 FROM dbo.[DimSponsor] WHERE [SponsorKey] < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
 SET IDENTITY_INSERT dbo.DimSponsor ON;
             INSERT INTO [dbo].[DimSponsor]
             ([SponsorKey],
              [SponsorID],
			  [SponsorFirstName],
			  [SponsorLastName],
			  [SponsorFullName],
			  [SponsorStatus],
			  [SourceSystem],
              [CSSCenterNumber],
	          [CSSFamilyNumber],
		      [EffectiveFrom],
		      [EffectiveTo],
		      [CreatedDate],
		      [ModifiedDate],
		      [DeletedDate],
		      [RowStatus],
		      [ETLJobID]
              )
             SELECT-1,
             -1,
			'Unknown FirstName',
			'Unknown LastName',
			'Unknown FullName',
			'Unknown SponsorStatus',
			 'UNK',
            '-1',
            '-1',
		    '1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
            UNION
            SELECT-2,
            -2,
			'Unknown FirstName',
			'Unknown LastName',
			'Unknown FullName',
			'Unknown SponsorStatus',
			'UNK',
            '-2',
            '-2',
		    '1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;
            SET IDENTITY_INSERT dbo.DimSponsor OFF;
			END;

SELECT * FROM DW_Mart.dbo.DimSponsor
WHERE SponsorKey<0",StagingToEDW_DimMartSponsor
2758,Package\SQL - SpDimSponsorLoad,Microsoft.ExecuteSQLTask,SQL - SpDimSponsorLoad,,,,,"EXECUTE [dbo].[spDimSponsorLoad] null, null, ?, ? output;",StagingToEDW_DimMartSponsor
2759,Package\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,Truncate table DimSponsorLanding,StagingToEDW_DimMartSponsor
2760,Package,Microsoft.Package,DimMartStudent,,,,,,StagingToEDW_DimMartStudent
2761,Package\DFT - DimStudentLanding,Microsoft.Pipeline,DFT - DimStudentLanding,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartStudent
2762,Package\DFT - DimStudentLanding,Microsoft.Pipeline,DFT - DimStudentLanding,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimStudentLanding,,StagingToEDW_DimMartStudent
2763,Package\DFT - DimStudentLanding,Microsoft.Pipeline,DFT - DimStudentLanding,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Student,,StagingToEDW_DimMartStudent
2764,Package\DFT - DimStudentLanding,Microsoft.Pipeline,DFT - DimStudentLanding,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartStudent
2765,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartStudent
2766,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartStudent
2767,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimStudent_DM_Data,,StagingToEDW_DimMartStudent
2768,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartStudent
2769,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Delete Count,,StagingToEDW_DimMartStudent
2770,Package\SQL - End DimStudent ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimStudent ETL Audit,,,,,"UPDATE AuditLog
SET DeleteCount = ?
WHERE AuditID = ?",StagingToEDW_DimMartStudent
2771,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimStudent WHERE StudentKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimStudent ON;

INSERT INTO [dbo].[DimStudent]
		([StudentKey]
		,[StudentID]
		,[StudentFirstName]
		,[StudentLastName]
		,[StudentStatus]
		,[StudentFirstEnrollmentDate]
		,[FiscalWeekNumber]
		,[CSSCenterNumber]
		,[CSSFamilyNumber]
		,[CSSStudentNumber]
		,[SourceSystem]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID]
		,[StudentFullName]
		,[StudentBirthDate])
	SELECT-1,
			-1,
			'Unknown StudentFirstName',
			'Unknown StudentLastName',
			'Unknown StudentStatus',
			'1900-01-01',
			-1,
			-1,
			-1,
			-1,
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?,
			'Unknown Student Name',
			'Unknown Student Birth Date'
	UNION
	SELECT-2,
			-2,
			'Unknown StudentFirstName',
			'Unknown StudentLastName',
			'Unknown StudentStatus',
			'1900-01-01',
			-1,
			-1,
			-1,
			-1,
			'UNK',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?,
			'Unknown Student Name',
			'Unknown Student Birth Date';

SET IDENTITY_INSERT dbo.DimStudent OFF;
END;",StagingToEDW_DimMartStudent
2772,Package\SQL - SpDimStudentLoad,Microsoft.ExecuteSQLTask,SQL - SpDimStudentLoad,,,,,"EXECUTE [dbo].[spDimStudentLoad] null, null, ?, ? output;",StagingToEDW_DimMartStudent
2773,Package\SQL - Truncate Landing Table,Microsoft.ExecuteSQLTask,SQL - Truncate Landing Table,,,,,Truncate table DimStudentLanding,StagingToEDW_DimMartStudent
2774,Package,Microsoft.Package,DimMartTier,,,,,,StagingToEDW_DimMartTier
2775,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartTier
2776,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartTier
2777,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartTier
2778,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimTier,,StagingToEDW_DimMartTier
2779,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - Tier,,StagingToEDW_DimMartTier
2780,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartTier
2781,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartTier
2782,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_DimMartTier
2783,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartTier
2784,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartTier
2785,Package\DFT - DimTier,Microsoft.Pipeline,DFT - DimTier,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartTier
2786,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartTier
2787,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_DimMartTier
2788,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimTier_DM_Data,,StagingToEDW_DimMartTier
2789,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_DimMartTier
2790,Package\SQL - Begin DimTier ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimTier ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartTier
2791,Package\SQL - End DimTier ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimTier ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartTier
2792,Package\SQL - Insert CSS Data,Microsoft.ExecuteSQLTask,SQL - Insert CSS Data,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimTier WHERE SourceSystem='CSS' )
BEGIN 
 PRINT 'No Insert' 
END
ELSE 


INSERT INTO [dbo].[DimTier]
  ([TierID]
  ,[TierName]
  ,[CSSTierNumber]
  ,[SourceSystem]
  ,[EffectiveFrom]
  ,[EffectiveTo]
  ,[CreatedDate]
  ,[ModifiedDate]
  ,[DeletedDate]
  ,[RowStatus]
  ,[ETLJobID])
 SELECT
   -2,
   'T1CSS',
   1,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?
 UNION
 SELECT
   -2,
   'T2CSS',
   2,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?
   UNION
 SELECT
   -2,
   'T3CSS',
    3,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?
   UNION
 SELECT
   -2,
   'T4CSS',
    4,
   'CSS',
   '1900-01-01',
   '9999-12-31 23:59:59.999',
   GETDATE(),
   GETDATE(),
   NULL,
   'A',
   ?;


",StagingToEDW_DimMartTier
2793,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"IF EXISTS
( SELECT 1 FROM dbo.DimTier WHERE TierKey < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
		SET IDENTITY_INSERT dbo.DimTier ON;

INSERT INTO [dbo].[DimTier]
		([TierKey]
		,[TierID]
		,[TierName]                                
		,[SourceSystem]
                                ,[CSSTierNumber]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID])
	SELECT-1,
			-1,
			'Unknown TierName',
			'UNK',
                                                -1,
                                	'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
	UNION
	SELECT-2,
			-2, 
			'Not Applicable TierName',                                                 
                                                 'UNK',
                                                 -2,
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;

SET IDENTITY_INSERT dbo.DimTier OFF;
END;",StagingToEDW_DimMartTier
2794,Package,Microsoft.Package,DimMartTuitionAssistanceProvider,,,,,,StagingToEDW_DimMartTuitionAssistanceProvider
2795,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_DimMartTuitionAssistanceProvider
2796,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_DimMartTuitionAssistanceProvider
2797,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_DimMartTuitionAssistanceProvider
2798,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,Dst - DimTuitionAssistanceProvider,,StagingToEDW_DimMartTuitionAssistanceProvider
2799,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_DimMartTuitionAssistanceProvider
2800,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_DimMartTuitionAssistanceProvider
2801,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC- SourceCount,,StagingToEDW_DimMartTuitionAssistanceProvider
2802,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_DimMartTuitionAssistanceProvider
2803,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_DimMartTuitionAssistanceProvider
2804,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - TuitionAssistanceProvider,,StagingToEDW_DimMartTuitionAssistanceProvider
2805,Package\DFT - DimTuitionAssistanceProvider,Microsoft.Pipeline,DFT - DimTuitionAssistanceProvider,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_DimMartTuitionAssistanceProvider
2806,Package\DFT - Update DeletedDate,Microsoft.Pipeline,DFT - Update DeletedDate,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_DimMartTuitionAssistanceProvider
2807,Package\DFT - Update DeletedDate,Microsoft.Pipeline,DFT - Update DeletedDate,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - SourceData,,StagingToEDW_DimMartTuitionAssistanceProvider
2808,Package\DFT - Update DeletedDate,Microsoft.Pipeline,DFT - Update DeletedDate,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB CMD Update Deleted Date,,StagingToEDW_DimMartTuitionAssistanceProvider
2809,Package\DFT - Update DeletedDate,Microsoft.Pipeline,DFT - Update DeletedDate,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimTuitionAssistanceProvider,,StagingToEDW_DimMartTuitionAssistanceProvider
2810,Package\SQL - Begin DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimProgram ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimMartTuitionAssistanceProvider
2811,Package\SQL - End DimProgram ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimProgram ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMartTuitionAssistanceProvider
2812,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,," 
 IF EXISTS
( SELECT 1 FROM dbo.[DimTuitionAssistanceProvider] WHERE [TuitionAssistanceProviderKey] < 0 )
BEGIN 
	PRINT 'No Insert' 
END
ELSE 
BEGIN
 SET IDENTITY_INSERT dbo.DimTuitionAssistanceProvider ON;
             INSERT INTO [dbo].[DimTuitionAssistanceProvider]
             ([TuitionAssistanceProviderKey],
              [TuitionAssistanceProviderID],
              [TuitionAssistanceProviderName],
              [TuitionAssistanceProviderType],
			  [SourceSystem],
              [CSSCenterNumber]
             ,[CSSCustomerCode]
		,[EffectiveFrom]
		,[EffectiveTo]
		,[CreatedDate]
		,[ModifiedDate]
		,[DeletedDate]
		,[RowStatus]
		,[ETLJobID]

             )
                    SELECT-1,
                          -1,
                          'Unknown Tuition Assistance Provider',
                          'Unknown Tuition Assistance Provider Type',
						  'UNK',
                           '-1',
                           '-1',
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?
                         
                    UNION
                    SELECT-2,
                          -2,
                          'Not Applicable Tuition Assistance Provider',
                          'Not Applicable  Tuition Assistance Provider Type',
                         'UNK',
                        '-2',
                        '-2', 
			'1900-01-01',
			'9999-12-31 23:59:59.999',
			GETDATE(),
			GETDATE(),
			NULL,
			'A',
			?;
          
             SET IDENTITY_INSERT dbo.DimTuitionAssistanceProvider OFF;
			 END;",StagingToEDW_DimMartTuitionAssistanceProvider
2813,Package,Microsoft.Package,DimMeasure,,,,,,StagingToEDW_DimMeasure
2814,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.ConditionalSplit,Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records.",Conditional Split,,StagingToEDW_DimMeasure
2815,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Delete Count,,StagingToEDW_DimMeasure
2816,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingToEDW_DimMeasure
2817,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column 1,,StagingToEDW_DimMeasure
2818,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimMeasure Merge Insert,,StagingToEDW_DimMeasure
2819,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,StagingToEDW_DimMeasure
2820,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Merge Delete,,StagingToEDW_DimMeasure
2821,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.MergeJoin,Merge Join;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combine two sorted data flows into one using the FULL, LEFT, or INNER join. We recommend this transformation when data flows can be sorted at their sources.",Merge Join,,StagingToEDW_DimMeasure
2822,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Merge Update,,StagingToEDW_DimMeasure
2823,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimMeasure,,StagingToEDW_DimMeasure
2824,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.Sort,Sort;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Sorts input data in ascending or descending order when it cannot be sorted at its source. For example, sort sales data by 'customer id' before it is written to a flat file and delivered to another department. Note: We do not recommend this transformation for large data flows.",Sort - DimMeasureLanding,,StagingToEDW_DimMeasure
2825,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_DimMeasure
2826,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimMeasure,,StagingToEDW_DimMeasure
2827,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - DimMeasureLanding,,StagingToEDW_DimMeasure
2828,Package\DFT - Load DimMeasure,Microsoft.Pipeline,DFT - Load DimMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Update Count,,StagingToEDW_DimMeasure
2829,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.DataConvert,Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,Data Conversion,Data Conversion,,StagingToEDW_DimMeasure
2830,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimMeasureLanding,,StagingToEDW_DimMeasure
2831,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_DimMeasure
2832,Package\DFT - Load Measures File to Landing Table,Microsoft.Pipeline,DFT - Load Measures File to Landing Table,Microsoft.ExcelSource,Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,Excel Source,SRC - Measures File,,StagingToEDW_DimMeasure
2833,Package\DimMeasureLanding,Microsoft.ExecuteSQLTask,DimMeasureLanding,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimMeasure
2834,Package\SQL - End DimMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimMeasure Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMeasure
2835,Package\SQL - End DimMeasureLanding Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimMeasureLanding Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimMeasure
2836,Package\SQL - Get Insert count for Landing Table,Microsoft.ExecuteSQLTask,SQL - Get Insert count for Landing Table,,,,,SELECT COUNT(1) AS vInsertCount FROM DimMeasureLanding(NOLOCK),StagingToEDW_DimMeasure
2837,Package\SQL - Start the AuditLog for DimMeasure,Microsoft.ExecuteSQLTask,SQL - Start the AuditLog for DimMeasure,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimMeasure
2838,Package\Truncate DimMeasureLanding,Microsoft.ExecuteSQLTask,Truncate DimMeasureLanding,,,,,Truncate table DimMeasureLanding,StagingToEDW_DimMeasure
2839,Package,Microsoft.Package,DimOrganization,,,,,,StagingToEDW_DimOrganization
2840,Package\Excecute HR_Staging to EDW DimOrganization load,STOCK:SEQUENCE,Excecute HR_Staging to EDW DimOrganization load,,,,,,StagingToEDW_DimOrganization
2841,Package\Excecute HR_Staging to EDW DimOrganization load\Execute spHR_StagingToEDW_DimOrganization,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimOrganization,,,,,EXEC spHR_StagingToEDW_DimOrganization,StagingToEDW_DimOrganization
2842,Package,Microsoft.Package,DimPayBasis,,,,,,StagingToEDW_DimPayBasis
2843,Package\SEQ- StagingToEDW DimPayBasis Load,STOCK:SEQUENCE,SEQ- StagingToEDW DimPayBasis Load,,,,,,StagingToEDW_DimPayBasis
2844,Package\SEQ- StagingToEDW DimPayBasis Load\SQL- EXEC spHR_StagingToEDW_DimPayBasis,Microsoft.ExecuteSQLTask,SQL- EXEC spHR_StagingToEDW_DimPayBasis,,,,,Exec [dbo].[spHR_StagingToEDW_DimPayBasis],StagingToEDW_DimPayBasis
2845,Package,Microsoft.Package,DimPayGrade,,,,,,StagingToEDW_DimPayGrade
2846,Package\Execute HR_Staging to EDW DimPayGrade load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPayGrade load,,,,,,StagingToEDW_DimPayGrade
2847,Package\Execute HR_Staging to EDW DimPayGrade load\Execute spHR_StagingToEDW_DimPayGrade,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPayGrade,,,,,EXEC dbo.spHR_StagingToEDW_DimPayGrade,StagingToEDW_DimPayGrade
2848,Package,Microsoft.Package,DimPaymentType,,,,,,StagingToEDW_DimPaymentType
2849,Package\SEQ-spCMS_StagingToEDW_DimPaymentType,STOCK:SEQUENCE,SEQ-spCMS_StagingToEDW_DimPaymentType,,,,,,StagingToEDW_DimPaymentType
2850,Package\SEQ-spCMS_StagingToEDW_DimPaymentType\SQL-Execute spCMS_StagingToEDW_DimPaymentType,Microsoft.ExecuteSQLTask,SQL-Execute spCMS_StagingToEDW_DimPaymentType,,,,,Execute [dbo].[spCMS_StagingToEDW_DimPaymentType];,StagingToEDW_DimPaymentType
2851,Package,Microsoft.Package,DimPayRateChangeReason,,,,,,StagingToEDW_DimPayRateChangeReason
2852,Package\Execute HR_Staging to EDW DimPayRateChangeReason load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPayRateChangeReason load,,,,,,StagingToEDW_DimPayRateChangeReason
2853,Package\Execute HR_Staging to EDW DimPayRateChangeReason load\Execute spHR_StagingToEDW_DimPayRateChangeReason,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPayRateChangeReason,,,,,EXEC dbo.spHR_StagingToEDW_DimPayRateChangeReason,StagingToEDW_DimPayRateChangeReason
2854,Package,Microsoft.Package,DimPayrollType,,,,,,StagingToEDW_DimPayrollType
2855,Package\Execute MISC_Staging to EDW DimPayrollType load,STOCK:SEQUENCE,Execute MISC_Staging to EDW DimPayrollType load,,,,,,StagingToEDW_DimPayrollType
2856,Package\Execute MISC_Staging to EDW DimPayrollType load\Execute spMISC_StagingToEDW_DimPayrollType,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_DimPayrollType,,,,,EXEC dbo.spMISC_StagingToEDW_DimPayrollType,StagingToEDW_DimPayrollType
2857,Package,Microsoft.Package,DimPeopleGroup,,,,,,StagingToEDW_DimPeopleGroup
2858,Package\Excecute HR_Staging to EDW DimPeopleGroup load,STOCK:SEQUENCE,Excecute HR_Staging to EDW DimPeopleGroup load,,,,,,StagingToEDW_DimPeopleGroup
2859,Package\Excecute HR_Staging to EDW DimPeopleGroup load\Execute spHR_StagingToEDW_DimPeopleGroup,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPeopleGroup,,,,,EXEC spHR_StagingToEDW_DimPeopleGroup,StagingToEDW_DimPeopleGroup
2860,Package,Microsoft.Package,DimPerformanceRating,,,,,,StagingToEDW_DimPerformanceRating
2861,Package\Execute HR_Staging to EDW DimPerformanceRating load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPerformanceRating load,,,,,,StagingToEDW_DimPerformanceRating
2862,Package\Execute HR_Staging to EDW DimPerformanceRating load\Execute spHR_StagingToEDW_DimPerformanceRating,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPerformanceRating,,,,,EXEC dbo.spHR_StagingToEDW_DimPerformanceRating;,StagingToEDW_DimPerformanceRating
2863,Package,Microsoft.Package,DimPerson,,,,,,StagingToEDW_DimPerson
2864,Package\Execute HR_Staging to EDW DimPerson load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPerson load,,,,,,StagingToEDW_DimPerson
2865,Package\Execute HR_Staging to EDW DimPerson load\Execute spHR_StagingToEDW_DimPerson,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPerson,,,,,EXEC dbo.spHR_StagingToEDW_DimPerson,StagingToEDW_DimPerson
2866,Package,Microsoft.Package,DimPosition,,,,,,StagingToEDW_DimPosition
2867,Package\Execute HR_Staging to EDW DimPosition load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimPosition load,,,,,,StagingToEDW_DimPosition
2868,Package\Execute HR_Staging to EDW DimPosition load\Execute spHR_StagingToEDW_DimPosition,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimPosition,,,,,EXEC dbo.spHR_StagingToEDW_DimPosition,StagingToEDW_DimPosition
2869,Package,Microsoft.Package,DimProgram,,,,,,StagingToEDW_DimProgram
2870,Package\Excecute CMS_staging to EDW DimProgram,STOCK:SEQUENCE,Excecute CMS_staging to EDW DimProgram,,,,,,StagingToEDW_DimProgram
2871,Package\Excecute CMS_staging to EDW DimProgram\Execute spCMS_StagingToEDW_DimProgram,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimProgram,,,,,EXEC dbo.spCMS_StagingToEDW_DimProgram,StagingToEDW_DimProgram
2872,Package,Microsoft.Package,DimQualificationType,,,,,,StagingToEDW_DimQualificationType
2873,Package\Execute HR_Staging to EDW DimQualificationType load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimQualificationType load,,,,,,StagingToEDW_DimQualificationType
2874,Package\Execute HR_Staging to EDW DimQualificationType load\Execute spHR_StagingToEDW_DimQualificationType Item,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_DimQualificationType Item,,,,,EXEC [dbo].[spHR_StagingToEDW_DimQualificationType],StagingToEDW_DimQualificationType
2875,Package,Microsoft.Package,DimReportProfile,,,,,,StagingToEDW_DimReportProfile
2876,Package\Execute MISC_Staging to EDW DimReportProfile load,STOCK:SEQUENCE,Execute MISC_Staging to EDW DimReportProfile load,,,,,,StagingToEDW_DimReportProfile
2877,Package\Execute MISC_Staging to EDW DimReportProfile load\Execute spMISC_StagingToEDW_DimReportProfile,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_DimReportProfile,,,,,EXEC dbo.spMISC_StagingToEDW_DimReportProfile,StagingToEDW_DimReportProfile
2878,Package,Microsoft.Package,DimRetentionBaseWeek,,,,,,StagingToEDW_DimRetentionBaseWeek
2879,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",Derived Column,,StagingToEDW_DimRetentionBaseWeek
2880,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - DimRetentionBaseWeek,,StagingToEDW_DimRetentionBaseWeek
2881,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC- InsertCount,,StagingToEDW_DimRetentionBaseWeek
2882,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC- SourceCount,,StagingToEDW_DimRetentionBaseWeek
2883,Package\DFT - Load DimRetentionBaseWeek,Microsoft.Pipeline,DFT - Load DimRetentionBaseWeek,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC- RetentionBaseWeek,,StagingToEDW_DimRetentionBaseWeek
2884,Package\SQL - End DimRetentionBaseWeek Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimRetentionBaseWeek Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimRetentionBaseWeek
2885,Package\SQL - Start the AuditLog for DimRetentionBaseWeek,Microsoft.ExecuteSQLTask,SQL - Start the AuditLog for DimRetentionBaseWeek,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_DimRetentionBaseWeek
2886,Package\Truncate DimRetentionBaseWeek,Microsoft.ExecuteSQLTask,Truncate DimRetentionBaseWeek,,,,,Truncate table DimRetentionBaseWeek,StagingToEDW_DimRetentionBaseWeek
2887,Package,Microsoft.Package,DimScheduleType,,,,,,StagingToEDW_DimScheduleType
2888,Package\SEQ-spCMS_StagingToEDW_DimScheduleType,STOCK:SEQUENCE,SEQ-spCMS_StagingToEDW_DimScheduleType,,,,,,StagingToEDW_DimScheduleType
2889,Package\SEQ-spCMS_StagingToEDW_DimScheduleType\SQL-  EXEC spCMS_StagingToEDW_DimScheduleType,Microsoft.ExecuteSQLTask,SQL-  EXEC spCMS_StagingToEDW_DimScheduleType,,,,, EXEC [dbo].[spCMS_StagingToEDW_DimScheduleType],StagingToEDW_DimScheduleType
2890,Package,Microsoft.Package,DimScheduleWeek,,,,,,StagingToEDW_DimScheduleWeek
2891,Package\SQL - End DimScheduleWeek Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimScheduleWeek Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimScheduleWeek
2892,Package\SQL - Get Deleted Count,Microsoft.ExecuteSQLTask,SQL - Get Deleted Count,,,,," SELECT COUNT(1) AS DeleteCount 
From dbo.DimScheduleWeek",StagingToEDW_DimScheduleWeek
2893,Package\SQL - Insert data into DimScheduleWeek,Microsoft.ExecuteSQLTask,SQL - Insert data into DimScheduleWeek,,,,,"WITH Numbers(N) -- CTE building the 7 weekday numbers
                  AS (
                  SELECT N
                  FROM(VALUES(1), (2), (3), (4), (5), (6), (7)) Numbers(N)),
                  Recur(N,
                        CalendarID) -- CTE building a combinations of Days per Week as a CalendarID
                  AS (
                  SELECT N,
                         CAST(N AS VARCHAR(1000))
                  FROM Numbers
                  UNION ALL
                  SELECT n.N,
                         CAST(r.CalendarID+','+CAST(n.N AS VARCHAR(10)) AS VARCHAR(1000))
                  FROM Recur r
                       INNER JOIN Numbers n ON n.N > r.N),
                  ScheduleWeekFlags -- CTE building a dataset of 7 flag columns for each days of the week, linking to the CalendarID
                  AS (
                  SELECT CalendarID,
                         CASE
                             WHEN CalendarID LIKE '%1%'
                             THEN '1'
                             ELSE '0'
                         END S,
                         CASE
                             WHEN CalendarID LIKE '%2%'
                             THEN '1'
                             ELSE '0'
                         END M,
                         CASE
                             WHEN CalendarID LIKE '%3%'
                             THEN '1'
                             ELSE '0'
                         END T,
                         CASE
                             WHEN CalendarID LIKE '%4%'
                             THEN '1'
                             ELSE '0'
                         END W,
                         CASE
                             WHEN CalendarID LIKE '%5%'
                             THEN '1'
                             ELSE '0'
                         END TH,
                         CASE
                             WHEN CalendarID LIKE '%6%'
                             THEN '1'
                             ELSE '0'
                         END F,
                         CASE
                             WHEN CalendarID LIKE '%7%'
                             THEN '1'
                             ELSE '0'
                         END SA
                  FROM Recur)
                  INSERT INTO dbo.DimScheduleWeek
                  ([ScheduleWeekName],
                  [RowStatus],
                   [ETLJobID]
                 )
                         SELECT CAST(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(r.CalendarID, '1', 'Su'), '2', 'M'), '3', 'Tu'), '4', 'W'), '5', 'Th'), '6', 'F'), '7', 'Sa') AS VARCHAR(50)) AS ScheduleWeekName,
                                'A' AS RowStatus,
                                ?
                         FROM Recur r
                              JOIN ScheduleWeekFlags s ON r.CalendarID = s.CalendarID
                         ORDER BY LEN(r.CalendarID),
                                  r.CalendarID;
             SELECT @@ROWCOUNT + 2 AS SourceCount;
    
                ",StagingToEDW_DimScheduleWeek
2894,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"DBCC CHECKIDENT('[DimScheduleWeek]', RESEED, 1);
SET IDENTITY_INSERT dbo.DimScheduleWeek ON;
INSERT INTO [dbo].[DimScheduleWeek]
([ScheduleWeekKey],
 [ScheduleWeekName],
 [RowStatus],
 [ETLJobID]
)
       SELECT-1,
             'Unknown Schedule Week',
              'A',
             ?
       UNION
       SELECT-2,
             'Not Applicable Schedule Week',
             'A',
             ?;
SET IDENTITY_INSERT dbo.DimScheduleWeek OFF;",StagingToEDW_DimScheduleWeek
2895,Package\SQL - Start DimScheduleWeek Auditlog,Microsoft.ExecuteSQLTask,SQL - Start DimScheduleWeek Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",StagingToEDW_DimScheduleWeek
2896,Package\SQL - Truncate DimScheduleWeek,Microsoft.ExecuteSQLTask,SQL - Truncate DimScheduleWeek,,,,, TRUNCATE TABLE dbo.DimScheduleWeek,StagingToEDW_DimScheduleWeek
2897,Package,Microsoft.Package,DimSession,,,,,,StagingToEDW_DimSession
2898,Package\Excecute CMS_staging to EDW DimSession,STOCK:SEQUENCE,Excecute CMS_staging to EDW DimSession,,,,,,StagingToEDW_DimSession
2899,Package\Excecute CMS_staging to EDW DimSession\Execute spCMS_StagingToEDW_DimSession,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimSession,,,,,EXEC dbo.spCMS_StagingToEDW_DimSession,StagingToEDW_DimSession
2900,Package,Microsoft.Package,DimSpecialInfo,,,,,,StagingToEDW_DimSpecialInfo
2901,Package\SEQ- StagingToEDW DimSpecialInfo Load,STOCK:SEQUENCE,SEQ- StagingToEDW DimSpecialInfo Load,,,,,,StagingToEDW_DimSpecialInfo
2902,Package\SEQ- StagingToEDW DimSpecialInfo Load\SQL- EXEC spHR_StagingToEDW_DimSpecialInfo,Microsoft.ExecuteSQLTask,SQL- EXEC spHR_StagingToEDW_DimSpecialInfo,,,,,Exec [dbo].[spHR_StagingToEDW_DimSpecialInfo],StagingToEDW_DimSpecialInfo
2903,Package,Microsoft.Package,DimSponsor,,,,,,StagingToEDW_DimSponsor
2904,Package\Executes spCMS_StagingToEDW_DimSponsor,STOCK:SEQUENCE,Executes spCMS_StagingToEDW_DimSponsor,,,,,,StagingToEDW_DimSponsor
2905,Package\Executes spCMS_StagingToEDW_DimSponsor\SQL_spCMS_StagingToEDW_DimSponsor,Microsoft.ExecuteSQLTask,SQL_spCMS_StagingToEDW_DimSponsor,,,,,Execute [dbo].[spCMS_StagingToEDW_DimSponsor],StagingToEDW_DimSponsor
2906,Package,Microsoft.Package,DimStudent,,,,,,StagingToEDW_DimStudent
2907,Package\Change History,STOCK:SEQUENCE,Change History,,,,,,StagingToEDW_DimStudent
2908,Package\SQL - Execute Staging To EDW DimStudent load,STOCK:SEQUENCE,SQL - Execute Staging To EDW DimStudent load,,,,,,StagingToEDW_DimStudent
2909,Package\SQL - Execute Staging To EDW DimStudent load\Execute spCMS_StagingToEDW_DimStudent,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_DimStudent,,,,,EXEC dbo.spCMS_StagingToEDW_DimStudent,StagingToEDW_DimStudent
2910,Package,Microsoft.Package,DimTier,,,,,,StagingToEDW_DimTier
2911,Package\SEQ- StagingToEDW DimTier Load,STOCK:SEQUENCE,SEQ- StagingToEDW DimTier Load,,,,,,StagingToEDW_DimTier
2912,Package\SEQ- StagingToEDW DimTier Load\SQL- EXEC spCMS_StagingToEDW_DimTier,Microsoft.ExecuteSQLTask,SQL- EXEC spCMS_StagingToEDW_DimTier,,,,,Exec [dbo].[spCMS_StagingToEDW_DimTier];,StagingToEDW_DimTier
2913,Package,Microsoft.Package,DimTimeCalculation,,,,,,StagingToEDW_DimTimeCalculation
2914,Package\EST - Load DimTimeCalculation,Microsoft.ExecuteSQLTask,EST - Load DimTimeCalculation,,,,,"DECLARE @DelCount INT, @InsCount INT, @AudID INT

SET @AudID = ?
SET @DelCount = (SELECT COUNT(1) FROM dbo.DimTimeCalculation)

TRUNCATE TABLE dbo.DimTimeCalculation

SET IDENTITY_INSERT dbo.DimTimeCalculation ON;


;WITH DimTimeCalc
AS (
	    SELECT -2 AS TCKey,	'Not Applicable Time Calculation' AS CalcName
		UNION ALL
		SELECT -1 AS TCKey,	'Unknown Time Calculation' AS CalcName
		UNION ALL
		SELECT 1 AS TCKey, 'Selection' AS CalcName
		UNION ALL
		SELECT 2 AS TCKey, 'PTD' AS CalcName
		UNION ALL
		SELECT 3 AS TCKey, 'QTD' AS CalcName
		UNION ALL
		SELECT 5 AS TCKey, 'YTD' AS CalcName
)
--SELECT * FROM DimTimeCalc+

INSERT INTO [dbo].[DimTimeCalculation]
(	  [TimeCalculationKey]
	 ,[TimeCalculationName]
     ,[EDWEffectiveFrom]
     ,[EDWEffectiveTo]
     ,[EDWRowStatus]
     ,[ETLJobID]			)
SELECT TCKey AS TimeCalculationKey,
       CalcName AS TimeCalculationName,
       CAST('1900-01-01 00:00:00.000' AS DATE) AS EffectiveFrom,
	   CAST('9999-12-31 23:59:59.999' AS DATE) AS EffectiveTo,
	   'A' AS RowStatus,
       @AudID As ETLJobID
FROM DimTimeCalc
ORDER BY TCKey;


--Get Insert Count
SET @InsCount = (SELECT COUNT(1) FROM dbo.DimTimeCalculation)


SET IDENTITY_INSERT dbo.DimTimeCalculation OFF;

SELECT @InsCount AS InsCount, @DelCount AS DelCount;",StagingToEDW_DimTimeCalculation
2915,Package\SQL - End Auditlog,Microsoft.ExecuteSQLTask,SQL - End Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_DimTimeCalculation
2916,Package\SQL - Start Auditlog,Microsoft.ExecuteSQLTask,SQL - Start Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_DimTimeCalculation
2917,Package,Microsoft.Package,DimTuitionAssistanceProvider,,,,,,StagingToEDW_DimTuitionAssistanceProvider
2918,Package\Execute spCMS_StagingToEDW_DimTuitionAssistanceProvider,STOCK:SEQUENCE,Execute spCMS_StagingToEDW_DimTuitionAssistanceProvider,,,,,,StagingToEDW_DimTuitionAssistanceProvider
2919,Package\Execute spCMS_StagingToEDW_DimTuitionAssistanceProvider\SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,,,,,EXEC dbo.spCMS_StagingToEDW_DimTuitionAssistanceProvider;,StagingToEDW_DimTuitionAssistanceProvider
2920,Package,Microsoft.Package,DimWebCampaign,,,,,,StagingToEDW_DimWebCampaign
2921,Package\Execute SalesForce_Staging To EDW DimWebCampaign load,STOCK:SEQUENCE,Execute SalesForce_Staging To EDW DimWebCampaign load,,,,,,StagingToEDW_DimWebCampaign
2922,Package\Execute SalesForce_Staging To EDW DimWebCampaign load\SQL - spSalesForce_StagingToEDW_DimWebCampaign,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_DimWebCampaign,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimWebCampaign;,StagingToEDW_DimWebCampaign
2923,Package,Microsoft.Package,FactAdjustment,,,,,,StagingToEDW_FactAdjustment
2924,Package\Execute Staging to EDW FactAdjustment load,STOCK:SEQUENCE,Execute Staging to EDW FactAdjustment load,,,,,,StagingToEDW_FactAdjustment
2925,Package\Execute Staging to EDW FactAdjustment load\Execute spCMS_StagingToEDW_FactAdjustment,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_FactAdjustment,,,,,EXEC dbo.spCMS_StagingToEDW_FactAdjustment,StagingToEDW_FactAdjustment
2926,Package,Microsoft.Package,FactARBalanceSnapshot,,,,,,StagingToEDW_FactARBalanceSnapshot
2927,Package\Back-up Transaction Log after CMS Load,STOCK:SEQUENCE,Back-up Transaction Log after CMS Load,,,,,,StagingToEDW_FactARBalanceSnapshot
2928,Package\Back-up Transaction Log after CMS Load\Execute spBackupTranLog,Microsoft.ExecuteSQLTask,Execute spBackupTranLog,,,,,EXEC spBackupTranLog 'BING_EDW',StagingToEDW_FactARBalanceSnapshot
2929,Package\Execute CMS_Staging To EDW FactARBalance load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactARBalance load,,,,,,StagingToEDW_FactARBalanceSnapshot
2930,Package\Execute CMS_Staging To EDW FactARBalance load\Execute spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,StagingToEDW_FactARBalanceSnapshot
2931,Package\Execute CSS_Staging To EDW FactARBalance load,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactARBalance load,,,,,,StagingToEDW_FactARBalanceSnapshot
2932,Package\Execute CSS_Staging To EDW FactARBalance load\Execute spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,,,,,Exec [dbo].[spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot],StagingToEDW_FactARBalanceSnapshot
2933,Package,Microsoft.Package,FactBilling,,,,,,StagingToEDW_FactBilling
2934,Package\Execute Staging to EDW FactBilling load,STOCK:SEQUENCE,Execute Staging to EDW FactBilling load,,,,,,StagingToEDW_FactBilling
2935,Package\Execute Staging to EDW FactBilling load\Execute spCMS_BatchLoad_StagingToEDW_FactBilling,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactBilling,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactBilling,StagingToEDW_FactBilling
2936,Package,Microsoft.Package,FactCenterStatSnapshot,,,,,,StagingToEDW_FactCenterStatSnapshot
2937,Package\Execute GL_Staging to EDW FactCenterStatSanpshot load,STOCK:SEQUENCE,Execute GL_Staging to EDW FactCenterStatSanpshot load,,,,,,StagingToEDW_FactCenterStatSnapshot
2938,Package\Execute GL_Staging to EDW FactCenterStatSanpshot load\Execute spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,Microsoft.ExecuteSQLTask,Execute spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,,,,,EXEC spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,StagingToEDW_FactCenterStatSnapshot
2939,Package,Microsoft.Package,FactEmployeeAssessment,,,,,,StagingToEDW_FactEmployeeAssessment
2940,Package\Excecute HR_staging to EDW FactEmployeeAssessment,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeeAssessment,,,,,,StagingToEDW_FactEmployeeAssessment
2941,Package\Excecute HR_staging to EDW FactEmployeeAssessment\Execute spHR_StagingToEDW_FactEmployeeAssessment,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeeAssessment,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssessment,StagingToEDW_FactEmployeeAssessment
2942,Package,Microsoft.Package,FactEmployeeAssignment,,,,,,StagingToEDW_FactEmployeeAssignment
2943,Package\Excecute HR_staging to EDW FactEmployeeAssignment,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeeAssignment,,,,,,StagingToEDW_FactEmployeeAssignment
2944,Package\Excecute HR_staging to EDW FactEmployeeAssignment\Execute spHR_StagingToEDW_FactEmployeeAssignment,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeeAssignment,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssignment,StagingToEDW_FactEmployeeAssignment
2945,Package,Microsoft.Package,FactEmployeeCompliance,,,,,,StagingToEDW_FactEmployeeCompliance
2946,Package\Excecute HR_staging to EDW FactEmployeeCompliance,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeeCompliance,,,,,,StagingToEDW_FactEmployeeCompliance
2947,Package\Excecute HR_staging to EDW FactEmployeeCompliance\Execute spHR_StagingToEDW_FactEmployeeCompliance,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeeCompliance,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeCompliance,StagingToEDW_FactEmployeeCompliance
2948,Package,Microsoft.Package,FactEmployeeLeave,,,,,,StagingToEDW_FactEmployeeLeave
2949,Package\Excecute HR_staging to EDW FactEmployeeLeave,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeeLeave,,,,,,StagingToEDW_FactEmployeeLeave
2950,Package\Excecute HR_staging to EDW FactEmployeeLeave\Execute spHR_StagingToEDW_FactEmployeeLeave,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeeLeave,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeLeave,StagingToEDW_FactEmployeeLeave
2951,Package,Microsoft.Package,FactEmployeePayRate,,,,,,StagingToEDW_FactEmployeePayRate
2952,Package\Excecute HR_staging to EDW FactEmployeePayRate,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeePayRate,,,,,,StagingToEDW_FactEmployeePayRate
2953,Package\Excecute HR_staging to EDW FactEmployeePayRate\Execute spHR_StagingToEDW_FactEmployeePayRate,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeePayRate,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeePayRate,StagingToEDW_FactEmployeePayRate
2954,Package,Microsoft.Package,FactEmployeePerformance,,,,,,StagingToEDW_FactEmployeePerformance
2955,Package\Excecute HR_staging to EDW FactEmployeePerformance,STOCK:SEQUENCE,Excecute HR_staging to EDW FactEmployeePerformance,,,,,,StagingToEDW_FactEmployeePerformance
2956,Package\Excecute HR_staging to EDW FactEmployeePerformance\Execute spHR_StagingToEDW_FactEmployeePerformance,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactEmployeePerformance,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeePerformance,StagingToEDW_FactEmployeePerformance
2957,Package,Microsoft.Package,FactEmployeeQualification,,,,,,StagingToEDW_FactEmployeeQualification
2958,Package\Execute Staging to EDW FactEmployeeQualification load,STOCK:SEQUENCE,Execute Staging to EDW FactEmployeeQualification load,,,,,,StagingToEDW_FactEmployeeQualification
2959,Package\Execute Staging to EDW FactEmployeeQualification load\Execute spHR_BatchLoad_StagingToEDW_FactEmployeeQualification,Microsoft.ExecuteSQLTask,Execute spHR_BatchLoad_StagingToEDW_FactEmployeeQualification,,,,,EXEC [dbo].[spHR_StagingToEDW_FactEmployeeQualification],StagingToEDW_FactEmployeeQualification
2960,Package,Microsoft.Package,FactFTESnapshot,,,,,,StagingToEDW_FactFTESnapshot
2961,Package\Execute CMS_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactFTESnapshot load,,,,,,StagingToEDW_FactFTESnapshot
2962,Package\Execute CMS_Staging To EDW FactFTESnapshot load\Execute spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,StagingToEDW_FactFTESnapshot
2963,Package,Microsoft.Package,FactFTESnapshotAcquired,,,,,,StagingToEDW_FactFTESnapshotAcquired
2964,Package\Execute spMISC_StagingToEDW_FactFTESnapshot,STOCK:SEQUENCE,Execute spMISC_StagingToEDW_FactFTESnapshot,,,,,,StagingToEDW_FactFTESnapshotAcquired
2965,Package\Execute spMISC_StagingToEDW_FactFTESnapshot\Execute spMISC_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo]. spMISC_StagingToEDW_FactFTESnapshot,StagingToEDW_FactFTESnapshotAcquired
2966,Package,Microsoft.Package,FactFTESnapshotCSS,,,,,,StagingToEDW_FactFTESnapshotCSS
2967,Package\Execute CSS_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute CSS_Staging To EDW FactFTESnapshot load,,,,,,StagingToEDW_FactFTESnapshotCSS
2968,Package\Execute CSS_Staging To EDW FactFTESnapshot load\Execute spCSS_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCSS_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo].[spCSS_BatchLoad_StagingToEDW_FactFTESnapshot],StagingToEDW_FactFTESnapshotCSS
2969,Package,Microsoft.Package,FactFTESnapshot,,,,,,StagingToEDW_FactFTESnapshotPRO
2970,Package\Execute Cambridge_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute Cambridge_Staging To EDW FactFTESnapshot load,,,,,,StagingToEDW_FactFTESnapshotPRO
2971,Package\Execute Cambridge_Staging To EDW FactFTESnapshot load\Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo].[spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot],StagingToEDW_FactFTESnapshotPRO
2972,Package,Microsoft.Package,FactGLBalance,,,,,,StagingToEDW_FactGLBalance
2973,Package\Execute GL_Staging to EDW FactGLBalance load,STOCK:SEQUENCE,Execute GL_Staging to EDW FactGLBalance load,,,,,,StagingToEDW_FactGLBalance
2974,Package\Execute GL_Staging to EDW FactGLBalance load\Execute spGL_BatchLoad_StagingToEDW_FactGLBalance,Microsoft.ExecuteSQLTask,Execute spGL_BatchLoad_StagingToEDW_FactGLBalance,,,,,EXEC spGL_BatchLoad_StagingToEDW_FactGLBalance,StagingToEDW_FactGLBalance
2975,Package,Microsoft.Package,FactGLBalancePlanAllocation,,,,,,StagingToEDW_FactGLBalancePlanAllocation
2976,Package\Execute MISC_Staging to EDW FactGLBalancePlanAllocation load,STOCK:SEQUENCE,Execute MISC_Staging to EDW FactGLBalancePlanAllocation load,,,,,,StagingToEDW_FactGLBalancePlanAllocation
2977,Package\Execute MISC_Staging to EDW FactGLBalancePlanAllocation load\Execute spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,,,,,EXEC dbo.spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,StagingToEDW_FactGLBalancePlanAllocation
2978,Package,Microsoft.Package,FactLaborHourAcquired,,,,,,StagingToEDW_FactLaborHourAcquired
2979,Package\Execute spMISC_StagingToEDW_FactLaborHourACQ,STOCK:SEQUENCE,Execute spMISC_StagingToEDW_FactLaborHourACQ,,,,,,StagingToEDW_FactLaborHourAcquired
2980,Package\Execute spMISC_StagingToEDW_FactLaborHourACQ\Execute spMISC_StagingToEDW_FactLaborHourACQ,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_FactLaborHourACQ,,,,,"Exec [dbo].spMISC_StagingToEDW_FactLaborHourACQ
NULL,
?,
NULL",StagingToEDW_FactLaborHourAcquired
2981,Package,Microsoft.Package,FactLaborHourActual,,,,,,StagingToEDW_FactLaborHourActual
2982,Package\Execute MISC_Staging To EDW FactLaborHourActual load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactLaborHourActual load,,,,,,StagingToEDW_FactLaborHourActual
2983,Package\Execute MISC_Staging To EDW FactLaborHourActual load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourActual,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourActual,,,,,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborHourActual,StagingToEDW_FactLaborHourActual
2984,Package,Microsoft.Package,FactLaborHourTarget,,,,,,StagingToEDW_FactLaborHourTarget
2985,Package\Execute MISC_Staging To EDW FactLaborHourTarget load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactLaborHourTarget load,,,,,,StagingToEDW_FactLaborHourTarget
2986,Package\Execute MISC_Staging To EDW FactLaborHourTarget load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTarget,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTarget,,,,,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborHourTarget,StagingToEDW_FactLaborHourTarget
2987,Package,Microsoft.Package,FactLaborHourTargetLegacy,,,,,,StagingToEDW_FactLaborHourTargetLegacy
2988,Package\Execute MISC_Staging To EDW FactLaborHourTarget load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactLaborHourTarget load,,,,,,StagingToEDW_FactLaborHourTargetLegacy
2989,Package\Execute MISC_Staging To EDW FactLaborHourTarget load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTargetLegacy,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactLaborHourTargetLegacy,,,,,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborHourTargetLegacy,StagingToEDW_FactLaborHourTargetLegacy
2990,Package,Microsoft.Package,FactLaborHourTargetPRO,,,,,,StagingToEDW_FactLaborHourTargetPRO
2991,Package\Execute Cambridge_Staging To EDW FactLaborHourTargetPRO load,STOCK:SEQUENCE,Execute Cambridge_Staging To EDW FactLaborHourTargetPRO load,,,,,,StagingToEDW_FactLaborHourTargetPRO
2992,Package\Execute Cambridge_Staging To EDW FactLaborHourTargetPRO load\Execute spCambridge_BatchLoad_StagingToEDW_FactLaborHourTarget,Microsoft.ExecuteSQLTask,Execute spCambridge_BatchLoad_StagingToEDW_FactLaborHourTarget,,,,,"EXEC 
spCambridge_BatchLoad_StagingToEDW_FactLaborHourTarget",StagingToEDW_FactLaborHourTargetPRO
2993,Package,Microsoft.Package,FactLaborSalary,,,,,,StagingToEDW_FactLaborSalary
2994,Package\Execute MISC_Staging To EDW FactLaborSalary load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactLaborSalary load,,,,,,StagingToEDW_FactLaborSalary
2995,Package\Execute MISC_Staging To EDW FactLaborSalary load\Execute spMISC_BatchLoad_StagingToEDW_FactLaborSalary,Microsoft.ExecuteSQLTask,Execute spMISC_BatchLoad_StagingToEDW_FactLaborSalary,,,,,EXEC spMISC_BatchLoad_StagingToEDW_FactLaborSalary,StagingToEDW_FactLaborSalary
2996,Package,Microsoft.Package,FactLeadEvent,,,,,,StagingToEDW_FactLeadEvent
2997,Package\Excecute SalesForce_staging to EDW FactLeadEvent,STOCK:SEQUENCE,Excecute SalesForce_staging to EDW FactLeadEvent,,,,,,StagingToEDW_FactLeadEvent
2998,Package\Excecute SalesForce_staging to EDW FactLeadEvent\Execute spSalesForce_StagingToEDW_FactLeadEvent,Microsoft.ExecuteSQLTask,Execute spSalesForce_StagingToEDW_FactLeadEvent,,,,,EXEC dbo.spSalesForce_StagingToEDW_FactLeadEvent,StagingToEDW_FactLeadEvent
2999,Package,Microsoft.Package,FactLeadPipeline,,,,,,StagingToEDW_FactLeadPipeline
3000,Package\Execute StagingToEDW FactLeadPipeline load,STOCK:SEQUENCE,Execute StagingToEDW FactLeadPipeline load,,,,,,StagingToEDW_FactLeadPipeline
3001,Package\Execute StagingToEDW FactLeadPipeline load\SQL - spSalesForce_StagingToEDW_FactLeadPipeline,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_FactLeadPipeline,,,,,EXEC dbo.spSalesForce_StagingToEDW_FactLeadPipeline;,StagingToEDW_FactLeadPipeline
3002,Package,Microsoft.Package,FactLifecycleStatusSnapshot,,,,,,StagingToEDW_FactLifecycleStatusSnapshot
3003,Package\Execute CMS_Staging To EDW FactLifecycleStatusSnapshot load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactLifecycleStatusSnapshot load,,,,,,StagingToEDW_FactLifecycleStatusSnapshot
3004,Package\Execute CMS_Staging To EDW FactLifecycleStatusSnapshot load\Execute spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,StagingToEDW_FactLifecycleStatusSnapshot
3005,Package,Microsoft.Package,FactNetRevenue,,,,,,StagingToEDW_FactNetRevenue
3006,Package\Execute CMS_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute CMS_Staging to EDW FactNetRevenue load,,,,,,StagingToEDW_FactNetRevenue
3007,Package\Execute CMS_Staging to EDW FactNetRevenue load\Execute spCMS_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactNetRevenue,StagingToEDW_FactNetRevenue
3008,Package,Microsoft.Package,FactNetRevenueAcquired,,,,,,StagingToEDW_FactNetRevenueAcquired
3009,Package\Execute HOR_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute HOR_Staging to EDW FactNetRevenue load,,,,,,StagingToEDW_FactNetRevenueAcquired
3010,Package\Execute HOR_Staging to EDW FactNetRevenue load\Execute spMISC_StagingToEDW_FactNetRevenueACQ,Microsoft.ExecuteSQLTask,Execute spMISC_StagingToEDW_FactNetRevenueACQ,,,,,"EXEC spMISC_StagingToEDW_FactNetRevenueACQ
   NULL
  ,?
  ,NULL",StagingToEDW_FactNetRevenueAcquired
3011,Package,Microsoft.Package,FactNetRevenueHOR,,,,,,StagingToEDW_FactNetRevenueHOR
3012,Package\Execute HOR_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute HOR_Staging to EDW FactNetRevenue load,,,,,,StagingToEDW_FactNetRevenueHOR
3013,Package\Execute HOR_Staging to EDW FactNetRevenue load\Execute spHOR_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,Execute spHOR_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC spHOR_BatchLoad_StagingToEDW_FactNetRevenue,StagingToEDW_FactNetRevenueHOR
3014,Package,Microsoft.Package,FactNetRevenuePRO,,,,,,StagingToEDW_FactNetRevenuePRO
3015,Package\Execute PRO_Staging to EDW FactNetRevenue load,STOCK:SEQUENCE,Execute PRO_Staging to EDW FactNetRevenue load,,,,,,StagingToEDW_FactNetRevenuePRO
3016,Package\Execute PRO_Staging to EDW FactNetRevenue load\Execute spPRO_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,Execute spPRO_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC spPRO_BatchLoad_StagingToEDW_FactNetRevenue,StagingToEDW_FactNetRevenuePRO
3017,Package,Microsoft.Package,FactPartnerVerifiedSponsor,,,,,,StagingToEDW_FactPartnerVerifiedSponsor
3018,Package\DFT - Load FactPartnerVerifiedSponsor,Microsoft.Pipeline,DFT - Load FactPartnerVerifiedSponsor,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - ETLJobID,,StagingToEDW_FactPartnerVerifiedSponsor
3019,Package\DFT - Load FactPartnerVerifiedSponsor,Microsoft.Pipeline,DFT - Load FactPartnerVerifiedSponsor,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactPartnerVerifiedSponsor,,StagingToEDW_FactPartnerVerifiedSponsor
3020,Package\DFT - Load FactPartnerVerifiedSponsor,Microsoft.Pipeline,DFT - Load FactPartnerVerifiedSponsor,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SourceCount,,StagingToEDW_FactPartnerVerifiedSponsor
3021,Package\DFT - Load FactPartnerVerifiedSponsor,Microsoft.Pipeline,DFT - Load FactPartnerVerifiedSponsor,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - FactPartnerVerifiedSponsor Landing,,StagingToEDW_FactPartnerVerifiedSponsor
3022,Package\DFT - Load Partner Verified Landing,Microsoft.Pipeline,DFT - Load Partner Verified Landing,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactPartnerVerifiedSponsor Landing,,StagingToEDW_FactPartnerVerifiedSponsor
3023,Package\DFT - Load Partner Verified Landing,Microsoft.Pipeline,DFT - Load Partner Verified Landing,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - CMS SponSponsor,,StagingToEDW_FactPartnerVerifiedSponsor
3024,Package\SQL - End FactPartnerVerifiedSponsor Package Audit Log,Microsoft.ExecuteSQLTask,SQL - End FactPartnerVerifiedSponsor Package Audit Log,,,,,"Execute spEndAuditLog ?,?,?,?,?",StagingToEDW_FactPartnerVerifiedSponsor
3025,Package\SQL - Get LastProcessedDate,Microsoft.ExecuteSQLTask,SQL - Get LastProcessedDate,,,,,"IF EXISTS
(SELECT 1
FROM ETLBatchControl(NOLOCK)
WHERE EventName = ?)

BEGIN
 (SELECT COALESCE(LastProcessedDate,'19000101') AS  LastProcessedDate 
 FROM ETLBatchControl(NOLOCK)
 WHERE EventName = ?)

END

ELSE 

BEGIN
 INSERT INTO ETLBatchControl(EventName, LastProcessedDate, Status) VALUES
  (?, NULL, NULL);

SELECT '1900-01-01' AS  LastProcessedDate;
END",StagingToEDW_FactPartnerVerifiedSponsor
3026,Package\SQL - InsertCount,Microsoft.ExecuteSQLTask,SQL - InsertCount,,,,,SELECT COUNT(1) AS InsertCount FROM dbo.FactPartnerVerifiedSponsor WHERE  CreatedDate>?,StagingToEDW_FactPartnerVerifiedSponsor
3027,Package\SQL - Start FactPartnerVerifiedSponsor Audit Log,Microsoft.ExecuteSQLTask,SQL - Start FactPartnerVerifiedSponsor Audit Log,,,,,"Execute spBeginAuditLog ? OUTPUT, ?,?;",StagingToEDW_FactPartnerVerifiedSponsor
3028,Package\SQL - Update FactPartnerVerifiedSponsor,Microsoft.ExecuteSQLTask,SQL - Update FactPartnerVerifiedSponsor,,,,,"-------------------------------------------------------------------------------------------------------
UPDATE FCT
SET FCT.PartnerAssignmentEndDate = GETDATE()
  , FCT.ModifiedDate = GETDATE()
  , FCT.Effectiveto = CONVERT(Date, GETDATE())
  , FCT.RowStatus='H'
  ,FCT.ETLJobID=?
FROM DW_Mart.dbo.FactPartnerVerifiedSponsor                    FCT
    JOIN DW_Mart.dbo.DimSponsor                                Spon
        ON FCT.SponsorKey = Spon.SponsorKey
    LEFT JOIN DW_Mart.dbo.DimPartner                           Prtnr
        ON FCT.PartnerKey = Prtnr.PartnerKey
     JOIN DW_Landing.dbo.FactPartnerVerifiedSponsorLanding Ldng
        ON Ldng.SponsorID = Spon.SponsorID
WHERE (COALESCE(Ldng.PartnerID, '-1') <> COALESCE(Prtnr.PartnerID, '-1') OR COALESCE(Ldng.PartnerAssignmentStartDate,'1900-01-01')<>COALESCE(FCT.PartnerAssignmentStartDate,'1900-01-01'))
      AND FCT.PartnerAssignmentEndDate IS NULL  AND FCT.RowStatus='A'
-------------------------------------------------------------------------------------------------------
UPDATE FCT
SET FCT.PartnerVerificationEndDate = GETDATE()
  , FCT.ModifiedDate = GETDATE()
  , FCT.EffectiveTo = CONVERT(Date, GETDATE())
  , FCT.RowStatus='H'
  ,FCT.ETLJobID=?
FROM DW_Mart.dbo.FactPartnerVerifiedSponsor                    FCT
    JOIN DW_Mart.dbo.DimSponsor                                Spon
        ON FCT.SponsorKey = Spon.SponsorKey
    LEFT JOIN DW_Mart.dbo.DimPartner                           Prtnr
        ON FCT.PartnerKey = Prtnr.PartnerKey
     JOIN DW_Landing.dbo.FactPartnerVerifiedSponsorLanding Ldng
        ON Ldng.SponsorID = Spon.SponsorID
WHERE (
          COALESCE(Ldng.PartnerID, '-1') <> COALESCE(Prtnr.PartnerID, '-1')
          OR (Ldng.isPartnerVerified <> FCT.isPartnerVerified)
		  OR(COALESCE(Convert(Date,ldng.PartnerVerificationStartDate),'1900-01-01')<>COALESCE(Convert(Date,Fct.PartnerVerificationStartDate),'1900-01-01')) 
      )
      AND FCT.PartnerVerificationEndDate IS NULL  AND FCT.RowStatus='A'
-------------------------------------------------------------------------------------------------------",StagingToEDW_FactPartnerVerifiedSponsor
3029,Package\SQL - Update LastProcessedDate,Microsoft.ExecuteSQLTask,SQL - Update LastProcessedDate,,,,,"UPDATE ETLBatchControl
SET LastProcessedDate = ?,
Status = 'Success'
WHERE EventName = ?",StagingToEDW_FactPartnerVerifiedSponsor
3030,Package\SQL - UpdateCount,Microsoft.ExecuteSQLTask,SQL - UpdateCount,,,,,SELECT COUNT(1) AS UpdateCount FROM dbo.FactPartnerVerifiedSponsor WHERE CreatedDate<>ModifiedDate AND ModifiedDate>?,StagingToEDW_FactPartnerVerifiedSponsor
3031,Package\Truncate PartnerVerified Landing,Microsoft.ExecuteSQLTask,Truncate PartnerVerified Landing,,,,,TRUNCATE TABLE dbo.FactPartnerVerifiedSponsorLanding,StagingToEDW_FactPartnerVerifiedSponsor
3032,Package,Microsoft.Package,FactPayment,,,,,,StagingToEDW_FactPayment
3033,Package\Execute Staging to EDW FactPayment load,STOCK:SEQUENCE,Execute Staging to EDW FactPayment load,,,,,,StagingToEDW_FactPayment
3034,Package\Execute Staging to EDW FactPayment load\Execute spCMS_BatchLoad_StagingToEDW_FactPayment,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactPayment,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactPayment,StagingToEDW_FactPayment
3035,Package,Microsoft.Package,FactPaymentApplied,,,,,,StagingToEDW_FactPaymentApplied
3036,Package\Execute Staging to EDW FactPaymentApplied load,STOCK:SEQUENCE,Execute Staging to EDW FactPaymentApplied load,,,,,,StagingToEDW_FactPaymentApplied
3037,Package\Execute Staging to EDW FactPaymentApplied load\Execute spCMS_StagingToEDW_FactPaymentApplied,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_FactPaymentApplied,,,,,EXEC dbo.spCMS_StagingToEDW_FactPaymentApplied,StagingToEDW_FactPaymentApplied
3038,Package,Microsoft.Package,FactPersonSpecialInfo,,,,,,StagingToEDW_FactPersonSpecialInfo
3039,Package\Excecute HR_staging to EDW FactPersonSpecialInfo,STOCK:SEQUENCE,Excecute HR_staging to EDW FactPersonSpecialInfo,,,,,,StagingToEDW_FactPersonSpecialInfo
3040,Package\Excecute HR_staging to EDW FactPersonSpecialInfo\Execute spHR_StagingToEDW_FactPersonSpecialInfo,Microsoft.ExecuteSQLTask,Execute spHR_StagingToEDW_FactPersonSpecialInfo,,,,,EXEC dbo.spHR_StagingToEDW_FactPersonSpecialInfo,StagingToEDW_FactPersonSpecialInfo
3041,Package,Microsoft.Package,FactProgramDetail,,,,,,StagingToEDW_FactProgramDetail
3042,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactProgramDetail,,StagingToEDW_FactProgramDetail
3043,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - FactProgramDetailUpdate,,StagingToEDW_FactProgramDetail
3044,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,StagingToEDW_FactProgramDetail
3045,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,StagingToEDW_FactProgramDetail
3046,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_FactProgramDetail
3047,Package\DFT - locSiteProgram,Microsoft.Pipeline,DFT - locSiteProgram,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,SRC - locSiteProgram,,StagingToEDW_FactProgramDetail
3048,Package\SQL - Create Update Table,Microsoft.ExecuteSQLTask,SQL - Create Update Table,,,,,"IF OBJECT_ID('FactProgramDetailUpdate', 'U') IS NOT NULL 
	DROP TABLE FactProgramDetailUpdate; 

CREATE TABLE [FactProgramDetailUpdate](
	[ProgramDetailID] [int] NOT NULL,
	[CenterKey] [int] NOT NULL,
	[ProgramKey] [int] NOT NULL,
	[StudentTeacherRatio] [int] NOT NULL,
	[StudentMinimumAgeMonths] [int] NOT NULL,
	[StudentMaximumAgeMonths] [int] NOT NULL,
	[EDWCreatedDate] [datetime2](7) NOT NULL,
	[EDWCreatedBy] [varchar](50) NOT NULL,
	[EDWModifiedDate] [datetime2](7) NOT NULL,
	[EDWModifiedBy] [varchar](50) NOT NULL,
	[Deleted] [datetime2](7) NULL
)
",StagingToEDW_FactProgramDetail
3049,Package\SQL - Drop Update Table,Microsoft.ExecuteSQLTask,SQL - Drop Update Table,,,,,DROP TABLE [FactProgramDetailUpdate],StagingToEDW_FactProgramDetail
3050,Package\SQL - Update EDWETLBatchControl,Microsoft.ExecuteSQLTask,SQL - Update EDWETLBatchControl,,,,,"UPDATE EDWETLBatchControl
SET LastProcessedDate = ?, Status = 'Success'
WHERE EventName = 'FactProgramDetail'",StagingToEDW_FactProgramDetail
3051,Package\SQL - Update FactProgramDetail from Update table,Microsoft.ExecuteSQLTask,SQL - Update FactProgramDetail from Update table,,,,,"DELETE f 
FROM FactProgramDetail f
INNER JOIN FactProgramDetailUpdate u
ON f.ProgramDetailID = u.ProgramDetailID 
AND u.Deleted IS NULL

INSERT INTO FactProgramDetail
SELECT ProgramDetailID, CenterKey, ProgramKey, StudentTeacherRatio, StudentMinimumAgeMonths, StudentMaximumAgeMonths,
EDWCreatedDate, EDWCreatedBy, EDWModifiedDate, EDWModifiedBy, Deleted           
FROM FactProgramDetailUpdate WHERE Deleted IS NULL

SELECT @@ROWCOUNT AS UpdateCount",StagingToEDW_FactProgramDetail
3052,Package\SQL - Update in FactProgramDetail for Deleted Records,Microsoft.ExecuteSQLTask,SQL - Update in FactProgramDetail for Deleted Records,,,,,"UPDATE dest 
SET	dest.Deleted =  upd.Deleted
   ,dest.EDWModifiedDate = upd.Deleted
FROM FactProgramDetail dest
INNER JOIN FactProgramDetailUpdate upd
ON dest.ProgramDetailID = upd.ProgramDetailID
AND upd.Deleted IS NOT NULL

SELECT @@ROWCOUNT AS DeleteCount",StagingToEDW_FactProgramDetail
3053,Package,Microsoft.Package,FactSessionEnrollment,,,,,,StagingToEDW_FactSessionEnrollment
3054,Package\Execute Staging to EDW FactSessionEnrollment load,STOCK:SEQUENCE,Execute Staging to EDW FactSessionEnrollment load,,,,,,StagingToEDW_FactSessionEnrollment
3055,Package\Execute Staging to EDW FactSessionEnrollment load\Execute spCMS_StagingToEDW_FactSessionEnrollment,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_FactSessionEnrollment,,,,,EXEC dbo.spCMS_StagingToEDW_FactSessionEnrollment,StagingToEDW_FactSessionEnrollment
3056,Package,Microsoft.Package,FactTierAssignment,,,,,,StagingToEDW_FactTierAssignment
3057,Package\Execute Staging to EDW,STOCK:SEQUENCE,Execute Staging to EDW,,,,,,StagingToEDW_FactTierAssignment
3058,Package\Execute Staging to EDW\Execute spCMS_StagingToEDW_FactTierAssignment,Microsoft.ExecuteSQLTask,Execute spCMS_StagingToEDW_FactTierAssignment,,,,,EXEC dbo.spCMS_StagingToEDW_FactTierAssignment,StagingToEDW_FactTierAssignment
3059,Package,Microsoft.Package,MartToEDW_CostCenter_OneTimeLoadforCompNonComp,,,,,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3060,Package\Create View,STOCK:SEQUENCE,Create View,,,,,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3061,Package\Create View\SQL - Create View vFactFTESnapshot,Microsoft.ExecuteSQLTask,SQL - Create View vFactFTESnapshot,,,,,"CREATE VIEW [dbo].[vFactFTESnapshot]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.FTE) AS FTE
     FROM dbo.FactFTESnapshot AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3062,Package\Create View\SQL - Create View vFactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - Create View vFactGLBalancePlanAllocation,,,,,"CREATE VIEW  [dbo].[vFactGLBalancePlanAllocation]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
   dm.GLMetricTypeCode,
   dm.GLMetricTypeKey,
            f.AccountSubaccountKey,
   COUNT_BIG(*) AS [Count],
   SUM(f.GLBalancePlanAllocationAmount) AS GLBalancePlanAllocationAmount
 FROM [dbo].[FactGLBalancePlanAllocation] AS f
      JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
   JOIN dbo.DimGLMetricType AS dm ON dm.GLMetricTypeKey=f.GLMetricTypeKey
   JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
     dm.GLMetricTypeCode,
     dm.GLMetricTypeKey,
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3063,Package\Create View\SQL - Create View vFactLaborHour,Microsoft.ExecuteSQLTask,SQL - Create View vFactLaborHour,,,,,"CREATE VIEW [dbo].[vFactLaborHour]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber,
   f.DataScenarioKey,
            ds.DataScenarioName, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.[Hours]) AS [Hours],
            f.IsTSEF
     FROM [dbo].[FactLaborHour] AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimDataScenario AS ds ON ds.DataScenarioKey = f.DataScenarioKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
     f.DataScenarioKey,
              ds.DataScenarioName, 
              f.AccountSubaccountKey,
 f.IsTSEF;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3064,Package\Create View\SQL - Create View vFactLaborSalary,Microsoft.ExecuteSQLTask,SQL - Create View vFactLaborSalary,,,,,"CREATE VIEW  [dbo].[vFactLaborSalary]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey,
   COUNT_BIG(*) AS [Count],
   SUM(f.NetAmount) AS [NetAmount]
 FROM [dbo].[FactLaborSalary] AS f
      JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
   JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3065,Package\Create View\SQL - Create View vFactNetRevenue,Microsoft.ExecuteSQLTask,SQL - Create View vFactNetRevenue,,,,,"CREATE VIEW [dbo].[vFactNetRevenue] 
WITH SCHEMABINDING
 AS 
SELECT d.FiscalWeekNumber
      ,d.FiscalWeekEndDate 
      ,mcc.CostCenterKey 
      ,mcc.CostCenterNumber 
      ,f.AccountSubaccountKey 
      ,COUNT_BIG(*) AS [Count] 
   ,SUM(f.NetRevenueAmount) AS NetRevenueAmount
 FROM dbo.FactNetRevenue AS f
    JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3066,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Active,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3067,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - Historical,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3068,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW and ETL Column - New,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3069,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,OLEDB Dest - DimCostCenter,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3070,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - tfnGL_StagingGenerate_CostCenter(),,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3071,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Insert Count,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3072,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD1 Update Count,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3073,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - SCD2 Update Count,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3074,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",RC - Source Count,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3075,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3076,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD1 Update,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3077,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",SQLCmd - SCD2 Update EffectiveTo,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3078,Package\DFT - DimCostCenter,Microsoft.Pipeline,DFT - DimCostCenter,Microsoft.UnionAll,Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,"Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation.",Union All,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3079,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,Insert New,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3080,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB - SRC DimCostCenter,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3081,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.SCD,Slowly Changing Dimension;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3,"Updates a SQL Server Analysis Services data warehouse dimension. Update dimension records that are already present and  insert dimension records that aren't. For example, update the DimProduct table of the AdventureWorksDW OLAP database with data from the Products table in the AdventureWorks OLTP database.",Slowly Changing Dimension,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3082,Package\DFT - DimMartCostCenter,Microsoft.Pipeline,DFT - DimMartCostCenter,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Update Existing,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3083,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.DerivedColumn,Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column.",DC - EDW ETL Columns,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3084,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",LKP - Source Data,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3085,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB_DimCostCenter_DM_Data,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3086,Package\DFT - Mark Deleted Rows,Microsoft.Pipeline,DFT - Mark Deleted Rows,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",OLEDB_Upd_Deleted_Rows,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3087,Package\SEQ - Drop Indexed Views,STOCK:SEQUENCE,SEQ - Drop Indexed Views,,,,,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3088,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactFTESnapshot,Microsoft.ExecuteSQLTask,SQL - Drop View vFactFTESnapshot,,,,,"IF OBJECT_ID('dbo.vFactFTESnapshot') IS NOT NULL
	DROP VIEW [dbo].[vFactFTESnapshot];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3089,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - Drop View vFactGLBalancePlanAllocation,,,,,"IF OBJECT_ID('[dbo].[vFactGLBalancePlanAllocation]')IS NOT NULL
 DROP VIEW [dbo].[vFactGLBalancePlanAllocation];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3090,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactLaborHour,Microsoft.ExecuteSQLTask,SQL - Drop View vFactLaborHour,,,,,"IF OBJECT_ID('[dbo].[vFactLaborHour]')IS NOT NULL
 DROP VIEW [dbo].[vFactLaborHour];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3091,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactLaborSalary,Microsoft.ExecuteSQLTask,SQL - Drop View vFactLaborSalary,,,,,"IF OBJECT_ID('[dbo].[vFactLaborSalary]')IS NOT NULL
 DROP VIEW [dbo].[vFactLaborSalary];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3092,Package\SEQ - Drop Indexed Views\SQL - Drop View vFactNetRevenue,Microsoft.ExecuteSQLTask,SQL - Drop View vFactNetRevenue,,,,,"IF OBJECT_ID('[dbo].[vFactNetRevenue]')IS NOT NULL
 DROP VIEW [dbo].[vFactNetRevenue];",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3093,Package\Sequence Container,STOCK:SEQUENCE,Sequence Container,,,,,,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3094,Package\Sequence Container\SQL - Create FTE Index,Microsoft.ExecuteSQLTask,SQL - Create FTE Index,,,,,"CREATE UNIQUE CLUSTERED INDEX CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON [dbo].[vFactFTESnapshot](FiscalWeekNumber, CostCenterKey, AccountSubaccountKey);",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3095,Package\Sequence Container\SQL - Create Labor Hour Index,Microsoft.ExecuteSQLTask,SQL - Create Labor Hour Index,,,,,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey]
ON [dbo].[vFactLaborHour]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC, [DataScenarioKey] ASC);
",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3096,Package\Sequence Container\SQL - Create Labor SalaryIndex,Microsoft.ExecuteSQLTask,SQL - Create Labor SalaryIndex,,,,,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[vFactLaborSalary]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3097,Package\Sequence Container\SQL - Create Plan Allocation  Index,Microsoft.ExecuteSQLTask,SQL - Create Plan Allocation  Index,,,,,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey]
    ON [dbo].[vFactGLBalancePlanAllocation]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC, [GLMetricTypeKey] ASC);",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3098,Package\Sequence Container\SQL - Create Revenue Index,Microsoft.ExecuteSQLTask,SQL - Create Revenue Index,,,,,"CREATE UNIQUE CLUSTERED INDEX [CIS_vFactNetRevenue_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[vFactNetRevenue]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3099,Package\SQL - Begin DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - Begin DimCostCenter ETL Audit,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3100,Package\SQL - End DimCostCenter ETL Audit,Microsoft.ExecuteSQLTask,SQL - End DimCostCenter ETL Audit,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3101,Package\SQL - Onetime History for CompStatus,Microsoft.ExecuteSQLTask,SQL - Onetime History for CompStatus,,,,,"/*--------------Comp---------------*/

INSERT INTO [dbo].DimCostCenter
SELECT 
      [CostCenterNumber]
      ,[CostCenterName]
      ,[CompanyID]
      ,[CostCenterTypeID]
      ,[CostCenterTypeName]
      ,[BusinessUnitCode]
      ,[BusinessUnitName]
      ,[OrganizationLevelCode]
      ,[OrganizationLevelName]
      ,[FunctionCode]
      ,[FunctionName]
      ,[LineOfBusinessCode]
      ,[LineOfBusinessName]
      ,[LineOfBusinessCategoryCode]
      ,[LineOfBusinessCategoryName]
      ,[LineOfBusinessSubcategoryCode]
      ,[LineOfBusinessSubcategoryName]
      ,[CCHierarchyLevel1Name]
      ,[CCHierarchyLevel2Name]
      ,[CCHierarchyLevel3Name]
      ,[CCHierarchyLevel4Name]
      ,[CCHierarchyLevel5Name]
      ,[CCHierarchyLevel6Name]
      ,[CCHierarchyLevel7Name]
      ,[CCHierarchyLevel8Name]
      ,[CCHierarchyLevel9Name]
      ,[CCHierarchyLevel10Name]
      ,[CCHierarchyLevel11Name]
      ,[CCOpenDate]
      ,[CCClosedDate]
      ,[CCReopenDate]
      ,[CCReopenDateType]
      ,[CCClassification]
      ,'Active - Non-Comp' AS [CCCompStatus]
      ,[CCStatus]
      ,[CCConsolidation]
      ,[CCFlexAttribute1]
      ,[CCFlexAttribute2]
      ,[CCFlexAttribute3]
      ,[CCFlexAttribute4]
      ,[CCFlexAttribute5]
      ,[OrgID]
      ,[ParentOrgID]
      ,[DefaultLocationID]
      ,[OrgNumber]
      ,[OrgHierarchyLevel1Name]
      ,[OrgHierarchyLevel2Name]
      ,[OrgHierarchyLevel3Name]
      ,[OrgHierarchyLevel4Name]
      ,[OrgHierarchyLevel5Name]
      ,[OrgHierarchyLevel6Name]
      ,[OrgHierarchyLevel7Name]
      ,[OrgHierarchyLevel8Name]
      ,[OrgHierarchyLevel9Name]
      ,[OrgHierarchyLevel10Name]
      ,[OrgHierarchyLevel11Name]
      ,[AllName]
      ,[ExecutiveFunctionName]
      ,[ExecutiveFunctionLeaderName]
      ,[ExecutiveSubFunctionName]
      ,[ExecutiveSubFunctionLeaderName]
      ,[CorporateFunctionName]
      ,[CorporateSubFunctionName]
      ,[DivisionName]
      ,[DivisionLeaderName]
      ,[RegionNumber]
      ,[RegionName]
      ,[RegionLeaderName]
      ,[MarketNumber]
      ,[MarketName]
      ,[MarketLeaderName]
      ,[SubMarketNumber]
      ,[SubMarketName]
      ,[SubMarketLeaderName]
      ,[DistrictNumber]
      ,[DistrictName]
      ,[InterimDistrictNumber]
      ,[InterimDistrictName]
      ,[DistrictLeaderName]
      ,[ActingDistrictLeaderName]
      ,[InterimDistrictLeaderName]
      ,[GroupNumber]
      ,[GroupName]
      ,[GroupLeaderName]
      ,[SubgroupNumber]
      ,[SubGroupName]
      ,[SubGroupLeaderName]
      ,[CampusNumber]
      ,[CampusName]
      ,[CampusLeaderName]
      ,[CenterLeaderName]
      ,[ActingCenterLeaderName]
      ,[CategoryName]
      ,[TypeCode]
      ,[TypeName]
      ,[PartnerGroupCode]
      ,[PartnerGroupName]
      ,[CenterGroupCode]
      ,[CenterGroupName]
      ,[DivisionLegacyName]
      ,[BrandCode]
      ,[BrandName]
      ,[OrgFlexAttribute1]
      ,[OrgFlexAttribute2]
      ,[OrgFlexAttribute3]
      ,[OrgFlexAttribute4]
      ,[OrgFlexAttribute5]
      ,[CenterCMSID]
      ,[CenterCSSID]
      ,[SiteHorizonID]
      ,[CenterEnrollmentSourceSystem]
      ,[CenterCMSMigrationDate]
      ,[CenterCMSMigrationStatus]
      ,[CenterLicensedCapacity]
      ,[CenterBackupCareFlag]
      ,[CenterChildCareSelectFlag]
      ,[CenterPublicAllowedFlag]
      ,[CenterOpenTime]
      ,[CenterCloseTime]
      ,[CenterStudentMinimumAge]
      ,[CenterStudentMaximumAge]
      ,[CenterOpenSunFlag]
      ,[CenterOpenMonFlag]
      ,[CenterOpenTueFlag]
      ,[CenterOpenWedFlag]
      ,[CenterOpenThuFlag]
      ,[CenterOpenFriFlag]
      ,[CenterOpenSatFlag]
      ,[CenterFoodProgramStartDate]
      ,[CenterFoodProgramEndDate]
      ,[CenterRegistrationType]
      ,[SiteSchoolDistrict]
      ,[SiteClassYear]
      ,[CenterURL]
      ,[CenterMenuURL]
      ,[CenterHasBreakfastFlag]
      ,[CenterHasMorningSlackFlag]
      ,[CenterHasLunchFlag]
      ,[CenterHasAfternoonSnackFlag]
      ,[CenterSpeaksASLFlag]
      ,[CenterSpeaksArabicFlag]
      ,[CenterSpeaksFrenchFlag]
      ,[CenterSpeaksGermanFlag]
      ,[CenterSpeaksHindiFlag]
      ,[CenterSpeaksMandarinFlag]
      ,[CenterSpeaksPunjabiFlag]
      ,[CenterSpeaksSpanishFlag]
      ,[CenterSpeaksOtherLanguages]
      ,[CenterAccreditationAgencyCode]
      ,[CenterAccreditationStartDate]
      ,[CenterAccreditationExpirationDate]
      ,[CenterAccreditationNextActivity]
      ,[CenterAccreditationNextActivityDueDate]
      ,[CenterAccreditationPrimaryStatus]
      ,[CenterAccreditationProgramID]
      ,[CenterQRISRating]
      ,[CenterQRISRatingStartDate]
      ,[CenterQRISRatingExpirationDate]
      ,[CenterLatitude]
      ,[CenterLongitude]
      ,[CenterCurrentHumanSigmaScore]
      ,[CenterPreviousHumanSigmaScore]
      ,'1900-01-01 00:00:00.000' AS [EDWEffectiveFrom]
      ,DATEADD(MM, 13, CCOpenDate) AS [EDWEffectiveTo]
      ,GETDATE() AS [EDWCreatedDate]
      ,GETDATE() AS [EDWModifiedDate]
      ,[EDWDeletedDate]
      ,'H' AS [EDWRowStatus]
      ,[ETLJobId] 
  FROM [dbo].[DimCostCenter]
WHERE CCCompStatus = 'Comp'
GO

UPDATE [DimCostCenter]
SET EDWEffectiveFrom = DATEADD(MM, 13, CCOpenDate),
	[EDWModifiedDate] = GETDATE()
WHERE CCCompStatus = 'Comp'
GO

/*--------------Active - Non-Comp---------------*/

INSERT INTO dbo.DimCostCenter
SELECT 
      [CostCenterNumber]
      ,[CostCenterName]
      ,[CompanyID]
      ,[CostCenterTypeID]
      ,[CostCenterTypeName]
      ,[BusinessUnitCode]
      ,[BusinessUnitName]
      ,[OrganizationLevelCode]
      ,[OrganizationLevelName]
      ,[FunctionCode]
      ,[FunctionName]
      ,[LineOfBusinessCode]
      ,[LineOfBusinessName]
      ,[LineOfBusinessCategoryCode]
      ,[LineOfBusinessCategoryName]
      ,[LineOfBusinessSubcategoryCode]
      ,[LineOfBusinessSubcategoryName]
      ,[CCHierarchyLevel1Name]
      ,[CCHierarchyLevel2Name]
      ,[CCHierarchyLevel3Name]
      ,[CCHierarchyLevel4Name]
      ,[CCHierarchyLevel5Name]
      ,[CCHierarchyLevel6Name]
      ,[CCHierarchyLevel7Name]
      ,[CCHierarchyLevel8Name]
      ,[CCHierarchyLevel9Name]
      ,[CCHierarchyLevel10Name]
      ,[CCHierarchyLevel11Name]
      ,[CCOpenDate]
      ,[CCClosedDate]
      ,[CCReopenDate]
      ,[CCReopenDateType]
      ,[CCClassification]
      ,'UnOpened' AS [CCCompStatus]
      ,[CCStatus]
      ,[CCConsolidation]
      ,[CCFlexAttribute1]
      ,[CCFlexAttribute2]
      ,[CCFlexAttribute3]
      ,[CCFlexAttribute4]
      ,[CCFlexAttribute5]
      ,[OrgID]
      ,[ParentOrgID]
      ,[DefaultLocationID]
      ,[OrgNumber]
      ,[OrgHierarchyLevel1Name]
      ,[OrgHierarchyLevel2Name]
      ,[OrgHierarchyLevel3Name]
      ,[OrgHierarchyLevel4Name]
      ,[OrgHierarchyLevel5Name]
      ,[OrgHierarchyLevel6Name]
      ,[OrgHierarchyLevel7Name]
      ,[OrgHierarchyLevel8Name]
      ,[OrgHierarchyLevel9Name]
      ,[OrgHierarchyLevel10Name]
      ,[OrgHierarchyLevel11Name]
      ,[AllName]
      ,[ExecutiveFunctionName]
      ,[ExecutiveFunctionLeaderName]
      ,[ExecutiveSubFunctionName]
      ,[ExecutiveSubFunctionLeaderName]
      ,[CorporateFunctionName]
      ,[CorporateSubFunctionName]
      ,[DivisionName]
      ,[DivisionLeaderName]
      ,[RegionNumber]
      ,[RegionName]
      ,[RegionLeaderName]
      ,[MarketNumber]
      ,[MarketName]
      ,[MarketLeaderName]
      ,[SubMarketNumber]
      ,[SubMarketName]
      ,[SubMarketLeaderName]
      ,[DistrictNumber]
      ,[DistrictName]
      ,[InterimDistrictNumber]
      ,[InterimDistrictName]
      ,[DistrictLeaderName]
      ,[ActingDistrictLeaderName]
      ,[InterimDistrictLeaderName]
      ,[GroupNumber]
      ,[GroupName]
      ,[GroupLeaderName]
      ,[SubgroupNumber]
      ,[SubGroupName]
      ,[SubGroupLeaderName]
      ,[CampusNumber]
      ,[CampusName]
      ,[CampusLeaderName]
      ,[CenterLeaderName]
      ,[ActingCenterLeaderName]
      ,[CategoryName]
      ,[TypeCode]
      ,[TypeName]
      ,[PartnerGroupCode]
      ,[PartnerGroupName]
      ,[CenterGroupCode]
      ,[CenterGroupName]
      ,[DivisionLegacyName]
      ,[BrandCode]
      ,[BrandName]
      ,[OrgFlexAttribute1]
      ,[OrgFlexAttribute2]
      ,[OrgFlexAttribute3]
      ,[OrgFlexAttribute4]
      ,[OrgFlexAttribute5]
      ,[CenterCMSID]
      ,[CenterCSSID]
      ,[SiteHorizonID]
      ,[CenterEnrollmentSourceSystem]
      ,[CenterCMSMigrationDate]
      ,[CenterCMSMigrationStatus]
      ,[CenterLicensedCapacity]
      ,[CenterBackupCareFlag]
      ,[CenterChildCareSelectFlag]
      ,[CenterPublicAllowedFlag]
      ,[CenterOpenTime]
      ,[CenterCloseTime]
      ,[CenterStudentMinimumAge]
      ,[CenterStudentMaximumAge]
      ,[CenterOpenSunFlag]
      ,[CenterOpenMonFlag]
      ,[CenterOpenTueFlag]
      ,[CenterOpenWedFlag]
      ,[CenterOpenThuFlag]
      ,[CenterOpenFriFlag]
      ,[CenterOpenSatFlag]
      ,[CenterFoodProgramStartDate]
      ,[CenterFoodProgramEndDate]
      ,[CenterRegistrationType]
      ,[SiteSchoolDistrict]
      ,[SiteClassYear]
      ,[CenterURL]
      ,[CenterMenuURL]
      ,[CenterHasBreakfastFlag]
      ,[CenterHasMorningSlackFlag]
      ,[CenterHasLunchFlag]
      ,[CenterHasAfternoonSnackFlag]
      ,[CenterSpeaksASLFlag]
      ,[CenterSpeaksArabicFlag]
      ,[CenterSpeaksFrenchFlag]
      ,[CenterSpeaksGermanFlag]
      ,[CenterSpeaksHindiFlag]
      ,[CenterSpeaksMandarinFlag]
      ,[CenterSpeaksPunjabiFlag]
      ,[CenterSpeaksSpanishFlag]
      ,[CenterSpeaksOtherLanguages]
      ,[CenterAccreditationAgencyCode]
      ,[CenterAccreditationStartDate]
      ,[CenterAccreditationExpirationDate]
      ,[CenterAccreditationNextActivity]
      ,[CenterAccreditationNextActivityDueDate]
      ,[CenterAccreditationPrimaryStatus]
      ,[CenterAccreditationProgramID]
      ,[CenterQRISRating]
      ,[CenterQRISRatingStartDate]
      ,[CenterQRISRatingExpirationDate]
      ,[CenterLatitude]
      ,[CenterLongitude]
      ,[CenterCurrentHumanSigmaScore]
      ,[CenterPreviousHumanSigmaScore]
      ,'1900-01-01 00:00:00.000' AS [EDWEffectiveFrom]
      ,CCOpenDate AS [EDWEffectiveTo]
      ,GETDATE() AS [EDWCreatedDate]
      ,GETDATE() AS [EDWModifiedDate]
      ,[EDWDeletedDate]
      ,'H' AS [EDWRowStatus]
      ,[ETLJobId] 
  FROM [dbo].[DimCostCenter]
WHERE CCCompStatus = 'Active - Non-Comp'
GO

UPDATE [DimCostCenter]
SET EDWEffectiveFrom = CCOpenDate,
	[EDWModifiedDate] = GETDATE()
WHERE CCCompStatus = 'Active - Non-Comp'
GO",StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3102,Package\SQL - Truncate DimCostCenter,Microsoft.ExecuteSQLTask,SQL - Truncate DimCostCenter,,,,,Truncate table DimCostCenter,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3103,Package\SQL - Truncate DimMartCostCenter,Microsoft.ExecuteSQLTask,SQL - Truncate DimMartCostCenter,,,,,Truncate table DimMartCostCenter,StagingToEDW_MartToEDW_CostCenter_OneTimeLoadforCompNonComp
3104,Package,Microsoft.Package,MartToEDW_DimMartCostCenter_IXV,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3105,Package\Create View,STOCK:SEQUENCE,Create View,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3106,Package\Create View\SQL - Create View vFactFTESnapshot,Microsoft.ExecuteSQLTask,SQL - Create View vFactFTESnapshot,,,,,"CREATE VIEW [dbo].[vFactFTESnapshot]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.FTE) AS FTE
     FROM dbo.FactFTESnapshot AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3107,Package\Create View\SQL - Create View vFactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - Create View vFactGLBalancePlanAllocation,,,,,"CREATE VIEW  [dbo].[vFactGLBalancePlanAllocation]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
			dm.GLMetricTypeCode,
			dm.GLMetricTypeKey,
            f.AccountSubaccountKey,
			COUNT_BIG(*) AS [Count],
			SUM(f.GLBalancePlanAllocationAmount) AS GLBalancePlanAllocationAmount
	FROM [dbo].[FactGLBalancePlanAllocation] AS f
	     JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
		 JOIN dbo.DimGLMetricType AS dm ON dm.GLMetricTypeKey=f.GLMetricTypeKey
		 JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
			  dm.GLMetricTypeCode,
			  dm.GLMetricTypeKey,
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3108,Package\Create View\SQL - Create View vFactLaborHour,Microsoft.ExecuteSQLTask,SQL - Create View vFactLaborHour,,,,,"CREATE VIEW [dbo].[vFactLaborHour]
WITH SCHEMABINDING
AS
     SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber,
			f.DataScenarioKey,
            ds.DataScenarioName, 
            f.AccountSubaccountKey, 
            COUNT_BIG(*) AS [Count], 
            SUM(f.[Hours]) AS [Hours],
            f.IsTSEF
     FROM [dbo].[FactLaborHour] AS f
          JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimDataScenario AS ds ON ds.DataScenarioKey = f.DataScenarioKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber,
			  f.DataScenarioKey,
              ds.DataScenarioName, 
              f.AccountSubaccountKey,
 f.IsTSEF;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3109,Package\Create View\SQL - Create View vFactLaborSalary,Microsoft.ExecuteSQLTask,SQL - Create View vFactLaborSalary,,,,,"CREATE VIEW  [dbo].[vFactLaborSalary]
WITH SCHEMABINDING
AS
    SELECT d.FiscalWeekNumber, 
            d.FiscalWeekEndDate, 
            mcc.CostCenterKey, 
            mcc.CostCenterNumber, 
            f.AccountSubaccountKey,
			COUNT_BIG(*) AS [Count],
			SUM(f.NetAmount) AS [NetAmount]
	FROM [dbo].[FactLaborSalary] AS f
	     JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
         JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
		 JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3110,Package\Create View\SQL - Create View vFactNetRevenue,Microsoft.ExecuteSQLTask,SQL - Create View vFactNetRevenue,,,,,"CREATE VIEW [dbo].[vFactNetRevenue] 
WITH SCHEMABINDING
	AS 
SELECT d.FiscalWeekNumber
      ,d.FiscalWeekEndDate 
      ,mcc.CostCenterKey 
      ,mcc.CostCenterNumber 
      ,f.AccountSubaccountKey 
      ,COUNT_BIG(*) AS [Count] 
	  ,SUM(f.NetRevenueAmount) AS NetRevenueAmount
	FROM dbo.FactNetRevenue AS f
		  JOIN dbo.DimDate AS d ON d.DateKey = f.DateKey
          JOIN dbo.DimCostCenter AS cc ON cc.CostCenterKey = f.CostCenterKey
          JOIN dbo.DimMartCostCenter AS mcc ON mcc.CostCenterNumber = cc.CostCenterNumber
                                               AND d.FullDate BETWEEN mcc.EDWEffectiveFrom AND mcc.EDWEffectiveTo
     GROUP BY d.FiscalWeekNumber, 
              d.FiscalWeekEndDate, 
              mcc.CostCenterKey, 
              mcc.CostCenterNumber, 
              f.AccountSubaccountKey;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3111,Package\EPT - DimMartCostCenter,Microsoft.ExecutePackageTask,EPT - DimMartCostCenter,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3112,Package\SEQ - Drop Indexed Views,STOCK:SEQUENCE,SEQ - Drop Indexed Views,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3113,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactFTESnapshot,Microsoft.ExecuteSQLTask,SQL - Disable Index on vFactFTESnapshot,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactFTESnapshot Disable;
",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3114,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - Disable Index on vFactGLBalancePlanAllocation,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey ON vFactGLBalancePlanAllocation DISABLE;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3115,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactLaborHour,Microsoft.ExecuteSQLTask,SQL - Disable Index on vFactLaborHour,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey ON vFactLaborHour DISABLE;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3116,Package\SEQ - Drop Indexed Views\SQL - Disable Index on vFactLaborSalary,Microsoft.ExecuteSQLTask,SQL - Disable Index on vFactLaborSalary,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactLaborSalary DISABLE;",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3117,Package\SEQ - Drop Indexed Views\SQL - Drop Index on FactNetRevenueConsolidated,Microsoft.ExecuteSQLTask,SQL - Drop Index on FactNetRevenueConsolidated,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM [sys].[sysobjects] [O]
         INNER JOIN [sys].[sysindexes] [I] ON [O].[id] = [I].[id]
    WHERE [I].[name] = 'CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    DROP INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey] ON [dbo].[FactNetRevenueConsolidated];",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3118,Package\Sequence Container,STOCK:SEQUENCE,Sequence Container,,,,,,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3119,Package\Sequence Container\SQL - Populate Revenue & Create Index,Microsoft.ExecuteSQLTask,SQL - Populate Revenue & Create Index,,,,,"TRUNCATE TABLE [dbo].[FactNetRevenueConsolidated];

INSERT INTO [dbo].[FactNetRevenueConsolidated] (
	[FiscalWeekNumber], [FiscalWeekEndDate], [CostCenterKey], [CostCenterNumber], [AccountSubaccountKey], [Count], [NetRevenueAmount]
)
SELECT
	[D].[FiscalWeekNumber],
	[D].[FiscalWeekEndDate],
	[MCC].[CostCenterKey],
	[MCC].[CostCenterNumber],
	[F].[AccountSubaccountKey],
	COUNT_BIG(*) AS [Count],
	SUM([F].[NetRevenueAmount]) AS [NetRevenueAmount]
FROM [dbo].[FactNetRevenue] [F]
INNER JOIN [dbo].[DimDate] [D] ON [F].[DateKey] = [D].[DateKey]
INNER JOIN [dbo].[DimCostCenter] [C] ON [F].[CostCenterKey] = [C].[CostCenterKey]
INNER JOIN [dbo].[DimMartCostCenter] [MCC] ON [C].[CostCenterNumber] = [MCC].[CostCenterNumber]
	AND [D].[FullDate] BETWEEN [MCC].[EDWEffectiveFrom] AND [MCC].[EDWEffectiveTo]
GROUP BY
	[D].[FiscalWeekNumber], [D].[FiscalWeekEndDate],
	[MCC].[CostCenterKey], [MCC].[CostCenterNumber],
	[F].[AccountSubaccountKey];

CREATE UNIQUE CLUSTERED INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[FactNetRevenueConsolidated]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3120,Package\Sequence Container\SQL - Rebuild FTE Index,Microsoft.ExecuteSQLTask,SQL - Rebuild FTE Index,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactFTESnapshot_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactFTESnapshot  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3121,Package\Sequence Container\SQL - Rebuild Labor Hour Index,Microsoft.ExecuteSQLTask,SQL - Rebuild Labor Hour Index,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborHour_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_DataScenarioKey ON vFactLaborHour  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3122,Package\Sequence Container\SQL - Rebuild Labor SalaryIndex,Microsoft.ExecuteSQLTask,SQL - Rebuild Labor SalaryIndex,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactLaborSalary_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey ON vFactLaborSalary  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3123,Package\Sequence Container\SQL - Rebuild Plan Allocation  Index,Microsoft.ExecuteSQLTask,SQL - Rebuild Plan Allocation  Index,,,,,"
DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM sysobjects o
         INNER JOIN sysindexes i ON o.id = i.id
    WHERE i.name = 'CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey'
);
IF @view = 1
    ALTER INDEX CIS_vFactGLBalancePlanAllocation_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey_GLMetricTypeKey ON vFactGLBalancePlanAllocation  REBUILD PARTITION=ALL With (SORT_IN_TEMPDB = OFF);",StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3124,Package\SQL - spGL_StagingToEDW_DimAccountSubAccount,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimAccountSubAccount,,,,,EXEC dbo.spGL_StagingToEDW_DimAccountSubAccount,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3125,Package\SQL - spGL_StagingToEDW_DimCostCenter,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimCostCenter,,,,,EXEC dbo.spGL_StagingToEDW_DimCostCenter,StagingToEDW_MartToEDW_DimMartCostCenter_IXV
3126,Package,Microsoft.Package,OneTimeDimMartAccountSubAccount,,,,,,StagingToEDW_OneTimeDimMartAccountSubAccount
3127,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.Lookup,Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6,"Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory.",Lookup,,StagingToEDW_OneTimeDimMartAccountSubAccount
3128,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,OLEDB Src - ASA,,StagingToEDW_OneTimeDimMartAccountSubAccount
3129,Package\DFT - DimAccountSubAccount,Microsoft.Pipeline,DFT - DimAccountSubAccount,Microsoft.OLEDBCommand,OLE DB Command;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;2,"Runs an SQL statement for each row in a data flow. For example, call a 'new employee setup' stored procedure for each row in the 'new employees' table. Note: running an SQL statement for each row of a large data flow may take a long time.",Update New Columns,,StagingToEDW_OneTimeDimMartAccountSubAccount
3130,Package\SQL - Assigning value to the SQl Variable,Microsoft.ExecuteSQLTask,SQL - Assigning value to the SQl Variable,,,,,"DECLARE @Field MartLookup;
INSERT INTO @Field (FieldPath)
(SELECT FieldPath
FROM dbo.MartASALookup);

DECLARE @vSQL MartLookup;
INSERT @vSQL
EXEC dbo.spGL_Generate_ASA_SQLStatement @Field;

DECLARE @vSQLCommand VARCHAR(4000);
SET @vSQLCommand = (SELECT FieldPath FROM @vSQL)

SELECT @vSQLCommand AS vSQLCommand;",StagingToEDW_OneTimeDimMartAccountSubAccount
3131,Package\SQL - Load AccountSubaccountLanding,Microsoft.ExecuteSQLTask,SQL - Load AccountSubaccountLanding,,,,,"EXECUTE [spGL_Staging_AccountSubAccountLanding] 
NULL, ? OUTPUT, ? OUTPUT
GO
",StagingToEDW_OneTimeDimMartAccountSubAccount
3132,Package\SQL - Update Seed Rows,Microsoft.ExecuteSQLTask,SQL - Update Seed Rows,,,,,"UPDATE [dbo].[DimAccountSubaccount]
SET [ASAFieldDepth] = -1,                                 -- [ASAFieldDepth]
    [ASAFieldLevel1ID] = '0000.000000',                   -- [ASAFieldLevel1ID]	
    [ASAFieldLevel1Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel1Name]	
    [ASAFieldLevel1Unary] = 1,                            -- [ASAFieldLevel1Unary]	
    [ASAFieldLevel1Sort] = 99999,                         -- [ASAFieldLevel1Sort]
    [ASAFieldLevel2ID] = '0000.000000',                   -- [ASAFieldLevel2ID]	
    [ASAFieldLevel2Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel2Name]	
    [ASAFieldLevel2Unary] = 1,                            -- [ASAFieldLevel2Unary]	
    [ASAFieldLevel2Sort] = 99999,                         -- [ASAFieldLevel2Sort]
    [ASAFieldLevel3ID] = '0000.000000',                   -- [ASAFieldLevel3ID]	
    [ASAFieldLevel3Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel3Name]	
    [ASAFieldLevel3Unary] = 1,                            -- [ASAFieldLevel3Unary]	
    [ASAFieldLevel3Sort] = 99999,                         -- [ASAFieldLevel3Sort]
    [ASAFieldLevel4ID] = '0000.000000',                   -- [ASAFieldLevel4ID]	
    [ASAFieldLevel4Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel4Name]	
    [ASAFieldLevel4Unary] = 1,                            -- [ASAFieldLevel4Unary]	
    [ASAFieldLevel4Sort] = 99999,                         -- [ASAFieldLevel4Sort]
    [ASAFieldLevel5ID] = '0000.000000',                   -- [ASAFieldLevel5ID]	
    [ASAFieldLevel5Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel5Name]	
    [ASAFieldLevel5Unary] = 1,                            -- [ASAFieldLevel5Unary]	
    [ASAFieldLevel5Sort] = 99999,                         -- [ASAFieldLevel5Sort]
    [ASAFieldLevel6ID] = '0000.000000',                   -- [ASAFieldLevel6ID]	
    [ASAFieldLevel6Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel6Name]	
    [ASAFieldLevel6Unary] = 1,                            -- [ASAFieldLevel6Unary]	
    [ASAFieldLevel6Sort] = 99999,                         -- [ASAFieldLevel6Sort]
    [ASAFieldLevel7ID] = '0000.000000',                   -- [ASAFieldLevel7ID]	
    [ASAFieldLevel7Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel7Name]	
    [ASAFieldLevel7Unary] = 1,                            -- [ASAFieldLevel7Unary]	
    [ASAFieldLevel7Sort] = 99999,                         -- [ASAFieldLevel7Sort]
    [ASAFieldLevel8ID] = '0000.000000',                   -- [ASAFieldLevel8ID]	
    [ASAFieldLevel8Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel8Name]	
    [ASAFieldLevel8Unary] = 1,                            -- [ASAFieldLevel8Unary]	
    [ASAFieldLevel8Sort] = 99999,                         -- [ASAFieldLevel8Sort]
    [ASAFieldLevel9ID] = '0000.000000',                   -- [ASAFieldLevel9ID]	
    [ASAFieldLevel9Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel9Name]	
    [ASAFieldLevel9Unary] = 1,                            -- [ASAFieldLevel9Unary]	
    [ASAFieldLevel9Sort] = 99999,                         -- [ASAFieldLevel9Sort]
    [ASAFieldLevel10ID] = '0000.000000',                  -- [ASAFieldLevel10ID]	
    [ASAFieldLevel10Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
    [ASAFieldLevel10Unary] = 1,                           -- [ASAFieldLevel10Unary]	
    [ASAFieldLevel10Sort] = 99999,                        -- [ASAFieldLevel10Sort]
    [ASAFieldLevel11ID] = '0000.000000',                  -- [ASAFieldLevel11ID]	
    [ASAFieldLevel11Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
    [ASAFieldLevel11Unary] = 1,                           -- [ASAFieldLevel11Unary]	
    [ASAFieldLevel11Sort] = 99999,                        -- [ASAFieldLevel11Sort]
    [ASAFieldLevel12ID] = '0000.000000',                  -- [ASAFieldLevel12ID]	
    [ASAFieldLevel12Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
    [ASAFieldLevel12Unary] = 1,                           -- [ASAFieldLevel12Unary]	
    [ASAFieldLevel12Sort] = 99999                         -- [ASAFieldLevel12Sort]
WHERE AccountSubaccountKey = '-1';

UPDATE dbo.DimAccountSubaccount
SET [ASAFieldDepth] = -1,                                 -- [ASAFieldDepth]
    [ASAFieldLevel1ID] = '0000.000000',                   -- [ASAFieldLevel1ID]	
    [ASAFieldLevel1Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel1Name]	
    [ASAFieldLevel1Unary] = 1,                            -- [ASAFieldLevel1Unary]	
    [ASAFieldLevel1Sort] = 99999,                         -- [ASAFieldLevel1Sort]
    [ASAFieldLevel2ID] = '0000.000000',                   -- [ASAFieldLevel2ID]	
    [ASAFieldLevel2Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel2Name]	
    [ASAFieldLevel2Unary] = 1,                            -- [ASAFieldLevel2Unary]	
    [ASAFieldLevel2Sort] = 99999,                         -- [ASAFieldLevel2Sort]
    [ASAFieldLevel3ID] = '0000.000000',                   -- [ASAFieldLevel3ID]	
    [ASAFieldLevel3Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel3Name]	
    [ASAFieldLevel3Unary] = 1,                            -- [ASAFieldLevel3Unary]	
    [ASAFieldLevel3Sort] = 99999,                         -- [ASAFieldLevel3Sort]
    [ASAFieldLevel4ID] = '0000.000000',                   -- [ASAFieldLevel4ID]	
    [ASAFieldLevel4Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel4Name]	
    [ASAFieldLevel4Unary] = 1,                            -- [ASAFieldLevel4Unary]	
    [ASAFieldLevel4Sort] = 99999,                         -- [ASAFieldLevel4Sort]
    [ASAFieldLevel5ID] = '0000.000000',                   -- [ASAFieldLevel5ID]	
    [ASAFieldLevel5Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel5Name]	
    [ASAFieldLevel5Unary] = 1,                            -- [ASAFieldLevel5Unary]	
    [ASAFieldLevel5Sort] = 99999,                         -- [ASAFieldLevel5Sort]
    [ASAFieldLevel6ID] = '0000.000000',                   -- [ASAFieldLevel6ID]	
    [ASAFieldLevel6Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel6Name]	
    [ASAFieldLevel6Unary] = 1,                            -- [ASAFieldLevel6Unary]	
    [ASAFieldLevel6Sort] = 99999,                         -- [ASAFieldLevel6Sort]
    [ASAFieldLevel7ID] = '0000.000000',                   -- [ASAFieldLevel7ID]	
    [ASAFieldLevel7Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel7Name]	
    [ASAFieldLevel7Unary] = 1,                            -- [ASAFieldLevel7Unary]	
    [ASAFieldLevel7Sort] = 99999,                         -- [ASAFieldLevel7Sort]
    [ASAFieldLevel8ID] = '0000.000000',                   -- [ASAFieldLevel8ID]	
    [ASAFieldLevel8Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel8Name]	
    [ASAFieldLevel8Unary] = 1,                            -- [ASAFieldLevel8Unary]	
    [ASAFieldLevel8Sort] = 99999,                         -- [ASAFieldLevel8Sort]
    [ASAFieldLevel9ID] = '0000.000000',                   -- [ASAFieldLevel9ID]	
    [ASAFieldLevel9Name] = 'Unknown Account Subaccount',  -- [ASAFieldLevel9Name]	
    [ASAFieldLevel9Unary] = 1,                            -- [ASAFieldLevel9Unary]	
    [ASAFieldLevel9Sort] = 99999,                         -- [ASAFieldLevel9Sort]
    [ASAFieldLevel10ID] = '0000.000000',                  -- [ASAFieldLevel10ID]	
    [ASAFieldLevel10Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel10Name]	
    [ASAFieldLevel10Unary] = 1,                           -- [ASAFieldLevel10Unary]	
    [ASAFieldLevel10Sort] = 99999,                        -- [ASAFieldLevel10Sort]
    [ASAFieldLevel11ID] = '0000.000000',                  -- [ASAFieldLevel11ID]	
    [ASAFieldLevel11Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel11Name]	
    [ASAFieldLevel11Unary] = 1,                           -- [ASAFieldLevel11Unary]	
    [ASAFieldLevel11Sort] = 99999,                        -- [ASAFieldLevel11Sort]
    [ASAFieldLevel12ID] = '0000.000000',                  -- [ASAFieldLevel12ID]	
    [ASAFieldLevel12Name] = 'Unknown Account Subaccount', -- [ASAFieldLevel12Name]	
    [ASAFieldLevel12Unary] = 1,                           -- [ASAFieldLevel12Unary]	
    [ASAFieldLevel12Sort] = 99999                         -- [ASAFieldLevel12Sort]
WHERE AccountSubaccountKey = '-2';",StagingToEDW_OneTimeDimMartAccountSubAccount
3133,Package,Microsoft.Package,ReportMeasure,,,,,,StagingToEDW_ReportMeasure
3134,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.DataConvert,Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,Data Conversion,Data Conversion,,StagingToEDW_ReportMeasure
3135,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST - ReportMeasure,,StagingToEDW_ReportMeasure
3136,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Insert Count,,StagingToEDW_ReportMeasure
3137,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",Source Count,,StagingToEDW_ReportMeasure
3138,Package\DFT - ReportMeasure,Microsoft.Pipeline,DFT - ReportMeasure,Microsoft.ExcelSource,Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1,Excel Source,SRC - ReportMeasure,,StagingToEDW_ReportMeasure
3139,Package\SQL - End ReportMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - End ReportMeasure Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_ReportMeasure
3140,Package\SQL - Start ReportMeasure Auditlog,Microsoft.ExecuteSQLTask,SQL - Start ReportMeasure Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?, ?;",StagingToEDW_ReportMeasure
3141,Package\SQL - Truncate ReportMeasure table,Microsoft.ExecuteSQLTask,SQL - Truncate ReportMeasure table,,,,,TRUNCATE TABLE [dbo].[ReportMeasure],StagingToEDW_ReportMeasure
3142,Package\SQL - Upsert Mart ReportMeasure,Microsoft.ExecuteSQLTask,SQL - Upsert Mart ReportMeasure,,,,,"DECLARE @SummaryOfChanges TABLE (Change VARCHAR(20));
DECLARE @InsertCount INT,
		@UpdateCount INT,
		@DeleteCount INT;

MERGE [DW_Mart].[dbo].[ReportMeasure] AS [T]
USING (
	SELECT
		[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
		[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
	FROM [DW_Landing].[dbo].[ReportMeasure]
) AS [S]
	(
		[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
		[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
	)
	ON
		[T].[ReportID] = [S].[ReportID]
		AND [T].[MeasureOrder] = [S].[MeasureOrder]
		AND [T].[MeasureLabel] = [S].[MeasureLabel]
WHEN MATCHED
	THEN
		UPDATE
			SET [ReportName] = [S].[ReportName],
				[MeasureName] = [S].[MeasureName],
				[NumberFormat] = [S].[NumberFormat],
				[IsHeader] = [S].[IsHeader],
				[PageOrder] = [S].[PageOrder],
				[PageName] = [S].[PageName],
				[HasRightBorder] = [S].[HasRightBorder],
				[Font] = [S].[Font],
				[PlanDisplay] = [S].[PlanDisplay],
				[PlanVarDisplay] = [S].[PlanVarDisplay],
				[PlanVarPctDisplay] = [S].[PlanVarPctDisplay],
				[LYDisplay] = [S].[LYDisplay],
				[LYVarDisplay] = [S].[LYVarDisplay],
				[LYVarPctDisplay] = [S].[LYVarPctDisplay],
				[ActualToDateDisplay] = [S].[ActualToDateDisplay],
				[PlanVarInverse] = [S].[PlanVarInverse],
				[LYVarInverse] = [S].[LYVarInverse],
				[AbsDivisor] = [S].[AbsDivisor],
				[TargetForPlan] = [S].[TargetForPlan]

WHEN NOT MATCHED BY TARGET
	THEN
		INSERT (
			[ReportID], [ReportName], [MeasureOrder], [MeasureLabel], [MeasureName], [NumberFormat], [IsHeader], [PageOrder], [PageName], [HasRightBorder], [Font], [PlanDisplay], [PlanVarDisplay], [PlanVarPctDisplay],
			[LYDisplay], [LYVarDisplay], [LYVarPctDisplay], [ActualToDateDisplay], [PlanVarInverse], [LYVarInverse], [AbsDivisor], [TargetForPlan], [CreatedDate]
		)
		VALUES (
			[S].[ReportID], [S].[ReportName], [S].[MeasureOrder], [S].[MeasureLabel], [S].[MeasureName], [S].[NumberFormat], [S].[IsHeader], [S].[PageOrder], [S].[PageName], [S].[HasRightBorder], [S].[Font],
			[S].[PlanDisplay], [S].[PlanVarDisplay], [S].[PlanVarPctDisplay], [S].[LYDisplay], [S].[LYVarDisplay], [S].[LYVarPctDisplay], [S].[ActualToDateDisplay], [S].[PlanVarInverse], [S].[LYVarInverse],
			[S].[AbsDivisor], [S].[TargetForPlan], GETDATE()
		)
WHEN NOT MATCHED BY SOURCE
	THEN
		DELETE
OUTPUT $action
INTO @SummaryOfChanges;

SELECT @InsertCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'INSERT';
SELECT @UpdateCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'UPDATE';
SELECT @DeleteCount = COUNT(*) FROM @SummaryOfChanges WHERE [Change] = 'DELETE';

SELECT
	@InsertCount AS [InsertCount],
	@UpdateCount AS [UpdateCount],
	@DeleteCount AS [DeleteCount];",StagingToEDW_ReportMeasure
3143,Package,Microsoft.Package,ReportProfile,,,,,,StagingToEDW_ReportProfile
3144,Package\DFT - ReportProfile,Microsoft.Pipeline,DFT - ReportProfile,Microsoft.OLEDBDestination,OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4,OLE DB Destination,DST- ReportProfile,,StagingToEDW_ReportProfile
3145,Package\DFT - ReportProfile,Microsoft.Pipeline,DFT - ReportProfile,Microsoft.RowCount,Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0,"Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status.",SourceCount,,StagingToEDW_ReportProfile
3146,Package\DFT - ReportProfile,Microsoft.Pipeline,DFT - ReportProfile,Microsoft.OLEDBSource,OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7,OLE DB Source,Src- ReportProfile Table,,StagingToEDW_ReportProfile
3147,Package\SQL - End DimDataScenario Auditlog,Microsoft.ExecuteSQLTask,SQL - End DimDataScenario Auditlog,,,,,"Execute spEndAuditLog ?,?,?,?,?;",StagingToEDW_ReportProfile
3148,Package\SQL - Get Delete Count,Microsoft.ExecuteSQLTask,SQL - Get Delete Count,,,,, SELECT COUNT(1) AS DeleteCount  From [dbo].[ReportProfile],StagingToEDW_ReportProfile
3149,Package\SQL - Insert Count,Microsoft.ExecuteSQLTask,SQL - Insert Count,,,,, SELECT COUNT(1) AS InsertCount  From [dbo].[ReportProfile],StagingToEDW_ReportProfile
3150,Package\SQL - Insert Seed Rows,Microsoft.ExecuteSQLTask,SQL - Insert Seed Rows,,,,,"SET IDENTITY_INSERT [dbo].[ReportProfile] ON;
INSERT INTO [dbo].[ReportProfile]
([ReportProfileKey], 
 [ReportProfileID], 
 [ReportProfileName], 
 [ReportProfileLogoImage], 
 [ReportProfileSmallImage], 
 [ReportProfileLegalNoticeDescription], 
 [MartCreatedDate]
)
       SELECT-1, 
             -1, 
             '-1', 
             0x00, 
             0x00, 
             'Unknown Description', 
             GETDATE()
       UNION
       SELECT-2, 
             -2, 
             '-2', 
             0x00, 
             0x00, 
             'Not Applicable Description', 
             GETDATE();
SET IDENTITY_INSERT [dbo].[ReportProfile] OFF;",StagingToEDW_ReportProfile
3151,Package\SQL - Start Report Profile Auditlog,Microsoft.ExecuteSQLTask,SQL - Start Report Profile Auditlog,,,,,"Execute spBeginAuditLog ? OUTPUT, ?;",StagingToEDW_ReportProfile
3152,Package\SQL - Truncate Table,Microsoft.ExecuteSQLTask,SQL - Truncate Table,,,,, TRUNCATE TABLE dbo.ReportProfile,StagingToEDW_ReportProfile
3153,Package,Microsoft.Package,StagingToEDWParentPackage,,,,,,StagingToEDW_StagingToEDWParentPackage
3154,Package\All Dimensions Completed,STOCK:SEQUENCE,All Dimensions Completed,,,,,,StagingToEDW_StagingToEDWParentPackage
3155,Package\Change History - StagingToEDWParentPackage,STOCK:SEQUENCE,Change History - StagingToEDWParentPackage,,,,,,StagingToEDW_StagingToEDWParentPackage
3156,Package\StagingToEDW Dimension Center Management,STOCK:SEQUENCE,StagingToEDW Dimension Center Management,,,,,,StagingToEDW_StagingToEDWParentPackage
3157,Package\StagingToEDW Dimension Center Management\Execute StagingToEDW_Dimension_CenterManagement,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_CenterManagement,,,,,,StagingToEDW_StagingToEDWParentPackage
3158,Package\StagingToEDW Dimension GL and HR,STOCK:SEQUENCE,StagingToEDW Dimension GL and HR,,,,,,StagingToEDW_StagingToEDWParentPackage
3159,Package\StagingToEDW Dimension GL and HR\Execute StagingToEDW_Dimension_GLandHR,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_GLandHR,,,,,,StagingToEDW_StagingToEDWParentPackage
3160,Package\StagingToEDW Dimension Student Leads,STOCK:SEQUENCE,StagingToEDW Dimension Student Leads,,,,,,StagingToEDW_StagingToEDWParentPackage
3161,Package\StagingToEDW Dimension Student Leads\Execute StagingToEDW_Dimension_StudentLeads,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_StudentLeads,,,,,,StagingToEDW_StagingToEDWParentPackage
3162,Package\StagingToEDW Fact Loads,STOCK:SEQUENCE,StagingToEDW Fact Loads,,,,,,StagingToEDW_StagingToEDWParentPackage
3163,Package\StagingToEDW Fact Loads\Execute StagingToEDW_FactParent,Microsoft.ExecutePackageTask,Execute StagingToEDW_FactParent,,,,,,StagingToEDW_StagingToEDWParentPackage
3164,Package\STATIC and FOUNDATION Dimensions,STOCK:SEQUENCE,STATIC and FOUNDATION Dimensions,,,,,,StagingToEDW_StagingToEDWParentPackage
3165,Package\STATIC and FOUNDATION Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimDate load before other Dimensions,,,,,,StagingToEDW_StagingToEDWParentPackage
3166,Package\STATIC and FOUNDATION Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions\SQL - spGL_StagingToEDW_DimDate,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimDate,,,,,EXEC dbo.spGL_StagingToEDW_DimDate,StagingToEDW_StagingToEDWParentPackage
3167,Package\STATIC and FOUNDATION Dimensions\StagingToEDW Static Dimension Loads,STOCK:SEQUENCE,StagingToEDW Static Dimension Loads,,,,,,StagingToEDW_StagingToEDWParentPackage
3168,Package\STATIC and FOUNDATION Dimensions\StagingToEDW Static Dimension Loads\SQL - Dimension Static Data,Microsoft.ExecuteSQLTask,SQL - Dimension Static Data,,,,,EXEC dbo.spBING_EDW_Build_DimensionStaticData,StagingToEDW_StagingToEDWParentPackage
3169,Package,Microsoft.Package,StagingToEDW_DimensionParent,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3170,Package\Change History - StagingToEDW_Dimension,STOCK:SEQUENCE,Change History - StagingToEDW_Dimension,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3171,Package\CMS and CSS Center Management Dimensions,STOCK:SEQUENCE,CMS and CSS Center Management Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3172,Package\CMS and CSS Center Management Dimensions\Execute StagingToEDW_Dimension_CenterManagement Child Package,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_CenterManagement Child Package,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3173,Package\ORACLE GL and HRIS Dimensions,STOCK:SEQUENCE,ORACLE GL and HRIS Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3174,Package\ORACLE GL and HRIS Dimensions\Execute StagingToEDW_Dimension_GLandHR Child Package,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_GLandHR Child Package,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3175,Package\SALESFORCE Dimensions,STOCK:SEQUENCE,SALESFORCE Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3176,Package\SALESFORCE Dimensions\Execute StagingToEDW_Dimension_StudentLeads Child Package,Microsoft.ExecutePackageTask,Execute StagingToEDW_Dimension_StudentLeads Child Package,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3177,Package\STATIC and FOUNDATION Dimensions,STOCK:SEQUENCE,STATIC and FOUNDATION Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3178,Package\STATIC and FOUNDATION Dimensions\EDW Dimension Package Start,STOCK:SEQUENCE,EDW Dimension Package Start,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3179,Package\STATIC and FOUNDATION Dimensions\EDW Dimension Package Start\SQL - EDW Dimension Package Start,Microsoft.ExecuteSQLTask,SQL - EDW Dimension Package Start,,,,,"INSERT INTO dbo.EDWAuditLog 
(StartTime,
 StatusCode,
 StatusName,
 TaskName,
 EndTime
)
VALUES
(GETDATE(),
 1,
 'Completed',
 'EDW Dimension BNG-1262 - 2/26/2018',
 GETDATE()
);",StagingToEDW_StagingToEDW_DimensionParent
3180,Package\STATIC and FOUNDATION Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimDate load before other Dimensions,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3181,Package\STATIC and FOUNDATION Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions\SQL - spGL_StagingToEDW_DimDate,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimDate,,,,,EXEC dbo.spGL_StagingToEDW_DimDate,StagingToEDW_StagingToEDW_DimensionParent
3182,Package\STATIC and FOUNDATION Dimensions\StagingToEDW Static Dimension Loads,STOCK:SEQUENCE,StagingToEDW Static Dimension Loads,,,,,,StagingToEDW_StagingToEDW_DimensionParent
3183,Package\STATIC and FOUNDATION Dimensions\StagingToEDW Static Dimension Loads\SQL - Dimension Static Data,Microsoft.ExecuteSQLTask,SQL - Dimension Static Data,,,,,EXEC dbo.spBING_EDW_Build_DimensionStaticData,StagingToEDW_StagingToEDW_DimensionParent
3184,Package,Microsoft.Package,StagingToEDW_Dimension_CenterManagement,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3185,Package\Change History - StagingToEDW_Dimension_CenterManagement,STOCK:SEQUENCE,Change History - StagingToEDW_Dimension_CenterManagement,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3186,Package\CMS and CSS Center Management Dimensions,STOCK:SEQUENCE,CMS and CSS Center Management Dimensions,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3187,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimAdjustmentReason load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimAdjustmentReason load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3188,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimAdjustmentReason load\SQL - spCMS_StagingToEDW_DimAdjustmentReason,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimAdjustmentReason,,,,,EXEC dbo.spCMS_StagingToEDW_DimAdjustmentReason;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3189,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimScheduleType load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimScheduleType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3190,Package\CMS and CSS Center Management Dimensions\Execute CMS_Staging To EDW DimScheduleType load\SQL - spCMS_StagingToEDW_DimScheduleType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimScheduleType,,,,,EXEC dbo.spCMS_StagingToEDW_DimScheduleType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3191,Package\CMS and CSS Center Management Dimensions\Execute CSS_Staging To EDW DimTransactionCode load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimTransactionCode load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3192,Package\CMS and CSS Center Management Dimensions\Execute CSS_Staging To EDW DimTransactionCode load\SQL - spCSS_StagingToEDW_DimTransactionCode,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTransactionCode,,,,,EXEC dbo.spCSS_StagingToEDW_DimTransactionCode;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3193,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load,STOCK:SEQUENCE,Execute EDW DimARAgencyType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3194,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CMS_Staging To EDW DimARAgency load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimARAgency load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3195,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CMS_Staging To EDW DimARAgency load\SQL - spCMS_StagingToEDW_DimARAgencyType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimARAgencyType,,,,,EXEC dbo.spCMS_StagingToEDW_DimARAgencyType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3196,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CSS_Staging To EDW DimARAgency load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimARAgency load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3197,Package\CMS and CSS Center Management Dimensions\Execute EDW DimARAgencyType load\Execute CSS_Staging To EDW DimARAgency load\SQL - spCSS_StagingToEDW_DimARAgencyType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimARAgencyType,,,,,EXEC dbo.spCSS_StagingToEDW_DimARAgencyType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3198,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load,STOCK:SEQUENCE,Execute EDW DimClassroom load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3199,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CMS_Staging To EDW DimClassroom load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimClassroom load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3200,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CMS_Staging To EDW DimClassroom load\SQL - spCMS_StagingToEDW_DimClassroom,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimClassroom,,,,,EXEC dbo.spCMS_StagingToEDW_DimClassroom;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3201,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CSS_Staging To EDW DimClassroom load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimClassroom load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3202,Package\CMS and CSS Center Management Dimensions\Execute EDW DimClassroom load\Execute CSS_Staging To EDW DimClassroom load\SQL - spCSS_StagingToEDW_DimClassroom,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimClassroom,,,,,EXEC dbo.spCSS_StagingToEDW_DimClassroom;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3203,Package\CMS and CSS Center Management Dimensions\Execute EDW DimCreditMemoType load,STOCK:SEQUENCE,Execute EDW DimCreditMemoType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3204,Package\CMS and CSS Center Management Dimensions\Execute EDW DimCreditMemoType load\SQL - spCMS_StagingToEDW_DimCreditMemoType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimCreditMemoType,,,,,EXEC dbo.spCMS_StagingToEDW_DimCreditMemoType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3205,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load,STOCK:SEQUENCE,Execute EDW DimDiscountType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3206,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CMS_Staging To EDW DimDiscountType load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimDiscountType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3207,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CMS_Staging To EDW DimDiscountType load\SQL - spCMS_StagingToEDW_DimDiscountType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimDiscountType,,,,,EXEC dbo.spCMS_StagingToEDW_DimDiscountType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3208,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CSS_Staging To EDW DimDiscountType,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimDiscountType,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3209,Package\CMS and CSS Center Management Dimensions\Execute EDW DimDiscountType load\Execute CSS_Staging To EDW DimDiscountType\SQL - spCSS_StagingToEDW_DimDiscountType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimDiscountType,,,,,EXEC dbo.spCSS_StagingToEDW_DimDiscountType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3210,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load,STOCK:SEQUENCE,Execute EDW DimFeeType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3211,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CMS_Staging To EDW DimFeeType load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimFeeType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3212,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CMS_Staging To EDW DimFeeType load\SQL - spCMS_StagingToEDW_DimFeeType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimFeeType,,,,,EXEC dbo.spCMS_StagingToEDW_DimFeeType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3213,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CSS_Staging To EDW DimFeeType load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimFeeType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3214,Package\CMS and CSS Center Management Dimensions\Execute EDW DimFeeType load\Execute CSS_Staging To EDW DimFeeType load\SQL - spCSS_StagingToEDW_DimFeeType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimFeeType,,,,,EXEC dbo.spCSS_StagingToEDW_DimFeeType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3215,Package\CMS and CSS Center Management Dimensions\Execute EDW DimInvoiceType load,STOCK:SEQUENCE,Execute EDW DimInvoiceType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3216,Package\CMS and CSS Center Management Dimensions\Execute EDW DimInvoiceType load\SQL - spCMS_StagingToEDW_DimInvoiceType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimInvoiceType,,,,,EXEC dbo.spCMS_StagingToEDW_DimInvoiceType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3217,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load,STOCK:SEQUENCE,Execute EDW DimPaymentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3218,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CMS_Staging To EDW DimPaymentType load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimPaymentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3219,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CMS_Staging To EDW DimPaymentType load\SQL - spCMS_StagingToEDW_DimPaymentType,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimPaymentType,,,,,EXEC dbo.spCMS_StagingToEDW_DimPaymentType,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3220,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CSS_Staging To EDW DimPaymentType load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimPaymentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3221,Package\CMS and CSS Center Management Dimensions\Execute EDW DimPaymentType load\Execute CSS_Staging To EDW DimPaymentType load\SQL - spCSS_StagingToEDW_DimPaymentType,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimPaymentType,,,,,EXEC DBO.spCSS_StagingToEDW_DimPaymentType;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3222,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load,STOCK:SEQUENCE,Execute EDW DimProgram load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3223,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CMS_Staging To EDW DimProgram load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimProgram load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3224,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CMS_Staging To EDW DimProgram load\SQL - spCMS_StagingToEDW_DimProgram,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimProgram,,,,,EXEC dbo.spCMS_StagingToEDW_DimProgram,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3225,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CSS_Staging To EDW DimProgram load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimProgram load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3226,Package\CMS and CSS Center Management Dimensions\Execute EDW DimProgram load\Execute CSS_Staging To EDW DimProgram load\SQL - spCSS_StagingToEDW_DimProgram,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimProgram,,,,,EXEC dbo.spCSS_StagingToEDW_DimProgram,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3227,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load,STOCK:SEQUENCE,Execute EDW DimSession load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3228,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CMS_Staging To EDW DimSession load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimSession load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3229,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CMS_Staging To EDW DimSession load\SQL - spCMS_StagingToEDW_DimSession,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimSession,,,,,EXEC dbo.spCMS_StagingToEDW_DimSession,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3230,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CSS_Staging To EDW DimSession load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimSession load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3231,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSession load\Execute CSS_Staging To EDW DimSession load\SQL - spCSS_StagingToEDW_DimSession,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimSession,,,,,EXEC dbo.spCSS_StagingToEDW_DimSession,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3232,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load,STOCK:SEQUENCE,Execute EDW DimSponsor load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3233,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CMS_Staging To EDW DimSponsor load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimSponsor load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3234,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CMS_Staging To EDW DimSponsor load\SQL - spCMS_StagingToEDW_DimSponsor,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimSponsor,,,,,EXEC dbo.spCMS_StagingToEDW_DimSponsor;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3235,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CSS_Staging To EDW DimSponsor load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimSponsor load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3236,Package\CMS and CSS Center Management Dimensions\Execute EDW DimSponsor load\Execute CSS_Staging To EDW DimSponsor load\SQL - spCSS_StagingToEDW_DimSponsor,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimSponsor,,,,,EXEC dbo.spCSS_StagingToEDW_DimSponsor;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3237,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load,STOCK:SEQUENCE,Execute EDW DimStudent load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3238,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CMS_Staging To EDW DimStudent load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimStudent load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3239,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CMS_Staging To EDW DimStudent load\SQL - spCMS_StagingToEDW_DimStudent,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimStudent,,,,,EXEC dbo.spCMS_StagingToEDW_DimStudent;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3240,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CSS_Staging To EDW DimStudent load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimStudent load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3241,Package\CMS and CSS Center Management Dimensions\Execute EDW DimStudent load\Execute CSS_Staging To EDW DimStudent load\SQL - spCSS_StagingToEDW_DimStudent,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimStudent,,,,,EXEC dbo.spCSS_StagingToEDW_DimStudent,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3242,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load,STOCK:SEQUENCE,Execute EDW DimTier load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3243,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CMS_Staging To EDW DimTier load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimTier load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3244,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CMS_Staging To EDW DimTier load\SQL - spCMS_StagingToEDW_DimTier,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimTier,,,,,"IF EXISTS -- This Package is getting merged before the proc is present, so put in safety net for now...
(
    SELECT *
    FROM sys.objects
    WHERE type = 'P'
          AND name = 'spCMS_StagingToEDW_DimTier'
)
    EXEC dbo.spCMS_StagingToEDW_DimTier;
GO",StagingToEDW_StagingToEDW_Dimension_CenterManagement
3245,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CSS_Staging To EDW DimTier load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimTier load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3246,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTier load\Execute CSS_Staging To EDW DimTier load\SQL - spCSS_StagingToEDW_DimTier,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTier,,,,,EXEC dbo.spCSS_StagingToEDW_DimTier,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3247,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load,STOCK:SEQUENCE,Execute EDW DimTuitionAssistanceProvider load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3248,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CMS_Staging To EDW DimTuitionAssistanceProvider load,STOCK:SEQUENCE,Execute CMS_Staging To EDW DimTuitionAssistanceProvider load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3249,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CMS_Staging To EDW DimTuitionAssistanceProvider load\SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_DimTuitionAssistanceProvider,,,,,EXEC dbo.spCMS_StagingToEDW_DimTuitionAssistanceProvider;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3250,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CSS_Staging To EDW DimAssistance load,STOCK:SEQUENCE,Execute CSS_Staging To EDW DimAssistance load,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3251,Package\CMS and CSS Center Management Dimensions\Execute EDW DimTuitionAssistanceProvider load\Execute CSS_Staging To EDW DimAssistance load\SQL - spCSS_StagingToEDW_DimTuitionAssistanceProvider,Microsoft.ExecuteSQLTask,SQL - spCSS_StagingToEDW_DimTuitionAssistanceProvider,,,,,EXEC dbo.spCSS_StagingToEDW_DimTuitionAssistanceProvider;,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3252,Package\DW_Mart Dimension Tables,STOCK:SEQUENCE,DW_Mart Dimension Tables,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3253,Package\DW_Mart Dimension Tables\DimDataScenario,Microsoft.ExecutePackageTask,DimDataScenario,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3254,Package\DW_Mart Dimension Tables\DimDate_DM,Microsoft.ExecutePackageTask,DimDate_DM,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3255,Package\DW_Mart Dimension Tables\DimLifecycleStatus,Microsoft.ExecutePackageTask,DimLifecycleStatus,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3256,Package\DW_Mart Dimension Tables\DimMartPartner,Microsoft.ExecutePackageTask,DimMartPartner,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3257,Package\DW_Mart Dimension Tables\DimMeasure,Microsoft.ExecutePackageTask,DimMeasure,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3258,Package\DW_Mart Dimension Tables\DimProgram,Microsoft.ExecutePackageTask,DimProgram,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3259,Package\DW_Mart Dimension Tables\DimRetentionBaseWeek,Microsoft.ExecutePackageTask,DimRetentionBaseWeek,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3260,Package\DW_Mart Dimension Tables\DimScheduleWeek,Microsoft.ExecutePackageTask,DimScheduleWeek,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3261,Package\DW_Mart Dimension Tables\DimSession,Microsoft.ExecutePackageTask,DimSession,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3262,Package\DW_Mart Dimension Tables\DimSponsor,Microsoft.ExecutePackageTask,DimSponsor,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3263,Package\DW_Mart Dimension Tables\DimStudent,Microsoft.ExecutePackageTask,DimStudent,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3264,Package\DW_Mart Dimension Tables\DimTier,Microsoft.ExecutePackageTask,DimTier,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3265,Package\DW_Mart Dimension Tables\DimTimeCalculation,Microsoft.ExecutePackageTask,DimTimeCalculation,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3266,Package\DW_Mart Dimension Tables\DimTuitionAssistanceProvider,Microsoft.ExecutePackageTask,DimTuitionAssistanceProvider,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3267,Package\DW_Mart Dimension Tables\ReportMeasure,Microsoft.ExecutePackageTask,ReportMeasure,,,,,,StagingToEDW_StagingToEDW_Dimension_CenterManagement
3268,Package,Microsoft.Package,StagingToEDW_Dimension_GLandHR,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3269,Package\Change History - StagingToEDW_Dimension_GLandHR,STOCK:SEQUENCE,Change History - StagingToEDW_Dimension_GLandHR,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3270,Package\ORACLE GL and HRIS Dimensions,STOCK:SEQUENCE,ORACLE GL and HRIS Dimensions,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3271,Package\ORACLE GL and HRIS Dimensions\EPT - DimMartCostCenter,Microsoft.ExecutePackageTask,EPT - DimMartCostCenter,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3272,Package\ORACLE GL and HRIS Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions,STOCK:SEQUENCE,Excecute GL_Staging to EDW DimDate load before other Dimensions,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3273,Package\ORACLE GL and HRIS Dimensions\Excecute GL_Staging to EDW DimDate load before other Dimensions\SQL - spGL_StagingToEDW_DimDate,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimDate,,,,,EXEC dbo.spGL_StagingToEDW_DimDate,StagingToEDW_StagingToEDW_Dimension_GLandHR
3274,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging HrAllOrganizationUnits load,STOCK:SEQUENCE,Execute GL_Staging HrAllOrganizationUnits load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3275,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging HrAllOrganizationUnits load\SQL - spGL_StagingGenerate_HrAllOrganizationUnits,Microsoft.ExecuteSQLTask,SQL - spGL_StagingGenerate_HrAllOrganizationUnits,,,,,EXEC dbo.spGL_StagingGenerate_HrAllOrganizationUnits,StagingToEDW_StagingToEDW_Dimension_GLandHR
3276,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To DW_Mart DimAccountSubaccount,STOCK:SEQUENCE,Execute GL_Staging To DW_Mart DimAccountSubaccount,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3277,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To DW_Mart DimAccountSubaccount\EPT - DimMartAccountSubaccount,Microsoft.ExecutePackageTask,EPT - DimMartAccountSubaccount,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3278,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW BridgeCompanyRollup load,STOCK:SEQUENCE,Execute GL_Staging To EDW BridgeCompanyRollup load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3279,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW BridgeCompanyRollup load\SQL - spGL_StagingToEDW_BridgeCompanyRollup,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_BridgeCompanyRollup,,,,,EXEC dbo.spGL_StagingToEDW_BridgeCompanyRollup;,StagingToEDW_StagingToEDW_Dimension_GLandHR
3280,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimAccountSubaccount load,STOCK:SEQUENCE,Execute GL_Staging To EDW DimAccountSubaccount load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3281,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimAccountSubaccount load\SQL - spGL_StagingToEDW_DimAccountSubAccount,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimAccountSubAccount,,,,,EXEC dbo.spGL_StagingToEDW_DimAccountSubAccount,StagingToEDW_StagingToEDW_Dimension_GLandHR
3282,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompany load,STOCK:SEQUENCE,Execute GL_Staging To EDW DimCompany load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3283,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompany load\SQL - spGL_StagingToEDW_DimCompany,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimCompany,,,,,EXEC dbo.spGL_StagingToEDW_DimCompany,StagingToEDW_StagingToEDW_Dimension_GLandHR
3284,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompanyRollup load,STOCK:SEQUENCE,Execute GL_Staging To EDW DimCompanyRollup load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3285,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCompanyRollup load\SQL - spGL_StagingToEDW_DimCompanyRollup,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimCompanyRollup,,,,,EXEC dbo.spGL_StagingToEDW_DimCompanyRollup;,StagingToEDW_StagingToEDW_Dimension_GLandHR
3286,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCostCenterType load,STOCK:SEQUENCE,Execute GL_Staging To EDW DimCostCenterType load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3287,Package\ORACLE GL and HRIS Dimensions\Execute GL_Staging To EDW DimCostCenterType load\SQL - spGL_StagingToEDW_DimCostCenterType,Microsoft.ExecuteSQLTask,SQL - spGL_StagingToEDW_DimCostCenterType,,,,,EXEC dbo.spGL_StagingToEDW_DimCostCenterType,StagingToEDW_StagingToEDW_Dimension_GLandHR
3288,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging OrgLeaderAccess load,STOCK:SEQUENCE,Execute HR_Staging OrgLeaderAccess load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3289,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging OrgLeaderAccess load\SQL - spHR_StagingGenerate_OrgLeaderAccess,Microsoft.ExecuteSQLTask,SQL - spHR_StagingGenerate_OrgLeaderAccess,,,,,EXEC dbo.spHR_StagingGenerate_OrgLeaderAccess,StagingToEDW_StagingToEDW_Dimension_GLandHR
3290,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonHRISGroup,STOCK:SEQUENCE,Execute HR_Staging To EDW BridgeSecurityPersonHRISGroup,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3291,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonHRISGroup\SQL -spHR_StagingTransform_BridgeSecurityPersonHRISGroup,Microsoft.ExecuteSQLTask,SQL -spHR_StagingTransform_BridgeSecurityPersonHRISGroup,,,,,EXEC dbo.spHR_StagingToEDW_BridgeSecurityPersonHRISGroup;,StagingToEDW_StagingToEDW_Dimension_GLandHR
3292,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonOrg,STOCK:SEQUENCE,Execute HR_Staging To EDW BridgeSecurityPersonOrg,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3293,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW BridgeSecurityPersonOrg\SQL - spHR_StagingToEDW_BridgeSecurityPersonOrg,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_BridgeSecurityPersonOrg,,,,,EXEC dbo.spHR_StagingToEDW_BridgeSecurityPersonOrg;,StagingToEDW_StagingToEDW_Dimension_GLandHR
3294,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssessmentType load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimAssessmentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3295,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssessmentType load\SQL - spHR_StagingToEDW_DimAssessmentType,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimAssessmentType,,,,,EXEC dbo.spHR_StagingToEDW_DimAssessmentType,StagingToEDW_StagingToEDW_Dimension_GLandHR
3296,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssignmentType load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimAssignmentType load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3297,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimAssignmentType load\SQL - spHR_StagingToEDW_DimAssignmentType,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimAssignmentType,,,,,EXEC dbo.spHR_StagingToEDW_DimAssignmentType,StagingToEDW_StagingToEDW_Dimension_GLandHR
3298,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceItem load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimComplianceItem load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3299,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceItem load\SQL - spHR_StagingToEDW_DimComplianceItem,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimComplianceItem,,,,,EXEC dbo.spHR_StagingToEDW_DimComplianceItem,StagingToEDW_StagingToEDW_Dimension_GLandHR
3300,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceRating load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimComplianceRating load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3301,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimComplianceRating load\SQL - spHR_StagingToEDW_DimComplianceRating,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimComplianceRating,,,,,EXEC dbo.spHR_StagingToEDW_DimComplianceRating; ,StagingToEDW_StagingToEDW_Dimension_GLandHR
3302,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimHRUser load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimHRUser load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3303,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimHRUser load\SQL - spHR_StagingToEDW_DimHRUser,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimHRUser,,,,,EXEC dbo.spHR_StagingToEDW_DimHRUser;,StagingToEDW_StagingToEDW_Dimension_GLandHR
3304,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveReason load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimLeaveReason load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3305,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveReason load\SQL - spHR_StagingToEDW_DimLeaveReason,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimLeaveReason,,,,,EXEC dbo.spHR_StagingToEDW_DimLeaveReason,StagingToEDW_StagingToEDW_Dimension_GLandHR
3306,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveType load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimLeaveType load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3307,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimLeaveType load\SQL - spHR_StagingToEDW_DimLeaveType,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimLeaveType,,,,,EXEC dbo.spHR_StagingToEDW_DimLeaveType,StagingToEDW_StagingToEDW_Dimension_GLandHR
3308,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimLocation load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimLocation load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3309,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimLocation load\SQL - spHR_StagingToEDW_DimLocation,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimLocation,,,,,EXEC dbo.spHR_StagingToEDW_DimLocation,StagingToEDW_StagingToEDW_Dimension_GLandHR
3310,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimOrganization Load,STOCK:SEQUENCE,Execute HR_Staging to EDW DimOrganization Load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3311,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging to EDW DimOrganization Load\SQL - spHR_StagingToEDW_DimOrganization,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimOrganization,,,,,EXEC dbo.spHR_StagingToEDW_DimOrganization,StagingToEDW_StagingToEDW_Dimension_GLandHR
3312,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayBasis load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPayBasis load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3313,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayBasis load\SQL - spHR_StagingToEDW_DimPayBasis,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPayBasis,,,,,EXEC dbo.spHR_StagingToEDW_DimPayBasis,StagingToEDW_StagingToEDW_Dimension_GLandHR
3314,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayGrade load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPayGrade load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3315,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPayGrade load\SQL - spHR_StagingToEDW_DimPayGrade,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPayGrade,,,,,EXEC dbo.spHR_StagingToEDW_DimPayGrade;,StagingToEDW_StagingToEDW_Dimension_GLandHR
3316,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPeopleGroup load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPeopleGroup load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3317,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPeopleGroup load\SQL - spHR_StagingToEDW_DimPeopleGroup,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPeopleGroup,,,,,EXEC dbo.spHR_StagingToEDW_DimPeopleGroup;,StagingToEDW_StagingToEDW_Dimension_GLandHR
3318,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerformanceRating load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPerformanceRating load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3319,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerformanceRating load\SQL - spHR_StagingToEDW_DimPerformanceRating,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPerformanceRating,,,,,EXEC dbo.spHR_StagingToEDW_DimPerformanceRating,StagingToEDW_StagingToEDW_Dimension_GLandHR
3320,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerson load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPerson load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3321,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPerson load\SQL - spHR_StagingToEDW_DimPerson,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPerson,,,,,EXEC dbo.spHR_StagingToEDW_DimPerson;,StagingToEDW_StagingToEDW_Dimension_GLandHR
3322,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPosition load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimPosition load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3323,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimPosition load\SQL - spHR_StagingToEDW_DimPosition,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPosition,,,,,EXEC dbo.spHR_StagingToEDW_DimPosition,StagingToEDW_StagingToEDW_Dimension_GLandHR
3324,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimQualificationType,STOCK:SEQUENCE,Execute HR_Staging To EDW DimQualificationType,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3325,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimQualificationType\SQL - spHR_StagingToEDW_DimQualificationType,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimQualificationType,,,,,EXEC dbo.spHR_StagingToEDW_DimQualificationType;,StagingToEDW_StagingToEDW_Dimension_GLandHR
3326,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimSpecialInfo load,STOCK:SEQUENCE,Execute HR_Staging To EDW DimSpecialInfo load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3327,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW DimSpecialInfo load\SQL - spHR_StagingToEDW_DimSpecialInfo,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimSpecialInfo,,,,,EXEC dbo.spHR_StagingToEDW_DimSpecialInfo,StagingToEDW_StagingToEDW_Dimension_GLandHR
3328,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW • DimPayRateChangeReason load,STOCK:SEQUENCE,Execute HR_Staging To EDW • DimPayRateChangeReason load,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3329,Package\ORACLE GL and HRIS Dimensions\Execute HR_Staging To EDW • DimPayRateChangeReason load\SQL - spHR_StagingToEDW_DimPayRateChangeReason,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_DimPayRateChangeReason,,,,,EXEC dbo.spHR_StagingToEDW_DimPayRateChangeReason,StagingToEDW_StagingToEDW_Dimension_GLandHR
3330,Package\ORACLE GL and HRIS Dimensions\Execute MISC_Staging To EDW DimReport Profile,STOCK:SEQUENCE,Execute MISC_Staging To EDW DimReport Profile,,,,,,StagingToEDW_StagingToEDW_Dimension_GLandHR
3331,Package\ORACLE GL and HRIS Dimensions\Execute MISC_Staging To EDW DimReport Profile\SQL - spMISC_StagingToEDW_DimReportProfile,Microsoft.ExecuteSQLTask,SQL - spMISC_StagingToEDW_DimReportProfile,,,,,EXEC dbo.spMISC_StagingToEDW_DimReportProfile,StagingToEDW_StagingToEDW_Dimension_GLandHR
3332,Package,Microsoft.Package,StagingToEDW_Dimension_StudentLeads,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
3333,Package\Change History - StagingToEDW_Dimension_StudentLeads,STOCK:SEQUENCE,Change History - StagingToEDW_Dimension_StudentLeads,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
3334,Package\Exec DimLead EDW Load,STOCK:SEQUENCE,Exec DimLead EDW Load,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
3335,Package\Exec DimLead EDW Load\SQL - spSalesForce_StagingToEDW_DimLead,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_DimLead,,,,,EXEC dbo.spSalesforce_StagingToEDW_DimLead,StagingToEDW_StagingToEDW_Dimension_StudentLeads
3336,Package\Exec DimLeadType EDW Load,STOCK:SEQUENCE,Exec DimLeadType EDW Load,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
3337,Package\Exec DimLeadType EDW Load\SQL - spSalesForce_StagingToEDW_DimLeadType,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_DimLeadType,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimLeadType,StagingToEDW_StagingToEDW_Dimension_StudentLeads
3338,Package\Exec DimWebCampaign Load,STOCK:SEQUENCE,Exec DimWebCampaign Load,,,,,,StagingToEDW_StagingToEDW_Dimension_StudentLeads
3339,Package\Exec DimWebCampaign Load\SQL - spSalesForce_StagingToEDW_DimWebCampaign,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_DimWebCampaign,,,,,EXEC dbo.spSalesForce_StagingToEDW_DimWebCampaign,StagingToEDW_StagingToEDW_Dimension_StudentLeads
3340,Package,Microsoft.Package,StagingToEDW_FactParent,,,,,,StagingToEDW_StagingToEDW_FactParent
3341,Package\Change History - StagingToEDW_FactParent,STOCK:SEQUENCE,Change History - StagingToEDW_FactParent,,,,,,StagingToEDW_StagingToEDW_FactParent
3342,Package\Execute FactGLBalancePlanAllocation load,STOCK:SEQUENCE,Execute FactGLBalancePlanAllocation load,,,,,,StagingToEDW_StagingToEDW_FactParent
3343,Package\Execute FactGLBalancePlanAllocation load\Execute StagingToEDW_Fact_GLBalancePlanAllocation,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_GLBalancePlanAllocation,,,,,,StagingToEDW_StagingToEDW_FactParent
3344,Package\StagingToEDW Fact Load - CMS and CSS,STOCK:SEQUENCE,StagingToEDW Fact Load - CMS and CSS,,,,,,StagingToEDW_StagingToEDW_FactParent
3345,Package\StagingToEDW Fact Load - CMS and CSS\CMS Fact Load,STOCK:SEQUENCE,CMS Fact Load,,,,,,StagingToEDW_StagingToEDW_FactParent
3346,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW Fact Billing Payment Transactions,STOCK:SEQUENCE,Execute EDW Fact Billing Payment Transactions,,,,,,StagingToEDW_StagingToEDW_FactParent
3347,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW Fact Billing Payment Transactions\Execute StagingToEDW_Fact_BillingPaymentTransactions,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_BillingPaymentTransactions,,,,,,StagingToEDW_StagingToEDW_FactParent
3348,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactARBalanceSnapshot load,STOCK:SEQUENCE,Execute EDW FactARBalanceSnapshot load,,,,,,StagingToEDW_StagingToEDW_FactParent
3349,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactARBalanceSnapshot load\Execute StagingToEDW_Fact_ARBalanceSnapshot,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_ARBalanceSnapshot,,,,,,StagingToEDW_StagingToEDW_FactParent
3350,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute EDW FactFTESnapshot load,,,,,,StagingToEDW_StagingToEDW_FactParent
3351,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactFTESnapshot load\Execute StagingToEDW_Fact_FTESnapshot,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_FTESnapshot,,,,,,StagingToEDW_StagingToEDW_FactParent
3352,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactNetRevenue load,STOCK:SEQUENCE,Execute EDW FactNetRevenue load,,,,,,StagingToEDW_StagingToEDW_FactParent
3353,Package\StagingToEDW Fact Load - CMS and CSS\Execute EDW FactNetRevenue load\Execute StagingToEDW_Fact_CenterManagementRevenue,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_CenterManagementRevenue,,,,,,StagingToEDW_StagingToEDW_FactParent
3354,Package\StagingToEDW Fact Load - GL,STOCK:SEQUENCE,StagingToEDW Fact Load - GL,,,,,,StagingToEDW_StagingToEDW_FactParent
3355,Package\StagingToEDW Fact Load - GL\Execute GL_Staging To EDW FactCenterStatSnapshot load,STOCK:SEQUENCE,Execute GL_Staging To EDW FactCenterStatSnapshot load,,,,,,StagingToEDW_StagingToEDW_FactParent
3356,Package\StagingToEDW Fact Load - GL\Execute GL_Staging To EDW FactCenterStatSnapshot load\Execute StagingToEDW_Fact_CenterStatSnapshot,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_CenterStatSnapshot,,,,,,StagingToEDW_StagingToEDW_FactParent
3357,Package\StagingToEDW Fact Load - GL\Execute GL_Staging To EDW FactGLBalance load,STOCK:SEQUENCE,Execute GL_Staging To EDW FactGLBalance load,,,,,,StagingToEDW_StagingToEDW_FactParent
3358,Package\StagingToEDW Fact Load - GL\Execute GL_Staging To EDW FactGLBalance load\Execute StagingToEDW_Fact_GLBalances,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_GLBalances,,,,,,StagingToEDW_StagingToEDW_FactParent
3359,Package\StagingToEDW SalesForce Fact Load,STOCK:SEQUENCE,StagingToEDW SalesForce Fact Load,,,,,,StagingToEDW_StagingToEDW_FactParent
3360,Package\StagingToEDW SalesForce Fact Load\Execute StagingToEDW_Fact_StudentLeads,Microsoft.ExecutePackageTask,Execute StagingToEDW_Fact_StudentLeads,,,,,,StagingToEDW_StagingToEDW_FactParent
3361,Package,Microsoft.Package,StagingToEDW_Fact_ARBalanceSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
3362,Package\Change History - StagingToEDW_Fact_ARBalanceSnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_ARBalanceSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
3363,Package\Execute EDW FactARBalanceSnapshot load,STOCK:SEQUENCE,Execute EDW FactARBalanceSnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
3364,Package\Execute EDW FactARBalanceSnapshot load\Execute CMS_StagingToEDW FactARBalanceSnapshot load,STOCK:SEQUENCE,Execute CMS_StagingToEDW FactARBalanceSnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
3365,Package\Execute EDW FactARBalanceSnapshot load\Execute CMS_StagingToEDW FactARBalanceSnapshot load\SQL - spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,Microsoft.ExecuteSQLTask,SQL - spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactARBalanceSnapshot;,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
3366,Package\Execute EDW FactARBalanceSnapshot load\Execute CSS_StagingToEDW FactARBalanceSnapshot load,STOCK:SEQUENCE,Execute CSS_StagingToEDW FactARBalanceSnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
3367,Package\Execute EDW FactARBalanceSnapshot load\Execute CSS_StagingToEDW FactARBalanceSnapshot load\SQL - spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,Microsoft.ExecuteSQLTask,SQL - spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot,,,,,EXEC dbo.spCSS_BatchLoad_StagingToEDW_FactARBalanceSnapshot;,StagingToEDW_StagingToEDW_Fact_ARBalanceSnapshot
3368,Package,Microsoft.Package,StagingToEDW_Fact_BillingPaymentTransactions,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3369,Package\Change History - StagingToEDW_Fact_BillingPaymentTransactions,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_BillingPaymentTransactions,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3370,Package\Execute CMS_Staging To EDW FactAdjustment load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactAdjustment load,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3371,Package\Execute CMS_Staging To EDW FactAdjustment load\SQL - spCMS_StagingToEDW_FactAdjustment,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_FactAdjustment,,,,,EXEC dbo.spCMS_StagingToEDW_FactAdjustment;,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3372,Package\Execute CMS_Staging To EDW FactBilling load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactBilling load,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3373,Package\Execute CMS_Staging To EDW FactBilling load\SQL -spCMS_BatchLoad_StagingToEDW_FactBilling,Microsoft.ExecuteSQLTask,SQL -spCMS_BatchLoad_StagingToEDW_FactBilling,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactBilling;,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3374,Package\Execute CMS_Staging To EDW FactPayment load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactPayment load,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3375,Package\Execute CMS_Staging To EDW FactPayment load\SQL - spCMS_BatchLoad_StagingToEDW_FactPayment,Microsoft.ExecuteSQLTask,SQL - spCMS_BatchLoad_StagingToEDW_FactPayment,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactPayment,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3376,Package\Execute CMS_Staging To EDW FactPaymentApplied,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactPaymentApplied,,,,,,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3377,Package\Execute CMS_Staging To EDW FactPaymentApplied\SQL - spCMS_StagingToEDW_FactPaymentApplied,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_FactPaymentApplied,,,,,EXEC dbo.spCMS_StagingToEDW_FactPaymentApplied,StagingToEDW_StagingToEDW_Fact_BillingPaymentTransactions
3378,Package,Microsoft.Package,StagingToEDW_Fact_CenterManagementEnrollment,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
3379,Package\Change History - StagingToEDW_Fact_CenterStatsSnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_CenterStatsSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
3380,Package\Execute CMS_Staging To EDW FactSessionEnrollment load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactSessionEnrollment load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
3381,Package\Execute CMS_Staging To EDW FactSessionEnrollment load\SQL - spCMS_StagingToEDW_FactSessionEnrollment,Microsoft.ExecuteSQLTask,SQL - spCMS_StagingToEDW_FactSessionEnrollment,,,,,EXEC dbo.spCMS_StagingToEDW_FactSessionEnrollment;,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
3382,Package\Execute CMS_Staging To EDW FactTierAssignment,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactTierAssignment,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
3383,Package\Execute CMS_Staging To EDW FactTierAssignment\SQL -spCMS_StagingToEDW_FactTierAssignment,Microsoft.ExecuteSQLTask,SQL -spCMS_StagingToEDW_FactTierAssignment,,,,,EXEC dbo.spCMS_StagingToEDW_FactTierAssignment;,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
3384,Package\Execute FactPartnerverifiedSponsor,Microsoft.ExecutePackageTask,Execute FactPartnerverifiedSponsor,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
3385,Package\Execute GL_Staging To EDW FactCenterStatSnapshot load,STOCK:SEQUENCE,Execute GL_Staging To EDW FactCenterStatSnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
3386,Package\Execute GL_Staging To EDW FactCenterStatSnapshot load\SQL - spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,Microsoft.ExecuteSQLTask,SQL - spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot,,,,,EXEC dbo.spGL_BatchLoad_StagingToEDW_FactCenterStatSnapshot;,StagingToEDW_StagingToEDW_Fact_CenterManagementEnrollment
3387,Package,Microsoft.Package,StagingToEDW_Fact_CenterManagementRevenue,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3388,Package\Change History - StagingToEDW_Fact_CenterManagementRevenue,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_CenterManagementRevenue,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3389,Package\Drop Index and Populate NetRevenueConsolidated Table,STOCK:SEQUENCE,Drop Index and Populate NetRevenueConsolidated Table,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3390,Package\Drop Index and Populate NetRevenueConsolidated Table\SQL - Drop Index on FactNetRevenueConsolidated,Microsoft.ExecuteSQLTask,SQL - Drop Index on FactNetRevenueConsolidated,,,,,"DECLARE @view INT;
SET @view =
(
    SELECT 1
    FROM [sys].[sysobjects] [O]
         INNER JOIN [sys].[sysindexes] [I] ON [O].[id] = [I].[id]
    WHERE [I].[name] = 'CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey'
);
IF @view = 1
    DROP INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey] ON [dbo].[FactNetRevenueConsolidated];",StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3391,Package\Drop Index and Populate NetRevenueConsolidated Table\SQL - Populate Revenue & Create Index,Microsoft.ExecuteSQLTask,SQL - Populate Revenue & Create Index,,,,,"TRUNCATE TABLE [dbo].[FactNetRevenueConsolidated];

INSERT INTO [dbo].[FactNetRevenueConsolidated] (
 [FiscalWeekNumber], [FiscalWeekEndDate], [CostCenterKey], [CostCenterNumber], [AccountSubaccountKey], [Count], [NetRevenueAmount]
)
SELECT
 [D].[FiscalWeekNumber],
 [D].[FiscalWeekEndDate],
 [MCC].[CostCenterKey],
 [MCC].[CostCenterNumber],
 [F].[AccountSubaccountKey],
 COUNT_BIG(*) AS [Count],
 SUM([F].[NetRevenueAmount]) AS [NetRevenueAmount]
FROM [dbo].[FactNetRevenue] [F]
INNER JOIN [dbo].[DimDate] [D] ON [F].[DateKey] = [D].[DateKey]
INNER JOIN [dbo].[DimCostCenter] [C] ON [F].[CostCenterKey] = [C].[CostCenterKey]
INNER JOIN [dbo].[DimMartCostCenter] [MCC] ON [C].[CostCenterNumber] = [MCC].[CostCenterNumber]
 AND [D].[FullDate] BETWEEN [MCC].[EDWEffectiveFrom] AND [MCC].[EDWEffectiveTo]
GROUP BY
 [D].[FiscalWeekNumber], [D].[FiscalWeekEndDate],
 [MCC].[CostCenterKey], [MCC].[CostCenterNumber],
 [F].[AccountSubaccountKey];

CREATE UNIQUE CLUSTERED INDEX [CIS_FactNetRevenueConsolidated_FiscalWeekNumber_CostCenterKey_AccountSubaccountKey]
    ON [dbo].[FactNetRevenueConsolidated]([FiscalWeekNumber] ASC, [CostCenterKey] ASC, [AccountSubaccountKey] ASC);",StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3392,Package\Execute Cambridge_Staging To EDW FactNetRevenue load,STOCK:SEQUENCE,Execute Cambridge_Staging To EDW FactNetRevenue load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3393,Package\Execute Cambridge_Staging To EDW FactNetRevenue load\SQL - EXEC spPRO_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,SQL - EXEC spPRO_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC dbo.spPRO_BatchLoad_StagingToEDW_FactNetRevenue;,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3394,Package\Execute CMS_Staging To EDW FactNetRevenue load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactNetRevenue load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3395,Package\Execute CMS_Staging To EDW FactNetRevenue load\SQL - spCMS_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,SQL - spCMS_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC dbo.spCMS_BatchLoad_StagingToEDW_FactNetRevenue;,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3396,Package\Execute CMS_Staging To EDW FactNetRevenue load\Update Stats for CMS_Staging,Microsoft.ExecuteSQLTask,Update Stats for CMS_Staging,,,,,"EXEC [dbo].[spUpdateStatistics];
EXEC [dbo].[spRecompile];",StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3397,Package\Execute Horizon_Staging To EDW FactNetRevenue load,STOCK:SEQUENCE,Execute Horizon_Staging To EDW FactNetRevenue load,,,,,,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3398,Package\Execute Horizon_Staging To EDW FactNetRevenue load\SQL - spHOR_BatchLoad_StagingToEDW_FactNetRevenue,Microsoft.ExecuteSQLTask,SQL - spHOR_BatchLoad_StagingToEDW_FactNetRevenue,,,,,EXEC dbo.spHOR_BatchLoad_StagingToEDW_FactNetRevenue;,StagingToEDW_StagingToEDW_Fact_CenterManagementRevenue
3399,Package,Microsoft.Package,StagingToEDW_Fact_FTESnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_FTESnapshot
3400,Package\Change History - StagingToEDW_Fact_FTESnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_FTESnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_FTESnapshot
3401,Package\Execute Cambridge_Staging To EDW FactFTESnapshot,STOCK:SEQUENCE,Execute Cambridge_Staging To EDW FactFTESnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_FTESnapshot
3402,Package\Execute Cambridge_Staging To EDW FactFTESnapshot\Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,Exec [dbo].[spCambridge_BatchLoad_StagingToEDW_FactFTESnapshot],StagingToEDW_StagingToEDW_Fact_FTESnapshot
3403,Package\Execute CMS_Staging To EDW FactFTESnapshot load,STOCK:SEQUENCE,Execute CMS_Staging To EDW FactFTESnapshot load,,,,,,StagingToEDW_StagingToEDW_Fact_FTESnapshot
3404,Package\Execute CMS_Staging To EDW FactFTESnapshot load\Execute spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,Microsoft.ExecuteSQLTask,Execute spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,,,,,EXEC spCMS_BatchLoad_StagingToEDW_FactFTESnapshot,StagingToEDW_StagingToEDW_Fact_FTESnapshot
3405,Package\Execute CMS_Staging To EDW FactFTESnapshot load\Update Stats CMS_Staging,Microsoft.ExecuteSQLTask,Update Stats CMS_Staging,,,,,"EXEC [dbo].[spUpdateStatistics];
EXEC [dbo].[spRecompile];",StagingToEDW_StagingToEDW_Fact_FTESnapshot
3406,Package,Microsoft.Package,StagingToEDW_Fact_GLBalancePlanAllocation,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalancePlanAllocation
3407,Package\Change History - StagingToEDW_Fact_GLBalancePlanAllocation,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_GLBalancePlanAllocation,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalancePlanAllocation
3408,Package\Execute MISC_Staging To EDW FactGLBalancePlanAllocation LegacyDW load,STOCK:SEQUENCE,Execute MISC_Staging To EDW FactGLBalancePlanAllocation LegacyDW load,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalancePlanAllocation
3409,Package\Execute MISC_Staging To EDW FactGLBalancePlanAllocation LegacyDW load\SQL - spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,Microsoft.ExecuteSQLTask,SQL - spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation,,,,,EXEC dbo.spMISC_BatchLoad_StagingToEDW_FactGLBalancePlanAllocation;,StagingToEDW_StagingToEDW_Fact_GLBalancePlanAllocation
3410,Package,Microsoft.Package,StagingToEDW_Fact_GLBalances,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalances
3411,Package\Change History - StagingToEDW_Fact_GLBalances,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_GLBalances,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalances
3412,Package\Execute GL_Staging To EDW FactGLBalance load,STOCK:SEQUENCE,Execute GL_Staging To EDW FactGLBalance load,,,,,,StagingToEDW_StagingToEDW_Fact_GLBalances
3413,Package\Execute GL_Staging To EDW FactGLBalance load\SQL - spGL_BatchLoad_StagingToEDW_FactGLBalance,Microsoft.ExecuteSQLTask,SQL - spGL_BatchLoad_StagingToEDW_FactGLBalance,,,,,EXEC dbo.spGL_BatchLoad_StagingToEDW_FactGLBalance,StagingToEDW_StagingToEDW_Fact_GLBalances
3414,Package\Execute GL_Staging To EDW FactGLBalance load\Update Stats for GL Balance tables,Microsoft.ExecuteSQLTask,Update Stats for GL Balance tables,,,,,"EXEC [dbo].[spUpdateStatistics];
EXEC [dbo].[spRecompile];",StagingToEDW_StagingToEDW_Fact_GLBalances
3415,Package,Microsoft.Package,StagingToEDW_Fact_HREmployee,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3416,Package\Change History - StagingToEDW_Fact_HREmployee,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_HREmployee,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3417,Package\Execute HR_Staging To EDW FactEmployeeAssessment load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeAssessment load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3418,Package\Execute HR_Staging To EDW FactEmployeeAssessment load\SQL - spHR_StagingToEDW_FactEmployeeAssessment,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeAssessment,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssessment;,StagingToEDW_StagingToEDW_Fact_HREmployee
3419,Package\Execute HR_Staging To EDW FactEmployeeAssignment load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeAssignment load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3420,Package\Execute HR_Staging To EDW FactEmployeeAssignment load\SQL - spHR_StagingToEDW_FactEmployeeAssignment,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeAssignment,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeAssignment;,StagingToEDW_StagingToEDW_Fact_HREmployee
3421,Package\Execute HR_Staging To EDW FactEmployeeCompliance load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeCompliance load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3422,Package\Execute HR_Staging To EDW FactEmployeeCompliance load\SQL - spHR_StagingToEDW_FactEmployeeCompliance,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeCompliance,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeCompliance;,StagingToEDW_StagingToEDW_Fact_HREmployee
3423,Package\Execute HR_Staging To EDW FactEmployeeLeave load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeLeave load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3424,Package\Execute HR_Staging To EDW FactEmployeeLeave load\SQL - spHR_StagingToEDW_FactEmployeeLeave,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeLeave,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeLeave;,StagingToEDW_StagingToEDW_Fact_HREmployee
3425,Package\Execute HR_Staging To EDW FactEmployeePayRate Load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeePayRate Load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3426,Package\Execute HR_Staging To EDW FactEmployeePayRate Load\SQL - spHR_StagingToEDW_FactEmployeePayRate,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeePayRate,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeePayRate;,StagingToEDW_StagingToEDW_Fact_HREmployee
3427,Package\Execute HR_Staging To EDW FactEmployeePerformance load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeePerformance load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3428,Package\Execute HR_Staging To EDW FactEmployeePerformance load\SQL - spHR_StagingToEDW_FactEmployeePerformance,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeePerformance,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeePerformance;,StagingToEDW_StagingToEDW_Fact_HREmployee
3429,Package\Execute HR_Staging To EDW FactEmployeeQualification,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeQualification,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3430,Package\Execute HR_Staging To EDW FactEmployeeQualification\SQL - spHR_StagingToEDW_FactEmployeeQualification,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactEmployeeQualification,,,,,EXEC dbo.spHR_StagingToEDW_FactEmployeeQualification;,StagingToEDW_StagingToEDW_Fact_HREmployee
3431,Package\Execute HR_Staging To EDW FactEmployeeSpecialInfo load,STOCK:SEQUENCE,Execute HR_Staging To EDW FactEmployeeSpecialInfo load,,,,,,StagingToEDW_StagingToEDW_Fact_HREmployee
3432,Package\Execute HR_Staging To EDW FactEmployeeSpecialInfo load\SQL - spHR_StagingToEDW_FactPersonSpecialInfo,Microsoft.ExecuteSQLTask,SQL - spHR_StagingToEDW_FactPersonSpecialInfo,,,,,EXEC dbo.spHR_StagingToEDW_FactPersonSpecialInfo;,StagingToEDW_StagingToEDW_Fact_HREmployee
3433,Package,Microsoft.Package,StagingToEDW_Fact_Labor,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3434,Package\Change History - StagingToEDW_Fact_LaborHour,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_LaborHour,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3435,Package\Execute Fact Labor Hour Actual Load,STOCK:SEQUENCE,Execute Fact Labor Hour Actual Load,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3436,Package\Execute Fact Labor Hour Actual Load\FactLaborHourActual,Microsoft.ExecutePackageTask,FactLaborHourActual,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3437,Package\Execute Fact Labor Hour Target load,STOCK:SEQUENCE,Execute Fact Labor Hour Target load,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3438,Package\Execute Fact Labor Hour Target load\FactLaborHourTarget,Microsoft.ExecutePackageTask,FactLaborHourTarget,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3439,Package\Execute Fact Labor Hour Target PRO,STOCK:SEQUENCE,Execute Fact Labor Hour Target PRO,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3440,Package\Execute Fact Labor Hour Target PRO\FactLaborHourTargetPRO,Microsoft.ExecutePackageTask,FactLaborHourTargetPRO,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3441,Package\Execute Fact Labor Salary,STOCK:SEQUENCE,Execute Fact Labor Salary,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3442,Package\Execute Fact Labor Salary\FactLaborSalary,Microsoft.ExecutePackageTask,FactLaborSalary,,,,,,StagingToEDW_StagingToEDW_Fact_Labor
3443,Package,Microsoft.Package,StagingToEDW_Fact_LifecycleStatusSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_LifecycleStatusSnapshot
3444,Package\Change History - StagingToEDW_Fact_LifecycleStatusSnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_LifecycleStatusSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_LifecycleStatusSnapshot
3445,Package\Execute Fact Lifecycle Status Snapshot Load,STOCK:SEQUENCE,Execute Fact Lifecycle Status Snapshot Load,,,,,,StagingToEDW_StagingToEDW_Fact_LifecycleStatusSnapshot
3446,Package\Execute Fact Lifecycle Status Snapshot Load\SQL - spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,Microsoft.ExecuteSQLTask,SQL - spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot,,,,,EXEC [dbo].[spCMS_BatchLoad_StagingToEDW_FactLifecycleStatusSnapshot];,StagingToEDW_StagingToEDW_Fact_LifecycleStatusSnapshot
3447,Package,Microsoft.Package,StagingToEDW_Fact_StudentLeads,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
3448,Package\Change History - StagingToEDW_Fact_ARBalanceSnapshot,STOCK:SEQUENCE,Change History - StagingToEDW_Fact_ARBalanceSnapshot,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
3449,Package\Execute SalesForce FactLeadEvent Load,STOCK:SEQUENCE,Execute SalesForce FactLeadEvent Load,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
3450,Package\Execute SalesForce FactLeadEvent Load\SQL - spSalesForce_StagingToEDW_FactLeadEvent,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_FactLeadEvent,,,,,EXEC dbo.spSalesForce_StagingToEDW_FactLeadEvent,StagingToEDW_StagingToEDW_Fact_StudentLeads
3451,Package\Execute SalesForce FactLeadPipeline Load,STOCK:SEQUENCE,Execute SalesForce FactLeadPipeline Load,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
3452,Package\Execute SalesForce FactLeadPipeline Load\SQL - spSalesForce_StagingToEDW_FactLeadPipeline,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingToEDW_FactLeadPipeline,,,,,EXEC dbo.spSalesForce_StagingToEDW_FactLeadPipeline,StagingToEDW_StagingToEDW_Fact_StudentLeads
3453,Package\Execute SalesForce Method of Contact Lookup load,STOCK:SEQUENCE,Execute SalesForce Method of Contact Lookup load,,,,,,StagingToEDW_StagingToEDW_Fact_StudentLeads
3454,Package\Execute SalesForce Method of Contact Lookup load\SQL - spSalesForce_StagingGenerate_LookupMethodOfContact,Microsoft.ExecuteSQLTask,SQL - spSalesForce_StagingGenerate_LookupMethodOfContact,,,,,EXEC dbo.spSalesForce_StagingGenerate_LookupMethodOfContact,StagingToEDW_StagingToEDW_Fact_StudentLeads
